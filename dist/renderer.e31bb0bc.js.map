{"version":3,"sources":["polyfills/browser.js","polyfills/electron.js","polyfills/index.js","../shared/settings.js","../configs/app.config.js","util.js","containers/App.js","components/Inspector/shared.js","lib/client-frameworks/framework.js","lib/client-frameworks/js-wd.js","lib/client-frameworks/js-wdio.js","lib/client-frameworks/js-oxygen.js","lib/client-frameworks/java.js","lib/client-frameworks/python.js","lib/client-frameworks/ruby.js","lib/client-frameworks/robot.js","lib/client-frameworks/index.js","../configs/i18next.config.renderer.js","lib/webview-helpers.js","lib/appium-client.js","actions/Inspector.js","components/Session/ServerTabHeadspin.js","components/AntdTypes.js","components/Session/ServerTabBrowserstack.js","components/Session/ServerTabLambdatest.js","components/Session/ServerTabBitbar.js","components/Session/ServerTabKobiton.js","components/Session/ServerTabPerfecto.js","components/Session/ServerTabPcloudy.js","components/Session/ServerTabSauce.js","components/Session/ServerTabTestingbot.js","components/Session/ServerTabExperitest.js","components/Session/ServerTabRobotQA.js","components/Session/ServerTabRemoteTestKit.js","components/Session/CloudProviders.js","../main/helpers.js","actions/Session.js","components/Session/FormattedCaps.js","components/Session/CapabilityControl.js","components/Session/CapabilityEditor.js","components/Session/SavedSessions.js","components/Session/AttachToSession.js","components/Session/ServerTabCustom.js","components/Session/AdvancedServerParams.js","components/Session/CloudProviderSelector.js","components/Session/Session.js","containers/SessionPage.js","components/Inspector/HighlighterRect.js","components/Inspector/HighlighterCentroid.js","components/Inspector/HighlighterRects.js","components/Inspector/Screenshot.js","components/Inspector/HeaderButtons.js","components/Inspector/SelectedElement.js","components/Inspector/LocatedElements.js","components/Inspector/ElementLocator.js","components/Inspector/LocatorTestModal.js","components/Inspector/SiriCommandModal.js","components/Inspector/Source.js","components/Inspector/RecordedActions.js","components/Inspector/Commands.js","components/Inspector/SavedGestures.js","components/Inspector/GestureEditor.js","components/Inspector/SessionCodeBox.js","components/Inspector/SessionInfo.js","components/Inspector/Inspector.js","containers/InspectorPage.js","components/Spinner/Spinner.js","routes.js","containers/Root.js","components/ErrorBoundary/ErrorMessage.js","components/ErrorBoundary/ErrorBoundary.js","actions/Updater.js","actions/index.js","reducers/Session.js","reducers/Inspector.js","reducers/Updater.js","reducers/index.js","store.js","index.js"],"names":["browser","clipboard","writeText","text","navigator","shell","openExternal","url","window","open","remote","getCurrentWindow","getSize","innerWidth","innerHeight","ipcRenderer","on","evt","console","warn","fs","util","BrowserSettings","has","key","get","set","val","localStorage","setItem","JSON","stringify","parse","getItem","getSync","log","exports","settings","i18NextBackend","require","default","i18NextBackendOptions","backends","backendOptions","loadPath","_path","_interopRequireDefault","_electron","_electronLog","_electronSettings","_i18nextFsBackend","_fs","_util","obj","__esModule","path","join","__dirname","addPath","jsonIndent","buildForBrowser","process","env","BUILD_BROWSER","test","userAgent","_polyfills","SAVED_SESSIONS","SET_SAVED_GESTURES","SERVER_ARGS","SESSION_SERVER_PARAMS","SESSION_SERVER_TYPE","SAVED_FRAMEWORK","DEFAULT_SETTINGS","getSetting","setting","setSetting","value","_default","_settings","config","platform","languages","fallbackLng","namespace","getI18NextOptions","backend","interpolation","escapeValue","lng","whitelist","_xpath","_reactI18next","_lodash","_app","_xmldom","VALID_W3C_CAPS","UNIQUE_XPATH_ATTRIBUTES","UNIQUE_CLASS_CHAIN_ATTRIBUTES","UNIQUE_PREDICATE_ATTRIBUTES","xmlToJSON","source","childNodesOf","xmlNode","hasChildNodes","result","childIdx","childNodes","length","childNode","item","nodeType","push","translateRecursively","parentPath","index","attributes","attrIdx","attr","name","_","isNil","classChainSelector","isIOS","getOptimalClassChain","xmlDoc","predicateStringSelector","getOptimalPredicateString","children","map","childIndex","tagName","xpath","getOptimalXPath","classChain","predicateString","includes","DOMParser","parseFromString","firstChild","documentElement","doc","domNode","uniqueAttributes","attrName","attrValue","getAttribute","othersWithAttr","XPath","select","ign","indexOf","parentNode","Array","prototype","slice","call","filter","error","xpathAttributes","isString","withTranslation","componentCls","hocs","flow","wt","addVendorPrefixes","caps","cap","_react","_propTypes","App","React","Component","render","props","createElement","Fragment","propTypes","PropTypes","element","isRequired","pixelsToPercentage","px","maxPixels","isNaN","parseFloat","toFixed","percentageToPixels","pct","Math","round","parseCoordinates","bounds","x","y","width","height","boundsArray","split","str","x1","parseInt","x2","y1","y2","isUnique","sourceXML","replace","STRATEGY_MAPPINGS","getLocators","res","strategyAlias","strategy","POINTER_TYPES","POINTER_UP","POINTER_DOWN","PAUSE","POINTER_MOVE","DEFAULT_SWIPE","POINTER_NAME","DURATION_1","DURATION_2","BUTTON","ORIGIN","DEFAULT_ZOOM","POINTER_NAME1","POINTER_NAME2","DEFAULT_TAP","DEFAULT_LONGPRESS","LONGPRESS_POINTER_NAME","LONGPRESS_DURATION_1","LONGPRESS_DURATION_2","LONGPRESS_BUTTON","DEFAULT_DRAG_AND_DROP","RENDER_CENTROID_AS","CENTROID","EXPAND","OVERLAP","SCREENSHOT_INTERACTION_MODE","SELECT","SWIPE","TAP","LONGPRESS","DRAG_AND_DROP","DOUBLE_TAP","GESTURE","ZOOMIN","SLIDE","APP_MODE","NATIVE","WEB_HYBRID","COMMAND_ARG_TYPES","STRING","NUMBER","BOOLEAN","COMMAND_DEFINITIONS","methodName","args","refresh","INTERACTION_MODE","SOURCE","COMMANDS","GESTURES","SESSION_INFO","_shared","Framework","constructor","host","port","https","scheme","actions","localVarCount","localVarCache","lastAssignedVar","getTapCoordinatesFromPointerActions","pointerActions","pointerMoveAction","getSwipeCoordinatesFromPointerActions","pointerMoveActionStart","pointerMoveActionEnd","Error","addAction","action","params","wrapWithBoilerplate","indent","spaces","lines","spaceStr","i","l","trim","getCodeString","includeBoilerplate","genCodeFn","code","getNewLocalVar","getVarForFind","locator","wasNew","getVarName","varName","varIndex","codeFor_findAndAssign","codeFor_findElement","localVar","codeFor_tap","codeFor_swipe","_framework","JsWdFramework","serverUrl","codeFor_executeScript","isArray","suffixMap","codeFor_click","codeFor_clear","codeFor_sendKeys","codeFor_back","varNameIgnore","varIndexIgnore","codeFor_getCurrentActivity","codeFor_getCurrentPackage","codeFor_installApp","app","codeFor_isAppInstalled","codeFor_launchApp","codeFor_background","timeout","codeFor_closeApp","codeFor_reset","codeFor_removeApp","codeFor_getStrings","language","stringFile","codeFor_getClipboard","codeFor_setClipboard","clipboardText","codeFor_pressKeyCode","keyCode","metaState","flags","codeFor_longPressKeyCode","codeFor_hideKeyboard","codeFor_isKeyboardShown","codeFor_pushFile","pathToInstallTo","fileContentString","codeFor_pullFile","pathToPullFrom","codeFor_pullFolder","folderToPullFrom","codeFor_toggleAirplaneMode","codeFor_toggleData","codeFor_toggleWiFi","codeFor_toggleLocationServices","codeFor_sendSMS","phoneNumber","codeFor_gsmCall","codeFor_gsmSignal","signalStrength","codeFor_gsmVoice","state","codeFor_shake","codeFor_lock","seconds","codeFor_unlock","codeFor_isLocked","codeFor_rotateDevice","radius","rotation","touchCount","duration","codeFor_getPerformanceData","packageName","dataType","dataReadTimeout","codeFor_getPerformanceDataTypes","codeFor_touchId","match","codeFor_toggleEnrollTouchId","enroll","codeFor_openNotifications","codeFor_getDeviceTime","codeFor_fingerprint","fingerprintId","codeFor_getSession","codeFor_setTimeouts","codeFor_getOrientation","codeFor_setOrientation","orientation","codeFor_getGeoLocation","codeFor_setGeoLocation","latitude","longitude","altitude","codeFor_getLogTypes","codeFor_getLogs","logType","codeFor_updateSettings","settingsJson","codeFor_getSettings","codeFor_navigateTo","codeFor_getUrl","codeFor_forward","codeFor_refresh","codeFor_getContext","codeFor_getContexts","codeFor_switchContext","readableName","JsWdIoFramework","chainifyCode","proto","contentType","codeFor_setCommandTimeout","JsOxygenFramework","platformName","toLowerCase","browserName","type","JavaFramework","pkg","cls","Object","keys","k","codeFor_startActivity","settingName","settingValue","toPairs","e","PythonFramework","getPythonVal","jsonVal","RubyFramework","lowerCase","RobotFramework","getCapsVariables","getApplicationInitialization","lastID","_jsWd","_jsWdio","_jsOxygen","_java","_python","_ruby","_robot","frameworks","jsWd","jsWdIo","jsOxygen","java","python","ruby","robot","_i18next","i18nextOptions","i18n","isInitialized","use","initReactI18next","init","_cheerio","_htmlparser","getWebviewStatusAddressBarHeight","statBarHeight","isAndroid","dpr","devicePixelRatio","osAddressBarDefaultHeight","addressToolBarHeight","screen","setHtmlElementAttributes","webviewStatusAddressBarHeight","htmlElements","document","body","getElementsByTagName","from","forEach","el","rect","getBoundingClientRect","setAttribute","left","top","parseSource","dom","parseDocument","$","load","remove","removeAttr","each","$el","rectAttr","xml","_bluebird","_webviewHelpers","NATIVE_APP","_instance","AppiumClient","driver","elementCache","elVarCount","elArrayVarCount","selector","fetchArray","elementId","skipRefresh","skipScreenshot","appMode","quit","screenshot","windowSize","executeMethod","fetchElements","fetchElement","cachedEl","isUndefined","variableName","apply","id","parameters","pointerType","performActions","contextUpdate","sourceUpdate","screenshotUpdate","windowSizeUpdate","Bluebird","delay","getScreenshotUpdate","getWindowUpdate","getContextUpdate","getSourceUpdate","commandRes","start","Date","now","els","findElements","executionTime","elements","elementList","variableIndex","variableType","findElement","err","elementData","windowSizeError","client","capabilities","deviceScreenSize","automationName","toLower","getWindowRect","contexts","contextsError","currentContext","currentContextError","pixelRatio","viewportRect","webViewPosition","hasContextsCommand","getContext","switchContext","getSession","executeScript","parseAndroidContexts","getRect","getPageSource","sourceError","takeScreenshot","screenshotError","getContexts","parsedWebviews","webview","info","pages","webviewName","page","description","descriptionJSON","attached","title","handle","Boolean","instance","_interopRequireWildcard","_reduxFirstHistory","_Session","_uuid","_clientFrameworks","_i18nextConfig","_appiumClient","_antd","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","hasOwnProperty","desc","SET_SESSION_DETAILS","SET_SOURCE_AND_SCREENSHOT","SESSION_DONE","SELECT_ELEMENT","UNSELECT_ELEMENT","SET_SELECTED_ELEMENT_ID","SET_INTERACTIONS_NOT_AVAILABLE","METHOD_CALL_REQUESTED","METHOD_CALL_DONE","SET_EXPANDED_PATHS","SELECT_HOVERED_ELEMENT","UNSELECT_HOVERED_ELEMENT","SELECT_HOVERED_CENTROID","UNSELECT_HOVERED_CENTROID","SELECT_CENTROID","UNSELECT_CENTROID","SET_SHOW_CENTROIDS","QUIT_SESSION_REQUESTED","QUIT_SESSION_DONE","SET_SESSION_TIME","START_RECORDING","PAUSE_RECORDING","CLEAR_RECORDING","CLOSE_RECORDER","SET_ACTION_FRAMEWORK","RECORD_ACTION","SET_SHOW_BOILERPLATE","SHOW_LOCATOR_TEST_MODAL","HIDE_LOCATOR_TEST_MODAL","SHOW_SIRI_COMMAND_MODAL","HIDE_SIRI_COMMAND_MODAL","SET_SIRI_COMMAND_VALUE","SET_LOCATOR_TEST_STRATEGY","SET_LOCATOR_TEST_VALUE","SEARCHING_FOR_ELEMENTS","SEARCHING_FOR_ELEMENTS_COMPLETED","GET_FIND_ELEMENTS_TIMES","GET_FIND_ELEMENTS_TIMES_COMPLETED","SET_LOCATOR_TEST_ELEMENT","FINDING_ELEMENT_IN_SOURCE","FINDING_ELEMENT_IN_SOURCE_COMPLETED","CLEAR_SEARCH_RESULTS","ADD_ASSIGNED_VAR_CACHE","CLEAR_ASSIGNED_VAR_CACHE","SET_SCREENSHOT_INTERACTION_MODE","SET_APP_MODE","SET_SEARCHED_FOR_ELEMENT_BOUNDS","CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS","SET_SWIPE_START","SET_SWIPE_END","SET_SWIPE_START1","SET_SWIPE_END1","CLEAR_SWIPE_ACTION","PROMPT_KEEP_ALIVE","HIDE_PROMPT_KEEP_ALIVE","SELECT_INTERACTION_MODE","SELECT_COMMAND_GROUP","SELECT_COMMAND_SUB_GROUP","ENTERING_COMMAND_ARGS","CANCEL_PENDING_COMMAND","SET_COMMAND_ARG","SET_CONTEXT","SET_APP_ID","SET_SERVER_STATUS","SET_KEEP_ALIVE_INTERVAL","SET_USER_WAIT_TIMEOUT","SET_LAST_ACTIVE_MOMENT","SET_VISIBLE_COMMAND_RESULT","SET_AWAITING_MJPEG_STREAM","SHOW_GESTURE_EDITOR","HIDE_GESTURE_EDITOR","GET_SAVED_GESTURES_REQUESTED","GET_SAVED_GESTURES_DONE","DELETE_SAVED_GESTURES_REQUESTED","DELETE_SAVED_GESTURES_DONE","SET_LOADED_GESTURE","REMOVE_LOADED_GESTURE","SHOW_GESTURE_ACTION","HIDE_GESTURE_ACTION","SELECT_TICK_ELEMENT","UNSELECT_TICK_ELEMENT","SET_GESTURE_TAP_COORDS_MODE","CLEAR_TAP_COORDINATES","TOGGLE_SHOW_ATTRIBUTES","TOGGLE_REFRESHING_STATE","KEEP_ALIVE_PING_INTERVAL","NO_NEW_COMMAND_LIMIT","WAIT_FOR_USER_KEEP_ALIVE","debounce","strategyMap","dispatch","getState","callClientMethod","inspector","selectedElementPath","selectElement","selectedElement","expandedPaths","copiedExpandedPaths","pathArr","splice","paths","unselectElement","selectCentroid","unselectCentroid","selectHoveredCentroid","unselectHoveredCentroid","selectHoveredElement","unselectHoveredElement","applyClientMethod","isRecording","callAction","findAndAssign","findAction","concat","dispatchEvent","Event","showError","addAssignedVarCache","setExpandedPaths","quitSession","reason","killedByUser","killKeepAliveLoop","killAction","applyAction","notification","message","t","startRecording","pauseRecording","clearRecording","getSavedActionFramework","framework","setActionFramework","recordAction","closeRecorder","toggleShowBoilerplate","show","showBoilerplate","setSessionDetails","sessionDetails","mode","mjpegScreenshotUrl","showLocatorTestModal","hideLocatorTestModal","showSiriCommandModal","hideSiriCommandModal","setSiriCommandValue","siriCommandValue","setLocatorTestValue","locatorTestValue","setLocatorTestStrategy","locatorTestStrategy","setContext","context","searchForElement","getFindElementsTimes","findDataSource","findElementsExecutionTimes","find","time","sortBy","assignedVarCache","setLocatorTestElement","skipRecord","ignoreResult","location","size","selectLocatedElement","UPPER_FILTER_LIMIT","findPathsMatchingBounds","endX","endY","coords","findPathsFromCoords","trees","collectedPaths","tree","combinedBounds","String","findPathsFromBounds","filterFoundPaths","foundPaths","findElementWithMatchingId","foundPath","clearSearchResults","selectScreenshotInteractionMode","screenshotInteractionMode","toggleRefreshingState","selectAppMode","toggleShowCentroids","showCentroids","getActiveAppId","bundleId","appId","appPackage","getServerStatus","status","build","setSessionTime","sessionStartTime","setSwipeStart","swipeStartX","swipeStartY","setSwipeStart1","setSwipeEnd","swipeEndX","swipeEndY","setSwipeEnd1","clearSwipeAction","promptKeepAlive","hideKeepAlivePrompt","selectCommandGroup","group","selectCommandSubGroup","selectInteractionMode","interaction","startEnteringCommandArgs","commandName","command","cancelPendingCommand","setCommandArg","runKeepAliveLoop","lastActiveMoment","keepAliveInterval","setInterval","getTimeouts","userWaitTimeout","setTimeout","clearInterval","clearTimeout","keepSessionAlive","isSourceRefreshOn","sessionId","run","postdata","fetch","method","headers","then","response","catch","isObject","isEmpty","truncatedResult","truncate","setVisibleCommandResult","setAwaitingMjpegStream","isAwaiting","saveGesture","savedGestures","gesture","UUID","date","getSavedGestures","deleteSavedGesture","deleteGesture","newGestures","showGestureEditor","hideGestureEditor","setLoadedGesture","loadedGesture","removeLoadedGesture","displayGesture","showGesture","removeGestureDisplay","selectTick","tick","tickCoordinates","undefined","selectedTick","unselectTick","tapTickCoordinates","toggleShowAttributes","headspinUrl","ServerTabHeadspin","server","setServerParam","Form","Row","gutter","Col","span","Item","Input","className","SessionStyles","customServerInputLeft","placeholder","addonBefore","headspin","webDriverUrl","onChange","target","localDesc","DEFAULT","PRIMARY","DISABLED","DANGER","ALERT","ERROR","WARNING","INFO","INPUT","TEXT","TEXTAREA","PASSWORD","SUBMIT","ROW","FLEX","_AntdTypes","browserstackUsernamePlaceholder","BROWSERSTACK_USERNAME","environmentVariable","browserstackAccessKeyPlaceholder","BROWSERSTACK_ACCESS_KEY","ServerTabBrowserstack","browserstack","username","accessKey","lambdatestUsernamePlaceholder","LAMBDATEST_USERNAME","lambdatestAccessKeyPlaceholder","LAMBDATEST_ACCESS_KEY","ServerTabLambdatest","lambdatest","bitbarApiKeyPlaceholder","BITBAR_API_KEY","ServerTabBitbar","bitbar","apiKey","kobitonUsernamePlaceholder","KOBITON_USERNAME","kobitonAccessKeyPlaceholder","KOBITON_ACCESS_KEY","ServerTabKobiton","kobiton","cloudPerfectoUrl","portPlaceholder","perfecto","ssl","perfectoTokenPlaceholder","PERFECTO_TOKEN","ServerTabPerfecto","hostname","token","Checkbox","checked","pcloudyUsernamePlaceholder","pcloudyHostPlaceholder","pcloudyAccessKeyExample","ServerTabPcloudy","pcloudy","sauceUsernamePlaceholder","SAUCE_USERNAME","sauceAccessKeyPlaceholder","SAUCE_ACCESS_KEY","ServerTabSauce","sauce","addonDataCenter","Radio","Group","inputDataCenter","addonDataCenterRadioContainer","buttonStyle","defaultValue","dataCenter","Tooltip","placement","align","useSCProxy","disabled","scHost","scPort","testingbotKeyPlaceholder","TB_KEY","testingbotSecretPlaceholder","TB_SECRET","ServerTabTestingbot","testingbot","secret","accessKeyPlaceholder","placeholderUrl","ServerTabExperitest","experitest","robotQATokenPlaceholder","ROBOTQA_TOKEN","ServerTabRobotQA","roboticmobi","ServerTabRemoteTestkit","remotetestkit","_ServerTabHeadspin","_ServerTabBrowserstack","_ServerTabLambdatest","_ServerTabBitbar","_ServerTabKobiton","_ServerTabPerfecto","_ServerTabPcloudy","_ServerTabSauce","_ServerTabTestingbot","_ServerTabExperitest","_ServerTabRobotQA","_ServerTabRemoteTestKit","_sauce_logo","_headspin_logo","_browserstack_logo","_lambdatest_logo","_bitbar_logo","_kobiton_logo","_perfecto_logo","_pcloudy_logo","_testingbot_logo","_experitest_logo","_robotqa_logo","_remotetestkit_logo","CloudProviders","tabhead","tabText","src","SauceLogo","tab","logo","HeadSpinLogo","BrowserStackLogo","LambdaTestLogo","BitBarLogo","KobitonLogo","PerfectoLogo","PcloudyLogo","TestingBotLogo","ExperitestLogo","RobotQALogo","RemoteTestKitLogo","APPIUM_SESSION_FILE_VERSION","getAppiumSessionFilePath","argv","isPackaged","isDev","getSaveableState","reduxState","version","serverType","visibleProviders","APPIUM_SESSION_EXTENSION","_Inspector","_CloudProviders","_web2driver","_umd","_moment","_helpers","NEW_SESSION_REQUESTED","NEW_SESSION_LOADING","NEW_SESSION_DONE","CHANGE_CAPABILITY","SAVE_SESSION_REQUESTED","SAVE_SESSION_DONE","GET_SAVED_SESSIONS_REQUESTED","GET_SAVED_SESSIONS_DONE","SET_CAPABILITY_PARAM","ADD_CAPABILITY","REMOVE_CAPABILITY","SWITCHED_TABS","SET_CAPS_AND_SERVER","SAVE_AS_MODAL_REQUESTED","HIDE_SAVE_AS_MODAL_REQUESTED","SET_SAVE_AS_TEXT","DELETE_SAVED_SESSION_REQUESTED","DELETE_SAVED_SESSION_DONE","CHANGE_SERVER_TYPE","SET_SERVER_PARAM","SET_SERVER","VISIBLE_PROVIDERS","SET_ATTACH_SESS_ID","GET_SESSIONS_REQUESTED","GET_SESSIONS_DONE","ENABLE_DESIRED_CAPS_NAME_EDITOR","ABORT_DESIRED_CAPS_NAME_EDITOR","SAVE_DESIRED_CAPS_NAME","SET_DESIRED_CAPS_NAME","ENABLE_DESIRED_CAPS_EDITOR","ABORT_DESIRED_CAPS_EDITOR","SAVE_RAW_DESIRED_CAPS","SET_RAW_DESIRED_CAPS","SHOW_DESIRED_CAPS_JSON_ERROR","IS_ADDING_CLOUD_PROVIDER","SET_PROVIDERS","SET_ADD_VENDOR_PREFIXES","SET_STATE_FROM_URL","SET_STATE_FROM_SAVED","CAPS_NEW_COMMAND","CAPS_CONNECT_HARDWARE_KEYBOARD","CAPS_NATIVE_WEB_SCREENSHOT","CAPS_ENSURE_WEBVIEW_HAVE_PAGES","CAPS_INCLUDE_SAFARI_IN_WEBVIEWS","FILE_PATH_STORAGE_KEY","AUTO_START_URL_PARAM","MJPEG_CAP","MJPEG_PORT_CAP","CONN_RETRIES","CONN_TIMEOUT","HEADERS_CONTENT","NEW_COMMAND_TIMEOUT_SEC","isFirstRun","serverTypes","local","ServerTypes","DEFAULT_SERVER_PATH","DEFAULT_SERVER_HOST","DEFAULT_SERVER_PORT","SAUCE_OPTIONS_CAP","JSON_TYPES","getCapsObject","assign","secs","errMessage","data","setCapsAndServer","uuid","changeCapability","addCapability","setCapabilityParam","removeCapability","_addVendorPrefixes","capsUUID","capsName","session","prefixedCaps","newSession","attachSessId","desiredCapabilities","addCustomCaps","isPlainObject","dateTime","moment","format","URL","pathname","protocol","securityToken","BROWSERSTACK_HOST","BROWSERSTACK_PORT","LAMBDATEST_HOST","LAMBDATEST_PORT","isRealMobile","advanced","useProxy","proxyUrl","proxy","BITBAR_HOST","KOBITON_HOST","pCloudy_Username","PCLOUDY_USERNAME","pCloudy_ApiKey","PCLOUDY_ACCESS_KEY","TB_HOST","experitestUrl","robotqa_token","accessToken","serverOpts","connectionRetryCount","connectionRetryTimeout","user","logLevel","NODE_ENV","attachedSessionCaps","runningAppiumSessions","isMobile","Web2Driver","attachToSession","_isAttachedSession","navigateTo","mjpegScreenshotPort","saveSession","savedSessions","newSavedSession","getSavedSessions","switchTabs","requestSaveAsModal","hideSaveAsModal","setSaveAsText","saveAsText","deleteSavedSession","newSessions","setAttachSessId","changeServerType","getRunningSessions","debounceGetRunningSessions","setLocalServerParams","serverArgs","setSavedServerParams","currentProviders","setStateFromAppiumFile","newFilepath","filePath","lastArg","startsWith","sessionStorage","appiumJson","promisify","readFile","stack","saveFile","filepath","appiumFileInfo","writeFile","send","serverInfo","adjPath","endsWith","ky","btoa","json","sessions","startDesiredCapsNameEditor","abortDesiredCapsNameEditor","saveDesiredCapsName","desiredCapsName","setDesiredCapsName","startDesiredCapsEditor","abortDesiredCapsEditor","saveRawDesiredCaps","rawDesiredCaps","capsArray","newCaps","newCapsArray","setRawDesiredCaps","invalidCapsJsonReason","isValidCapsJson","isValidatingCapsJson","addCloudProvider","isAddingProvider","stopAddCloudProvider","addVisibleProvider","provider","providers","union","removeVisibleProvider","without","setVisibleProviders","androidCustomCaps","iosCustomCaps","bindWindowClose","addEventListener","returnValue","setAddVendorPrefixes","initFromQueryString","href","initialState","searchParams","autoStartSession","_formatJson","_Session2","_icons","FormattedCaps","isEditingDesiredCapsName","isEditingDesiredCaps","Card","formattedCaps","setCapsTitle","capsEditorTitle","extra","setCapsTitleButtons","Button","onClick","icon","CloseOutlined","capsNameEditorButton","SaveOutlined","EditOutlined","capsEditorControls","capsEditorButton","capsEditor","capsEditorBody","capsEditorBodyFull","capsEditorBodyResized","Alert","formattedCapsBody","formatJSON","plain","getLocalFilePath","canceled","filePaths","dialog","showOpenDialog","properties","CapabilityControl","onSetCapabilityParam","onPressEnter","capsBoxFont","Switch","checkedChildren","unCheckedChildren","rows","fileControlWrapper","addonAfter","FileOutlined","_FormattedCaps","_CapabilityControl","_extends","bind","arguments","whitespaces","whitespaceMsg","leadingSpace","trailingSpace","handleSetType","translatedValue","CapabilityEditor","showSaveAsModal","onSaveAsOk","latestCapField","useRef","useEffect","current","input","__didFocus","focus","justify","capsFormRow","order","capsFormCol","newSessionForm","ref","Select","Option","btnDeleteCap","DeleteOutlined","PlusOutlined","capsFormattedCol","Modal","okText","cancelText","onCancel","onOk","DATE_COLUMN_WIDTH","ACTIONS_COLUMN_WIDTH","dataSource","sessionFromUUID","SavedSessions","handleCapsAndServer","columns","dataIndex","record","editSession","confirm","handleDelete","Table","pagination","sticky","onRow","row","rowClassName","selected","formatCaps","importantCaps","deviceName","formatCapsBrowserstack","sessionName","formatCapsLambdaTest","desired","platformVersion","getSessionInfo","AttachToSession","showSearch","notFoundContent","btnReload","ReloadOutlined","ServerTabCustom","AdvancedServerParams","styles","advancedSettingsContainerCol","advancedSettingsContainer","Collapse","bordered","Panel","header","allowUnauthorized","CloudProviderSelector","isAddingCloudProvider","footer","providersGrid","chunk","cloudProviderModal","providerName","style","borderColor","role","toggleVisibleProvider","_CapabilityEditor","_SavedSessions","_AttachToSession","_ServerTabCustom","_AdvancedServerParams","_CloudProviderSelector","ADD_CLOUD_PROVIDER","CAPS_DOCS_LINK","Session","tabKey","isCapsDirty","newSessionLoading","isAttaching","Spin","spinning","sessionContainer","serverTab","Tabs","activeKey","handleSelectServerTab","serverTabs","items","label","scrollingTabCont","scrollingTab","Badge","count","offset","sessionFooter","desiredCapsLink","preventDefault","LinkOutlined","_reactRedux","SessionActions","mapStateToProps","connect","HighlighterRect","hoveredElement","scaleRatio","xOffset","elLocation","elSize","dimensions","hoveredPath","selectedPath","highlighterClasses","InspectorCSS","onMouseOver","onMouseOut","CENTROID_STYLES","VISIBLE","HIDDEN","CONTAINER","NON_CONTAINER","getCentroidPos","angle","coord","HighlighterCentroid","elementProperties","centroidType","hoveredCentroid","selectedCentroid","centerX","centerY","angleX","angleY","container","centroidClasses","overlapDivStyle","visibility","centroidDivStyle","borderRadius","placeHolder","onMouseEnter","onMouseLeave","onClickCentroid","_HighlighterRect","_HighlighterCentroid","HighlighterRects","containerEl","searchedForElementBounds","isLocatorTestModalVisible","isSiriCommandModalVisible","highlighterRects","highlighterCentroids","highlighterXOffset","screenshotEl","buildElementsWithProps","prevElement","overlaps","centerPoint","v1","v2","parent","accessible","coordinates","isElementContainer","childEl","element1","element2","isElementOverElement","isAncestor","curElement","maybeAncestor","elem","updateOverlapsAngles","steps","step","elProps","cos","PI","sin","elementsByOverlap","getElements","querySelector","renderElements","centroids","renderCentroids","_HighlighterRects","TYPES","FILLED","NEW_DASHED","WHOLE","DASHED","DRAG","Screenshot","methodCallInProgress","swipeStart","swipeEnd1","swipeStart1","swipeEnd","selectedInteractionMode","xLongPress","setXLongPress","useState","yLongPress","setYLongPress","coordinatesArray","setX","setY","isLongPress","setIsLongPress","setElement","setCoords","crop","setCrop","scale","handleDoSwipe","button","origin","swipeEndLocal","handleDoSlide","handleDoZoom","swipeEndLocal1","handleDragStart","startPoint","screenshotStyle","cursor","swipeInstructions","screenSrc","screenImg","points","getGestureCoordinates","defaultTypes","pointerDown","pointerUp","pointer","temp","ticks","len","color","innerScreenshotContainer","onMouseDown","B","onMouseMove","offsetX","nativeEvent","offsetY","newX","newY","handleMouseOut","onDragOver","event","onDrop","dropX","dropY","roundedDropX","roundedDropY","handleDoDragAndDrop","screenshotBox","coordinatesContainer","swipeSvg","cx","cy","tapDiv","gestureSvg","stroke","fill","_hi","_bi","_io","HeaderButtons","deviceControls","HiOutlineHome","InspectorStyles","HiOutlineMicrophone","IoChevronBackOutline","BiCircle","BiSquare","appModeControls","AppstoreOutlined","GlobalOutlined","generalControls","PlayCircleOutlined","PauseCircleOutlined","SearchOutlined","EyeOutlined","PauseOutlined","quitSessionButton","Space","CLASS_CHAIN_DOCS_URL","PREDICATE_DOCS_URL","selectedElementTableCell","copyToClipBoard","trigger","SelectedElement","isFindingElementsTimes","selectedElementId","elementInteractionsNotAvailable","selectedElementSearchInProgress","sendKeys","isDisabled","attributeColumns","unshift","findColumns","showXpathWarning","classChainText","predicateStringText","sendData","tapIcon","AimOutlined","LoadingOutlined","selectedElemNotInteractableAlertRow","showIcon","elementActions","elementKeyInputActions","elementKeyInput","allowClear","SendOutlined","ClearOutlined","CopyOutlined","HourglassOutlined","tableLayout","contextSelect","LocatedElements","locatedElements","locatedElementsExecutionTime","locatorTestElement","isFindingLocatedElementInSource","spaceContainer","direction","showIdAutocompleteInfo","idLocatorAutocompletionDisabled","disableIdLocatorAutocompletion","List","searchResultsList","renderItem","searchResultsSelectedItem","MenuUnfoldOutlined","searchResultsActions","searchResultsKeyInput","STRAT_ID","STRAT_XPATH","STRAT_NAME","STRAT_CLASS_NAME","STRAT_ACCESSIBILITY_ID","STRAT_PREDICATE","STRAT_CLASS_CHAIN","STRAT_UIAUTOMATOR","STRAT_DATAMATCHER","STRAT_VIEWTAG","locatorStrategies","strategies","showMissingAutomationNameInfo","ElementLocator","strategyValue","strategyName","locatorStrategyBtn","TextArea","locatorSelectorTextArea","_LocatedElements","_ElementLocator","LocatorTestModal","isSearchingForElements","loading","onSubmit","SiriCommandModal","_LocatorTestModal","_SiriCommandModal","IMPORTANT_ATTRS","Source","showSourceAttrs","getFormattedTag","showAllAttrs","attrs","sourceAttrName","sourceAttrValue","sourceTag","recursive","elemObj","treeData","tabIndex","errorMsg","Tree","defaultExpandAll","onExpand","expandedKeys","onSelect","selectedPaths","handleSelectElement","selectedKeys","_highlight","RecordedActions","recordedActions","actionFramework","raw","rawCode","highlight","highlightedCode","CodeOutlined","actionBar","f","ExportOutlined","dangerouslySetInnerHTML","__html","Commands","selectedCommandGroup","selectedCommandSubGroup","pendingCommand","commandGroupName","commandGroup","startPerformingCommand","executeCommand","argName","argType","toNumber","v","SAVED_ACTIONS_OBJ","NAME","DESCRIPTION","CREATED","ACTIONS","SavedGestures","drawnGestureRef","getGestureByID","onDraw","convertCoordinates","formatGesture","pointers","omit","newPointers","onPlay","loadSavedGesture","rowKey","onRowClick","Name","Created","Description","DEFAULT_DURATION_TIME","COLORS","BUTTONS","LEFT","RIGHT","ACTION_TYPES","ADD","REMOVE","MSG_TYPES","SUCCESS","COORD_TYPE","PERCENTAGES","PIXELS","TICK_PROPS","POINTER_TYPE","DURATION","X","Y","CURSOR","POINTER","STATUS","WAIT","FINISH","COLOR","FILLER","DISPLAY","DEFAULT_POINTERS","GestureEditor","setPointers","setName","setDescription","coordType","setCoordType","activePointerId","setActivePointerId","getConvertedPointers","updateCoordinates","onBack","duplicatePointerNames","localPointers","duplicates","displayNotificationMsg","msg","getW3CPointers","currentPointers","cloneDeep","getDefaultMoveDuration","tickId","coordFromTap","ticksExceptCurrent","prevPointerMoves","calcLength","sqrt","calcDiff","abs","xDiff","yDiff","maxScreenLength","lineLengthPct","tickKey","updateX","updateY","copiedPointers","currentPointer","currentTick","updateTick","p","targetTickIdx","findIndex","headerTitle","headerButtons","formattedPointers","onSaveAs","gestureName","onSave","headerDescription","regularTimelineIcon","iconStyle","Popover","content","RightCircleOutlined","DownCircleOutlined","UpCircleOutlined","QuestionCircleOutlined","timeline","updateGestureForTimeline","allTickLengths","maxTickLength","max","currentLength","customStep","fillers","Steps","tapCoordinatesBtn","tickCard","hoverable","deleteTick","pointerKey","newTicks","dropdownMatchSelectWidth","pointerMove","pause","tickType","tickDuration","tickButton","tickCoords","pointerTicksGrid","xs","sm","md","lg","xl","xxl","PlusCircleOutlined","addTick","pointerTabs","textDecorationColor","maxLength","updatePointerName","pointerName","pointerIndex","PageHeader","Divider","pointerId","onEdit","targetKey","addPointer","newActivePointerId","deletePointer","hideAdd","centered","tabBarGutter","SessionCodeBox","_SessionCodeBox","SESSION_OBJ","session_id","session_url","server_details","session_length","session_details","active_appId","OUTER_TABLE_KEY","SESSION_TABLE_KEY","SERVER_TABLE_KEY","SCROLL_DISTANCE_Y","COLUMN_WIDTH","SESSION_DETAILS","SessionInfo","sessionArray","generateSessionTime","hours","minutes","floor","showTime","padStart","interval","setTime","getTable","tableValues","keyName","outerTable","keyValue","generateSessionInfo","showHeader","scroll","connectedUrl","serverDetailsArray","serverStatusArray","sessionUrl","_Screenshot","_HeaderButtons","_SelectedElement","_Source","_RecordedActions","_Commands","_SavedGestures","_GestureEditor","_SessionInfo","ButtonGroup","MIN_WIDTH","MIN_HEIGHT","MAX_SCREENSHOT_WIDTH","MJPEG_STREAM_CHECK_INTERVAL","downloadXML","encodeURIComponent","display","appendChild","click","removeChild","Inspector","didInitialResize","screenAndSourceEl","lastScreenshot","updateSourceTreeWidth","updateScaleRatio","mjpegStreamCheckInterval","screenshotImg","setState","offsetWidth","img","imgRect","screenshotRect","flexBasis","attemptedWidth","maxWidth","componentDidMount","curHeight","curWidth","needsResize","newWidth","newHeight","resizeTo","checkMjpegStream","isAwaitingMjpegStream","Image","imgReady","decode","componentDidUpdate","componentWillUnmount","screenshotInteractionChange","showRecord","visibleCommandMethod","showKeepAlivePrompt","visibleCommandResult","isGestureEditorVisible","showScreenshot","screenShotControls","CheckCircleOutlined","CloseCircleOutlined","defaultChecked","SelectOutlined","SwapRightOutlined","ScanOutlined","InfoOutlined","DragOutlined","ShrinkOutlined","SlidersOutlined","main","TagOutlined","ThunderboltOutlined","HighlightOutlined","InfoCircleOutlined","InspectorActions","_Inspector2","InspectorPage","_Spinner","Spinner","loader","_reactRouterDom","_App","_SessionPage","_InspectorPage","changeLanguage","Suspense","fallback","Route","exact","_routes","Root","store","history","Provider","Router","_ErrorMessage","CREATE_ISSUE_URL","ErrorMessage","copyTrace","errorMessage","copyTraceBtn","trace","ErrorBoundary","SET_UPDATE_STATE","setUpdateState","updateState","inspectorActions","sessionActions","updaterActions","serverName","INITIAL_STATE","gettingSessions","nextState","isAttachSessIdValid","runningSessions","newSessionRequested","saveSessionRequested","getSavedSessionsRequested","deletingSession","currentServerState","newServerState","nextServerState","reduce","DEFAULT_FRAMEWORK","findElementByPath","isQuittingSession","isSessionDone","selectedElementVariableName","selectedElementVariableType","getSavedGesturesRequested","_Updater","_toolkit","createRootReducer","routerReducer","combineReducers","router","updater","_history","_actions","_reducers","createReduxHistory","routerMiddleware","createReduxHistoryContext","createHashHistory","rootReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","createLogger","logger","level","collapsed","devTools","actionCreators","_client","_Root","_ErrorBoundary","_store","getElementById","root","createRoot","module","hot","accept","NextRoot","AppContainer"],"mappings":"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","file":"renderer.e31bb0bc.js","sourceRoot":"../app/renderer","sourcesContent":["const browser = {\n  clipboard: {\n    writeText: (text) => navigator.clipboard.writeText(text)\n  },\n  shell: {\n    openExternal: (url) => window.open(url, '')\n  },\n  remote: {\n    getCurrentWindow: () => ({\n      getSize: () => [window.innerWidth, window.innerHeight]\n    })\n  },\n  ipcRenderer: {\n    on: (evt) => {\n      console.warn(`Cannot listen for IPC event ${evt} in browser context`); // eslint-disable-line no-console\n    }\n  },\n  fs: null,\n  util: null,\n};\n\nclass BrowserSettings {\n  has (key) {\n    return this.get(key) !== null;\n  }\n\n  set (key, val) {\n    return localStorage.setItem(key, JSON.stringify(val));\n  }\n\n  get (key) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  getSync (key) {\n    return this.get(key);\n  }\n}\n\nconst log = console;\nconst settings = new BrowserSettings();\nconst {clipboard, shell, remote, ipcRenderer} = browser;\nconst i18NextBackend = require('i18next-chained-backend').default;\nconst i18NextBackendOptions = {\n  backends: [\n    require('i18next-localstorage-backend').default,\n    require('i18next-http-backend').default,\n  ], backendOptions: [{\n  }, {\n    loadPath: './locales/{{lng}}/{{ns}}.json'\n  }]\n};\n\nexport {\n  log,\n  settings,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  i18NextBackend,\n  i18NextBackendOptions,\n};\n","import path from 'path';\nimport { clipboard, shell, remote, ipcRenderer } from 'electron';\nimport log from 'electron-log';\nimport settings from 'electron-settings';\nimport i18NextBackend from 'i18next-fs-backend';\nimport fs from 'fs';\nimport util from 'util';\nconst i18NextBackendOptions = {\n  loadPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n  addPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n  jsonIndent: 2,\n};\n\nexport {\n  log,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  settings,\n  i18NextBackend,\n  i18NextBackendOptions,\n  fs,\n  util,\n};\n","let log, settings, clipboard, shell, remote, ipcRenderer,\n    i18NextBackend, i18NextBackendOptions, fs, util;\n\nfunction buildForBrowser () {\n  if (process.env.BUILD_BROWSER) {\n    return true;\n  }\n\n  if (typeof navigator !== 'undefined' && !/electron/i.test(navigator.userAgent)) {\n    return true;\n  }\n\n  return false;\n}\n\nif (buildForBrowser()) {\n  ({log, settings, clipboard, shell, remote,\n    ipcRenderer, i18NextBackend,\n    i18NextBackendOptions, fs, util} = require('./browser'));\n} else {\n  ({log, settings, clipboard, shell, remote,\n    ipcRenderer, i18NextBackend,\n    i18NextBackendOptions, fs, util} = require('./electron'));\n}\n\nexport {\n  log,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  settings,\n  i18NextBackend,\n  i18NextBackendOptions,\n  fs,\n  util,\n};\n","import { settings } from '../renderer/polyfills';\n\nexport const SAVED_SESSIONS = 'SAVED_SESSIONS';\nexport const SET_SAVED_GESTURES = 'SET_SAVED_GESTURES';\nexport const SERVER_ARGS = 'SERVER_ARGS';\nexport const SESSION_SERVER_PARAMS = 'SESSION_SERVER_PARAMS';\nexport const SESSION_SERVER_TYPE = 'SESSION_SERVER_TYPE';\nexport const SAVED_FRAMEWORK = 'SAVED_FRAMEWORK';\n\nconst DEFAULT_SETTINGS = {\n  [SAVED_SESSIONS]: [],\n  [SET_SAVED_GESTURES]: [],\n  [SERVER_ARGS]: null,\n  [SESSION_SERVER_PARAMS]: null,\n  [SESSION_SERVER_TYPE]: null,\n  [SAVED_FRAMEWORK]: 'java',\n};\n\nexport async function getSetting (setting) {\n  if (await settings.has(setting)) {\n    return await settings.get(setting);\n  }\n  return DEFAULT_SETTINGS[setting];\n}\n\nexport async function setSetting (setting, value) {\n  await settings.set(setting, value);\n}\n\nexport default settings;\n","import settings from '../shared/settings';\n\nconst config = {\n  platform: process.platform,\n  languages: [\n    'de', 'en', 'es-ES', 'fa', 'hi', 'it', 'ja', 'ko', 'kn',\n    'ml-IN', 'pa-IN', 'pl', 'pt-BR', 'pt-PT', 'ru', 'te', 'uk', 'zh-CN'\n  ],\n  fallbackLng: 'en',\n  namespace: 'translation',\n};\n\nfunction getI18NextOptions (backend) {\n  return {\n    backend,\n    // debug: true,\n    // saveMissing: true,\n    interpolation: {\n      escapeValue: false\n    },\n    lng: settings && settings.getSync('PREFERRED_LANGUAGE') || 'en',\n    fallbackLng: config.fallbackLng,\n    whitelist: config.languages\n  };\n}\n\n\nexport default config;\nexport { getI18NextOptions };\n","import XPath from 'xpath';\nimport { withTranslation as wt } from 'react-i18next';\nimport _ from 'lodash';\nimport { log } from './polyfills';\nimport config from '../configs/app.config';\nimport { DOMParser } from '@xmldom/xmldom';\n\nconst VALID_W3C_CAPS = ['platformName', 'browserName', 'browserVersion', 'acceptInsecureCerts',\n  'pageLoadStrategy', 'proxy', 'setWindowRect', 'timeouts', 'unhandledPromptBehavior'];\n\n\n// Attributes on nodes that we know are unique to the node\nconst UNIQUE_XPATH_ATTRIBUTES = [\n  'name',\n  'content-desc',\n  'id',\n  'accessibility-id',\n];\nconst UNIQUE_CLASS_CHAIN_ATTRIBUTES = [\n  'label',\n  'name',\n  'value',\n];\nconst UNIQUE_PREDICATE_ATTRIBUTES = [\n  'label',\n  'name',\n  'value',\n  'type',\n];\n\n/**\n * Translates sourceXML to JSON\n *\n * @param {string} source\n * @returns {Object}\n */\nexport function xmlToJSON (source) {\n  const childNodesOf = (xmlNode) => {\n    if (!xmlNode || !xmlNode.hasChildNodes()) {\n      return [];\n    }\n\n    const result = [];\n    for (let childIdx = 0; childIdx < xmlNode.childNodes.length; ++childIdx) {\n      const childNode = xmlNode.childNodes.item(childIdx);\n      if (childNode.nodeType === 1) {\n        result.push(childNode);\n      }\n    }\n    return result;\n  };\n  const translateRecursively = (xmlNode, parentPath = '', index = null) => {\n    const attributes = {};\n    for (let attrIdx = 0; attrIdx < xmlNode.attributes.length; ++attrIdx) {\n      const attr = xmlNode.attributes.item(attrIdx);\n      attributes[attr.name] = attr.value;\n    }\n\n    // Dot Separated path of indices\n    const path = _.isNil(index) ? '' : `${!parentPath ? '' : parentPath + '.'}${index}`;\n    const classChainSelector = isIOS ? getOptimalClassChain(xmlDoc, xmlNode, UNIQUE_CLASS_CHAIN_ATTRIBUTES) : '';\n    const predicateStringSelector = isIOS ? getOptimalPredicateString(xmlDoc, xmlNode, UNIQUE_PREDICATE_ATTRIBUTES) : '';\n\n    return {\n      children: childNodesOf(xmlNode)\n        .map((childNode, childIndex) => translateRecursively(childNode, path, childIndex)),\n      tagName: xmlNode.tagName,\n      attributes,\n      xpath: getOptimalXPath(xmlDoc, xmlNode, UNIQUE_XPATH_ATTRIBUTES),\n      ...(isIOS ? {classChain: classChainSelector ? `**${classChainSelector}` : ''} : {}),\n      ...(isIOS ? {predicateString: predicateStringSelector ? predicateStringSelector : ''} : {}),\n      path,\n    };\n  };\n  const isIOS = source.includes('XCUIElement');\n  const xmlDoc = new DOMParser().parseFromString(source);\n  // get the first child element node in the doc. some drivers write their xml differently so we\n  // first try to find an element as a direct descendend of the doc, then look for one in\n  // documentElement\n  const firstChild = childNodesOf(xmlDoc)[0] || childNodesOf(xmlDoc.documentElement)[0];\n\n  return firstChild ? translateRecursively(firstChild) : {};\n}\n\n/**\n * Get an optimal XPath for a DOMNode\n *\n * @param {DOMDocument} doc\n * @param {DOMNode} domNode\n * @param {Array<String>} uniqueAttributes Attributes we know are unique (defaults to just 'id')\n * @returns {string|null}\n */\nexport function getOptimalXPath (doc, domNode, uniqueAttributes = ['id']) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1) {\n      return '';\n    }\n\n    // BASE CASE #2: If this node has a unique attribute, return an absolute XPath with that attribute\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n      if (attrValue) {\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\n        let othersWithAttr;\n\n        // If the XPath does not parse, move to the next unique attribute\n        try {\n          othersWithAttr = XPath.select(xpath, doc);\n        } catch (ign) {\n          continue;\n        }\n\n        // If the attribute isn't actually unique, get it's index too\n        if (othersWithAttr.length > 1) {\n          let index = othersWithAttr.indexOf(domNode);\n          xpath = `(${xpath})[${index + 1}]`;\n        }\n        return xpath;\n      }\n    }\n\n    // Get the relative xpath of this node using tagName\n    let xpath = `/${domNode.tagName}`;\n\n    // If this node has siblings of the same tagName, get the index of this node\n    if (domNode.parentNode) {\n      // Get the siblings\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\n      ));\n\n      // If there's more than one sibling, append the index\n      if (childNodes.length > 1) {\n        let index = childNodes.indexOf(domNode);\n        xpath += `[${index + 1}]`;\n      }\n    }\n\n    // Make a recursive call to this nodes parents and prepend it to this xpath\n    return getOptimalXPath(doc, domNode.parentNode, uniqueAttributes) + xpath;\n  } catch (error) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    log.error(`The most optimal XPATH could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\n\n    return null;\n  }\n}\n\n/**\n * Get an optimal Class Chain for a DOMNode based on the getOptimalXPath method\n *\n * @param {DOMDocument} doc\n * @param {DOMNode} domNode\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\n * @returns {string|null}\n */\nfunction getOptimalClassChain (doc, domNode, uniqueAttributes) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\n    // which is not an official XCUITest element, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\n      return '';\n    }\n\n    // BASE CASE #2: If this node has a unique class chain based on attributes then return it\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n      if (attrValue) {\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\n        let classChain = `/${domNode.tagName || '*'}[\\`${attrName} == \"${attrValue}\"\\`]`;\n        let othersWithAttr;\n\n        // If the XPath does not parse, move to the next unique attribute\n        try {\n          othersWithAttr = XPath.select(xpath, doc);\n        } catch (ign) {\n          continue;\n        }\n\n        // If the attribute isn't actually unique, get it's index too\n        if (othersWithAttr.length > 1) {\n          let index = othersWithAttr.indexOf(domNode);\n          classChain = `${classChain}[${index + 1}]`;\n        }\n        return classChain;\n      }\n    }\n\n    // Get the relative xpath of this node using tagName\n    let classChain = `/${domNode.tagName}`;\n\n    // If this node has siblings of the same tagName, get the index of this node\n    if (domNode.parentNode) {\n      // Get the siblings\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\n      ));\n\n      // If there's more than one sibling, append the index\n      if (childNodes.length > 1) {\n        let index = childNodes.indexOf(domNode);\n        classChain += `[${index + 1}]`;\n      }\n    }\n\n    // Make a recursive call to this nodes parents and prepend it to this xpath\n    return getOptimalClassChain(doc, domNode.parentNode, uniqueAttributes) + classChain;\n  } catch (error) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    log.error(`The most optimal '-ios class chain' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\n\n    return null;\n  }\n}\n\n/**\n * Get an optimal Predicate String for a DOMNode based on the getOptimalXPath method\n * The `ios predicate string` can only search a single element, no parent child scope\n *\n * @param {DOMDocument} doc\n * @param {DOMNode} domNode\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\n * @returns {string|null}\n */\nfunction getOptimalPredicateString (doc, domNode, uniqueAttributes) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\n    // which is not an official XCUITest element, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\n      return '';\n    }\n\n    // BASE CASE #2: Check all attributes and try to find the best way\n    let xpathAttributes = [];\n    let predicateString = [];\n\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n\n      if (_.isNil(attrValue) || _.isString(attrValue) && attrValue.length === 0) {\n        continue;\n      }\n\n      xpathAttributes.push(`@${attrName}=\"${attrValue}\"`);\n      const xpath = `//*[${xpathAttributes.join(' and ')}]`;\n      predicateString.push(`${attrName} == \"${attrValue}\"`);\n      let othersWithAttr;\n\n      // If the XPath does not parse, move to the next unique attribute\n      try {\n        othersWithAttr = XPath.select(xpath, doc);\n      } catch (ign) {\n        continue;\n      }\n\n      // If the attribute isn't actually unique, get it's index too\n      if (othersWithAttr.length === 1) {\n        return predicateString.join(' AND ');\n      }\n    }\n  } catch (error) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    log.error(`The most optimal '-ios predicate string' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\n\n    return null;\n  }\n}\n\nexport function withTranslation (componentCls, ...hocs) {\n  return _.flow(\n    ...hocs,\n    wt(config.namespace),\n  )(componentCls);\n}\n\nexport function addVendorPrefixes (caps) {\n  return caps.map((cap) => {\n    // if we don't have a valid unprefixed cap or a cap with an existing prefix, update it\n    if (!VALID_W3C_CAPS.includes(cap.name) && !_.includes(cap.name, ':')) {\n      cap.name = `appium:${cap.name}`;\n    }\n    return cap;\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from '../util';\n\nclass App extends React.Component {\n  render () {\n    const { children } = this.props;\n    return (\n      <React.Fragment>{children}</React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  children: PropTypes.element.isRequired\n};\n\nexport default withTranslation(App);\n","import { DOMParser } from '@xmldom/xmldom';\nimport xpath from 'xpath';\n\nexport function pixelsToPercentage (px, maxPixels) {\n  if (!isNaN(px)) {\n    return parseFloat(((px / maxPixels) * 100).toFixed(1), 10);\n  }\n}\n\nexport function percentageToPixels (pct, maxPixels) {\n  if (!isNaN(pct)) {\n    return Math.round(maxPixels * (pct / 100));\n  }\n}\n\nexport function parseCoordinates (element) {\n  let {bounds, x, y, width, height} = element.attributes || {};\n\n  if (bounds) {\n    let boundsArray = bounds.split(/\\[|\\]|,/).filter((str) => str !== '');\n    const x1 = parseInt(boundsArray[0], 10);\n    const x2 = parseInt(boundsArray[2], 10);\n    const y1 = parseInt(boundsArray[1], 10);\n    const y2 = parseInt(boundsArray[3], 10);\n    return { x1, y1, x2, y2 };\n  } else if (x) {\n    x = parseInt(x, 10);\n    y = parseInt(y, 10);\n    width = parseInt(width, 10);\n    height = parseInt(height, 10);\n    return {x1: x, y1: y, x2: x + width, y2: y + height};\n  } else {\n    return {};\n  }\n}\n\nexport function isUnique (attrName, attrValue, sourceXML) {\n  // If no sourceXML provided, assume it's unique\n  if (!sourceXML) {\n    return true;\n  }\n  const doc = new DOMParser().parseFromString(sourceXML);\n  return xpath.select(`//*[@${attrName}=\"${attrValue.replace(/\"/g, '')}\"]`, doc).length < 2;\n}\n\n// Map of the optimal strategies.\nconst STRATEGY_MAPPINGS = [\n  ['name', 'accessibility id'],\n  ['content-desc', 'accessibility id'],\n  ['id', 'id'],\n  ['rntestid', 'id'],\n  ['resource-id', 'id'],\n  ['class', 'class name'],\n  ['type', 'class name'],\n];\n\nexport function getLocators (attributes, sourceXML) {\n  const res = {};\n  for (let [strategyAlias, strategy] of STRATEGY_MAPPINGS) {\n    const value = attributes[strategyAlias];\n    if (value && isUnique(strategyAlias, value, sourceXML)) {\n      res[strategy] = attributes[strategyAlias];\n    }\n  }\n  return res;\n}\n\nexport const POINTER_TYPES = {\n  POINTER_UP: 'pointerUp',\n  POINTER_DOWN: 'pointerDown',\n  PAUSE: 'pause',\n  POINTER_MOVE: 'pointerMove'\n};\n\nexport const DEFAULT_SWIPE = {\n  POINTER_NAME: 'finger1',\n  DURATION_1: 0,\n  DURATION_2: 750,\n  BUTTON: 0,\n  ORIGIN: 'viewport'\n};\n\nexport const DEFAULT_ZOOM = {\n  POINTER_NAME1: 'finger1',\n  POINTER_NAME2: 'finger2',\n  DURATION_1: 0,\n  DURATION_2: 750,\n  BUTTON: 0,\n  ORIGIN: 'viewport'\n};\n\n\nexport const DEFAULT_TAP = {\n  POINTER_NAME: 'finger1',\n  DURATION_1: 0,\n  DURATION_2: 100,\n  BUTTON: 0\n};\n\nexport const DEFAULT_LONGPRESS = {\n  LONGPRESS_POINTER_NAME: 'finger1',\n  LONGPRESS_DURATION_1: 0,\n  LONGPRESS_DURATION_2: 1000,\n  LONGPRESS_BUTTON: 0\n};\n\nexport const DEFAULT_DRAG_AND_DROP = {\n  POINTER_NAME: 'finger1',\n  DURATION_1: 0,\n  DURATION_2: 750,\n  BUTTON: 0,\n  ORIGIN: 'viewport'\n};\n\n\n// 3 Types of Centroids:\n// CENTROID is the circle/square displayed on the screen\n// EXPAND is the +/- circle displayed on the screen\n// OVERLAP is the same as CENTROID but is only visible when clicked on +/- circle\nexport const RENDER_CENTROID_AS = {\n  CENTROID: 'centroid',\n  EXPAND: 'expand',\n  OVERLAP: 'overlap'\n};\n\nexport const SCREENSHOT_INTERACTION_MODE = {\n  SELECT: 'select',\n  SWIPE: 'swipe',\n  TAP: 'tap',\n  LONGPRESS: 'longpress',\n  DRAG_AND_DROP: 'drag_and_drop',\n  DOUBLE_TAP: 'double tap',\n  GESTURE: 'gesture',\n  ZOOMIN: 'zoomin',\n  // ZOOMOUT: 'zoomout',\n  SLIDE: 'slide'\n};\n\nexport const APP_MODE = {\n  NATIVE: 'native',\n  WEB_HYBRID: 'web_hybrid',\n};\n\nexport const COMMAND_ARG_TYPES = {\n  STRING: 'string',\n  NUMBER: 'number',\n  BOOLEAN: 'boolean',\n};\n\nconst { STRING, NUMBER, BOOLEAN } = COMMAND_ARG_TYPES;\n\n// Note: When adding or removing COMMAND_DEFINITIONS, update `en/translation.json`\nexport const COMMAND_DEFINITIONS = {\n  'Device': {\n    'Execute Script': {\n      'Execute': {methodName: 'executeScript', args: [['executeScriptCommand', STRING], ['jsonArgument', STRING]]}\n    },\n    'Android Activity': {\n      'Start Activity': {methodName: 'startActivity', args: [\n        ['appPackage', STRING], ['appActivity', STRING], ['appWaitPackage', STRING],\n        ['intentAction', STRING], ['intentCategory', STRING], ['intentFlags', STRING],\n        ['optionalIntentArguments', STRING], ['dontStopAppOnReset', STRING],\n      ], refresh: true},\n      'Current Activity': {methodName: 'getCurrentActivity'},\n      'Current Package': {methodName: 'getCurrentPackage'},\n    },\n    'App': {\n      'Install App': {methodName: 'installApp', args: [['appPathOrUrl', STRING]]},\n      'Is App Installed': {methodName: 'isAppInstalled', args: [['appId', STRING]]},\n      'Background App': {methodName: 'background', args: [['timeout', NUMBER]], refresh: true},\n      'Activate App': {methodName: 'activateApp', args: [['appId', STRING]], refresh: true},\n      'Terminate App': {methodName: 'terminateApp', args: [['appId', STRING]], refresh: true},\n      'Remove App': {methodName: 'removeApp', args: [['appId', STRING]]},\n      'Get App Strings': {methodName: 'getStrings', args: [['language', STRING], ['stringFile', STRING]], refresh: true},\n    },\n    'Clipboard': {\n      'Get Clipboard': {methodName: 'getClipboard'},\n      'Set Clipboard': {methodName: 'setClipboard', args: [\n        ['clipboardText', STRING], ['contentType', STRING], ['contentLabel', STRING]\n      ]},\n    },\n    'File': {\n      'Push File': {methodName: 'pushFile', args: [['pathToInstallTo', STRING], ['fileContentString', STRING]]},\n      'Pull File': {methodName: 'pullFile', args: [['pathToPullFrom', STRING]]},\n      'Pull Folder': {methodName: 'pullFolder', args: [['folderToPullFrom', STRING]]},\n    },\n    'Interaction': {\n      'Shake': {methodName: 'shake'},\n      'Lock': {methodName: 'lock', args: [['seconds', NUMBER]], refresh: true},\n      'Unlock': {methodName: 'unlock', refresh: true},\n      'Is Device Locked': {methodName: 'isLocked'},\n      'Rotate Device': {methodName: 'rotateDevice', args: [\n        ['x', NUMBER], ['y', NUMBER], ['radius', NUMBER], ['rotatation', NUMBER], ['touchCount', NUMBER], ['duration', NUMBER]\n      ], refresh: true},\n    },\n    'Keys': {\n      'Press Key': {methodName: 'pressKeyCode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\n      'Long Press Key': {methodName: 'longPressKeyCode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\n      'Hide Keyboard': {methodName: 'hideKeyboard', refresh: true},\n      'Is Keyboard Shown': {methodName: 'isKeyboardShown'},\n    },\n    'Network': {\n      'Toggle Airplane Mode': {methodName: 'toggleAirplaneMode'},\n      'Toggle Data': {methodName: 'toggleData'},\n      'Toggle WiFi': {methodName: 'toggleWiFi'},\n      'Toggle Location Services': {methodName: 'toggleLocationServices'},\n      'Send SMS': {methodName: 'sendSMS', args: [['phoneNumber', STRING], ['text', STRING]]},\n      'GSM Call': {methodName: 'gsmCall', args: [['phoneNumber', STRING], ['action', STRING]]},\n      'GSM Signal': {methodName: 'gsmSignal', args: [['signalStrengh', NUMBER]]},\n      'GSM Voice': {methodName: 'gsmVoice', args: [['state', STRING]]},\n    },\n    'Performance Data': {\n      'Get Data': {methodName: 'getPerformanceData', args: [['packageName', STRING], ['dataType', STRING], ['dataReadTimeout', NUMBER]]},\n      'Get Data Types': {methodName: 'getPerformanceDataTypes'},\n    },\n    'iOS Simulator': {\n      'Perform Touch Id': {methodName: 'touchId', args: [['shouldMatch', BOOLEAN]], refresh: true},\n      'Toggle Touch Id Enrollment': {methodName: 'toggleEnrollTouchId', args: [['shouldEnroll', BOOLEAN]]},\n    },\n    'System': {\n      'Open Notifications': {methodName: 'openNotifications', refresh: true},\n      'Get System Time': {methodName: 'getDeviceTime'},\n      'Fingerprint (Android)': {methodName: 'fingerPrint', args: [['fingerPrintId', NUMBER]], refresh: true}\n    },\n  },\n  'Session': {\n    'Session Capabilities': {\n      'Get Session Capabilities': {methodName: 'getSession'}\n    },\n    'Timeouts': {\n      'Set Timeouts': {methodName: 'setTimeouts', args: [\n        ['implicitTimeout', NUMBER], ['pageLoadTimeout', NUMBER], ['scriptTimeout', NUMBER]\n      ]},\n    },\n    'Orientation': {\n      'Get Orientation': {methodName: 'getOrientation'},\n      'Set Orientation': {methodName: 'setOrientation', args: [['orientation', STRING]], refresh: true},\n    },\n    'Geolocation': {\n      'Get Geolocation': {methodName: 'getGeoLocation'},\n      'Set Geolocation': {methodName: 'setGeoLocation', args: [['latitude', NUMBER], ['longitude', NUMBER], ['altitude', NUMBER]]},\n    },\n    'Logs': {\n      'Get Log Types': {methodName: 'getLogTypes'},\n      'Get Logs': {methodName: 'getLogs', args: [['logType', STRING]]},\n    },\n    'Settings': {\n      'Update Settings': {methodName: 'updateSettings', args: [['settingsJson', STRING]]},\n      'Get Device Settings': {methodName: 'getSettings'},\n    },\n  },\n  'Web': {\n    'Navigation': {\n      'Go to URL': {methodName: 'navigateTo', args: [['url', STRING]], refresh: true},\n      'Get URL': {methodName: 'getUrl'},\n      'Back': {methodName: 'back', refresh: true},\n      'Forward': {methodName: 'forward', refresh: true},\n      'Refresh': {methodName: 'refresh', refresh: true}\n    }\n  },\n  'Context': {\n    'Context': {\n      'Get Current Context': {methodName: 'getContext'},\n      'Get Context List': {methodName: 'getContexts'},\n      'Set Context': {methodName: 'switchContext', args: [['name', STRING]], refresh: true}\n    },\n    'Window (W3C)': {\n      'Get Window Handle': {methodName: 'getWindowHandle'},\n      'Close Window': {methodName: 'closeWindow', refresh: true},\n      'Switch To Window': {methodName: 'switchToWindow', args: [['handle', STRING]], refresh: true},\n      'Get Window Handles': {methodName: 'getWindowHandles'},\n      'New Window': {methodName: 'createWindow', args: [['type', STRING]], refresh: true}\n    }\n  }\n};\n\nexport const INTERACTION_MODE = {\n  SOURCE: 'source',\n  COMMANDS: 'commands',\n  GESTURES: 'gestures',\n  SESSION_INFO: 'sessionInfo',\n};\n","import { DEFAULT_TAP, DEFAULT_SWIPE, DEFAULT_ZOOM, SCREENSHOT_INTERACTION_MODE } from '../../components/Inspector/shared';\n\nexport default class Framework {\n\n  constructor (host, port, path, https, caps) {\n    this.host = host || 'localhost';\n    this.port = port || 4723;\n    this.path = path || '/wd/hub';\n    this.caps = caps || {};\n    this.https = !!https;\n    this.scheme = https ? 'https' : 'http';\n    this.actions = [];\n    this.localVarCount = 0;\n    this.localVarCache = {};\n    this.lastAssignedVar = null;\n  }\n\n  getTapCoordinatesFromPointerActions (pointerActions) {\n    const pointerMoveAction = pointerActions[DEFAULT_TAP.POINTER_NAME][0];\n    return {x: pointerMoveAction.x, y: pointerMoveAction.y};\n  }\n\n  getSwipeCoordinatesFromPointerActions (pointerActions) {\n    let pointerMoveActionStart;\n    let pointerMoveActionEnd;\n    if (SCREENSHOT_INTERACTION_MODE.SWIPE) {\n      pointerMoveActionStart  = pointerActions[DEFAULT_SWIPE.POINTER_NAME][0];\n      pointerMoveActionEnd  = pointerActions[DEFAULT_SWIPE.POINTER_NAME][2];\n    }\n    if (SCREENSHOT_INTERACTION_MODE.ZOOMIN) {\n      pointerMoveActionStart  = pointerActions[DEFAULT_ZOOM.POINTER_NAME1][0];\n      pointerMoveActionEnd  = pointerActions[DEFAULT_ZOOM.POINTER_NAME2][2];\n    }\n\n    return {\n      x1: pointerMoveActionStart.x,\n      y1: pointerMoveActionStart.y,\n      x2: pointerMoveActionEnd.x,\n      y2: pointerMoveActionEnd.y\n    };\n  }\n\n  get serverUrl () {\n    return `${this.scheme}://${this.host}:${this.port}${this.path === '/' ? '' : this.path}`;\n  }\n\n  get name () {\n    throw new Error('Must implement name getter');\n  }\n\n  get language () {\n    throw new Error('Must implement language getter');\n  }\n\n  addAction (action, params) {\n    this.actions.push({action, params});\n  }\n\n  wrapWithBoilerplate () {\n    throw new Error('Must implement wrapWithBoilerplate');\n  }\n\n  indent (str, spaces) {\n    let lines = str.split('\\n');\n    let spaceStr = '';\n    for (let i = 0; i < spaces; i++) {\n      spaceStr += ' ';\n    }\n    return lines\n      .filter((l) => !!l.trim())\n      .map((l) => `${spaceStr}${l}`)\n      .join('\\n');\n  }\n\n  getCodeString (includeBoilerplate = false) {\n    let str = '';\n    for (let {action, params} of this.actions) {\n      const genCodeFn = `codeFor_${action}`;\n      if (!this[genCodeFn]) {\n        throw new Error(`Need to implement '${genCodeFn}()': ${this[genCodeFn]}`);\n      }\n      let code = this[genCodeFn](...params);\n      if (code) {\n        str += `${code}\\n`;\n      }\n    }\n    if (includeBoilerplate) {\n      return this.wrapWithBoilerplate(str);\n    }\n    return str;\n  }\n\n  getNewLocalVar () {\n    this.localVarCount++;\n    return `el${this.localVarCount}`;\n  }\n\n  getVarForFind (strategy, locator) {\n    const key = `${strategy}-${locator}`;\n    let wasNew = false;\n    if (!this.localVarCache[key]) {\n      this.localVarCache[key] = this.getNewLocalVar();\n      wasNew = true;\n    }\n    this.lastAssignedVar = this.localVarCache[key];\n    return [this.localVarCache[key], wasNew];\n  }\n\n  getVarName (varName, varIndex) {\n    if (varIndex || varIndex === 0) {\n      return `${varName}[${varIndex}]`;\n    }\n    return varName;\n  }\n\n  codeFor_findAndAssign () {\n    throw new Error('Need to implement codeFor_findAndAssign');\n  }\n\n  codeFor_findElement (strategy, locator) {\n    let [localVar, wasNew] = this.getVarForFind(strategy, locator);\n    if (!wasNew) {\n      // if we've already found this element, don't print out\n      // finding it again\n      return '';\n    }\n\n    return this.codeFor_findAndAssign(strategy, locator, localVar);\n\n  }\n\n  codeFor_tap () {\n    throw new Error('Need to implement codeFor_tap');\n  }\n\n  codeFor_swipe () {\n    throw new Error('Need to implement codeFor_tap');\n  }\n}\n","import Framework from './framework';\n\nclass JsWdFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  wrapWithBoilerplate (code) {\n    let caps = JSON.stringify(this.caps);\n    return `// Requires the admc/wd client library\n// (npm install wd)\n// Then paste this into a .js file and run with Node 7.6+\n\nconst wd = require('wd');\nconst driver = wd.promiseChainRemote(\"${this.serverUrl}\");\nconst caps = ${caps};\n\nasync function main () {\n  await driver.init(caps);\n  await driver.setImplicitWaitTimeout(5000);\n${this.indent(code, 2)}\n  await driver.quit();\n}\n\nmain().catch(console.log);\n`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `/* TODO implement executeScript */`;\n  }\n\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'XPath',\n      'accessibility id': 'AccessibilityId',\n      'id': 'Id',\n      'name': 'Name',\n      'class name': 'ClassName',\n      '-android uiautomator': 'AndroidUIAutomator',\n      '-android datamatcher': 'AndroidDataMatcher',\n      '-android viewtag': 'unsupported',\n      '-ios predicate string': 'IosUIAutomation',\n      '-ios class chain': 'IosClassChain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `let ${localVar} = await driver.elementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = await driver.elementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.clear();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `await ${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `await driver.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `await (new wd.TouchAction(driver))\n  .tap({x: ${x}, y: ${y}})\n  .perform()\n    `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `await (new wd.TouchAction(driver))\n  .press({x: ${x1}, y: ${y1}})\n  .moveTo({x: ${x2}, y: ${y2}})\n  .release()\n  .perform()\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = await driver.getCurrentActivity()`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = await driver.getCurrentPackage()`;\n  }\n\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = await driver.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `await driver.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `await driver.background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `await driver.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `await driver.reset();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.removeApp('${app}');`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = await driver.getStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `let clipboardText = await driver.getClipboard();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `await driver.setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `await driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `await driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `await driver.pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let fileBase64 = await driver.pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let fileBase64 = await driver.pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `await driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `await driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `await driver.toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `await driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `await driver.sendSms('${phoneNumber}', '${text}');`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `await driver.gsmCall('${phoneNumber}', '${action}');`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `await driver.gsmSignal(${signalStrength});`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `await driver.gsmVoice('${state}');`;\n  }\n\n  codeFor_shake () {\n    return `await driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `await driver.lock(${seconds})`;\n  }\n\n  codeFor_unlock () {\n    return `await driver.unlock()`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = await driver.isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `driver.rotateDevice({x: ${x}, y: ${y}, duration: ${duration}, radius: ${radius}, rotation: ${rotation}, touchCount: ${touchCount}});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = await driver.getPerformanceData('${packageName}', '${dataType}', ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `let supportedPerformanceDataTypes = await driver.getPerformanceDataTypes();`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `await driver.touchId(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `await driver.toggleEnrollTouchId(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `await driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = await driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `await driver.fingerprint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `let caps = await driver.getSession();`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = await driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `await driver.setOrientation('${orientation}');`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = await driver.getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `await driver.setGeoLocation(${latitude}, ${longitude}, ${altitude});`;\n  }\n\n  codeFor_getLogTypes () {\n    return `let getLogTypes = await driver.getLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = await driver.log('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `await driver.updateSettings(${settingsJson});`;\n  }\n\n  codeFor_getSettings () {\n    return `let settings = await driver.settings();`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (url) {\n    return `driver.get('${url}');`;\n  }\n\n  codeFor_getUrl () {\n    return `let current_url = driver.url();`;\n  }\n\n  codeFor_forward () {\n    return `driver.forward();`;\n  }\n\n  codeFor_refresh () {\n    return `driver.refresh();`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.currentContext();`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.contexts();`;\n  }\n\n  codeFor_switchContext (name) {\n    return `driver.context('${name}');`;\n  }\n}\n\nJsWdFramework.readableName = 'JS - WD (Promise)';\n\nexport default JsWdFramework;\n","import Framework from './framework';\n\nclass JsWdIoFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  chainifyCode (code) {\n    return code\n      .replace(/let .+ = /g, '')\n      .replace(/(\\n|^)(driver|el[0-9]+)\\./g, '\\n.')\n      .replace(/;\\n/g, '\\n');\n  }\n\n  wrapWithBoilerplate (code) {\n    let host = JSON.stringify(this.host);\n    let caps = JSON.stringify(this.caps);\n    let proto = JSON.stringify(this.scheme);\n    let path = JSON.stringify(this.path);\n    return `// Requires the webdriverio client library\n// (npm install webdriverio)\n// Then paste this into a .js file and run with Node:\n// node <file>.js\n\nconst wdio = require('webdriverio');\nasync function main () {\n  const caps = ${caps}\n  const driver = await wdio.remote({\n    protocol: ${proto},\n    hostname: ${host},\n    port: ${this.port},\n    path: ${path},\n    capabilities: caps\n  });\n${this.indent(code, 2)}\n  await driver.deleteSession();\n}\n\nmain().catch(console.log);`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `/* TODO implement executeScript */`;\n  }\n\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    // wdio has its own way of indicating the strategy in the locator string\n    switch (strategy) {\n      case 'xpath': break; // xpath does not need to be updated\n      case 'accessibility id': locator = `~${locator}`; break;\n      case 'id': locator = `${locator}`; break;\n      case 'name': locator = `name=${locator}`; break;\n      case 'class name': locator = `${locator}`; break;\n      case '-android uiautomator': locator = `android=${locator}`; break;\n      case '-android datamatcher': locator = `android=${locator}`; break;\n      case '-android viewtag': locator = `android=unsupported`; break;\n      case '-ios predicate string': locator = `ios=${locator}`; break;\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\n      default: throw new Error(`Can't handle strategy ${strategy}`);\n    }\n    if (isArray) {\n      return `let ${localVar} = await driver.$$(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = await driver.$(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.clearValue();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `await ${this.getVarName(varName, varIndex)}.setValue(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `await driver.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `await driver.touchAction({actions: 'tap', x: ${x}, y: ${y}})`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `await driver.touchAction([\n  {action: 'press', x: ${x1}, y: ${y1}},\n  {action: 'moveTo', x: ${x2}, y: ${y2}},\n  'release'\n]);`;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = await driver.getCurrentActivity();`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = await driver.getCurrentPackage();`;\n  }\n\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = await driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `await driver.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `await driver.background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `await driver.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `await driver.reset();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.removeApp('${app}')`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = await driver.getStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard (varNameIgnore, varIndexIgnore, contentType) {\n    return `let clipboardText = await driver.getClipboard(${contentType ? `${contentType}, ` : ''});`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `await driver.setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `await driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `let isKeyboardShown = await driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `await driver.pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let data = await driver.pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let data = await driver.pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `await driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `await driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `await driver.toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `await driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `await driver.sendSms(\"${phoneNumber}\", \"${text}\");`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `await driver.gsmCall(\"${phoneNumber}\", \"${action}\");`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `await driver.gsmSignal(\"${signalStrength}\");`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `await driver.gsmVoice(\"${state}\");`;\n  }\n\n  codeFor_shake () {\n    return `await driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `await driver.lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `await driver.unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = await driver.isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `await driver.rotateDevice(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = driver.getPerformanceData(\"${packageName}\", \"${dataType}\", ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `let performanceDataTypes = await driver.getPerformanceDataTypes()`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `await driver.touchId(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `await driver.toggleEnrollTouchId(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `await driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = await driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `await driver.fingerprint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `let caps = await driver.getSession();`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_setCommandTimeout (/*varNameIgnore, varIndexIgnore, ms*/) {\n    return `// Not supported: setCommandTimeout`;\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = await driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `await driver.setOrientation(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = await driver.getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `await driver.setGeoLocation({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\n  }\n\n  codeFor_getLogTypes () {\n    return `let getLogTypes = await driver.getLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = await driver.getLogs('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `await driver.updateSettings(${settingsJson});`;\n  }\n\n  codeFor_getSettings () {\n    return `let settings = await driver.getSettings();`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `await driver.navigateTo('${url}');`;\n  }\n\n  codeFor_getUrl () {\n    return `let current_url = await driver.getUrl();`;\n  }\n\n  codeFor_forward () {\n    return `await driver.forward();`;\n  }\n\n  codeFor_refresh () {\n    return `await driver.refresh();`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `let context = await driver.getContext();`;\n  }\n\n  codeFor_getContexts () {\n    return `let contexts = await driver.getContexts();`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `await driver.switchContext('${name}');`;\n  }\n}\n\nJsWdIoFramework.readableName = 'JS - Webdriver.io';\n\nexport default JsWdIoFramework;\n","import Framework from './framework';\n\nclass JsOxygenFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  get type () {\n    if (this.caps && this.caps.platformName) {\n      const platformName = this.caps.platformName.toLowerCase();\n      if (platformName === 'windows') {\n        return 'win';\n      }\n      if (['android', 'androiddriver'].includes(platformName)) {\n        return 'mob';\n      }\n      if (['ios', 'iosdriver'].includes(platformName)) {\n        return 'mob';\n      }\n    }\n    return 'mob';\n  }\n\n  wrapWithBoilerplate (code) {\n    if (code && code.includes('mob.open')) {\n      this.caps.browserName = '__chrome_or_safari__';\n    } else {\n      this.caps.app = '__application_path_or_name__';\n    }\n    let caps = JSON.stringify(this.caps, null, 2);\n    let url = JSON.stringify(`${this.scheme}://${this.host}:${this.port}${this.path}`);\n    return `// Requires the Oxygen HQ client library\n// (npm install oxygen-cli -g)\n// Then paste this into a .js file and run with:\n// oxygen <file>.js\nconst capabilities = ${caps};\nconst appiumUrl = ${url};\n${this.type}.init(capabilities, appiumUrl);\n\n${code}\n\n`;\n  }\n\n  codeFor_executeScript (varNameIgnore, varIndexIgnore, args) {\n    return `${this.type}.execute(${args})`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    // wdio has its own way of indicating the strategy in the locator string\n    switch (strategy) {\n      case 'xpath': break; // xpath does not need to be updated\n      case 'accessibility id': locator = `~${locator}`; break;\n      case 'id': locator = `id=${locator}`; break;\n      case 'name': locator = `name=${locator}`; break;\n      case 'class name': locator = `css=${locator}`; break;\n      case '-android uiautomator': locator = `android=${locator}`; break;\n      case '-android datamatcher': locator = `android=${locator}`; break;\n      case '-ios predicate string': locator = `ios=${locator}`; break;\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\n      default: throw new Error(`Can't handle strategy ${strategy}`);\n    }\n    if (isArray) {\n      return `let ${localVar} = mob.findElements(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = mob.findElement(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.type}.click(${this.getVarName(varName, varIndex)});`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.type}.clear(${this.getVarName(varName, varIndex)});`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.type}.type(${this.getVarName(varName, varIndex)}, ${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `${this.type}.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `${this.type}.tap(${x}, ${y});`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `${this.type}.swipeScreen(${x1}, ${y1}, ${x2}, ${y2});`;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = ${this.type}.getCurrentActivity();`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = ${this.type}.getCurrentPackage();`;\n  }\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `${this.type}.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = ${this.type}.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `${this.type}.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `${this.type}.getDriver().background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `${this.type}.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `${this.type}.resetApp();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `${this.type}.removeApp('${app}')`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = ${this.type}.getDriver().getStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `let clipboardText = ${this.type}.getDriver().getClipboard();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `${this.type}.getDriver().setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode) {\n    return `${this.type}.pressKeyCode(${keyCode});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode) {\n    return `${this.type}.longPressKeyCode(${keyCode});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `${this.type}.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `let isKeyboardShown = ${this.type}.getDriver().isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `${this.type}.getDriver().pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let fileBase64 = ${this.type}.getDriver().pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let fileBase64 = ${this.type}.getDriver().pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `${this.type}.getDriver().toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `${this.type}.getDriver().toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `${this.type}.getDriver().toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `${this.type}.getDriver().toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `${this.type}.getDriver().sendSms('${phoneNumber}', '${text}');`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `${this.type}.getDriver().gsmCall('${phoneNumber}', '${action}');`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `${this.type}.getDriver().gsmSignal(${signalStrength});`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `${this.type}.getDriver().gsmVoice('${state}');`;\n  }\n\n  codeFor_shake () {\n    return `${this.type}.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `${this.type}.getDriver().lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `${this.type}.getDriver().unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = ${this.type}.getDriver().isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `${this.type}.getDriver().rotateDevice({x: ${x}, y: ${y}, duration: ${duration}, radius: ${radius}, rotation: ${rotation}, touchCount: ${touchCount}});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = ${this.type}.getDriver().getPerformanceData('${packageName}', '${dataType}', ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `let supportedPerformanceDataTypes = ${this.type}.getDriver().getPerformanceDataTypes();`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `${this.type}.getDriver().touchId(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `${this.type}.getDriver().toggleEnrollTouchId(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `${this.type}.getDriver().openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = ${this.type}.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `${this.type}.getDriver().fingerPrint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `let caps = ${this.type}.getDriver().capabilities;`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_setCommandTimeout () {\n    return `// Not supported: setCommandTimeout`;\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = ${this.type}.getDriver().getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `${this.type}.getDriver().setOrientation(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = ${this.type}.getDriver().getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `${this.type}.getDriver().setGeoLocation({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\n  }\n\n  codeFor_getLogTypes () {\n    return `let getLogTypes = ${this.type}.getDriver().getLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = ${this.type}.getDriver().getLogs('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `${this.type}.getDriver().updateSettings(${settingsJson});`;\n  }\n\n  codeFor_getSettings () {\n    return `let settings = ${this.type}.getDriver().getSettings();`;\n  }\n}\n\nJsOxygenFramework.readableName = 'JS - Oxygen HQ';\n\nexport default JsOxygenFramework;\n","import Framework from './framework';\nimport _ from 'lodash';\n\nclass JavaFramework extends Framework {\n\n  get language () {\n    return 'java';\n  }\n\n  wrapWithBoilerplate (code) {\n    let [pkg, cls] = (() => {\n      if (this.caps.platformName) {\n        switch (this.caps.platformName.toLowerCase()) {\n          case 'ios': return ['ios', 'IOSDriver'];\n          case 'android': return ['android', 'AndroidDriver'];\n          default: return ['unknownPlatform', 'UnknownDriver'];\n        }\n      } else {\n        return ['unknownPlatform', 'UnknownDriver'];\n      }\n    })();\n    let capStr = this.indent(Object.keys(this.caps).map((k) => `desiredCapabilities.setCapability(${JSON.stringify(k)}, ${JSON.stringify(this.caps[k])});`).join('\\n'), 4);\n    return `import io.appium.java_client.MobileElement;\nimport io.appium.java_client.${pkg}.${cls};\nimport junit.framework.TestCase;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport org.openqa.selenium.remote.DesiredCapabilities;\n\npublic class SampleTest {\n\n  private ${cls} driver;\n\n  @Before\n  public void setUp() throws MalformedURLException {\n    DesiredCapabilities desiredCapabilities = new DesiredCapabilities();\n${capStr}\n\n    URL remoteUrl = new URL(\"${this.serverUrl}\");\n\n    driver = new ${cls}(remoteUrl, desiredCapabilities);\n  }\n\n  @Test\n  public void sampleTest() {\n${this.indent(code, 4)}\n  }\n\n  @After\n  public void tearDown() {\n    driver.quit();\n  }\n}\n`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `/* TODO implement executeScript */`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'XPath',\n      'accessibility id': 'AccessibilityId',\n      'id': 'Id',\n      'class name': 'ClassName',\n      'name': 'Name',\n      '-android uiautomator': 'AndroidUIAutomator',\n      '-android datamatcher': 'AndroidDataMatcher',\n      '-android viewtag': 'AndroidViewTag',\n      '-ios predicate string': 'IosNsPredicate',\n      '-ios class chain': 'IosClassChain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `List<MobileElement> ${localVar} = (MobileElement) driver.findElementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    } else {\n      return `MobileElement ${localVar} = (MobileElement) driver.findElementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    }\n  }\n\n  getVarName (varName, varIndex) {\n    if (varIndex || varIndex === 0) {\n      return `${varName}.get(${varIndex})`;\n    }\n    return varName;\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `driver.navigate().back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `(new TouchAction(driver)).tap(${x}, ${y}).perform()`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `(new TouchAction(driver))\n  .press(PointOption.point(${x1}, ${y1}}))\n  .moveTo(PointOption.point(${x2}, ${y2}}))\n  .release()\n  .perform();\n  `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `String activityName = driver.currentActivity()`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `String packageName = driver.currentPackage()`;\n  }\n\n  codeFor_startActivity () {\n    return `driver.`;\n  }\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.installApp(\"${app}\");`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `boolean isAppInstalled = driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.runAppInBackground(Duration.ofSeconds(${timeout}));`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `driver.reset();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.removeApp(\"${app}\");`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `Map<String, String> appStrings = driver.getAppStringMap(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `String clipboardText = driver.getClipboardText();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.setClipboardText(\"${clipboardText}\");`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.pressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `boolean isKeyboardShown = driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.pushFile(\"${pathToInstallTo}\", ${fileContentString})`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `byte[] fileBase64 = driver.pullFile(\"${pathToPullFrom}\");`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `byte[] fileBase64 = driver.pullFolder(\"${folderToPullFrom}\");`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggleWifi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `driver.sendSMS(\"${phoneNumber}\", \"${text}\");`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.makeGsmCall(\"${phoneNumber}\", \"${action}\");`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.setGsmSignalStrength(\"${signalStrength}\");`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.setGsmVoice(\"${state}\");`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lockDevice(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlockDevice()`;\n  }\n\n  codeFor_isLocked () {\n    return `boolean isLocked = driver.isDeviceLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `driver.rotate(new DeviceRotation(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration}));`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `List<List<Object>> performanceData = driver.getPerformanceData(\"${packageName}\", \"${dataType}\", ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `List<String> performanceTypes = driver.getPerformanceDataTypes();`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.performTouchID(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggleTouchIDEnrollment(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `String time = driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.fingerPrint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `Map<String, Object> caps = driver.getSessionDetails();`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_getOrientation () {\n    return `ScreenOrientation orientation = driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.rotate(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `Location location = driver.location();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.setLocation(new Location(${latitude}, ${longitude}, ${altitude}));`;\n  }\n\n  codeFor_getLogTypes () {\n    return `Set<String> getLogTypes = driver.manage().logs().getAvailableLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `LogEntries logEntries = driver.manage().logs().get(\"${logType}\");`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    try {\n      let settings = '';\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\n        settings += `driver.setSetting(\"${settingName}\", \"${settingValue}\");\\n`;\n      }\n      return settings;\n    } catch (e) {\n      return `// Could not parse: ${settingsJson}`;\n    }\n  }\n\n  codeFor_getSettings () {\n    return `Map<String, Object> settings = driver.getSettings();`;\n  }\n\n  /*\n\n  codeFor_ REPLACE_ME (varNameIgnore, varIndexIgnore) {\n    return `REPLACE_ME`;\n  }\n\n  */\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `driver.get(\"${url}\");`;\n  }\n\n  codeFor_getUrl () {\n    return `String current_url = driver.getCurrentUrl();`;\n  }\n\n  codeFor_forward () {\n    return `driver.navigate().forward();`;\n  }\n\n  codeFor_refresh () {\n    return `driver.navigate().refresh();`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.getContext()`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.getContextHandles();`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `driver.context(\"${name}\");`;\n  }\n}\n\nJavaFramework.readableName = 'Java - JUnit';\n\nexport default JavaFramework;\n","import Framework from './framework';\n\nclass PythonFramework extends Framework {\n\n  get language () {\n    return 'python';\n  }\n\n  getPythonVal (jsonVal) {\n    if (typeof jsonVal === 'boolean') {\n      return jsonVal ? 'True' : 'False';\n    }\n    return JSON.stringify(jsonVal);\n  }\n\n  wrapWithBoilerplate (code) {\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${this.getPythonVal(this.caps[k])}`).join('\\n');\n    return `# This sample code uses the Appium python client v2\n# pip install Appium-Python-Client\n# Then you can paste this into a file and simply run with Python\n\nfrom appium import webdriver\nfrom appium.webdriver.common.appiumby import AppiumBy\n\n# For W3C actions\nfrom selenium.webdriver.common.action_chains import ActionChains\nfrom selenium.webdriver.common.actions import interaction\nfrom selenium.webdriver.common.actions.action_builder import ActionBuilder\nfrom selenium.webdriver.common.actions.pointer_input import PointerInput\n\ncaps = {}\n${capStr}\n\ndriver = webdriver.Remote(\"${this.serverUrl}\", caps)\n\n${code}\ndriver.quit()`;\n  }\n\n  codeFor_executeScript (varNameIgnore, varIndexIgnore, args) {\n    return `driver.execute_script('${args}')`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'AppiumBy.XPATH',\n      'accessibility id': 'AppiumBy.ACCESSIBILITY_ID',\n      'id': 'AppiumBy.ID',\n      'name': 'AppiumBy.NAME',\n      'class name': 'AppiumBy.CLASS_NAME',\n      '-android uiautomator': 'AppiumBy.ANDROID_UIAUTOMATOR',\n      '-android datamatcher': 'AppiumBy.ANDROID_DATA_MATCHER',\n      '-android viewtag': 'AppiumBy.ANDROID_VIEWTAG',\n      '-ios predicate string': 'AppiumBy.IOS_PREDICATE',\n      '-ios class chain': 'AppiumBy.IOS_CLASS_CHAIN',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `${localVar} = driver.find_elements(by=${suffixMap[strategy]}, value=${JSON.stringify(locator)})`;\n    } else {\n      return `${localVar} = driver.find_element(by=${suffixMap[strategy]}, value=${JSON.stringify(locator)})`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click()`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear()`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.send_keys(${JSON.stringify(text)})`;\n  }\n\n  codeFor_back () {\n    return `driver.back()`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `actions = ActionChains(driver)\nactions.w3c_actions = ActionBuilder(driver, mouse=PointerInput(interaction.POINTER_TOUCH, \"touch\"))\nactions.w3c_actions.pointer_action.move_to_location(${x}, ${y})\nactions.w3c_actions.pointer_action.pointer_down()\nactions.w3c_actions.pointer_action.pause(0.1)\nactions.w3c_actions.pointer_action.release()\nactions.perform()\n    `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `actions = ActionChains(driver)\nactions.w3c_actions = ActionBuilder(driver, mouse=PointerInput(interaction.POINTER_TOUCH, \"touch\"))\nactions.w3c_actions.pointer_action.move_to_location(${x1}, ${y1})\nactions.w3c_actions.pointer_action.pointer_down()\nactions.w3c_actions.pointer_action.move_to_location(${x2}, ${y2})\nactions.w3c_actions.pointer_action.release()\nactions.perform()\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `activity_name = driver.current_activity`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `package_name = driver.current_package`;\n  }\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.install_app('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `is_app_installed = driver.is_app_installed('${app}');`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launch_app()`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.background_app(${timeout})`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.close_app()`;\n  }\n\n  codeFor_reset () {\n    return `driver.reset()`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.remove_app('${app}');`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `appStrings = driver.app_strings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''})`;\n  }\n\n  codeFor_getClipboard () {\n    return `clipboard_text = driver.get_clipboard_text()`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.set_clipboard_text('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.press_keycode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.long_press_keycode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `driver.hide_keyboard()`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `driver.is_keyboard_shown()`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.push_file('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `file_base64 = self.driver.pull_file('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `file_base64 = self.driver.pull_folder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `# Not supported: toggleAirplaneMode`;\n  }\n\n  codeFor_toggleData () {\n    return `# Not supported: toggleData`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggle_wifi()`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggle_location_services();`;\n  }\n\n  codeFor_sendSMS () {\n    return `# Not supported: sendSMS`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.make_gsm_call(${phoneNumber}, ${action})`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.set_gsm_signal(${signalStrength})`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.set_gsm_voice(${state})`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `driver.is_locked()`;\n  }\n\n  codeFor_rotateDevice () {\n    return `# Not supported: rotate device`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `driver.get_performance_data('${packageName}', '${dataType}', ${dataReadTimeout})`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `driver.get_performance_data_types()`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.touch_id(${match})`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggle_touch_id_enrollment(${enroll})`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.open_notifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `time = self.driver.device_time()`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.finger_print(${fingerprintId})`;\n  }\n\n  codeFor_getSession () {\n    return `desired_caps = self.driver.desired_capabilities()`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '# TODO implement setTimeouts';\n  }\n\n  codeFor_getOrientation () {\n    return `orientation = self.driver.orientation()`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.orientation = \"${orientation}\"`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `location = self.driver.location()`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.set_location(${latitude}, ${longitude}, ${altitude})`;\n  }\n\n  codeFor_getLogTypes () {\n    return `log_types = driver.log_types();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `logs = driver.get_log('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `driver.update_settings(${settingsJson}))`;\n  }\n\n  codeFor_getSettings () {\n    return `settings = driver.get_settings`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `driver.get('${url}')`;\n  }\n\n  codeFor_getUrl () {\n    return `current_url = driver.current_url`;\n  }\n\n  codeFor_forward () {\n    return `driver.forward()`;\n  }\n\n  codeFor_refresh () {\n    return `driver.refresh()`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.current_context`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.contexts()`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `driver.switch_to.context('${name}')`;\n  }\n}\n\nPythonFramework.readableName = 'Python';\n\nexport default PythonFramework;\n","import Framework from './framework';\nimport _ from 'lodash';\n\nclass RubyFramework extends Framework {\n\n  get language () {\n    return 'ruby';\n  }\n\n  wrapWithBoilerplate (code) {\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${JSON.stringify(this.caps[k])}`).join('\\n');\n    return `# This sample code uses the Appium ruby lib core client v5\n# gem install appium_lib_core\n# Then you can paste this into a file and simply run with Ruby\n\nrequire 'appium_lib_core'\n\ncaps = {}\n${capStr}\nopts = {\n    server_url: \"${this.serverUrl}\"\n}\ndriver = Appium::Core.for({caps: caps, appium_lib: opts}).start_driver\n\n${code}\ndriver.quit`;\n  }\n\n  codeFor_executeScript (varNameIgnore, varIndexIgnore, args) {\n    return `driver.execute_script '${args}'`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      'xpath': ':xpath',\n      'accessibility id': ':accessibility_id',\n      'id': ':id',\n      'name': ':name',\n      'class name': ':class_name',\n      '-android uiautomator': ':uiautomation',\n      '-android datamatcher': ':datamatcher',\n      '-android viewtag': ':viewtag',\n      '-ios predicate string': ':predicate',\n      '-ios class chain': ':class_chain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `${localVar} = driver.find_elements ${suffixMap[strategy]}, ${JSON.stringify(locator)}`;\n    } else {\n      return `${localVar} = driver.find_element ${suffixMap[strategy]}, ${JSON.stringify(locator)}`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.send_keys ${JSON.stringify(text)}`;\n  }\n\n  codeFor_back () {\n    return `driver.back`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `driver\n  .action\n  .move_to_location(${x}, ${y})\n  .pointer_down(:left)\n  .release\n  .perform\n  `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `driver\n  .action\n  .move_to_location(${x1}, ${y1})\n  .pointer_down(:left)\n  .move_to_location(${x2}, ${y2})\n  .release\n  .perform\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `current_activity = driver.current_activity`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `current_package = driver.current_package`;\n  }\n\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.app_installed? '${app}'`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `is_app_installed = driver.app_installed? '${app}'`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launch_app`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.background_app ${timeout}`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.close_app`;\n  }\n\n  codeFor_reset () {\n    return `driver.reset`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.remove_app '${app}'`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `driver.app_strings ${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''}`;\n  }\n\n  codeFor_getClipboard () {\n    return `clipboard_text = driver.get_clipboard`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.set_clipboard content: '${clipboardText}'`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.press_keycode ${keyCode}, ${metaState}, ${flags}`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.long_press_keycode ${keyCode}, ${metaState}, ${flags}`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `driver.hide_keyboard`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `is_keyboard_shown = driver.is_keyboard_shown`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.push_file '${pathToInstallTo}', '${fileContentString}'`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `driver.pull_file '${pathToPullFrom}'`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `driver.pull_folder '${folderToPullFrom}'`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `driver.toggle_flight_mode`;\n  }\n\n  codeFor_toggleData () {\n    return `driver.toggle_data`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggle_wifi`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggle_location_services`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `driver.send_sms phone_number: '${phoneNumber}', message: '${text}'`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.gsm_call phone_number: '${phoneNumber}', action: :${action}`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.gsm_signal :${signalStrength}`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.gsm_voice :${state}`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lock ${seconds}`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlock`;\n  }\n\n  codeFor_isLocked () {\n    return `is_device_locked = driver.device_locked?`;\n  }\n\n  codeFor_rotateDevice () {\n    return `# Not supported: rotateDevice`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `performance_data = driver.get_performance_data package_name: '${packageName}', data_type: '${dataType}', data_read_timeout: ${dataReadTimeout}`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `performance_data = driver.get_performance_data_types`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.touch_id ${match}`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggle_touch_id_enrollment ${enroll}`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.open_notifications`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `device_time = driver.device_time`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.finger_print ${fingerprintId}`;\n  }\n\n  codeFor_getSession () {\n    return `session_capabilities = driver.session_capabilities`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '# TODO implement setTimeouts';\n  }\n\n  codeFor_getOrientation () {\n    return `orientation = driver.orientation`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.rotation = :${_.lowerCase(orientation)}`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `geo_location = driver.location`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.set_location ${latitude}, ${longitude}, ${altitude}`;\n  }\n\n  codeFor_getLogTypes () {\n    return `log_types = driver.logs.available_types`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `driver.logs.get '${logType}'`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    try {\n      let settings = '';\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\n        settings += `driver.settings.update ${settingName}: '${settingValue}'\\n`;\n      }\n      return settings;\n    } catch (e) {\n      return `// Could not parse: ${settingsJson}`;\n    }\n  }\n\n  codeFor_getSettings () {\n    return `settings = driver.settings.get`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `driver.get '${url}'`;\n  }\n\n  codeFor_getUrl () {\n    return `current_url = driver.current_url`;\n  }\n\n  codeFor_forward () {\n    return `driver.navigate().forward`;\n  }\n\n  codeFor_refresh () {\n    return `driver.navigate().refresh`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.current_context`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.available_contexts`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `driver.context = '${name}'`;\n  }\n}\n\nRubyFramework.readableName = 'Ruby';\n\nexport default RubyFramework;\n","/* eslint no-useless-escape: 0 */\n\nimport Framework from './framework';\n\nclass RobotFramework extends Framework {\n\n  get language () {\n    //TODO: Make https://highlightjs.org/ use robot syntax\n    return 'python';\n  }\n\n  get getCapsVariables () {\n    return Object.keys(this.caps).map((k) => `\\$\\{${k}\\}    ${this.getPythonVal(this.caps[k])}`).join('\\n');\n  }\n\n  getPythonVal (jsonVal) {\n    if (typeof jsonVal === 'boolean') {\n      return jsonVal ? 'true' : 'false';\n    }\n    return jsonVal;\n  }\n\n  wrapWithBoilerplate (code) {\n    return `# This sample code uses the Appium robot client\n# pip install robotframework-appiumlibrary\n# Then you can paste this into a file and simply run with robot\n#\n#  more keywords on: http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html\n#\n# if your tests fails saying 'did not match any elements' consider use 'wait activity' or \n# 'wait until page contains element' before a click command \n\n*** Settings ***\nLibrary           AppiumLibrary\nTest Teardown     Quit Application\nSuite Teardown    Close Application\n\n*** Variables ***\n$\\{REMOTE_URL\\}   ${this.serverUrl}\n${this.getCapsVariables}\n\n*** Test Cases ***\nTest case name\n${this.indent(this.getApplicationInitialization(), 4)}\n${this.indent(code, 4)}\n`;\n  }\n\n  codeFor_findAndAssign (strategy, locator/*, localVar, isArray*/) {\n    let suffixMap = {\n      xpath: 'xpath',\n      'accessibility id': 'accessibility_id',\n      'id': 'id',\n      'name': 'name', // TODO: How does Python use name selector\n      'class name': 'class_name',\n      '-android uiautomator': 'unsupported',\n      '-android datamatcher': 'unsupported',\n      '-android viewtag': 'unsupported',\n      '-ios predicate string': 'ios_predicate',\n      '-ios class chain': 'ios_uiautomation', // TODO: Could not find iOS UIAutomation\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    //TODO: in the robot case, we need the ID on the codeFor_ for execution\n    this.lastID = `${strategy}=${locator}`;\n\n    if (this.lastID.includes('accessibility id')) {\n      this.lastID = this.lastID.replace('accessibility id', 'accessibility_id');\n    }\n\n    return `# ${this.lastID}`;\n  }\n\n  getApplicationInitialization () {\n    let varString = Object.keys(this.caps).map((k) => `${k}=\\$\\{${k}\\}`).join('  ');\n    return `    Open Application    \\$\\{REMOTE_URL\\}   ${varString}`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `    Execute Script    TODO implement executeScript`;\n  }\n\n\n  codeFor_click (/*varName, varIndex*/) {\n    return `    Click Element    ${this.lastID}`;\n  }\n\n  codeFor_clear (/*varName, varIndex*/) {\n    return `    Clear Text    ${this.lastID}`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `    Input Text    ${this.lastID}    ${text}`;\n  }\n\n  codeFor_back () {\n    return `    Go Back`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `    Tap With Positions    100    \\$\\{${x}, ${y}\\}`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `    Swipe    ${x1}    ${y1}    ${x2}    ${y2}`;\n  }\n\n  // TODO: Add these robot framework commands\n  codeFor_getCurrentActivity () {\n    return '';\n  }\n\n  codeFor_getCurrentPackage () {\n    return '';\n  }\n\n  codeFor_installApp () {\n    return ``;\n  }\n\n  codeFor_isAppInstalled () {\n    return ``;\n  }\n\n  codeFor_launchApp () {\n    return ``;\n  }\n\n  codeFor_background () {\n    return ``;\n  }\n\n  codeFor_closeApp () {\n    return ``;\n  }\n\n  codeFor_reset () {\n    return ``;\n  }\n\n  codeFor_removeApp () {\n    return ``;\n  }\n\n  codeFor_getStrings () {\n    return ``;\n  }\n\n  codeFor_getClipboard () {\n    return ``;\n  }\n\n  codeFor_setClipboard () {\n    return ``;\n  }\n\n  codeFor_pressKeyCode () {\n    return ``;\n  }\n\n  codeFor_longPressKeyCode () {\n    return ``;\n  }\n\n  codeFor_hideKeyboard () {\n    return ``;\n  }\n\n  codeFor_isKeyboardShown () {\n    return ``;\n  }\n\n  codeFor_pushFile () {\n    return ``;\n  }\n\n  codeFor_pullFile () {\n    return ``;\n  }\n\n  codeFor_pullFolder () {\n    return ``;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return ``;\n  }\n\n  codeFor_toggleData () {\n    return ``;\n  }\n\n  codeFor_toggleWiFi () {\n    return ``;\n  }\n\n  codeFor_toggleLocationServices () {\n    return ``;\n  }\n\n  codeFor_sendSMS () {\n    return ``;\n  }\n\n  codeFor_gsmCall () {\n    return ``;\n  }\n\n  codeFor_gsmSignal () {\n    return ``;\n  }\n\n  codeFor_gsmVoice () {\n    return ``;\n  }\n\n  codeFor_shake () {\n    return ``;\n  }\n\n  codeFor_lock () {\n    return ``;\n  }\n\n  codeFor_unlock () {\n    return ``;\n  }\n\n  codeFor_isLocked () {\n    return ``;\n  }\n\n  codeFor_rotateDevice () {\n    return ``;\n  }\n\n  codeFor_getPerformanceData () {\n    return ``;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return ``;\n  }\n\n  codeFor_touchId () {\n    return ``;\n  }\n\n  codeFor_toggleEnrollTouchId () {\n    return ``;\n  }\n\n  codeFor_openNotifications () {\n    return ``;\n  }\n\n  codeFor_getDeviceTime () {\n    return ``;\n  }\n\n  codeFor_fingerprint () {\n    return ``;\n  }\n\n  codeFor_getSession () {\n    return ``;\n  }\n\n  codeFor_setTimeouts () {\n    return ``;\n  }\n\n  codeFor_getOrientation () {\n    return ``;\n  }\n\n  codeFor_setOrientation () {\n    return ``;\n  }\n\n  codeFor_getGeoLocation () {\n    return ``;\n  }\n\n  codeFor_setGeoLocation () {\n    return ``;\n  }\n\n  codeFor_getLogTypes () {\n    return ``;\n  }\n\n  codeFor_getLogs () {\n    return ``;\n  }\n\n  codeFor_updateSettings () {\n    return ``;\n  }\n\n  codeFor_getSettings () {\n    return ``;\n  }\n\n  // Web\n\n  codeFor_navigateTo () {\n    return ``;\n  }\n\n  codeFor_getUrl () {\n    return ``;\n  }\n\n  codeFor_forward () {\n    return ``;\n  }\n\n  codeFor_refresh () {\n    return ``;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return ``;\n  }\n\n  codeFor_getContexts () {\n    return ``;\n  }\n\n  codeFor_switchContext () {\n    return ``;\n  }\n}\n\nRobotFramework.readableName = 'Robot Framework';\n\nexport default RobotFramework;\n","import JsWdFramework from './js-wd';\nimport JsWdIoFramework from './js-wdio';\nimport JsOxygenFramework from './js-oxygen';\nimport JavaFramework from './java';\nimport PythonFramework from './python';\nimport RubyFramework from './ruby';\nimport RobotFramework from './robot';\n\nconst frameworks = {\n  jsWd: JsWdFramework,\n  jsWdIo: JsWdIoFramework,\n  jsOxygen: JsOxygenFramework,\n  java: JavaFramework,\n  python: PythonFramework,\n  ruby: RubyFramework,\n  robot: RobotFramework,\n};\n\nexport default frameworks;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport { getI18NextOptions } from './app.config';\nimport { i18NextBackend, i18NextBackendOptions } from '../renderer/polyfills';\n\nconst i18nextOptions = getI18NextOptions(i18NextBackendOptions);\n\nif (!i18n.isInitialized) {\n  i18n\n    .use(initReactI18next)\n    .use(i18NextBackend)\n    .init(i18nextOptions);\n}\n\nexport default i18n;\n","import {load} from 'cheerio';\nimport {parseDocument} from 'htmlparser2';\n\n/**\n * JS code that is executed in the webview to determine the status+address bar height\n *\n * NOTE:\n * object destructuring the arguments resulted in this error with iOS (not with Android)\n *\n * `Duplicate parameter 'e' not allowed in function with destructuring parameters.`\n *\n * That's why the object destructuring is done in the method itself\n */\nexport function getWebviewStatusAddressBarHeight (obj) {\n  // Calculate the status + address bar height\n  // Address bar height for iOS 11+ is 50, for lower it is 44,\n  // but we take 50 as a default here\n  // For Chrome it is 56 for Android 6 to 10\n  const {platformName, statBarHeight} = obj;\n  const isAndroid = platformName.toLowerCase() === 'android';\n  // iOS uses CSS sizes for elements and screenshots, Android sizes times DRP\n  const dpr = isAndroid ? window.devicePixelRatio : 1;\n  const screenHeight = window.screen.height;\n  const viewportHeight = window.innerHeight;\n  // Need to determine this later for Chrome\n  const osAddressBarDefaultHeight = isAndroid ? 56 : 50;\n  const addressToolBarHeight = screenHeight - viewportHeight - statBarHeight;\n  // When a manual scroll has been executed for iOS and Android\n  // the address bar becomes smaller\n  const addressBarHeight = (addressToolBarHeight >= 0) && (addressToolBarHeight - osAddressBarDefaultHeight) < 0\n    ? addressToolBarHeight : osAddressBarDefaultHeight;\n\n  return statBarHeight + (addressBarHeight * dpr);\n}\n\n/**\n * JS code that is executed in the webview to set the needed attributes on the DOM so the source can be used for the\n * native inspector window.\n *\n * NOTE:\n * object destructuring the arguments resulted in this error with iOS (not with Android)\n *\n * `Duplicate parameter 'e' not allowed in function with destructuring parameters.`\n *\n * That's why the object destructuring is done in the method itself\n */\nexport function setHtmlElementAttributes (obj) {\n  const {platformName, webviewStatusAddressBarHeight} = obj;\n  const htmlElements = document.body.getElementsByTagName('*');\n  const isAndroid = platformName.toLowerCase() === 'android';\n  // iOS uses CSS sizes for elements and screenshots, Android sizes times DRP\n  const dpr = isAndroid ? window.devicePixelRatio : 1;\n\n  Array.from(htmlElements).forEach((el) => {\n    const rect = el.getBoundingClientRect();\n\n    el.setAttribute('data-appium-inspector-width', Math.round(rect.width * dpr));\n    el.setAttribute('data-appium-inspector-height', Math.round(rect.height * dpr));\n    el.setAttribute('data-appium-inspector-x', Math.round(rect.left * dpr));\n    el.setAttribute('data-appium-inspector-y', Math.round(webviewStatusAddressBarHeight + (rect.top * dpr)));\n  });\n}\n\n/**\n * Parse the source if it's HTML:\n * - head and scripts need to be removed to clean the HTML tree\n * - all custom attributes need to be transformed to normal width/height/x/y\n */\nexport function parseSource (source) {\n  // TODO this check is a bit brittle, figure out a better way to check whether we have a web\n  // source vs something else. Just checking for <html in the source doesn't work because fake\n  // driver app sources can include embedded <html elements even though the overall source is not\n  // html. So for now just look for fake-drivery things like <app> or <mock...> and ensure we don't\n  // parse that as html\n  if (!source.includes('<html') || source.includes('<app ') || source.includes('<mock')) {\n    return source;\n  }\n\n  const dom = parseDocument(source);\n  const $ = load(dom);\n\n  // Remove the head and the scripts\n  const head = $('head');\n  head.remove();\n  const scripts = $('script');\n  scripts.remove();\n\n  // Clean the source\n  $('*')\n    // remove all existing width height or x/y attributes\n    .removeAttr('width')\n    .removeAttr('height')\n    .removeAttr('x')\n    .removeAttr('y')\n    // remove all `data-appium-inspector-` prefixes so only the width|height|x|y are there\n    .each(function () {\n      const $el = $(this);\n\n      ['width', 'height', 'x', 'y'].forEach((rectAttr) => {\n        if ($el.attr(`data-appium-inspector-${rectAttr}`)) {\n          $el.attr(rectAttr, $el.attr(`data-appium-inspector-${rectAttr}`));\n\n          /* remove the old attribute */\n          $el.removeAttr(`data-appium-inspector-${rectAttr}`);\n        }\n      });\n    });\n\n  return $.xml();\n}\n","import _ from 'lodash';\nimport Bluebird from 'bluebird';\nimport {getWebviewStatusAddressBarHeight, parseSource, setHtmlElementAttributes} from './webview-helpers';\nimport {SCREENSHOT_INTERACTION_MODE, APP_MODE} from '../components/Inspector/shared';\n\nconst {TAP, SWIPE, GESTURE} = SCREENSHOT_INTERACTION_MODE;\n\nexport const NATIVE_APP = 'NATIVE_APP';\nlet _instance = null;\n\nexport default class AppiumClient {\n  constructor (driver) {\n    this.driver = driver;\n    this.elementCache = {};\n    this.elVarCount = 0;\n    this.elArrayVarCount = 0;\n  }\n\n  async run (params) {\n    const {\n      methodName, // Optional. Name of method being provided\n      strategy, // Optional. Element locator strategy\n      selector, // Optional. Element fetch selector\n      fetchArray = false, // Optional. Are we fetching an array of elements or just one?\n      elementId, // Optional. Element being operated on\n      args = [], // Optional. Arguments passed to method\n      skipRefresh = false, // Optional. Do we want the updated source and screenshot?\n      skipScreenshot = false, // Optional. Do we want to skip getting screenshot alone?\n      appMode = APP_MODE.NATIVE, // Optional. Whether we're in a native or hybrid mode\n    } = params;\n\n    if (methodName === 'quit') {\n      try {\n        await this.driver.quit();\n      } catch (ign) {\n      }\n\n      _instance = null;\n\n      // when we've quit the session, there's no source/screenshot to send\n      // back\n      return {\n        source: null,\n        screenshot: null,\n        windowSize: null,\n        result: null\n      };\n    }\n\n    let res = {};\n    if (methodName) {\n      if (elementId) {\n        console.log(`Handling client method request with method '${methodName}', args ${JSON.stringify(args)} and elementId ${elementId}`); // eslint-disable-line no-console\n        res = await this.executeMethod({elementId, methodName, args, skipRefresh, skipScreenshot, appMode});\n      } else {\n        console.log(`Handling client method request with method '${methodName}' and args ${JSON.stringify(args)}`); // eslint-disable-line no-console\n        res = await this.executeMethod({methodName, args, skipRefresh, skipScreenshot, appMode});\n      }\n    } else if (strategy && selector) {\n      if (fetchArray) {\n        console.log(`Fetching elements with selector '${selector}' and strategy ${strategy}`); // eslint-disable-line no-console\n        res = await this.fetchElements({strategy, selector});\n      } else {\n        console.log(`Fetching an element with selector '${selector}' and strategy ${strategy}`); // eslint-disable-line no-console\n        res = await this.fetchElement({strategy, selector});\n      }\n    }\n\n    return res;\n  }\n\n  async executeMethod ({elementId, methodName, args, skipRefresh, skipScreenshot, appMode}) {\n    let cachedEl;\n    let res = {};\n    if (!_.isArray(args) && !_.isUndefined(args)) {\n      args = [args];\n    }\n\n    if (elementId) {\n      // Give the cached element a variable name (el1, el2, el3,...) the first time it's used\n      cachedEl = this.elementCache[elementId];\n\n      if (!cachedEl.variableName) {\n        // now that we are actually going to use this element, let's assign it a variable name\n        // if it doesn't already have one\n        this.elVarCount += 1;\n        cachedEl.variableName = `el${this.elVarCount}`;\n      }\n\n      // and then execute whatever method we requested on the actual element\n      res = await cachedEl.el[methodName].apply(cachedEl.el, args);\n    } else {\n      // Specially handle the tap and swipe method\n      if ([TAP, SWIPE, GESTURE].includes(methodName)) {\n        const actions = Object.keys(args[0]).map((key) => (\n          {\n            type: 'pointer',\n            id: key,\n            parameters: {pointerType: 'touch'},\n            actions: args[0][key]\n          }));\n        res = await this.driver.performActions(actions);\n      } else if (methodName !== 'getPageSource' && methodName !== 'takeScreenshot') {\n        res = await this.driver[methodName].apply(this.driver, args);\n      }\n    }\n\n\n    let contextUpdate = {}, sourceUpdate = {}, screenshotUpdate = {}, windowSizeUpdate = {};\n    if (!skipRefresh) {\n      // Give the source/screenshot time to change before taking the screenshot\n      await Bluebird.delay(500);\n      if (!skipScreenshot) {\n        screenshotUpdate = await this.getScreenshotUpdate();\n      }\n      windowSizeUpdate = await this.getWindowUpdate();\n      // only do context updates if user has selected web/hybrid mode (takes forever)\n      if (appMode === APP_MODE.WEB_HYBRID) {\n        contextUpdate = await this.getContextUpdate();\n      }\n      sourceUpdate = await this.getSourceUpdate();\n    }\n    return {\n      ...cachedEl,\n      ...contextUpdate,\n      ...sourceUpdate,\n      ...screenshotUpdate,\n      ...windowSizeUpdate,\n      commandRes: res,\n    };\n  }\n\n  async fetchElements ({strategy, selector}) {\n    const start = Date.now();\n    const els = await this.driver.findElements(strategy, selector);\n    const executionTime = Date.now() - start;\n\n    this.elArrayVarCount += 1;\n    const variableName = `els${this.elArrayVarCount}`;\n    const variableType = 'array';\n\n    const elements = {};\n    // Cache the elements that we find\n    const elementList = els.map((el, index) => {\n      const res = {\n        el,\n        variableName,\n        variableIndex: index,\n        variableType: 'string',\n        id: el.elementId,\n        strategy,\n        selector,\n      };\n      elements[el.elementId] = res;\n      return res;\n    });\n\n    this.elementCache = {...this.elementCache, ...elements};\n\n    return {\n      variableName,\n      variableType,\n      strategy,\n      selector,\n      elements: elementList,\n      executionTime,\n    };\n  }\n\n  async fetchElement ({strategy, selector}) {\n    const start = Date.now();\n    let element = null;\n    try {\n      element = await this.driver.findElement(strategy, selector);\n    } catch (err) {\n      return {};\n    }\n\n    const executionTime = Date.now() - start;\n\n    const id = element.elementId;\n\n    // Cache this ID along with its variable name, variable type and strategy/selector\n    const elementData = {\n      el: element,\n      variableType: 'string',\n      strategy,\n      selector,\n      id,\n    };\n\n    this.elementCache[id] = elementData;\n\n    return {\n      ...elementData,\n      executionTime,\n    };\n  }\n\n  async getWindowUpdate () {\n    let windowSize, windowSizeError;\n    const {client: {capabilities: {deviceScreenSize, platformName, automationName}}} = this.driver;\n    try {\n      // The call doesn't need to be made for Android for two reasons\n      // - when appMode is hybrid Chrome driver doesn't know this command\n      // - the data is already on the driver\n      if (_.toLower(platformName) === 'android' && _.toLower(automationName) === 'uiautomator2') {\n        const [width, height] = deviceScreenSize.split('x');\n        windowSize = {width, height, x: 0, y: 0};\n      } else {\n        windowSize = await this.driver.getWindowRect();\n      }\n    } catch (e) {\n      windowSizeError = e;\n    }\n\n    return {windowSize, windowSizeError};\n  }\n\n  async getContextUpdate () {\n    let contexts,\n        contextsError,\n        currentContext,\n        currentContextError,\n        pixelRatio,\n        platformName,\n        statBarHeight,\n        viewportRect,\n        webViewPosition;\n    if (!await this.hasContextsCommand()) {\n      return {currentContext: null, contexts: []};\n    }\n\n    try {\n      currentContext = await this.driver.getContext();\n    } catch (e) {\n      currentContextError = e;\n    }\n\n    // Note: These methods need to be executed in the native context because ChromeDriver behaves differently\n    if (currentContext !== NATIVE_APP) {\n      await this.driver.switchContext(NATIVE_APP);\n    }\n\n    ({platformName, pixelRatio, statBarHeight, viewportRect} = await this.driver.getSession());\n    const isAndroid = _.toLower(platformName) === 'android';\n\n    try {\n      contexts = await this.driver.executeScript('mobile:getContexts', []);\n      contexts = isAndroid ? this.parseAndroidContexts(contexts) : contexts;\n    } catch (e) {\n      contextsError = e;\n    }\n\n\n    if (currentContext !== NATIVE_APP) {\n      try {\n        // Get the webview offset\n        if (viewportRect) {\n          // The viewport rectangles are based on the screen density,\n          // iOS needs CSS pixels\n          webViewPosition = {\n            x: isAndroid ? viewportRect.left : Math.round(viewportRect.left / pixelRatio),\n            y: isAndroid ? viewportRect.top : Math.round(viewportRect.top / pixelRatio),\n          };\n        } else {\n          // Fallback\n          const el = await this.driver.findElement(\n            isAndroid ? 'xpath' : '-ios class chain',\n            isAndroid ? '//android.webkit.WebView' : '**/XCUIElementTypeWebView'\n          );\n          if (el) {\n            webViewPosition = await el.getRect();\n          }\n        }\n      } catch (ign) {\n      }\n      await this.driver.switchContext(currentContext);\n    }\n\n    /**\n     * If its a webview then update the HTML with the element location\n     * so the source can be used in the native inspector\n     */\n    try {\n      if (currentContext !== NATIVE_APP) {\n        // Fallback if the webview position can't be determined,\n        // then do it based on the web context\n        if (!webViewPosition) {\n          webViewPosition = {\n            x: 0,\n            y: await this.driver.executeScript(\n              `return (${getWebviewStatusAddressBarHeight}).apply(null, arguments)`,\n              [{platformName, statBarHeight}],\n            ),\n          };\n        }\n        await this.driver.executeScript(\n          `return (${setHtmlElementAttributes}).apply(null, arguments)`,\n          [{platformName, webviewStatusAddressBarHeight: webViewPosition.y}],\n        );\n      }\n    } catch (ign) {\n    }\n\n    return {contexts, contextsError, currentContext, currentContextError};\n  }\n\n  async getSourceUpdate () {\n    try {\n      const source = parseSource(await this.driver.getPageSource());\n      return {source};\n    } catch (err) {\n      return {sourceError: err};\n    }\n  }\n\n  async getScreenshotUpdate () {\n    try {\n      const screenshot = await this.driver.takeScreenshot();\n      return {screenshot};\n    } catch (err) {\n      return {screenshotError: err};\n    }\n  }\n\n  /**\n   * If the app under test can return contexts command.\n   *\n   * @returns {boolean} True if the app under test supports contexts command.\n   *\n   */\n  async hasContextsCommand () {\n    try {\n      await this.driver.getContexts();\n      return true;\n    } catch (ign) {\n    }\n\n    // If the app under test returns non JSON format response\n    return false;\n  }\n\n  /**\n   * Parse the Android contexts webview data\n   *\n   * Returns\n   * {\n   *   id: string;             // NATIVE_APP or the webview name\n   *   title?: string;         // the name of the page\n   *   url?: string;           // the url\n   *   bundleId?: string;      // for iOS\n   *   packageName?: string;   // for Android\n   *   handle?: string;        // the id of the active page in the webview of Android\n   * }[];\n   */\n  parseAndroidContexts (contexts) {\n    const parsedWebviews = [];\n\n    // Walk over every context and add all webviews into the parsedWebviews array\n    contexts\n      // Filter out all contexts that have a webviewName\n      .filter((webview) => _.has(webview, 'webviewName'))\n      // Now construct a new array with data\n      .map(({info, pages, webviewName}) => {\n        // The context result can have:\n        // - no pages => this might be Chrome running in the background\n        // - pages => this can be:\n        //   - Chrome with one or multiple tabs open\n        //   - A webview with one or multiple webviews\n        if (!pages) {\n          return;\n        }\n\n        pages.filter((page) => {\n          // The description is a string and:\n          // 1. can contain a JSON string for webviews which can contain\n          //    an `attached`-value telling if the webview is active\n          // 2. can be an empty string, this is most of the times for tabs\n          //    in Chrome\n          const description = _.has(page, 'description') ? page.description : '';\n          let descriptionJSON = {attached: false};\n          try {\n            descriptionJSON = JSON.parse(page.description);\n          } catch (ign) {}\n\n          // You can have multiple `type` of pages, like service workers\n          // We need to have pages with or 1. an attached view or 2. with an empty description\n          return page.type === 'page' && (description === '' || descriptionJSON.attached);\n        })\n          .map((page) => {\n            parsedWebviews.push({\n              id: webviewName,\n              ...(page && _.has(page, 'title') ? {title: page.title} : {}),\n              ...(page && _.has(page, 'url') ? {url: page.url} : {}),\n              ...(page && _.has(info, 'Android-Package') ? {packageName: info['Android-Package']} : {}),\n              ...(page && _.has(page, 'id') ? {handle: page.id} : {}),\n            });\n          });\n\n        return parsedWebviews;\n      });\n\n    return [\n      // The Android contexts dont have the `NATIVE_APP` context so add it here\n      {id: 'NATIVE_APP'},\n      // Add the parsedWebviews, but make sure to filter out all undefined webviews\n      ...parsedWebviews.filter(Boolean),\n    ];\n  }\n}\n\nAppiumClient.instance = (driver) => {\n  if (_instance === null) {\n    _instance = new AppiumClient(driver);\n  }\n  return _instance;\n};\n","/* eslint-disable indent */\n/* eslint-disable space-in-parens */\n/* eslint-disable no-console */\n/* eslint-disable quotes */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-unused-vars */\nimport _, { get } from 'lodash';\nimport { push } from 'redux-first-history';\nimport { getLocators, APP_MODE } from '../components/Inspector/shared';\nimport { showError } from './Session';\nimport { xmlToJSON } from '../util';\nimport { v4 as UUID } from 'uuid';\nimport frameworks from '../lib/client-frameworks';\nimport { getSetting, setSetting, SAVED_FRAMEWORK, SET_SAVED_GESTURES } from '../../shared/settings';\nimport i18n from '../../configs/i18next.config.renderer';\nimport AppiumClient, { NATIVE_APP } from '../lib/appium-client';\nimport { notification } from 'antd';\n\nexport const SET_SESSION_DETAILS = 'SET_SESSION_DETAILS';\nexport const SET_SOURCE_AND_SCREENSHOT = 'SET_SOURCE_AND_SCREENSHOT';\nexport const SESSION_DONE = 'SESSION_DONE';\nexport const SELECT_ELEMENT = 'SELECT_ELEMENT';\nexport const UNSELECT_ELEMENT = 'UNSELECT_ELEMENT';\nexport const SET_SELECTED_ELEMENT_ID = 'SET_SELECTED_ELEMENT_ID';\nexport const SET_INTERACTIONS_NOT_AVAILABLE = 'SET_INTERACTIONS_NOT_AVAILABLE';\nexport const METHOD_CALL_REQUESTED = 'METHOD_CALL_REQUESTED';\nexport const METHOD_CALL_DONE = 'METHOD_CALL_DONE';\nexport const SET_EXPANDED_PATHS = 'SET_EXPANDED_PATHS';\nexport const SELECT_HOVERED_ELEMENT = 'SELECT_HOVERED_ELEMENT';\nexport const UNSELECT_HOVERED_ELEMENT = 'UNSELECT_HOVERED_ELEMENT';\n\nexport const SELECT_HOVERED_CENTROID = 'SELECT_HOVERED_CENTROID';\nexport const UNSELECT_HOVERED_CENTROID = 'UNSELECT_HOVERED_CENTROID';\nexport const SELECT_CENTROID = 'SELECT_CENTROID';\nexport const UNSELECT_CENTROID = 'UNSELECT_CENTROID';\nexport const SET_SHOW_CENTROIDS = 'SET_SHOW_CENTROIDS';\n\nexport const QUIT_SESSION_REQUESTED = 'QUIT_SESSION_REQUESTED';\nexport const QUIT_SESSION_DONE = 'QUIT_SESSION_DONE';\nexport const SET_SESSION_TIME = 'SET_SESSION_TIME';\n\nexport const START_RECORDING = 'START_RECORDING';\nexport const PAUSE_RECORDING = 'PAUSE_RECORDING';\nexport const CLEAR_RECORDING = 'CLEAR_RECORDING';\nexport const CLOSE_RECORDER = 'CLOSE_RECORDER';\nexport const SET_ACTION_FRAMEWORK = 'SET_ACTION_FRAMEWORK';\nexport const RECORD_ACTION = 'RECORD_ACTION';\nexport const SET_SHOW_BOILERPLATE = 'SET_SHOW_BOILERPLATE';\n\nexport const SHOW_LOCATOR_TEST_MODAL = 'SHOW_LOCATOR_TEST_MODAL';\nexport const HIDE_LOCATOR_TEST_MODAL = 'HIDE_LOCATOR_TEST_MODAL';\nexport const SHOW_SIRI_COMMAND_MODAL = 'SHOW_SIRI_COMMAND_MODAL';\nexport const HIDE_SIRI_COMMAND_MODAL = 'HIDE_SIRI_COMMAND_MODAL';\nexport const SET_SIRI_COMMAND_VALUE = 'SET_SIRI_COMMAND_VALUE';\nexport const SET_LOCATOR_TEST_STRATEGY = 'SET_LOCATOR_TEST_STRATEGY';\nexport const SET_LOCATOR_TEST_VALUE = 'SET_LOCATOR_TEST_VALUE';\nexport const SEARCHING_FOR_ELEMENTS = 'SEARCHING_FOR_ELEMENTS';\nexport const SEARCHING_FOR_ELEMENTS_COMPLETED = 'SEARCHING_FOR_ELEMENTS_COMPLETED';\nexport const GET_FIND_ELEMENTS_TIMES = 'GET_FIND_ELEMENTS_TIMES';\nexport const GET_FIND_ELEMENTS_TIMES_COMPLETED = 'GET_FIND_ELEMENTS_TIMES_COMPLETED';\nexport const SET_LOCATOR_TEST_ELEMENT = 'SET_LOCATOR_TEST_ELEMENT';\nexport const FINDING_ELEMENT_IN_SOURCE = 'FINDING_ELEMENT_IN_SOURCE';\nexport const FINDING_ELEMENT_IN_SOURCE_COMPLETED = 'FINDING_ELEMENT_IN_SOURCE_COMPLETED';\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\nexport const ADD_ASSIGNED_VAR_CACHE = 'ADD_ASSIGNED_VAR_CACHE';\nexport const CLEAR_ASSIGNED_VAR_CACHE = 'CLEAR_ASSIGNED_VAR_CACHE';\nexport const SET_SCREENSHOT_INTERACTION_MODE = 'SET_SCREENSHOT_INTERACTION_MODE';\nexport const SET_APP_MODE = 'SET_APP_MODE';\nexport const SET_SEARCHED_FOR_ELEMENT_BOUNDS = 'SET_SEARCHED_FOR_ELEMENT_BOUNDS';\nexport const CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS = 'CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS';\n\nexport const SET_SWIPE_START = 'SET_SWIPE_START';\nexport const SET_SWIPE_END = 'SET_SWIPE_END';\nexport const SET_SWIPE_START1 = 'SET_SWIPE_START1';\nexport const SET_SWIPE_END1 = 'SET_SWIPE_END1';\nexport const CLEAR_SWIPE_ACTION = 'CLEAR_SWIPE_ACTION';\nexport const PROMPT_KEEP_ALIVE = 'PROMPT_KEEP_ALIVE';\nexport const HIDE_PROMPT_KEEP_ALIVE = 'HIDE_PROMPT_KEEP_ALIVE';\n\nexport const SELECT_INTERACTION_MODE = 'SELECT_INTERACTION_MODE';\n\nexport const SELECT_COMMAND_GROUP = 'SELECT_COMMAND_GROUP';\nexport const SELECT_COMMAND_SUB_GROUP = 'SELECT_COMMAND_SUB_GROUP';\nexport const ENTERING_COMMAND_ARGS = 'ENTERING_COMMAND_ARGS';\nexport const CANCEL_PENDING_COMMAND = 'CANCEL_PENDING_COMMAND';\nexport const SET_COMMAND_ARG = 'SET_COMMAND_ARG';\n\nexport const SET_CONTEXT = 'SET_CONTEXT';\n\nexport const SET_APP_ID = 'SET_APP_ID';\nexport const SET_SERVER_STATUS = 'SET_SERVER_STATUS';\n\nexport const SET_KEEP_ALIVE_INTERVAL = 'SET_KEEP_ALIVE_INTERVAL';\nexport const SET_USER_WAIT_TIMEOUT = 'SET_USER_WAIT_TIMEOUT';\nexport const SET_LAST_ACTIVE_MOMENT = 'SET_LAST_ACTIVE_MOMENT';\n\nexport const SET_VISIBLE_COMMAND_RESULT = 'SET_VISIBLE_COMMAND_RESULT';\n\nexport const SET_AWAITING_MJPEG_STREAM = 'SET_AWAITING_MJPEG_STREAM';\n\nexport const SHOW_GESTURE_EDITOR = 'SHOW_GESTURE_EDITOR';\nexport const HIDE_GESTURE_EDITOR = 'HIDE_GESTURE_EDITOR';\nexport const GET_SAVED_GESTURES_REQUESTED = 'GET_SAVED_GESTURES_REQUESTED';\nexport const GET_SAVED_GESTURES_DONE = 'GET_SAVED_GESTURES_DONE';\nexport const DELETE_SAVED_GESTURES_REQUESTED = 'DELETE_SAVED_GESTURES_REQUESTED';\nexport const DELETE_SAVED_GESTURES_DONE = 'DELETE_SAVED_GESTURES_DONE';\nexport const SET_LOADED_GESTURE = 'SET_LOADED_GESTURE';\nexport const REMOVE_LOADED_GESTURE = 'REMOVE_LOADED_GESTURE';\nexport const SHOW_GESTURE_ACTION = 'SHOW_GESTURE_ACTION';\nexport const HIDE_GESTURE_ACTION = 'HIDE_GESTURE_ACTION';\nexport const SELECT_TICK_ELEMENT = 'SELECT_TICK_ELEMENT';\nexport const UNSELECT_TICK_ELEMENT = 'UNSELECT_TICK_ELEMENT';\nexport const SET_GESTURE_TAP_COORDS_MODE = 'SET_GESTURE_TAP_COORDS_MODE';\nexport const CLEAR_TAP_COORDINATES = 'CLEAR_TAP_COORDINATES';\n\nexport const TOGGLE_SHOW_ATTRIBUTES = 'TOGGLE_SHOW_ATTRIBUTES';\nexport const TOGGLE_REFRESHING_STATE = 'TOGGLE_REFRESHING_STATE';\n\nconst KEEP_ALIVE_PING_INTERVAL = 20 * 1000;\nconst NO_NEW_COMMAND_LIMIT = 24 * 60 * 60 * 1000; // Set timeout to 24 hours\nconst WAIT_FOR_USER_KEEP_ALIVE = 60 * 60 * 1000; // Give user 1 hour to reply\n\n// A debounced function that calls findElement and gets info about the element\nconst findElement = _.debounce(async function (strategyMap, dispatch, getState, path) {\n  for (let [strategy, selector] of strategyMap) {\n    // Get the information about the element\n    const action = callClientMethod({\n      strategy,\n      selector,\n    });\n    let { elementId, variableName, variableType } = await action(dispatch, getState);\n\n    // Set the elementId, variableName and variableType for the selected element\n    // (check first that the selectedElementPath didn't change, to avoid race conditions)\n    if (elementId && getState().inspector.selectedElementPath === path) {\n      return dispatch({ type: SET_SELECTED_ELEMENT_ID, elementId, variableName, variableType });\n    }\n  }\n\n  return dispatch({ type: SET_INTERACTIONS_NOT_AVAILABLE });\n}, 1000);\n\nexport function selectElement(path) {\n  return async (dispatch, getState) => {\n    // Set the selected element in the source tree\n    dispatch({ type: SELECT_ELEMENT, path });\n    const { selectedElement, sourceXML, expandedPaths } = getState().inspector;\n\n    // Expand all of this element's ancestors so that it's visible in the source tree\n    // Make a copy of the array to avoid state mutation\n    const copiedExpandedPaths = [...expandedPaths];\n    let pathArr = path.split('.').slice(0, path.length - 1);\n    while (pathArr.length > 1) {\n      pathArr.splice(pathArr.length - 1);\n      let path = pathArr.join('.');\n      if (!copiedExpandedPaths.includes(path)) {\n        copiedExpandedPaths.push(path);\n      }\n    }\n    dispatch({ type: SET_EXPANDED_PATHS, paths: copiedExpandedPaths });\n\n\n    // Find the optimal selection strategy. If none found, fall back to XPath.\n    const strategyMap = _.toPairs(getLocators(selectedElement.attributes, sourceXML));\n    strategyMap.push(['xpath', selectedElement.xpath]);\n\n    // Debounce find element so that if another element is selected shortly after, cancel the previous search\n    await findElement(strategyMap, dispatch, getState, path);\n  };\n}\n\nexport function unselectElement() {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_ELEMENT });\n  };\n}\n\n\nexport function selectCentroid(path) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_CENTROID, path });\n  };\n}\n\nexport function unselectCentroid() {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_CENTROID });\n  };\n}\n\nexport function selectHoveredCentroid(path) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_HOVERED_CENTROID, path });\n  };\n}\n\nexport function unselectHoveredCentroid() {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_HOVERED_CENTROID });\n  };\n}\n\nexport function selectHoveredElement(path) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_HOVERED_ELEMENT, path });\n  };\n}\n\nexport function unselectHoveredElement(path) {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_HOVERED_ELEMENT, path });\n  };\n}\n\n/**\n * Requests a method call on appium\n */\nexport function applyClientMethod(params) {\n  return async (dispatch, getState) => {\n    const isRecording = params.methodName !== 'quit' &&\n      params.methodName !== 'getPageSource' &&\n      params.methodName !== 'gesture' &&\n      params.methodName !== 'status' &&\n      getState().inspector.isRecording;\n    try {\n      dispatch({ type: METHOD_CALL_REQUESTED });\n      const callAction = callClientMethod(params);\n      const { contexts, contextsError, commandRes, currentContext, currentContextError,\n        source, screenshot, windowSize, sourceError,\n        screenshotError, windowSizeError, variableName,\n        variableIndex, strategy, selector } = await callAction(dispatch, getState);\n\n      // TODO: Implement recorder code for gestures\n      if (isRecording) {\n        // Add 'findAndAssign' line of code. Don't do it for arrays though. Arrays already have 'find' expression\n        if (strategy && selector && !variableIndex && variableIndex !== 0) {\n          const findAction = findAndAssign(strategy, selector, variableName, false);\n          findAction(dispatch, getState);\n        }\n\n        // now record the actual action\n        let args = [variableName, variableIndex];\n        args = args.concat(params.args || []);\n        dispatch({ type: RECORD_ACTION, action: params.methodName, params: args });\n      }\n      dispatch({ type: METHOD_CALL_DONE });\n\n      if (source) {\n        dispatch({\n          type: SET_SOURCE_AND_SCREENSHOT,\n          contexts,\n          currentContext,\n          source: source && xmlToJSON(source),\n          sourceXML: source,\n          screenshot,\n          windowSize,\n          contextsError,\n          currentContextError,\n          sourceError,\n          screenshotError,\n          windowSizeError,\n        });\n      }\n      window.dispatchEvent(new Event('resize'));\n      return commandRes;\n    } catch (error) {\n      console.log(error); // eslint-disable-line no-console\n      let methodName = params.methodName === 'click' ? 'tap' : params.methodName;\n      showError(error, methodName, 10);\n      dispatch({ type: METHOD_CALL_DONE });\n    }\n  };\n}\n\nexport function addAssignedVarCache(varName) {\n  return (dispatch) => {\n    dispatch({ type: ADD_ASSIGNED_VAR_CACHE, varName });\n  };\n}\n\nexport function setExpandedPaths(paths) {\n  return (dispatch) => {\n    dispatch({ type: SET_EXPANDED_PATHS, paths });\n  };\n}\n\n/**\n * Quit the session and go back to the new session window\n */\nexport function quitSession(reason, killedByUser = true) {\n  return async (dispatch, getState) => {\n    const killAction = killKeepAliveLoop();\n    killAction(dispatch, getState);\n    const applyAction = applyClientMethod({ methodName: 'quit' });\n    await applyAction(dispatch, getState);\n    dispatch({ type: QUIT_SESSION_DONE });\n    dispatch(push('/session'));\n    if (!killedByUser) {\n      notification.error({\n        message: 'Error',\n        description: reason || i18n.t('Session has been terminated'),\n        duration: 0\n      });\n    }\n  };\n}\n\nexport function startRecording() {\n  return (dispatch) => {\n    dispatch({ type: START_RECORDING });\n  };\n}\n\nexport function pauseRecording() {\n  return (dispatch) => {\n    dispatch({ type: PAUSE_RECORDING });\n  };\n}\n\nexport function clearRecording() {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_RECORDING });\n    dispatch({ type: CLEAR_ASSIGNED_VAR_CACHE }); // Get rid of the variable cache\n  };\n}\n\nexport function getSavedActionFramework() {\n  return async (dispatch) => {\n    let framework = await getSetting(SAVED_FRAMEWORK);\n    dispatch({ type: SET_ACTION_FRAMEWORK, framework });\n  };\n}\n\nexport function setActionFramework(framework) {\n  return async (dispatch) => {\n    if (!frameworks[framework]) {\n      throw new Error(i18n.t('frameworkNotSupported', { framework }));\n    }\n    await setSetting(SAVED_FRAMEWORK, framework);\n    dispatch({ type: SET_ACTION_FRAMEWORK, framework });\n  };\n}\n\nexport function recordAction(action, params) {\n  return (dispatch) => {\n    dispatch({ type: RECORD_ACTION, action, params });\n  };\n}\n\nexport function closeRecorder() {\n  return (dispatch) => {\n    dispatch({ type: CLOSE_RECORDER });\n  };\n}\n\nexport function toggleShowBoilerplate() {\n  return (dispatch, getState) => {\n    const show = !getState().inspector.showBoilerplate;\n    dispatch({ type: SET_SHOW_BOILERPLATE, show });\n  };\n}\n\nexport function setSessionDetails({ driver, sessionDetails, mode, mjpegScreenshotUrl }) {\n  return (dispatch) => {\n    dispatch({ type: SET_SESSION_DETAILS, driver, sessionDetails, mode, mjpegScreenshotUrl });\n  };\n}\n\nexport function showLocatorTestModal() {\n  return (dispatch) => {\n    dispatch({ type: SHOW_LOCATOR_TEST_MODAL });\n  };\n}\n\nexport function hideLocatorTestModal() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_LOCATOR_TEST_MODAL });\n  };\n}\n\nexport function showSiriCommandModal() {\n  return (dispatch) => {\n    dispatch({ type: SHOW_SIRI_COMMAND_MODAL });\n  };\n}\n\nexport function hideSiriCommandModal() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_SIRI_COMMAND_MODAL });\n  };\n}\n\nexport function setSiriCommandValue(siriCommandValue) {\n  return (dispatch) => {\n    dispatch({ type: SET_SIRI_COMMAND_VALUE, siriCommandValue });\n  };\n}\n\nexport function setLocatorTestValue(locatorTestValue) {\n  return (dispatch) => {\n    dispatch({ type: SET_LOCATOR_TEST_VALUE, locatorTestValue });\n  };\n}\n\nexport function setLocatorTestStrategy(locatorTestStrategy) {\n  return (dispatch) => {\n    dispatch({ type: SET_LOCATOR_TEST_STRATEGY, locatorTestStrategy });\n  };\n}\n\nexport function setContext(context) {\n  return (dispatch) => {\n    dispatch({ type: SET_CONTEXT, context });\n  };\n}\n\nexport function searchForElement(strategy, selector) {\n  return async (dispatch, getState) => {\n    dispatch({ type: SEARCHING_FOR_ELEMENTS });\n    try {\n      const callAction = callClientMethod({ strategy, selector, fetchArray: true });\n      let { elements, variableName, executionTime } = await callAction(dispatch, getState);\n      const findAction = findAndAssign(strategy, selector, variableName, true);\n      findAction(dispatch, getState);\n      elements = elements.map((el) => el.id);\n      dispatch({ type: SEARCHING_FOR_ELEMENTS_COMPLETED, elements, executionTime });\n    } catch (error) {\n      dispatch({ type: SEARCHING_FOR_ELEMENTS_COMPLETED });\n      showError(error, 10);\n    }\n  };\n}\n\n/**\n * Get all the find element times based on the find data source\n */\nexport function getFindElementsTimes(findDataSource) {\n  return async (dispatch, getState) => {\n    dispatch({ type: GET_FIND_ELEMENTS_TIMES });\n    try {\n      const findElementsExecutionTimes = [];\n      for (const element of findDataSource) {\n        const { find, key, selector } = element;\n        const action = callClientMethod({ strategy: key, selector });\n        const { executionTime } = await action(dispatch, getState);\n        findElementsExecutionTimes.push({ find, key, selector, time: executionTime });\n      }\n\n      dispatch({\n        type: GET_FIND_ELEMENTS_TIMES_COMPLETED,\n        findElementsExecutionTimes: _.sortBy(findElementsExecutionTimes, ['time']),\n      });\n    } catch (error) {\n      dispatch({ type: GET_FIND_ELEMENTS_TIMES_COMPLETED });\n      showError(error, 10);\n    }\n  };\n}\n\nexport function findAndAssign(strategy, selector, variableName, isArray) {\n  return (dispatch, getState) => {\n    const { assignedVarCache } = getState().inspector;\n\n    // If this call to 'findAndAssign' for this variable wasn't done already, do it now\n    if (!assignedVarCache[variableName]) {\n      dispatch({ type: RECORD_ACTION, action: 'findAndAssign', params: [strategy, selector, variableName, isArray] });\n      dispatch({ type: ADD_ASSIGNED_VAR_CACHE, varName: variableName });\n    }\n  };\n}\n\nexport function setLocatorTestElement(elementId) {\n  return async (dispatch, getState) => {\n    dispatch({ type: SET_LOCATOR_TEST_ELEMENT, elementId });\n    dispatch({ type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS });\n    if (elementId) {\n      try {\n        const action = callClientMethod({\n          elementId,\n          methodName: 'getRect',\n          skipRefresh: true,\n          skipRecord: true,\n          ignoreResult: true\n        });\n        const { commandRes } = await action(dispatch, getState);\n        dispatch({\n          type: SET_SEARCHED_FOR_ELEMENT_BOUNDS,\n          location: { x: commandRes.x, y: commandRes.y },\n          size: { width: commandRes.width, height: commandRes.height },\n        });\n      } catch (ign) { }\n    }\n  };\n}\n\n/**\n * Given an element ID found through search, and its bounds,\n * attempt to find and select this element in the source tree\n */\nexport function selectLocatedElement(source, bounds, id) {\n  const UPPER_FILTER_LIMIT = 10;\n\n  // Parse the source tree and find all nodes whose bounds match the expected bounds\n  // Return the path + xpath of each node\n  function findPathsMatchingBounds() {\n    if (!bounds || !source.children || !source.children[0].attributes) { return null; }\n    if (source.children[0].attributes.bounds) {\n      const [endX, endY] = [bounds.location.x + bounds.size.width, bounds.location.y + bounds.size.height];\n      const coords = `[${bounds.location.x},${bounds.location.y}][${endX},${endY}]`;\n      return findPathsFromCoords(source.children, coords);\n    } else if (source.children[0].attributes.x) {\n      const combinedBounds = {\n        x: String(bounds.location.x),\n        y: String(bounds.location.y),\n        height: String(bounds.size.height),\n        width: String(bounds.size.width),\n      };\n      return findPathsFromBounds(source.children, combinedBounds);\n    }\n    return null;\n  }\n\n  // Recursive function for parsing source tree when elements have 'bounds' property\n  function findPathsFromCoords(trees, coords) {\n    let collectedPaths = [];\n    for (const tree of trees) {\n      if (tree.attributes.bounds === coords) {\n        collectedPaths.push([tree.path, tree.xpath]);\n      }\n      if (tree.children.length) {\n        collectedPaths.push(...findPathsFromCoords(tree.children, coords));\n      }\n    }\n    return collectedPaths;\n  }\n\n  // Recursive function for parsing source tree when elements have 'x/y/height/width' properties\n  function findPathsFromBounds(trees, bounds) {\n    let collectedPaths = [];\n    for (const tree of trees) {\n      if (tree.attributes.x === bounds.x && tree.attributes.y === bounds.y\n        && tree.attributes.height === bounds.height && tree.attributes.width === bounds.width) {\n        collectedPaths.push([tree.path, tree.xpath]);\n      }\n      if (tree.children.length) {\n        collectedPaths.push(...findPathsFromBounds(tree.children, bounds));\n      }\n    }\n    return collectedPaths;\n  }\n\n  // If findPathsMatchingBounds found multiple items,\n  // use Appium findElement to filter further by element ID\n  async function filterFoundPaths(foundPaths, dispatch, getState) {\n    if (!foundPaths) { return null; }\n    if (foundPaths.length === 1) {\n      return foundPaths[0][0];\n    } else if (foundPaths.length !== 0 && foundPaths.length <= UPPER_FILTER_LIMIT) {\n      return await findElementWithMatchingId(foundPaths, dispatch, getState);\n    }\n    return null;\n  }\n\n  // Calls Appium findElement for each provided xpath, and returns the path\n  // of the element whose ID matches the expected ID\n  async function findElementWithMatchingId(foundPaths, dispatch, getState) {\n    for (const path of foundPaths) {\n      const action = callClientMethod({ strategy: 'xpath', selector: path[1] });\n      const { el } = await action(dispatch, getState);\n      if (el && el.elementId === id) {\n        return path[0];\n      }\n    }\n    return null;\n  }\n\n  return async (dispatch, getState) => {\n    dispatch({ type: FINDING_ELEMENT_IN_SOURCE });\n    const foundPaths = findPathsMatchingBounds();\n    const foundPath = await filterFoundPaths(foundPaths, dispatch, getState);\n    if (foundPath) {\n      const action = selectElement(foundPath);\n      await action(dispatch, getState);\n    } else {\n      notification.error({\n        message: i18n.t('Error'),\n        description: i18n.t('findingElementInSourceFailed'),\n        duration: 8\n      });\n    }\n    dispatch({ type: FINDING_ELEMENT_IN_SOURCE_COMPLETED });\n  };\n}\n\nexport function clearSearchResults() {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_SEARCH_RESULTS });\n    dispatch({ type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS });\n  };\n}\n\nexport function selectScreenshotInteractionMode(screenshotInteractionMode) {\n  return (dispatch) => {\n    dispatch({ type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode });\n  };\n}\n\nexport function toggleRefreshingState() {\n  return (dispatch) => {\n    dispatch({ type: TOGGLE_REFRESHING_STATE });\n  };\n}\n\nexport function selectAppMode(mode) {\n  return async (dispatch, getState) => {\n    const { appMode } = getState().inspector;\n    dispatch({ type: SET_APP_MODE, mode });\n    // if we're transitioning to hybrid mode, do a pre-emptive search for contexts\n    if (appMode !== mode && mode === APP_MODE.WEB_HYBRID) {\n      const action = applyClientMethod({ methodName: 'getPageSource' });\n      await action(dispatch, getState);\n    }\n    if (appMode !== mode && mode === APP_MODE.NATIVE) {\n      const action = applyClientMethod({ methodName: 'switchContext', args: [NATIVE_APP] });\n      await action(dispatch, getState);\n    }\n  };\n}\n\nexport function toggleShowCentroids() {\n  return (dispatch, getState) => {\n    const { showCentroids } = getState().inspector;\n    const show = !showCentroids;\n    dispatch({ type: SET_SHOW_CENTROIDS, show });\n  };\n}\n\nexport function getActiveAppId(isIOS, isAndroid) {\n  return async (dispatch, getState) => {\n    try {\n      if (isIOS) {\n        const action = applyClientMethod({ methodName: 'executeScript', args: ['mobile:activeAppInfo', []] });\n        const { bundleId } = await action(dispatch, getState);\n        dispatch({ type: SET_APP_ID, appId: bundleId });\n      }\n      if (isAndroid) {\n        const action = applyClientMethod({ methodName: 'getCurrentPackage' });\n        const appPackage = await action(dispatch, getState);\n        dispatch({ type: SET_APP_ID, appId: appPackage });\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(`Could not Retrieve Active App ID: ${err}`);\n    }\n  };\n}\n\nexport function getServerStatus() {\n  return async (dispatch, getState) => {\n    const status = applyClientMethod({ methodName: 'status' });\n    const { build } = await status(dispatch, getState);\n    dispatch({ type: SET_SERVER_STATUS, status: build });\n  };\n}\n\n// Start the session timer once session starts\nexport function setSessionTime(time) {\n  return (dispatch) => {\n    dispatch({ type: SET_SESSION_TIME, sessionStartTime: time });\n  };\n}\n\nexport function setSwipeStart(swipeStartX, swipeStartY) {\n  return (dispatch) => {\n    dispatch({ type: SET_SWIPE_START, swipeStartX, swipeStartY });\n  };\n}\n\nexport function setSwipeStart1 (swipeStartX, swipeStartY) {\n  return (dispatch) => {\n    dispatch({type: SET_SWIPE_START1, swipeStartX, swipeStartY});\n  };\n}\n\nexport function setSwipeEnd (swipeEndX, swipeEndY) {\n  return (dispatch) => {\n    dispatch({ type: SET_SWIPE_END, swipeEndX, swipeEndY });\n  };\n}\n\nexport function setSwipeEnd1 (swipeEndX, swipeEndY) {\n  return (dispatch) => {\n    dispatch({type: SET_SWIPE_END1, swipeEndX, swipeEndY});\n  };\n}\n\nexport function clearSwipeAction () {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_SWIPE_ACTION });\n  };\n}\n\nexport function promptKeepAlive() {\n  return (dispatch) => {\n    dispatch({ type: PROMPT_KEEP_ALIVE });\n  };\n}\n\nexport function hideKeepAlivePrompt() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_PROMPT_KEEP_ALIVE });\n  };\n}\n\nexport function selectCommandGroup(group) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_COMMAND_GROUP, group });\n  };\n}\n\nexport function selectCommandSubGroup(group) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_COMMAND_SUB_GROUP, group });\n  };\n}\n\nexport function selectInteractionMode(interaction) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_INTERACTION_MODE, interaction });\n  };\n}\n\nexport function startEnteringCommandArgs(commandName, command) {\n  return (dispatch) => {\n    dispatch({ type: ENTERING_COMMAND_ARGS, commandName, command });\n  };\n}\n\nexport function cancelPendingCommand() {\n  return (dispatch) => {\n    dispatch({ type: CANCEL_PENDING_COMMAND });\n  };\n}\n\nexport function setCommandArg(index, value) {\n  return (dispatch) => {\n    dispatch({ type: SET_COMMAND_ARG, index, value });\n  };\n}\n\n/**\n * Ping server every 30 seconds to prevent `newCommandTimeout` from killing session\n */\nexport function runKeepAliveLoop() {\n  return (dispatch, getState) => {\n    dispatch({ type: SET_LAST_ACTIVE_MOMENT, lastActiveMoment: Date.now() });\n    const { driver } = getState().inspector;\n\n    const keepAliveInterval = setInterval(async () => {\n      const { lastActiveMoment } = getState().inspector;\n      console.log('Pinging Appium server to keep session active'); // eslint-disable-line no-console\n      try {\n        await driver.getTimeouts(); // Pings the Appium server to keep it alive\n      } catch (ign) { }\n      const now = Date.now();\n\n      // If the new command limit has been surpassed, prompt user if they want to keep session going\n      // Give them WAIT_FOR_USER_KEEP_ALIVE ms to respond\n      if (now - lastActiveMoment > NO_NEW_COMMAND_LIMIT) {\n        const action = promptKeepAlive();\n        action(dispatch);\n\n        // After the time limit kill the session (this timeout will be killed if they keep it alive)\n        const userWaitTimeout = setTimeout(() => {\n          const action = quitSession(i18n.t('Session closed due to inactivity'), false);\n          action(dispatch, getState);\n        }, WAIT_FOR_USER_KEEP_ALIVE);\n        dispatch({ type: SET_USER_WAIT_TIMEOUT, userWaitTimeout });\n      }\n    }, KEEP_ALIVE_PING_INTERVAL);\n    dispatch({ type: SET_KEEP_ALIVE_INTERVAL, keepAliveInterval });\n  };\n}\n\n/**\n * Get rid of the intervals to keep the session alive\n */\nexport function killKeepAliveLoop() {\n  return (dispatch, getState) => {\n    const { keepAliveInterval, userWaitTimeout } = getState().inspector;\n    clearInterval(keepAliveInterval);\n    if (userWaitTimeout) {\n      clearTimeout(userWaitTimeout);\n    }\n    dispatch({ type: SET_KEEP_ALIVE_INTERVAL, keepAliveInterval: null });\n    dispatch({ type: SET_USER_WAIT_TIMEOUT, userWaitTimeout: null });\n  };\n}\n\n/**\n * Reset the new command clock and kill the wait for user timeout\n */\nexport function keepSessionAlive() {\n  return (dispatch, getState) => {\n    const { userWaitTimeout } = getState().inspector;\n    const action = hideKeepAlivePrompt();\n    action(dispatch);\n    dispatch({ type: SET_LAST_ACTIVE_MOMENT, lastActiveMoment: +(new Date()) });\n    if (userWaitTimeout) {\n      clearTimeout(userWaitTimeout);\n      dispatch({ type: SET_USER_WAIT_TIMEOUT, userWaitTimeout: null });\n    }\n  };\n}\n\nexport function callClientMethod(params) {\n  return async (dispatch, getState) => {\n    console.log(\"🚀 ~ file: Inspector.js:803 ~ return ~ params:\", params);\n    console.log(\"🚀 ~ file: Inspector.js:804 ~ return ~ getState\", getState());\n    const { driver, appMode, mjpegScreenshotUrl, isSourceRefreshOn, selectedElement, screenshotInteractionMode } = getState().inspector;\n    console.log(\"🚀 ~ file: Inspector.js:811 ~ return ~ selectedElement:\", selectedElement);\n    const { methodName, ignoreResult = true } = params;\n    params.appMode = appMode;\n\n    // don't retrieve screenshot if we're already using the mjpeg stream\n    if (mjpegScreenshotUrl) {\n      params.skipScreenshot = true;\n    }\n\n    if (!isSourceRefreshOn) {\n      params.skipRefresh = true;\n    }\n\n    console.log('Calling client method with params:', params);\n    const action = keepSessionAlive();\n    action(dispatch, getState);\n    console.log(\"driver session id\", driver.sessionId);\n    const client = AppiumClient.instance(driver);\n    const res = await client.run(params);\n    console.log(\"🚀 ~ file: Inspector.js:821 ~ return ~ res:\", res);\n    let { commandRes } = res;\n    let postdata = {\n      \"session_id\": driver.sessionId,\n      params,\n      selectedElement,\n      'step-name': screenshotInteractionMode\n    };\n    if (postdata.params.methodName === \"click\") {\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response:\", response);\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n    } else if (postdata.params.methodName === \"swipe\") {\n      // Exclude selectedElement from postdata\n      delete postdata.selectedElement;\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response:\", response);\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n        \n        //check the if the tap then it would be longpress , double tap, tap and drag and drop\n    } else if (postdata.params.methodName === \"tap\") {\n      delete postdata.selectedElement;\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(postdata),\n        })\n          .then((response) => {\n            console.log(\"API response:\", response);\n          })\n          .catch((error) => {\n            console.error(\"API error:\", error);\n          });\n    } else if (postdata.params.methodName === \"sendKeys\") {\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response:\", response);\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n    }\n\n\n\n\n    // Ignore empty objects\n    if (_.isObject(res) && _.isEmpty(res)) {\n      commandRes = null;\n    }\n\n    if (!ignoreResult) {\n      // if the user is running actions manually, we want to show the full response with the\n      // ability to scroll etc...\n      const result = JSON.stringify(commandRes, null, '  ');\n      const truncatedResult = _.truncate(result, { length: 2000 });\n      console.log(`Got result from client method: ${truncatedResult}`);\n      setVisibleCommandResult(result, methodName)(dispatch);\n    }\n    res.elementId = res.id;\n    return res;\n  };\n}\n\nexport function setVisibleCommandResult(result, methodName) {\n  return (dispatch) => {\n    dispatch({ type: SET_VISIBLE_COMMAND_RESULT, result, methodName });\n  };\n}\n\nexport function setAwaitingMjpegStream(isAwaiting) {\n  return (dispatch) => {\n    dispatch({ type: SET_AWAITING_MJPEG_STREAM, isAwaiting });\n  };\n}\n\nexport function saveGesture(params) {\n  return async (dispatch) => {\n    let savedGestures = await getSetting(SET_SAVED_GESTURES) || [];\n    if (!params.id) {\n      params.id = UUID();\n      params.date = Date.now();\n      savedGestures.push(params);\n    } else {\n      for (const gesture of savedGestures) {\n        if (gesture.id === params.id) {\n          gesture.name = params.name;\n          gesture.description = params.description;\n          gesture.actions = params.actions;\n        }\n      }\n    }\n    await setSetting(SET_SAVED_GESTURES, savedGestures);\n    const action = getSavedGestures();\n    await action(dispatch);\n  };\n}\n\nexport function getSavedGestures() {\n  return async (dispatch) => {\n    dispatch({ type: GET_SAVED_GESTURES_REQUESTED });\n    const savedGestures = await getSetting(SET_SAVED_GESTURES);\n    dispatch({ type: GET_SAVED_GESTURES_DONE, savedGestures });\n  };\n}\n\nexport function deleteSavedGesture(id) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_SAVED_GESTURES_REQUESTED, deleteGesture: id });\n    const gestures = await getSetting(SET_SAVED_GESTURES);\n    const newGestures = gestures.filter((gesture) => gesture.id !== id);\n    await setSetting(SET_SAVED_GESTURES, newGestures);\n    dispatch({ type: DELETE_SAVED_GESTURES_DONE });\n    dispatch({ type: GET_SAVED_GESTURES_DONE, savedGestures: newGestures });\n  };\n}\n\nexport function showGestureEditor() {\n  return (dispatch) => {\n    dispatch({ type: SHOW_GESTURE_EDITOR });\n    dispatch({ type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode: 'gesture' });\n  };\n}\n\nexport function hideGestureEditor() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_GESTURE_EDITOR });\n    dispatch({ type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode: 'select' });\n  };\n}\n\nexport function setLoadedGesture(loadedGesture) {\n  return (dispatch) => {\n    dispatch({ type: SET_LOADED_GESTURE, loadedGesture });\n  };\n}\n\nexport function removeLoadedGesture() {\n  return (dispatch) => {\n    dispatch({ type: REMOVE_LOADED_GESTURE });\n  };\n}\n\nexport function displayGesture(showGesture) {\n  return (dispatch) => {\n    dispatch({ type: SHOW_GESTURE_ACTION, showGesture });\n  };\n}\n\nexport function removeGestureDisplay() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_GESTURE_ACTION });\n  };\n}\n\nexport function selectTick(tick) {\n  return (dispatch, getState) => {\n    const { tickCoordinates } = getState().inspector;\n\n    if (tickCoordinates) {\n      dispatch({ type: SET_GESTURE_TAP_COORDS_MODE, x: undefined, y: undefined });\n    }\n\n    dispatch({ type: SELECT_TICK_ELEMENT, selectedTick: tick });\n  };\n}\n\nexport function unselectTick() {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_TAP_COORDINATES });\n    dispatch({ type: UNSELECT_TICK_ELEMENT });\n  };\n}\n\nexport function tapTickCoordinates(x, y) {\n  return (dispatch) => {\n    dispatch({ type: SET_GESTURE_TAP_COORDS_MODE, x, y });\n  };\n}\n\nexport function toggleShowAttributes() {\n  return (dispatch) => {\n    dispatch({ type: TOGGLE_SHOW_ATTRIBUTES });\n  };\n}\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst headspinUrl = 'https://xxxx.headspin.io:4723/v0/your-api-token/wd/hub';\n\nconst ServerTabHeadspin = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='headspinServerHost' placeholder={headspinUrl} addonBefore={t('serverTabHeasdpinWebDriverURL')}\n            value={server.headspin.webDriverUrl} onChange={(e) => setServerParam('webDriverUrl', e.target.value)} />\n          <p className={SessionStyles.localDesc}>{t('sessionHeadspinWebDriverURLDescription')}</p>\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabHeadspin;\n\n","const BUTTON = {\n  DEFAULT: 'default',\n  PRIMARY: 'primary',\n  DISABLED: 'disabled',\n  DANGER: 'danger'\n};\n\nconst ALERT = {\n  ERROR: 'error',\n  WARNING: 'warning',\n  INFO: 'info'\n};\n\nconst INPUT = {\n  NUMBER: 'number',\n  TEXT: 'text',\n  TEXTAREA: 'textarea',\n  PASSWORD: 'password',\n  SUBMIT: 'submit'\n};\n\nconst ROW = {\n  FLEX: 'flex'\n};\n\n\nexport {\n  BUTTON,\n  ALERT,\n  INPUT,\n  ROW\n};\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst browserstackUsernamePlaceholder = (t) => {\n  if (process.env.BROWSERSTACK_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst browserstackAccessKeyPlaceholder = (t) => {\n  if (process.env.BROWSERSTACK_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabBrowserstack = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='browserstackUsername' placeholder={browserstackUsernamePlaceholder(t)} addonBefore={t('BrowserStack Username')} value={server.browserstack.username}\n            onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='browserstackPassword' type={INPUT.PASSWORD} placeholder={browserstackAccessKeyPlaceholder(t)} addonBefore={t('BrowserStack Access Key')}\n            value={server.browserstack.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabBrowserstack;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst lambdatestUsernamePlaceholder = (t) => {\n  if (process.env.LAMBDATEST_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'LAMBDATEST_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst lambdatestAccessKeyPlaceholder = (t) => {\n  if (process.env.LAMBDATEST_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'LAMBDATEST_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabLambdatest = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='lambdatestUsername' placeholder={lambdatestUsernamePlaceholder(t)} addonBefore={t('LambdaTest Username')} value={server.lambdatest.username}\n            onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='lambdatestPassword' type={INPUT.PASSWORD} placeholder={lambdatestAccessKeyPlaceholder(t)} addonBefore={t('LambdaTest Access Key')}\n            value={server.lambdatest.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabLambdatest;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst bitbarApiKeyPlaceholder = (t) => {\n  if (process.env.BITBAR_API_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'BITBAR_API_KEY'});\n  }\n  return t('yourApiKey');\n};\n\nconst ServerTabBitbar = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input id='bitbarApiKey' type={INPUT.PASSWORD} placeholder={bitbarApiKeyPlaceholder(t)} addonBefore={t('Bitbar API Key')}\n            value={server.bitbar.apiKey} onChange={(e) => setServerParam('apiKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabBitbar;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst kobitonUsernamePlaceholder = (t) => {\n  if (process.env.KOBITON_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'KOBITON_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst kobitonAccessKeyPlaceholder = (t) => {\n  if (process.env.KOBITON_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'KOBITON_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabKobiton = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='kobitonUsername' placeholder={kobitonUsernamePlaceholder(t)} addonBefore={t('Your Kobiton Username')} value={server.kobiton.username}\n            onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='kobitonAccessKey' type={INPUT.PASSWORD} placeholder={kobitonAccessKeyPlaceholder(t)} addonBefore={t('Kobiton Access Key')} value={server.kobiton.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabKobiton;\n","import React from 'react';\nimport { Form, Row, Col, Input, Checkbox } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst cloudPerfectoUrl = 'cloud.Perfectomobile.com';\n\nconst portPlaceholder = (server) => server.perfecto.ssl ? '443' : '80';\n\nconst perfectoTokenPlaceholder = (t) => {\n  if (process.env.PERFECTO_TOKEN) {\n    return t('usingDataFoundIn', {environmentVariable: 'PERFECTO_TOKEN'});\n  }\n  return t('Add your token');\n};\n\nconst ServerTabPerfecto = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={9}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='PerfectoServerHost' placeholder={cloudPerfectoUrl} addonBefore={t('Perfecto Host')}\n            value={server.perfecto.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={4}>\n        <Form.Item>\n          <Input id='PerfectoPort' placeholder={portPlaceholder(server)} addonBefore={t('Perfecto Port')} value={server.perfecto.port}\n            onChange={(e) => setServerParam('port', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={9}>\n        <Form.Item>\n          <Input id='token' placeholder={perfectoTokenPlaceholder(t)} addonBefore={t('Perfecto Token')} value={server.perfecto.token}\n            onChange={(e) => setServerParam('token', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={2}>\n        <Form.Item>\n          <Checkbox checked={!!server.perfecto.ssl} onChange={(e) => setServerParam('ssl', e.target.checked)}> {'SSL'}</Checkbox>\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabPerfecto;\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\nimport { INPUT } from '../AntdTypes';\n\nconst pcloudyUsernamePlaceholder = 'username@pcloudy.com';\nconst pcloudyHostPlaceholder = 'cloud.pcloudy.com';\nconst pcloudyAccessKeyExample = 'kjdgtdwn65fdasd78uy6y';\n\nconst ServerTabPcloudy = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={8}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='PcloudyServerHost' placeholder={pcloudyHostPlaceholder} addonBefore={t('Pcloudy Host')}\n            value={server.pcloudy.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={8}>\n        <Form.Item>\n          <Input id='username' type={INPUT.TEXT} placeholder={pcloudyUsernamePlaceholder} addonBefore={t('Pcloudy User Name')}\n            value={server.pcloudy.username} onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={8}>\n        <Form.Item>\n          <Input id='accessKey' type={INPUT.PASSWORD} placeholder={pcloudyAccessKeyExample} addonBefore={t('Pcloudy API Key')}\n            value={server.pcloudy.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabPcloudy;\n","import React from 'react';\nimport { Form, Row, Col, Input, Checkbox, Radio, Tooltip } from 'antd';\nimport SessionStyles from './Session.css';\nimport { INPUT } from '../AntdTypes';\n\nconst sauceUsernamePlaceholder = (t) => {\n  if (process.env.SAUCE_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'SAUCE_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst sauceAccessKeyPlaceholder = (t) => {\n  if (process.env.SAUCE_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'SAUCE_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabSauce = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='sauceUsername' placeholder={sauceUsernamePlaceholder(t)} addonBefore={t('Sauce Username')}\n            value={server.sauce.username} onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='saucePassword' type={INPUT.PASSWORD} placeholder={sauceAccessKeyPlaceholder(t)} addonBefore={t('Sauce Access Key')}\n            value={server.sauce.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n    <Row gutter={8}>\n      <Col span={8}>\n        <Form.Item>\n          <div className={['ant-input-group-addon', SessionStyles.addonDataCenter].join(' ') }>{t('SauceLabs Data Center')}</div>\n          <Radio.Group className={[SessionStyles.inputDataCenter, SessionStyles.addonDataCenterRadioContainer].join(' ')}\n            buttonStyle=\"solid\" defaultValue='us-west-1' id='sauceObjectDataCenter' value={server.sauce.dataCenter} onChange={(e) => setServerParam('dataCenter', e.target.value)}>\n            <Tooltip placement=\"top\" title={t('UP')}>\n              <Radio value='us-west-1'>{t('US')}</Radio>\n            </Tooltip>\n            <Radio value='eu-central-1'>{t('EU')}</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Col>\n      <Col span={8} align=\"right\">\n        <Form.Item>\n          <Checkbox checked={!!server.sauce.useSCProxy} onChange={(e) => setServerParam('useSCProxy', e.target.checked)}> {t('proxyThroughSC')}</Checkbox>\n        </Form.Item>\n      </Col>\n      <Col span={5}>\n        <Form.Item>\n          <Input addonBefore={t('Host')} placeholder={t('localhost')} disabled={!server.sauce.useSCProxy}\n            value={server.sauce.scHost} onChange={(e) => setServerParam('scHost', e.target.value)}/>\n        </Form.Item>\n      </Col>\n      <Col span={3}>\n        <Form.Item>\n          <Input addonBefore={t('Port')} placeholder={4445} disabled={!server.sauce.useSCProxy}\n            value={server.sauce.scPort} onChange={(e) => setServerParam('scPort', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabSauce;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst testingbotKeyPlaceholder = (t) => {\n  if (process.env.TB_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'TB_KEY'});\n  }\n  return t('yourUsername');\n};\n\nconst testingbotSecretPlaceholder = (t) => {\n  if (process.env.TB_SECRET) {\n    return t('usingDataFoundIn', {environmentVariable: 'TB_SECRET'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabTestingbot = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='testingbotKey' placeholder={testingbotKeyPlaceholder(t)} addonBefore={t('TestingBot Key')}\n            value={server.testingbot.key} onChange={(e) => setServerParam('key', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='testingbotSecret' type={INPUT.PASSWORD} placeholder={testingbotSecretPlaceholder(t)} addonBefore={t('TestingBot Secret')}\n            value={server.testingbot.secret} onChange={(e) => setServerParam('secret', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabTestingbot;\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst accessKeyPlaceholder = 'accessKey';\nconst placeholderUrl = 'https://example.experitest.com';\n\nconst ServerTabExperitest = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerUrl' placeholder={placeholderUrl}\n            addonBefore={t('experitestUrl')} value={server.experitest.url}\n            onChange={(evt) => setServerParam('url', evt.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerAccessKey' placeholder={accessKeyPlaceholder}\n            addonBefore={t('experitestAccessKey')} value={server.experitest.accessKey}\n            onChange={(evt) => setServerParam('accessKey', evt.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabExperitest;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\n\nconst robotQATokenPlaceholder = (t) => {\n  if (process.env.ROBOTQA_TOKEN) {\n    return t('usingDataFoundIn', {environmentVariable: 'ROBOTQA_TOKEN'});\n  }\n  return t('Add your token');\n};\n\nconst ServerTabRobotQA = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input id='robotQAToken' placeholder={robotQATokenPlaceholder(t)} addonBefore={t('RobotQA Token')}\n            value={server.roboticmobi.token} onChange={(e) => setServerParam('token', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabRobotQA;\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst ServerTabRemoteTestkit = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input id='remoteTestKitAccessToken' type={INPUT.PASSWORD} addonBefore={t('RemoteTestKit AccessToken')} value={server.remotetestkit.token}\n            onChange={(e) => setServerParam('token', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabRemoteTestkit;\n","import React from 'react';\nimport ServerTabHeadspin from './ServerTabHeadspin';\nimport ServerTabBrowserstack from './ServerTabBrowserstack';\nimport ServerTabLambdatest from './ServerTabLambdatest';\nimport ServerTabBitbar from './ServerTabBitbar';\nimport ServerTabKobiton from './ServerTabKobiton';\nimport ServerTabPerfecto from './ServerTabPerfecto';\nimport ServerTabPcloudy from './ServerTabPcloudy';\nimport ServerTabSauce from './ServerTabSauce';\nimport ServerTabTestingbot from './ServerTabTestingbot';\nimport ServerTabExperitest from './ServerTabExperitest';\nimport ServerTabRobotQA from './ServerTabRobotQA';\nimport ServerTabRemoteTestKit from './ServerTabRemoteTestKit';\n\nimport SessionStyles from './Session.css';\n\n// ParcelJS handles image loading by exporting a path to the image\nimport SauceLogo from '../../images/sauce_logo.svg';\nimport HeadSpinLogo from '../../images/headspin_logo.svg';\nimport BrowserStackLogo from '../../images/browserstack_logo.svg';\nimport LambdaTestLogo from '../../images/lambdatest_logo.svg';\nimport BitBarLogo from '../../images/bitbar_logo.svg';\nimport KobitonLogo from '../../images/kobiton_logo.svg';\nimport PerfectoLogo from '../../images/perfecto_logo.svg';\nimport PcloudyLogo from '../../images/pcloudy_logo.svg';\nimport TestingBotLogo from '../../images/testingbot_logo.svg';\nimport ExperitestLogo from '../../images/experitest_logo.svg';\nimport RobotQALogo from '../../images/robotqa_logo.svg';\nimport RemoteTestKitLogo from '../../images/remotetestkit_logo.svg';\n\nconst CloudProviders = {\n  sauce: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={SauceLogo} /></span>,\n    tab: (props) => <ServerTabSauce {...props} />,\n    logo: SauceLogo,\n  },\n  headspin: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={HeadSpinLogo} /></span>,\n    tab: (props) => <ServerTabHeadspin {...props} />,\n    logo: HeadSpinLogo,\n  },\n  browserstack: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BrowserStackLogo} /></span>,\n    tab: (props) => <ServerTabBrowserstack {...props} />,\n    logo: BrowserStackLogo,\n  },\n  lambdatest: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={LambdaTestLogo} /></span>,\n    tab: (props) => <ServerTabLambdatest {...props} />,\n    logo: LambdaTestLogo,\n  },\n  bitbar: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BitBarLogo} /></span>,\n    tab: (props) => <ServerTabBitbar {...props} />,\n    logo: BitBarLogo,\n  },\n  kobiton: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={KobitonLogo} /></span>,\n    tab: (props) => <ServerTabKobiton {...props} />,\n    logo: KobitonLogo,\n  },\n  perfecto: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PerfectoLogo} /></span>,\n    tab: (props) => <ServerTabPerfecto {...props} />,\n    logo: PerfectoLogo,\n  },\n  pcloudy: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PcloudyLogo} /></span>,\n    tab: (props) => <ServerTabPcloudy {...props} />,\n    logo: PcloudyLogo,\n  },\n  testingbot: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={TestingBotLogo} /></span>,\n    tab: (props) => <ServerTabTestingbot {...props} />,\n    logo: TestingBotLogo,\n  },\n  experitest: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={ExperitestLogo} /></span>,\n    tab: (props) => <ServerTabExperitest {...props} />,\n    logo: ExperitestLogo,\n  },\n  roboticmobi: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={RobotQALogo} /></span>,\n    tab: (props) => <ServerTabRobotQA {...props} />,\n    logo: RobotQALogo,\n  },\n  remotetestkit: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={RemoteTestKitLogo} /></span>,\n    tab: (props) => <ServerTabRemoteTestKit {...props} />,\n    logo: RemoteTestKitLogo,\n  }\n};\n\nexport default CloudProviders;","const APPIUM_SESSION_FILE_VERSION = '1.0';\n\nexport function getAppiumSessionFilePath (argv, isPackaged, isDev) {\n  if (isDev) {\n    // do not use file launcher in dev mode because argv is different\n    // then it is in production\n    return false;\n  }\n  if (process.platform === 'darwin' && !isDev) {\n    // packaged macOS apps do not receive args from process.argv, they\n    // receive the filepath argument from the `electron.app.on('open-file', cb)` event\n    return false;\n  }\n  const argvIndex = isPackaged ? 1 : 2;\n  return argv[argvIndex];\n}\n\n// get the slice of the redux state that's needed for the .appiumsession files\nexport function getSaveableState (reduxState) {\n  return {\n    version: APPIUM_SESSION_FILE_VERSION,\n    caps: reduxState.caps,\n    server: reduxState.server,\n    serverType: reduxState.serverType,\n    visibleProviders: reduxState.visibleProviders,\n  };\n}\n\nexport const APPIUM_SESSION_EXTENSION = 'appiumsession';\n","import { getSetting, setSetting, SAVED_SESSIONS, SERVER_ARGS, SESSION_SERVER_TYPE,\n         SESSION_SERVER_PARAMS } from '../../shared/settings';\nimport { v4 as UUID } from 'uuid';\nimport { push } from 'redux-first-history';\nimport { notification } from 'antd';\nimport { includes, debounce, toPairs, union, without, keys, isUndefined, isPlainObject } from 'lodash';\nimport { setSessionDetails, quitSession } from './Inspector';\nimport i18n from '../../configs/i18next.config.renderer';\nimport CloudProviders from '../components/Session/CloudProviders';\nimport { Web2Driver } from 'web2driver';\nimport { addVendorPrefixes } from '../util';\nimport ky from 'ky/umd';\nimport moment from 'moment';\nimport { APP_MODE } from '../components/Inspector/shared';\nimport { ipcRenderer, fs, util } from '../polyfills';\nimport { getSaveableState } from '../../main/helpers';\n\nexport const NEW_SESSION_REQUESTED = 'NEW_SESSION_REQUESTED';\nexport const NEW_SESSION_LOADING = 'NEW_SESSION_LOADING';\nexport const NEW_SESSION_DONE = 'NEW_SESSION_DONE';\nexport const CHANGE_CAPABILITY = 'CHANGE_CAPABILITY';\nexport const SAVE_SESSION_REQUESTED = 'SAVE_SESSION_REQUESTED';\nexport const SAVE_SESSION_DONE = 'SAVE_SESSION_DONE';\nexport const GET_SAVED_SESSIONS_REQUESTED = 'GET_SAVED_SESSIONS_REQUESTED';\nexport const GET_SAVED_SESSIONS_DONE = 'GET_SAVED_SESSIONS_DONE';\nexport const SET_CAPABILITY_PARAM = 'SET_CAPABILITY_PARAM';\nexport const ADD_CAPABILITY = 'ADD_CAPABILITY';\nexport const REMOVE_CAPABILITY = 'REMOVE_CAPABILITY';\nexport const SWITCHED_TABS = 'SWITCHED_TABS';\nexport const SET_CAPS_AND_SERVER = 'SET_CAPS_AND_SERVER';\nexport const SAVE_AS_MODAL_REQUESTED = 'SAVE_AS_MODAL_REQUESTED';\nexport const HIDE_SAVE_AS_MODAL_REQUESTED = 'HIDE_SAVE_AS_MODAL_REQUESTED';\nexport const SET_SAVE_AS_TEXT = 'SET_SAVE_AS_TEXT';\nexport const DELETE_SAVED_SESSION_REQUESTED = 'DELETE_SAVED_SESSION_REQUESTED';\nexport const DELETE_SAVED_SESSION_DONE = 'DELETE_SAVED_SESSION_DONE';\nexport const CHANGE_SERVER_TYPE = 'CHANGE_SERVER_TYPE';\nexport const SET_SERVER_PARAM = 'SET_SERVER_PARAM';\nexport const SET_SERVER = 'SET_SERVER';\n\nexport const VISIBLE_PROVIDERS = 'VISIBLE_PROVIDERS';\n\nexport const SET_ATTACH_SESS_ID = 'SET_ATTACH_SESS_ID';\n\nexport const GET_SESSIONS_REQUESTED = 'GET_SESSIONS_REQUESTED';\nexport const GET_SESSIONS_DONE = 'GET_SESSIONS_DONE';\n\nexport const ENABLE_DESIRED_CAPS_NAME_EDITOR = 'ENABLE_DESIRED_CAPS_NAME_EDITOR';\nexport const ABORT_DESIRED_CAPS_NAME_EDITOR = 'ABORT_DESIRED_CAPS_NAME_EDITOR';\nexport const SAVE_DESIRED_CAPS_NAME = 'SAVE_DESIRED_CAPS_NAME';\nexport const SET_DESIRED_CAPS_NAME = 'SET_DESIRED_CAPS_NAME';\n\nexport const ENABLE_DESIRED_CAPS_EDITOR = 'ENABLE_DESIRED_CAPS_EDITOR';\nexport const ABORT_DESIRED_CAPS_EDITOR = 'ABORT_DESIRED_CAPS_EDITOR';\nexport const SAVE_RAW_DESIRED_CAPS = 'SAVE_RAW_DESIRED_CAPS';\nexport const SET_RAW_DESIRED_CAPS = 'SET_RAW_DESIRED_CAPS';\nexport const SHOW_DESIRED_CAPS_JSON_ERROR = 'SHOW_DESIRED_CAPS_JSON_ERROR';\n\nexport const IS_ADDING_CLOUD_PROVIDER = 'IS_ADDING_CLOUD_PROVIDER';\n\nexport const SET_PROVIDERS = 'SET_PROVIDERS';\n\nexport const SET_ADD_VENDOR_PREFIXES = 'SET_ADD_VENDOR_PREFIXES';\n\nexport const SET_STATE_FROM_URL = 'SET_STATE_FROM_URL';\nexport const SET_STATE_FROM_SAVED = 'SET_STATE_FROM_SAVED';\n\n\nconst CAPS_NEW_COMMAND = 'appium:newCommandTimeout';\nconst CAPS_CONNECT_HARDWARE_KEYBOARD = 'appium:connectHardwareKeyboard';\nconst CAPS_NATIVE_WEB_SCREENSHOT = 'appium:nativeWebScreenshot';\nconst CAPS_ENSURE_WEBVIEW_HAVE_PAGES = 'appium:ensureWebviewsHavePages';\nconst CAPS_INCLUDE_SAFARI_IN_WEBVIEWS = 'appium:includeSafariInWebviews';\n\nconst FILE_PATH_STORAGE_KEY = 'last_opened_file';\n\nconst AUTO_START_URL_PARAM = '1'; // what should be passed in to ?autoStart= to turn it on\n\nconst MJPEG_CAP = 'mjpegScreenshotUrl';\nconst MJPEG_PORT_CAP = 'mjpegServerPort';\n\n// Multiple requests sometimes send a new session request\n// after establishing a session.\n// This situation could happen easier on cloud vendors,\n// so let's set zero so far.\n// TODO: increase this retry when we get issues\nexport const CONN_RETRIES = 0;\nconst CONN_TIMEOUT = 5 * 60 * 1000;\nconst HEADERS_CONTENT = 'application/json; charset=utf-8';\n\n// 1 hour default newCommandTimeout\nconst NEW_COMMAND_TIMEOUT_SEC = 3600;\n\nlet isFirstRun = true; // we only want to auto start a session on a first run\n\nconst serverTypes = {};\nfor (const key of keys(CloudProviders)) {\n  serverTypes[key] = key;\n}\nserverTypes.local = 'local';\nserverTypes.remote = 'remote';\n\nexport const ServerTypes = serverTypes;\n\nexport const DEFAULT_SERVER_PATH = '/';\nexport const DEFAULT_SERVER_HOST = '127.0.0.1';\nexport const DEFAULT_SERVER_PORT = 4723;\n\nconst SAUCE_OPTIONS_CAP = 'sauce:options';\n\nconst JSON_TYPES = ['object', 'number', 'boolean'];\n\nexport function getCapsObject (caps) {\n  return Object.assign({}, ...(caps.map((cap) => {\n    if (JSON_TYPES.indexOf(cap.type) !== -1) {\n      try {\n        let obj = JSON.parse(cap.value);\n        return {[cap.name]: obj};\n      } catch (ign) {}\n    }\n    return {[cap.name]: cap.value};\n  })));\n}\n\nexport function showError (e, methodName, secs = 5) {\n  let errMessage;\n  if (e['jsonwire-error'] && e['jsonwire-error'].status === 7) {\n    // FIXME: we probably should set 'findElement' as the method name\n    // if it is also number.\n    if (methodName === 10) {\n      methodName = 'findElements';\n    }\n    errMessage = i18n.t('findElementFailure', {methodName});\n    if (e.message) {\n      errMessage += ` Original error: '${e.message}'`;\n    }\n  } else if (e.data) {\n    try {\n      e.data = JSON.parse(e.data);\n    } catch (ign) {}\n    if (e.data.value && e.data.value.message) {\n      errMessage = e.data.value.message;\n    } else {\n      errMessage = e.data;\n    }\n  } else if (e.message) {\n    errMessage = e.message;\n  } else if (e.code) {\n    errMessage = e.code;\n  } else {\n    errMessage = i18n.t('Could not start session');\n  }\n  if (errMessage === 'ECONNREFUSED' || includes(errMessage, 'Failed to fetch')) {\n    errMessage = i18n.t('couldNotConnect');\n  }\n\n  notification.error({\n    message: methodName ? i18n.t('callToMethodFailed', {methodName}) : i18n.t('Error'),\n    description: errMessage,\n    duration: secs\n  });\n\n}\n\n/**\n * Change the caps object, along with the server details and then go back to the new session tab\n */\nexport function setCapsAndServer (server, serverType, caps, uuid, name) {\n  return (dispatch) => {\n    dispatch({type: SET_CAPS_AND_SERVER, server, serverType, caps, uuid, name});\n  };\n}\n\n/**\n * Change a single desired capability\n */\nexport function changeCapability (key, value) {\n  return (dispatch) => {\n    dispatch({type: CHANGE_CAPABILITY, key, value});\n  };\n}\n\n/**\n * Push a capability to the list\n */\nexport function addCapability () {\n  return (dispatch) => {\n    dispatch({type: ADD_CAPABILITY});\n  };\n}\n\n/**\n * Update value of a capability parameter\n */\nexport function setCapabilityParam (index, name, value) {\n  return (dispatch) => {\n    dispatch({type: SET_CAPABILITY_PARAM, index, name, value});\n  };\n}\n\n/**\n * Delete a capability from the list\n */\nexport function removeCapability (index) {\n  return (dispatch) => {\n    dispatch({type: REMOVE_CAPABILITY, index});\n  };\n}\n\nfunction _addVendorPrefixes (caps, dispatch, getState) {\n  const {server, serverType, capsUUID, capsName} = getState().session;\n  const prefixedCaps = addVendorPrefixes(caps);\n  setCapsAndServer(server, serverType, prefixedCaps, capsUUID, capsName)(dispatch);\n  return prefixedCaps;\n}\n\n/**\n * Start a new appium session with the given caps\n */\nexport function newSession (caps, attachSessId = null) {\n  return async (dispatch, getState) => {\n    let session = getState().session;\n\n    // first add vendor prefixes to caps if requested\n    if (!attachSessId && session.addVendorPrefixes) {\n      caps = _addVendorPrefixes(caps, dispatch, getState);\n    }\n\n    dispatch({type: NEW_SESSION_REQUESTED, caps});\n\n    let desiredCapabilities = caps ? getCapsObject(caps) : {};\n    let host, port, username, accessKey, https, path, token;\n    desiredCapabilities = addCustomCaps(desiredCapabilities);\n\n    switch (session.serverType) {\n      case ServerTypes.local:\n        host = session.server.local.hostname;\n        if (host === '0.0.0.0') {\n          // if we're on windows, we won't be able to connect directly to '0.0.0.0'\n          // so just connect to localhost; if we're listening on all interfaces,\n          // that will of course include 127.0.0.1 on all platforms\n          host = 'localhost';\n        }\n        port = session.server.local.port;\n        break;\n      case ServerTypes.remote:\n        host = session.server.remote.hostname;\n        port = session.server.remote.port;\n        path = session.server.remote.path;\n        https = session.server.remote.ssl;\n        break;\n      case ServerTypes.sauce:\n        path = '/wd/hub';\n        host = `ondemand.${session.server.sauce.dataCenter}.saucelabs.com`;\n        port = 80;\n        if (session.server.sauce.useSCProxy) {\n          host = session.server.sauce.scHost || 'localhost';\n          port = parseInt(session.server.sauce.scPort, 10) || 4445;\n        }\n        username = session.server.sauce.username || process.env.SAUCE_USERNAME;\n        accessKey = session.server.sauce.accessKey || process.env.SAUCE_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('sauceCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = false;\n        if (!isPlainObject(desiredCapabilities[SAUCE_OPTIONS_CAP])) {\n          desiredCapabilities[SAUCE_OPTIONS_CAP] = {};\n        }\n        if (!desiredCapabilities[SAUCE_OPTIONS_CAP].name) {\n          const dateTime = moment().format('lll');\n          desiredCapabilities[SAUCE_OPTIONS_CAP].name = `Appium Desktop Session -- ${dateTime}`;\n        }\n        break;\n      case ServerTypes.headspin: {\n        let headspinUrl;\n        try {\n          headspinUrl = new URL(session.server.headspin.webDriverUrl);\n        } catch (ign) {\n          showError(new Error(`${session.server.headspin.webDriverUrl} is invalid url`), null, 0);\n          return;\n        }\n        host = session.server.headspin.hostname = headspinUrl.hostname;\n        path = session.server.headspin.path = headspinUrl.pathname;\n        https = session.server.headspin.ssl = headspinUrl.protocol === 'https:';\n        // new URL() does not have the port of 443 when `https` and 80 when `http`\n        port = session.server.headspin.port = headspinUrl.port === '' ? (https ? 443 : 80) : headspinUrl.port;\n        break;\n      }\n      case ServerTypes.perfecto:\n        host = session.server.perfecto.hostname;\n        port = session.server.perfecto.port || (session.server.perfecto.ssl ? 443 : 80);\n        token = session.server.perfecto.token || process.env.PERFECTO_TOKEN;\n        path = session.server.perfecto.path = '/nexperience/perfectomobile/wd/hub';\n        if (!token) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('Perfecto SecurityToken is required'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities['perfecto:options'] = {securityToken: token};\n        https = session.server.perfecto.ssl;\n        break;\n      case ServerTypes.browserstack:\n        host = session.server.browserstack.hostname = process.env.BROWSERSTACK_HOST || 'hub-cloud.browserstack.com';\n        port = session.server.browserstack.port = process.env.BROWSERSTACK_PORT || 443;\n        path = session.server.browserstack.path = '/wd/hub';\n        username = session.server.browserstack.username || process.env.BROWSERSTACK_USERNAME;\n        if (!desiredCapabilities['bstack:options']) {\n          desiredCapabilities['bstack:options'] = {};\n        }\n        desiredCapabilities['bstack:options'].source = 'appiumdesktop';\n        accessKey = session.server.browserstack.accessKey || process.env.BROWSERSTACK_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('browserstackCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.browserstack.ssl = (parseInt(port, 10) === 443);\n        break;\n      case ServerTypes.lambdatest:\n        host = session.server.lambdatest.hostname = process.env.LAMBDATEST_HOST || 'mobile-hub.lambdatest.com';\n        port = session.server.lambdatest.port = process.env.LAMBDATEST_PORT || 443;\n        path = session.server.lambdatest.path = '/wd/hub';\n        username = session.server.lambdatest.username || process.env.LAMBDATEST_USERNAME;\n        if (desiredCapabilities.hasOwnProperty.call(desiredCapabilities, 'lt:options')) {\n          desiredCapabilities['lt:options'].source = 'appiumdesktop';\n          desiredCapabilities['lt:options'].isRealMobile = true;\n          if (session.server.advanced.useProxy) {\n            desiredCapabilities['lt:options'].proxyUrl = isUndefined(session.server.advanced.proxy) ? '' : session.server.advanced.proxy;\n          }\n        } else {\n          desiredCapabilities['lambdatest:source'] = 'appiumdesktop';\n          desiredCapabilities['lambdatest:isRealMobile'] = true;\n          if (session.server.advanced.useProxy) {\n            desiredCapabilities['lambdatest:proxyUrl'] = isUndefined(session.server.advanced.proxy) ? '' : session.server.advanced.proxy;\n          }\n        }\n        accessKey = session.server.lambdatest.accessKey || process.env.LAMBDATEST_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('lambdatestCredentialsRequired'),\n            duration: 4,\n          });\n          return;\n        }\n        https = session.server.lambdatest.ssl = parseInt(port, 10) === 443;\n        break;\n      case ServerTypes.bitbar:\n        host = process.env.BITBAR_HOST || 'appium.bitbar.com';\n        port = session.server.bitbar.port = 443;\n        path = session.server.bitbar.path = '/wd/hub';\n        accessKey = session.server.bitbar.apiKey || process.env.BITBAR_API_KEY;\n        if (!accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('bitbarCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities['bitbar:options'] = {\n          source: 'appiumdesktop',\n          apiKey: accessKey,\n        };\n        https = session.server.bitbar.ssl = true;\n        break;\n      case ServerTypes.kobiton:\n        host = process.env.KOBITON_HOST || 'api.kobiton.com';\n        port = session.server.kobiton.port = 443;\n        path = session.server.kobiton.path = '/wd/hub';\n        username = session.server.kobiton.username || process.env.KOBITON_USERNAME;\n        accessKey = session.server.kobiton.accessKey || process.env.KOBITON_ACCESS_KEY;\n        desiredCapabilities['kobiton:options'] = {};\n        desiredCapabilities['kobiton:options'].source = 'appiumdesktop';\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('kobitonCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.kobiton.ssl = true;\n        break;\n      case ServerTypes.pcloudy:\n        host = session.server.pcloudy.hostname;\n        port = session.server.pcloudy.port = 443;\n        path = session.server.pcloudy.path = '/objectspy/wd/hub';\n        desiredCapabilities.pCloudy_Username = session.server.pcloudy.username || process.env.PCLOUDY_USERNAME;\n        desiredCapabilities.pCloudy_ApiKey = session.server.pcloudy.accessKey || process.env.PCLOUDY_ACCESS_KEY;\n        if (!(session.server.pcloudy.username || process.env.PCLOUDY_USERNAME) ||\n              !(session.server.pcloudy.accessKey || process.env.PCLOUDY_ACCESS_KEY)) {\n          notification.error({\n            message: 'Error',\n            description: 'PCLOUDY username and api key are required!',\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.pcloudy.ssl = true;\n        break;\n      case ServerTypes.testingbot:\n        host = session.server.testingbot.hostname = process.env.TB_HOST || 'hub.testingbot.com';\n        port = session.server.testingbot.port = 443;\n        path = session.server.testingbot.path = '/wd/hub';\n        if (!desiredCapabilities['tb:options']) {\n          desiredCapabilities['tb:options'] = {};\n        }\n        desiredCapabilities['tb:options'].key = session.server.testingbot.key || process.env.TB_KEY;\n        desiredCapabilities['tb:options'].secret = session.server.testingbot.secret || process.env.TB_SECRET;\n        if (!(session.server.testingbot.key || process.env.TB_KEY) ||\n              !(session.server.testingbot.secret || process.env.TB_SECRET)) {\n          notification.error({\n            message: 'Error',\n            description: i18n.t('testingbotCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.testingbot.ssl = true;\n        break;\n      case ServerTypes.experitest: {\n        if (!session.server.experitest.url || !session.server.experitest.accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('experitestAccessKeyURLRequired'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities['experitest:accessKey'] = session.server.experitest.accessKey;\n\n        let experitestUrl;\n        try {\n          experitestUrl = new URL(session.server.experitest.url);\n        } catch (ign) {\n          showError(new Error(`${session.server.experitest.url} is invalid url`), null, 0);\n          return;\n        }\n\n        host = session.server.experitest.hostname = experitestUrl.hostname;\n        path = session.server.experitest.path = '/wd/hub';\n        https = session.server.experitest.ssl = experitestUrl.protocol === 'https:';\n        port = session.server.experitest.port = experitestUrl.port === '' ? (https ? 443 : 80) : experitestUrl.port;\n        break;\n      } case ServerTypes.roboticmobi: {\n        host = 'remote.robotqa.com';\n        path = '/wd/hub';\n        port = 443;\n        https = session.server.roboticmobi.ssl = true;\n        if (caps) {\n          desiredCapabilities['robotqa:options'] = {};\n          desiredCapabilities['robotqa:options'].robotqa_token = session.server.roboticmobi.token || process.env.ROBOTQA_TOKEN;\n        }\n        break;\n      } case ServerTypes.remotetestkit: {\n        host = 'gwjp.appkitbox.com';\n        path = '/wd/hub';\n        port = 443;\n        https = true;\n        desiredCapabilities['remotetestkit:options'] = {};\n        desiredCapabilities['remotetestkit:options'].accessToken = session.server.remotetestkit.token;\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    // if the server path is '' (or any other kind of falsy) set it to default\n    path = path || DEFAULT_SERVER_PATH;\n    host = host || DEFAULT_SERVER_HOST;\n    port = port || DEFAULT_SERVER_PORT;\n\n    // TODO W2D handle proxy and rejectUnauthorized cases\n    //let rejectUnauthorized = !session.server.advanced.allowUnauthorized;\n    //let proxy;\n    //if (session.server.advanced.useProxy && session.server.advanced.proxy) {\n    //  proxy = session.server.advanced.proxy;\n    //}\n\n    dispatch({type: NEW_SESSION_LOADING});\n\n\n    const serverOpts = {\n      hostname: host,\n      port: parseInt(port, 10),\n      protocol: https ? 'https' : 'http',\n      path,\n      connectionRetryCount: CONN_RETRIES,\n      connectionRetryTimeout: CONN_TIMEOUT\n    };\n\n    if (username && accessKey) {\n      serverOpts.user = username;\n      serverOpts.key = accessKey;\n    }\n\n    // If a newCommandTimeout wasn't provided, set it to 60 * 60 so that sessions don't close on users in short term.\n    // I saw sometimes infinit session timeout was not so good for cloud providers.\n    // So, let me define this value as NEW_COMMAND_TIMEOUT_SEC by default.\n    if (isUndefined(desiredCapabilities[CAPS_NEW_COMMAND])) {\n      desiredCapabilities[CAPS_NEW_COMMAND] = NEW_COMMAND_TIMEOUT_SEC;\n    }\n\n    // If someone didn't specify connectHardwareKeyboard, set it to true by\n    // default\n    if (isUndefined(desiredCapabilities[CAPS_CONNECT_HARDWARE_KEYBOARD])) {\n      desiredCapabilities[CAPS_CONNECT_HARDWARE_KEYBOARD] = true;\n    }\n\n    serverOpts.logLevel = process.env.NODE_ENV === 'development' ? 'info' : 'warn';\n\n    let driver = null;\n    try {\n      if (attachSessId) {\n        // When attaching to a session id, webdriver does not fully populate\n        // client information, so we should supplement by attaching session\n        // capabilities that we are attaching to.\n        const attachedSessionCaps = session.runningAppiumSessions.find((session) => session.id === attachSessId).capabilities;\n        serverOpts.isMobile = true;\n        serverOpts.isIOS = Boolean(attachedSessionCaps.platformName.match(/iOS/i));\n        serverOpts.isAndroid = Boolean(attachedSessionCaps.platformName.match(/Android/i));\n        driver = await Web2Driver.attachToSession(attachSessId, serverOpts, attachedSessionCaps);\n        driver._isAttachedSession = true;\n      } else {\n        driver = await Web2Driver.remote(serverOpts, desiredCapabilities);\n      }\n    } catch (err) {\n      showError(err, null, 0);\n      return;\n    } finally {\n      dispatch({type: NEW_SESSION_DONE});\n      // Save the current server settings\n      await setSetting(SESSION_SERVER_PARAMS, session.server);\n    }\n\n    // The homepage arg in ChromeDriver is not working with Appium. iOS can have a default url, but\n    // we want to keep the process equal to prevent complexity so we launch a default url here to make\n    // sure we don't start with an empty page which will not show proper HTML in the inspector\n    const {browserName = ''} = desiredCapabilities;\n    let mode = APP_MODE.NATIVE;\n\n    if (browserName.trim() !== '') {\n      try {\n        mode = APP_MODE.WEB_HYBRID;\n        await driver.navigateTo('https://appium.io');\n      } catch (ign) {}\n    }\n\n\n    let mjpegScreenshotUrl = driver.capabilities[`appium:${MJPEG_CAP}`] ||\n      driver.capabilities[MJPEG_CAP] ||\n      null;\n\n    const mjpegScreenshotPort = driver.capabilities[`appium:${MJPEG_PORT_CAP}`] ||\n      driver.capabilities[MJPEG_PORT_CAP] ||\n      null;\n\n    // Build mjpegScreenshotUrl if mjpegServerPort in session capabilities\n    if (!mjpegScreenshotUrl && mjpegScreenshotPort) {\n      mjpegScreenshotUrl = `${https ? 'https' : 'http'}://${host}:${mjpegScreenshotPort}`;\n    }\n\n    // pass some state to the inspector that it needs to build recorder\n    // code boilerplate\n    const action = setSessionDetails({\n      driver,\n      sessionDetails: {\n        desiredCapabilities,\n        host,\n        port,\n        path,\n        username,\n        accessKey,\n        https,\n      },\n      mode,\n      mjpegScreenshotUrl\n    });\n    action(dispatch);\n    dispatch(push('/inspector'));\n  };\n}\n\n\n/**\n * Saves the caps and server details\n */\nexport function saveSession (server, serverType, caps, params) {\n  return async (dispatch) => {\n    let {name, uuid} = params;\n    dispatch({type: SAVE_SESSION_REQUESTED});\n    let savedSessions = await getSetting(SAVED_SESSIONS) || [];\n    if (!uuid) {\n\n      // If it's a new session, add it to the list\n      uuid = UUID();\n      let newSavedSession = {\n        date: Date.now(),\n        name,\n        uuid,\n        caps,\n        server,\n        serverType,\n      };\n      savedSessions.push(newSavedSession);\n    } else {\n\n      // If it's an existing session, overwrite it\n      for (let session of savedSessions) {\n        if (session.uuid === uuid) {\n          session.name = name;\n          session.caps = caps;\n          session.server = server;\n          session.serverType = serverType;\n        }\n      }\n    }\n    await setSetting(SAVED_SESSIONS, savedSessions);\n    const action = getSavedSessions();\n    await action(dispatch);\n    dispatch({type: SET_CAPS_AND_SERVER, server, serverType, caps, uuid, name});\n    dispatch({type: SAVE_SESSION_DONE});\n  };\n}\n\n/**\n * Get the sessions saved by the user\n */\nexport function getSavedSessions () {\n  return async (dispatch) => {\n    dispatch({type: GET_SAVED_SESSIONS_REQUESTED});\n    let savedSessions = await getSetting(SAVED_SESSIONS);\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions});\n  };\n}\n\n/**\n * Switch to a different tab\n */\nexport function switchTabs (key) {\n  return (dispatch) => {\n    dispatch({type: SWITCHED_TABS, key});\n  };\n}\n\n/**\n * Open a 'Save As' modal\n */\nexport function requestSaveAsModal () {\n  return (dispatch) => {\n    dispatch({type: SAVE_AS_MODAL_REQUESTED});\n  };\n}\n\n/**\n * Hide the 'Save As' modal\n */\nexport function hideSaveAsModal () {\n  return (dispatch) => {\n    dispatch({type: HIDE_SAVE_AS_MODAL_REQUESTED});\n  };\n}\n\n/**\n * Set the text to save capabilities as\n */\nexport function setSaveAsText (saveAsText) {\n  return (dispatch) => {\n    dispatch({type: SET_SAVE_AS_TEXT, saveAsText});\n  };\n}\n\n/**\n * Delete a saved session\n */\nexport function deleteSavedSession (uuid) {\n  return async (dispatch) => {\n    dispatch({type: DELETE_SAVED_SESSION_REQUESTED, uuid});\n    let savedSessions = await getSetting(SAVED_SESSIONS);\n    let newSessions = savedSessions.filter((session) => session.uuid !== uuid);\n    await setSetting(SAVED_SESSIONS, newSessions);\n    dispatch({type: DELETE_SAVED_SESSION_DONE});\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions: newSessions});\n  };\n}\n\n/**\n * Set the session id to attach to\n */\nexport function setAttachSessId (attachSessId) {\n  return (dispatch) => {\n    dispatch({type: SET_ATTACH_SESS_ID, attachSessId});\n  };\n}\n\n/**\n * Change the server type\n */\nexport function changeServerType (serverType) {\n  return async (dispatch, getState) => {\n    await setSetting(SESSION_SERVER_TYPE, serverType);\n    dispatch({type: CHANGE_SERVER_TYPE, serverType});\n    const action = getRunningSessions();\n    action(dispatch, getState);\n  };\n}\n\n/**\n * Set a server parameter (host, port, etc...)\n */\nexport function setServerParam (name, value, serverType) {\n  const debounceGetRunningSessions = debounce(getRunningSessions(), 5000);\n  return async (dispatch, getState) => {\n    serverType = serverType || getState().session.serverType;\n    await setSetting(SESSION_SERVER_TYPE, serverType);\n    dispatch({type: SET_SERVER_PARAM, serverType, name, value});\n    debounceGetRunningSessions(dispatch, getState);\n  };\n}\n\n/**\n * Set the local server hostname and port to whatever was saved in 'actions/StartServer.js' so that it\n * defaults to what the currently running appium server is\n */\nexport function setLocalServerParams () {\n  return async (dispatch, getState) => {\n    let serverArgs = await getSetting(SERVER_ARGS);\n    // Get saved server args from settings and set local server settings to it. If there are no saved args, set local\n    // host and port to undefined\n    if (serverArgs) {\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: serverArgs.port});\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: 'localhost'});\n    } else {\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: undefined});\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: undefined});\n      if (getState().session.serverType === 'local') {\n        const action = changeServerType('remote');\n        await action(dispatch, getState);\n      }\n    }\n  };\n}\n\n/**\n * Set the server parameters to whatever they were last saved as.\n * Params are saved whenever there's a new session\n */\nexport function setSavedServerParams () {\n  return async (dispatch, getState) => {\n    let server = await getSetting(SESSION_SERVER_PARAMS);\n    let serverType = await getSetting(SESSION_SERVER_TYPE);\n    let currentProviders = getState().session.visibleProviders;\n\n    if (server) {\n      // if we have a cloud provider as a saved server, but for some reason the\n      // cloud provider is no longer in the list, revert server type to remote\n      if (keys(CloudProviders).includes(serverType) &&\n          !currentProviders.includes(serverType)) {\n        serverType = ServerTypes.remote;\n      }\n      dispatch({type: SET_SERVER, server, serverType});\n    }\n  };\n}\n\nexport function setStateFromAppiumFile (newFilepath = null) {\n  return async (dispatch) => {\n    // no \"fs\" means we're not in an Electron renderer so do nothing\n    if (!fs) {\n      return;\n    }\n    try {\n      let filePath = newFilepath;\n      if (!newFilepath) {\n        const lastArg = process.argv[process.argv.length - 1];\n        if (!lastArg.startsWith('filename=')) {\n          return;\n        }\n        filePath = lastArg.split('=')[1];\n      }\n      if (sessionStorage.getItem(FILE_PATH_STORAGE_KEY) === filePath) {\n        // file was opened already, do nothing\n        return;\n      }\n      const appiumJson = JSON.parse(await util.promisify(fs.readFile)(filePath, 'utf8'));\n      sessionStorage.setItem(FILE_PATH_STORAGE_KEY, filePath);\n      dispatch({type: SET_STATE_FROM_SAVED, state: appiumJson, filePath});\n    } catch (e) {\n      notification.error({\n        message: `Cannot open file '${newFilepath}'.\\n ${e.message}\\n ${e.stack}`,\n      });\n    }\n  };\n}\n\nexport function saveFile (filepath) {\n  return async (dispatch, getState) => {\n    const state = getState().session;\n    const filePath = filepath || state.filePath;\n    if (filePath) {\n      const appiumFileInfo = getSaveableState(state);\n      await util.promisify(fs.writeFile)(filePath, JSON.stringify(appiumFileInfo, null, 2), 'utf8');\n      sessionStorage.setItem(FILE_PATH_STORAGE_KEY, filePath);\n    } else {\n      // no filepath provided, tell the main renderer to open the save file dialog and\n      // ask the user to save file to a provided path\n      ipcRenderer.send('save-file-as');\n    }\n  };\n}\n\nexport function getRunningSessions () {\n  return async (dispatch, getState) => {\n    const avoidServerTypes = [\n      'sauce'\n    ];\n    // Get currently running sessions for this server\n    const state = getState().session;\n    const {server, serverType} = state;\n    const serverInfo = server[serverType];\n\n    let {hostname, port, path, ssl, username, accessKey} = serverInfo;\n\n    // if we have a standard remote server, fill out connection info based on placeholder defaults\n    // in case the user hasn't adjusted those fields\n    if (serverType === ServerTypes.remote) {\n      hostname = hostname || DEFAULT_SERVER_HOST;\n      port = port || DEFAULT_SERVER_PORT;\n      path = path || DEFAULT_SERVER_PATH;\n    }\n\n    if (!hostname || !port || !path) {\n      // no need to get sessions if we don't have complete server info\n      return;\n    }\n\n    dispatch({type: GET_SESSIONS_REQUESTED});\n    if (avoidServerTypes.includes(serverType)) {\n      dispatch({type: GET_SESSIONS_DONE});\n      return;\n    }\n\n    try {\n      const adjPath = path.endsWith('/') ? path : `${path}/`;\n      const res = username && accessKey\n        ? await ky(`http${ssl ? 's' : ''}://${hostname}:${port}${adjPath}sessions`, {\n          headers: {\n            'Authorization': `Basic ${btoa(`${username}:${accessKey}`)}`,\n            'content-type': HEADERS_CONTENT\n          }\n        }).json()\n        : await ky(`http${ssl ? 's' : ''}://${hostname}:${port}${adjPath}sessions`, {\n          headers: {'content-type': HEADERS_CONTENT}\n        }).json();\n      dispatch({type: GET_SESSIONS_DONE, sessions: res.value});\n    } catch (err) {\n      console.warn(`Ignoring error in getting list of active sessions: ${err}`); // eslint-disable-line no-console\n      dispatch({type: GET_SESSIONS_DONE});\n    }\n  };\n}\n\nexport function startDesiredCapsNameEditor () {\n  return (dispatch) => {\n    dispatch({type: ENABLE_DESIRED_CAPS_NAME_EDITOR});\n  };\n}\n\nexport function abortDesiredCapsNameEditor () {\n  return (dispatch) => {\n    dispatch({type: ABORT_DESIRED_CAPS_NAME_EDITOR});\n  };\n}\n\nexport function saveDesiredCapsName () {\n  return (dispatch, getState) => {\n    const {server, serverType, caps, capsUUID, desiredCapsName} = getState().session;\n    dispatch({type: SAVE_DESIRED_CAPS_NAME, name: desiredCapsName});\n    saveSession(server, serverType, caps, {name: desiredCapsName, uuid: capsUUID})(dispatch);\n  };\n}\n\nexport function setDesiredCapsName (desiredCapsName) {\n  return (dispatch) => {\n    dispatch({type: SET_DESIRED_CAPS_NAME, desiredCapsName});\n  };\n}\n\nexport function startDesiredCapsEditor () {\n  return (dispatch) => {\n    dispatch({type: ENABLE_DESIRED_CAPS_EDITOR});\n  };\n}\n\nexport function abortDesiredCapsEditor () {\n  return (dispatch) => {\n    dispatch({type: ABORT_DESIRED_CAPS_EDITOR});\n  };\n}\n\nexport function saveRawDesiredCaps () {\n  return (dispatch, getState) => {\n    const state = getState().session;\n    const {rawDesiredCaps, caps: capsArray} = state;\n    try {\n      const newCaps = JSON.parse(rawDesiredCaps);\n\n      // Transform the current caps array to an object\n      let caps = {};\n      for (let {type, name, value} of capsArray) {\n        caps[name] = {type, value};\n      }\n\n      // Translate the caps JSON to array format\n      let newCapsArray = toPairs(newCaps).map(([name, value]) => ({\n        type: (() => {\n          let type = typeof value;\n\n          // If we already have this cap and it's file type, keep the type the same\n          if (caps[name] && caps[name].type === 'file' && type === 'string') {\n            return 'file';\n          } else if (type === 'string') {\n            return 'text';\n          } else {\n            return type;\n          }\n        })(),\n        name,\n        value,\n      }));\n      dispatch({type: SAVE_RAW_DESIRED_CAPS, caps: newCapsArray});\n    } catch (e) {\n      dispatch({type: SHOW_DESIRED_CAPS_JSON_ERROR, message: e.message});\n    }\n  };\n}\n\nexport function setRawDesiredCaps (rawDesiredCaps) {\n  return (dispatch, getState) => {\n    const state = getState().session;\n    let isValidCapsJson = true;\n    let invalidCapsJsonReason;\n    if (state.isValidatingCapsJson) {\n      try {\n        JSON.parse(rawDesiredCaps);\n      } catch (e) {\n        isValidCapsJson = false;\n        invalidCapsJsonReason = e.message;\n      }\n    }\n    dispatch({type: SET_RAW_DESIRED_CAPS, rawDesiredCaps, isValidCapsJson, invalidCapsJsonReason});\n  };\n}\n\nexport function addCloudProvider () {\n  return (dispatch) => {\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: true});\n  };\n}\n\nexport function stopAddCloudProvider () {\n  return (dispatch) => {\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: false});\n  };\n}\n\nexport function addVisibleProvider (provider) {\n  return async (dispatch, getState) => {\n    let currentProviders = getState().session.visibleProviders;\n    const providers = union(currentProviders, [provider]);\n    await setSetting(VISIBLE_PROVIDERS, providers);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\nexport function removeVisibleProvider (provider) {\n  return async (dispatch, getState) => {\n    let currentProviders = getState().session.visibleProviders;\n    const providers = without(currentProviders, provider);\n    await setSetting(VISIBLE_PROVIDERS, providers);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\nexport function setVisibleProviders () {\n  return async (dispatch) => {\n    const providers = await getSetting(VISIBLE_PROVIDERS);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\n/**\n * Add custom capabilities\n *\n * @param {object} caps\n */\nfunction addCustomCaps (caps) {\n  const {platformName = ''} = caps;\n  const androidCustomCaps = {};\n  // @TODO: remove when this is defaulted in the newest Appium 1.8.x release\n  androidCustomCaps[CAPS_ENSURE_WEBVIEW_HAVE_PAGES] = true;\n  // Make sure the screenshot is taken of the whole screen when the ChromeDriver is used\n  androidCustomCaps[CAPS_NATIVE_WEB_SCREENSHOT] = true;\n\n  const iosCustomCaps = {};\n  // Always add the includeSafariInWebviews for future HTML detection\n  // This will ensure that if you use AD to switch between App and browser\n  // that it can detect Safari as a webview\n  iosCustomCaps[CAPS_INCLUDE_SAFARI_IN_WEBVIEWS] = true;\n\n  return {\n    ...caps,\n    ...(platformName.toLowerCase() === 'android' ? androidCustomCaps : {}),\n    ...(platformName.toLowerCase() === 'ios' ? iosCustomCaps : {}),\n  };\n}\n\nexport function bindWindowClose () {\n  return (dispatch, getState) => {\n    window.addEventListener('beforeunload', async (evt) => {\n      let {driver} = getState().inspector;\n      if (driver) {\n        try {\n          const action = quitSession('Window closed');\n          await action(dispatch, getState);\n        } finally {\n          driver = null;\n        }\n      }\n\n      // to allow the window close to continue, the thing we must do is make sure the event no\n      // longer has any 'returnValue' property\n      delete evt.returnValue;\n    });\n  };\n}\n\nexport function setAddVendorPrefixes (addVendorPrefixes) {\n  return (dispatch) => {\n    dispatch({type: SET_ADD_VENDOR_PREFIXES, addVendorPrefixes});\n  };\n}\n\nexport function initFromQueryString () {\n  return async (dispatch, getState) => {\n    if (!isFirstRun) {\n      return;\n    }\n\n    isFirstRun = false;\n\n    const url = new URL(window.location.href);\n    const initialState = url.searchParams.get('state');\n    const autoStartSession = url.searchParams.get('autoStart');\n\n    if (initialState) {\n      try {\n        const state = JSON.parse(initialState);\n        dispatch({type: SET_STATE_FROM_URL, state});\n      } catch (e) {\n        showError(new Error('Could not parse initial state from URL'), null, 0);\n      }\n    }\n\n    if (autoStartSession === AUTO_START_URL_PARAM) {\n      const {attachSessId, caps} = getState().session;\n      if (attachSessId) {\n        return await newSession(null, attachSessId)(dispatch, getState);\n      }\n      await newSession(caps)(dispatch, getState);\n    }\n  };\n}\n","import React from 'react';\nimport formatJSON from 'format-json';\nimport SessionStyles from './Session.css';\nimport { Card, Button, Alert, Tooltip } from 'antd';\nimport { getCapsObject } from '../../actions/Session.js';\nimport { CloseOutlined, SaveOutlined, EditOutlined } from '@ant-design/icons';\nimport { ALERT } from '../AntdTypes';\n\nconst FormattedCaps = (props) => {\n  const { caps, title, desiredCapsName, isEditingDesiredCapsName,\n          isEditingDesiredCaps, startDesiredCapsEditor, abortDesiredCapsEditor,\n          saveRawDesiredCaps, setRawDesiredCaps, rawDesiredCaps,\n          isValidCapsJson, invalidCapsJsonReason, t } = props;\n\n  const setCapsTitle = () => {\n    const { setDesiredCapsName } = props;\n    if (!title) {\n      return 'JSON Representation';\n    } else if (!isEditingDesiredCapsName) {\n      return title;\n    } else {\n      return <input\n        onChange={(e) => setDesiredCapsName(e.target.value)}\n        value={desiredCapsName}\n        className={SessionStyles.capsEditorTitle}\n      />;\n    }\n  };\n\n  const setCapsTitleButtons = () => {\n    const { startDesiredCapsNameEditor, abortDesiredCapsNameEditor, saveDesiredCapsName } = props;\n    if (!title) {\n      return null;\n    } else if (!isEditingDesiredCapsName) {\n      return <Tooltip title={t('Edit')}>\n        <Button\n          size='small'\n          onClick={startDesiredCapsNameEditor}\n          icon={<EditOutlined/>}\n          className={SessionStyles.capsNameEditorButton}/>\n      </Tooltip>;\n    } else {\n      return <div><Tooltip title={t('Cancel')}>\n        <Button\n          size='small'\n          onClick={abortDesiredCapsNameEditor}\n          icon={<CloseOutlined/>}\n          className={SessionStyles.capsNameEditorButton} />\n      </Tooltip>\n      <Tooltip title={t('Save')}>\n        <Button\n          size='small'\n          onClick={saveDesiredCapsName}\n          icon={<SaveOutlined/>}\n          className={SessionStyles.capsNameEditorButton} />\n      </Tooltip></div>;\n    }\n  };\n\n  return caps && <Card\n    className={SessionStyles.formattedCaps}\n    title={setCapsTitle()}\n    extra={setCapsTitleButtons()}\n  >\n    <div className={SessionStyles.capsEditorControls}>\n      {isEditingDesiredCaps && <Tooltip title={t('Cancel')}>\n        <Button\n          onClick={abortDesiredCapsEditor}\n          icon={<CloseOutlined/>}\n          className={SessionStyles.capsEditorButton} />\n      </Tooltip> }\n      {isEditingDesiredCaps && <Tooltip title={t('Save')}>\n        <Button\n          onClick={saveRawDesiredCaps}\n          icon={<SaveOutlined/>}\n          className={SessionStyles.capsEditorButton} />\n      </Tooltip>}\n      {!isEditingDesiredCaps && <Tooltip title={t('Edit Raw JSON')} placement=\"topRight\" >\n        <Button\n          onClick={startDesiredCapsEditor}\n          icon={<EditOutlined/>} />\n      </Tooltip> }\n    </div>\n    {isEditingDesiredCaps && <div className={SessionStyles.capsEditor}>\n      <textarea onChange={(e) => setRawDesiredCaps(e.target.value)} value={rawDesiredCaps}\n        className={`${SessionStyles.capsEditorBody} ${isValidCapsJson ? SessionStyles.capsEditorBodyFull : SessionStyles.capsEditorBodyResized}`}\n      />\n      {!isValidCapsJson && <Alert message={invalidCapsJsonReason} type={ALERT.ERROR} />}\n    </div>}\n    {!isEditingDesiredCaps && <div className={SessionStyles.formattedCapsBody}>\n      <pre>{formatJSON.plain(getCapsObject(caps))}</pre>\n    </div>}\n  </Card>;\n};\n\nexport default FormattedCaps;\n","import React from 'react';\nimport { Switch, Input } from 'antd';\nimport SessionStyles from './Session.css';\nimport { remote, log } from '../../polyfills';\nimport { FileOutlined } from '@ant-design/icons';\nimport { INPUT } from '../AntdTypes';\nimport _ from 'lodash';\n\nconst getLocalFilePath = async () => {\n  try {\n    const {canceled, filePaths} = await remote.dialog.showOpenDialog({properties: ['openFile']});\n    if (!canceled && !_.isEmpty(filePaths)) {\n      return filePaths[0];\n    }\n  } catch (e) {\n    log.error(e);\n  }\n};\n\nconst CapabilityControl = ({ cap, onSetCapabilityParam, onPressEnter, isEditingDesiredCaps, id, t }) => {\n  switch (cap.type) {\n    case 'text':\n      return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n        onChange={(e) => onSetCapabilityParam(e.target.value)} onPressEnter={onPressEnter} className={SessionStyles.capsBoxFont} />;\n    case 'boolean':\n      return <Switch disabled={isEditingDesiredCaps} id={id} checkedChildren={'true'} unCheckedChildren={'false'}\n        placeholder={t('Value')} checked={cap.value} onChange={(value) => onSetCapabilityParam(value)} />;\n    case 'number':\n      return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n        onChange={(e) => !isNaN(parseInt(e.target.value, 10)) ? onSetCapabilityParam(parseInt(e.target.value, 10)) : onSetCapabilityParam(undefined)}\n        onPressEnter={onPressEnter} className={SessionStyles.capsBoxFont} />;\n    case 'object':\n    case 'json_object':\n      return <Input disabled={isEditingDesiredCaps} id={id} type={INPUT.TEXTAREA} rows={4} placeholder={t('Value')}\n        value={cap.value} onChange={(e) => onSetCapabilityParam(e.target.value)} className={SessionStyles.capsBoxFont} />;\n    case 'file':\n      return <div className={SessionStyles.fileControlWrapper}>\n        <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n          onChange={(e) => onSetCapabilityParam(e.target.value)} onPressEnter={onPressEnter} className={SessionStyles.capsBoxFont}\n          addonAfter={\n            <FileOutlined className={SessionStyles['filepath-button']}\n              onClick={async () => onSetCapabilityParam(await getLocalFilePath() || cap.value)} />\n          } />\n      </div>;\n    default:\n      throw `Invalid cap type: ${cap.type}`;\n  }\n};\n\nexport default CapabilityControl;\n","import React, { useEffect, useRef } from 'react';\nimport { Button, Checkbox, Input, Modal, Form, Row, Col, Select, Tooltip } from 'antd';\nimport FormattedCaps from './FormattedCaps';\nimport CapabilityControl from './CapabilityControl';\nimport SessionStyles from './Session.css';\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport { ROW } from '../AntdTypes';\n\nconst whitespaces = /^\\s|\\s$/;\n\nconst whitespaceMsg = (value) => {\n  const leadingSpace = /^\\s/.test(value);\n  const trailingSpace = /\\s$/.test(value);\n\n  if (leadingSpace && trailingSpace) {return 'Contains Leading & Trailing Whitespace';}\n  if (leadingSpace) {return 'Contains Leading Whitespace';}\n  if (trailingSpace) {return 'Contains Trailing Whitespace';}\n};\n\n// Callback when the type of a capability is changed\nconst handleSetType = (setCapabilityParam, caps, index, type) => {\n  setCapabilityParam(index, 'type', type);\n\n  // Translate the current value to the new type\n  let translatedValue = caps[index].value;\n  switch (type) {\n    case 'boolean':\n      if (translatedValue === 'true') {\n        translatedValue = true;\n      } else if (translatedValue === 'false') {\n        translatedValue = false;\n      } else {\n        translatedValue = !!translatedValue;\n      }\n      break;\n    case 'number':\n      translatedValue = parseInt(translatedValue, 10) || 0;\n      break;\n    case 'text':\n    case 'json_object':\n    case 'object':\n      translatedValue = translatedValue + '';\n      break;\n    case 'file':\n      translatedValue = '';\n      break;\n    default:\n      break;\n  }\n  setCapabilityParam(index, 'value', translatedValue);\n};\n\nconst CapabilityEditor = (props) => {\n  const { setCapabilityParam, caps, addCapability, removeCapability, saveSession, hideSaveAsModal,\n          saveAsText, showSaveAsModal, setSaveAsText, isEditingDesiredCaps, t,\n          setAddVendorPrefixes, addVendorPrefixes, server, serverType } = props;\n\n  const onSaveAsOk = () => saveSession(server, serverType, caps, {name: saveAsText});\n  const latestCapField = useRef();\n\n  // if we have more than one cap and the most recent cap name is empty, it means we've just\n  // added a new cap field, so focus that input element. But only do this once, so we don't annoy\n  // the user if they decide to unfocus and do something else.\n  useEffect(() => {\n    if (caps.length > 1 && !latestCapField.current.input.value && !latestCapField.current.__didFocus) {\n      latestCapField.current.focus();\n      latestCapField.current.__didFocus = true;\n    }\n  }, [caps.length, latestCapField]);\n\n  return (\n    <Row type={ROW.FLEX} align=\"top\" justify=\"start\" className={SessionStyles.capsFormRow}>\n      <Col order={1} span={12} className={SessionStyles.capsFormCol}>\n        <Form className={SessionStyles.newSessionForm}>\n          {caps.map((cap, index) => (\n            <Row gutter={8} key={index}>\n              <Col span={7}>\n                <Form.Item>\n                  <Tooltip title={whitespaceMsg(cap.name)} open={whitespaces.test(cap.name)}>\n                    <Input disabled={isEditingDesiredCaps} id={`desiredCapabilityName_${index}`} placeholder={t('Name')}\n                      value={cap.name} onChange={(e) => setCapabilityParam(index, 'name', e.target.value)}\n                      ref={index === caps.length - 1 ? latestCapField : ''}\n                      className={SessionStyles.capsBoxFont} />\n                  </Tooltip>\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item>\n                  <Select disabled={isEditingDesiredCaps} defaultValue={cap.type}\n                    onChange={(val) => handleSetType(setCapabilityParam, caps, index, val)}>\n                    <Select.Option value='text'>{t('text')}</Select.Option>\n                    <Select.Option value='boolean'>{t('boolean')}</Select.Option>\n                    <Select.Option value='number'>{t('number')}</Select.Option>\n                    <Select.Option value='object'>{t('JSON object')}</Select.Option>\n                    <Select.Option value='file'>{t('filepath')}</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={7}>\n                <Form.Item>\n                  <Tooltip title={whitespaceMsg(cap.value)} open={whitespaces.test(cap.value)}>\n                    <CapabilityControl {...props} cap={cap} id={`desiredCapabilityValue_${index}`}\n                      onSetCapabilityParam={(value) => setCapabilityParam(index, 'value', value)}\n                      onPressEnter={(index === caps.length - 1) ? addCapability : () => {}} />\n                  </Tooltip>\n                </Form.Item>\n              </Col>\n              <Col span={2}>\n                <div className={SessionStyles.btnDeleteCap}>\n                  <Form.Item>\n                    <Button {...{disabled: caps.length <= 1 || isEditingDesiredCaps}}\n                      icon={<DeleteOutlined/>}\n                      onClick={() => removeCapability(index)} />\n                  </Form.Item>\n                </div>\n              </Col>\n            </Row>\n          ))}\n          <Row>\n            <Col span={22}>\n              <Form.Item>\n                <Checkbox checked={addVendorPrefixes}\n                  onChange={(e) => setAddVendorPrefixes(e.target.checked)}>\n                  {t('autoAddPrefixes')}\n                </Checkbox>\n              </Form.Item>\n            </Col>\n            <Col span={2}>\n              <Form.Item>\n                <Button\n                  disabled={isEditingDesiredCaps} id='btnAddDesiredCapability'\n                  icon={<PlusOutlined/>}\n                  onClick={addCapability}\n                  className={SessionStyles['add-desired-capability-button']} />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Col>\n      <Col order={2} span={12} className={SessionStyles.capsFormattedCol}>\n        <FormattedCaps {...props} />\n        <Modal open={showSaveAsModal}\n          title={t('Save Capability Set As')}\n          okText='Save'\n          cancelText='Cancel'\n          onCancel={hideSaveAsModal}\n          onOk={onSaveAsOk}>\n          <Input onChange={(e) => setSaveAsText(e.target.value)} addonBefore={t('Name')}\n            value={saveAsText} onPressEnter={onSaveAsOk} />\n        </Modal>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CapabilityEditor;\n","import React from 'react';\nimport moment from 'moment';\nimport { Button, Row, Col, Table } from 'antd';\nimport FormattedCaps from './FormattedCaps';\nimport SessionStyles from './Session.css';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nconst DATE_COLUMN_WIDTH = '25%';\nconst ACTIONS_COLUMN_WIDTH = '106px';\n\nconst dataSource = (savedSessions) => {\n  if (!savedSessions) {\n    return [];\n  }\n  return savedSessions.map((session) => ({\n    key: session.uuid,\n    name: (session.name || '(Unnamed)'),\n    date: moment(session.date).format('YYYY-MM-DD')\n  }));\n};\n\nconst sessionFromUUID = (savedSessions, uuid) => {\n  for (let session of savedSessions) {\n    if (session.uuid === uuid) {\n      return session;\n    }\n  }\n  throw new Error(`Couldn't find session with uuid ${uuid}`);\n};\n\nconst SavedSessions = (props) => {\n  const { savedSessions, capsUUID, switchTabs } = props;\n\n  const handleCapsAndServer = (uuid) => {\n    const { setCapsAndServer, server, serverType,\n            isEditingDesiredCapsName, abortDesiredCapsNameEditor,\n            isEditingDesiredCaps, abortDesiredCapsEditor } = props;\n    const session = sessionFromUUID(savedSessions, uuid);\n\n    // Disable any editors before changing the selected caps\n    if (isEditingDesiredCapsName) {\n      abortDesiredCapsNameEditor();\n    }\n    if (isEditingDesiredCaps) {\n      abortDesiredCapsEditor();\n    }\n\n    // In case user has CAPS saved from older version of Inspector which\n    // doesn't contain server and serverType within the session object\n    setCapsAndServer(\n      session.server || server,\n      session.serverType || serverType,\n      session.caps,\n      session.uuid,\n      session.name\n    );\n  };\n\n  const handleDelete = (uuid) => {\n    const { deleteSavedSession } = props;\n    if (window.confirm('Are you sure?')) {\n      deleteSavedSession(uuid);\n    }\n  };\n\n  const columns = [{\n    title: 'Capability Set',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Created',\n    dataIndex: 'date',\n    key: 'date',\n    width: DATE_COLUMN_WIDTH\n  }, {\n    title: 'Actions',\n    key: 'action',\n    width: ACTIONS_COLUMN_WIDTH,\n    render: (_, record) => <div>\n      <Button\n        icon={<EditOutlined/>}\n        onClick={() => {handleCapsAndServer(record.key); switchTabs('new');}}\n        className={SessionStyles.editSession}\n      />\n      <Button\n        icon={<DeleteOutlined/>}\n        onClick={() => handleDelete(record.key)}/>\n    </div>\n  }];\n\n  return (\n    <Row className={SessionStyles.savedSessions}>\n      <Col span={12}>\n        <Table\n          pagination={false}\n          sticky={true}\n          dataSource={dataSource(savedSessions)}\n          columns={columns}\n          onRow={(row) => ({onClick: () => handleCapsAndServer(row.key)})}\n          rowClassName={(row) => (capsUUID === row.key ? SessionStyles.selected : '')} />\n      </Col>\n      <Col span={12} className={SessionStyles.capsFormattedCol}>\n        <FormattedCaps {...props}\n          title={capsUUID ? sessionFromUUID(savedSessions, capsUUID).name : null} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SavedSessions;\n","import React from 'react';\nimport { Form, Card, Select, Button, Row, Col } from 'antd';\nimport SessionStyles from './Session.css';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { ServerTypes } from '../../actions/Session';\n\nconst formatCaps = (caps) => {\n  let importantCaps = [caps.app, caps.platformName, caps.deviceName];\n  if (caps.automationName) {\n    importantCaps.push(caps.automationName);\n  }\n  return importantCaps.join(', ').trim();\n};\n\nconst formatCapsBrowserstack = (caps) => {\n  let importantCaps = formatCaps(caps).split(', ');\n  if (caps.sessionName) {\n    importantCaps.push(caps.sessionName);\n  }\n  return importantCaps.join(', ').trim();\n};\n\nconst formatCapsLambdaTest = (caps) => {\n  if (caps.hasOwnProperty.call(caps, 'capabilities')) {\n    caps = caps.capabilities;\n  }\n  const deviceName = caps.desired ? caps.desired.deviceName : caps.deviceName;\n  const importantCaps = [deviceName, caps.platformName, caps.platformVersion];\n  return importantCaps.join(', ').trim();\n};\n\nconst getSessionInfo = (session, serverType) => {\n  switch (serverType) {\n    case ServerTypes.browserstack:\n      return `${session.id} — ${formatCapsBrowserstack(session.capabilities)}`;\n    case ServerTypes.lambdatest:\n      return `${session.id} - ${formatCapsLambdaTest(session.capabilities)}`;\n    default:\n      return `${session.id} — ${formatCaps(session.capabilities)}`;\n  }\n};\n\nconst AttachToSession = ({ serverType, attachSessId, setAttachSessId, runningAppiumSessions, getRunningSessions, t }) => (\n  <Form>\n    <Form.Item>\n      <Card>\n        <p className={SessionStyles.localDesc}>\n          {t('connectToExistingSessionInstructions')}<br/>{t('selectSessionIDInDropdown')}\n        </p>\n      </Card>\n    </Form.Item>\n    <Form.Item>\n      <Row>\n        <Col span={23}>\n          <Select showSearch\n            mode='AutoComplete'\n            notFoundContent='None found'\n            placeholder={t('enterYourSessionId')}\n            value={attachSessId || undefined}\n            onChange={(value) => setAttachSessId(value)}>\n            {runningAppiumSessions.map((session) => <Select.Option key={session.id} value={session.id}>\n              <div>{getSessionInfo(session, serverType)}</div>\n            </Select.Option>)}\n          </Select>\n        </Col>\n        <Col span={1}>\n          <div className={SessionStyles.btnReload}>\n            <Button\n              onClick={getRunningSessions}\n              icon={<ReloadOutlined/>} />\n          </div>\n        </Col>\n      </Row>\n    </Form.Item>\n  </Form>\n);\n\nexport default AttachToSession;\n","import React from 'react';\nimport { Form, Row, Col, Input, Checkbox } from 'antd';\nimport { DEFAULT_SERVER_PATH, DEFAULT_SERVER_HOST, DEFAULT_SERVER_PORT } from '../../actions/Session';\n\nconst ServerTabCustom = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={9}>\n        <Form.Item>\n          <Input id='customServerHost' placeholder={DEFAULT_SERVER_HOST} addonBefore={t('Remote Host')} value={server.remote.hostname}\n            onChange={(e) => setServerParam('hostname', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={4}>\n        <Form.Item>\n          <Input id='customServerPort' placeholder={DEFAULT_SERVER_PORT} addonBefore={t('Remote Port')} value={server.remote.port}\n            onChange={(e) => setServerParam('port', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={9}>\n        <Form.Item>\n          <Input id='customServerPath' placeholder={DEFAULT_SERVER_PATH} addonBefore={t('Remote Path')} value={server.remote.path}\n            onChange={(e) => setServerParam('path', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={2}>\n        <Form.Item>\n          <Checkbox id='customServerSSL' checked={!!server.remote.ssl} value={server.remote.ssl} onChange={(e) => setServerParam('ssl', e.target.checked)}>{t('SSL')}</Checkbox>\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabCustom;\n","import React from 'react';\nimport { Collapse, Form, Row, Col, Checkbox, Input } from 'antd';\nimport styles from './Session.css';\n\nconst AdvancedServerParams = ({ server, setServerParam, serverType, t }) => (\n  <Row gutter={8}>\n    <Col className={styles.advancedSettingsContainerCol}>\n      <div className={styles.advancedSettingsContainer}>\n        <Collapse bordered={true}>\n          <Collapse.Panel header={t('Advanced Settings')}>\n            <Row>\n              {serverType !== 'lambdatest' &&\n              <Col span={7}>\n                <Form.Item>\n                  <Checkbox checked={!!server.advanced.allowUnauthorized} onChange={(e) => setServerParam('allowUnauthorized', e.target.checked, 'advanced')}>{t('allowUnauthorizedCerts')}</Checkbox>\n                </Form.Item>\n              </Col>}\n              <Col span={5} align='right'>\n                <Form.Item>\n                  <Checkbox checked={!!server.advanced.useProxy} onChange={(e) => setServerParam('useProxy', e.target.checked, 'advanced')}>{t('Use Proxy')}</Checkbox>\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item>\n                  <Input disabled={!server.advanced.useProxy} onChange={(e) => setServerParam('proxy', e.target.value, 'advanced')}\n                    placeholder={t('Proxy URL')} value={server.advanced.proxy} />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Collapse.Panel>\n        </Collapse>\n      </div>\n    </Col>\n  </Row>\n);\n\nexport default AdvancedServerParams;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Modal, Row, Col, Button } from 'antd';\nimport CloudProviders from './CloudProviders';\nimport SessionStyles from './Session.css';\nimport { BUTTON } from '../AntdTypes';\n\nconst CloudProviderSelector = (props) => {\n  const { visibleProviders = [], isAddingCloudProvider, stopAddCloudProvider, t } = props;\n\n  const footer = <Button key=\"back\" type={BUTTON.PRIMARY} onClick={stopAddCloudProvider}>{t('Done')}</Button>;\n  const providersGrid = _.chunk(_.keys(CloudProviders), 2); // Converts list of providers into list of pairs of providers\n\n  const toggleVisibleProvider = (providerName) => {\n    const { addVisibleProvider, removeVisibleProvider } = props;\n    if (visibleProviders.includes(providerName)) {\n      removeVisibleProvider(providerName);\n    } else {\n      addVisibleProvider(providerName);\n    }\n  };\n\n  return <Modal key=\"modal\"\n    className={SessionStyles.cloudProviderModal}\n    open={isAddingCloudProvider}\n    onCancel={stopAddCloudProvider}\n    footer={footer}\n    title={t('Select Cloud Providers')}>\n    {[\n      ..._.map(providersGrid, (row, key) => <Row gutter={16} key={key}>{\n        [\n          ..._(row).map((providerName) => {\n            const providerIsVisible = visibleProviders.includes(providerName);\n            const style = {};\n            if (providerIsVisible) {\n              style.borderColor = '#40a9ff';\n            }\n            const provider = CloudProviders[providerName];\n            return provider && <Col span={12} key={providerName}>\n              <Button role=\"checkbox\" style={style} onClick={() => toggleVisibleProvider(providerName)}><img src={provider.logo} /></Button>\n            </Col>;\n          })\n        ]\n      }</Row>)\n    ]}\n  </Modal>;\n};\n\nexport default CloudProviderSelector;\n","import { shell, ipcRenderer } from '../../polyfills';\nimport React, { useEffect } from 'react';\nimport _ from 'lodash';\nimport CapabilityEditor from './CapabilityEditor';\nimport SavedSessions from './SavedSessions';\nimport AttachToSession from './AttachToSession';\nimport ServerTabCustom from './ServerTabCustom';\nimport { Tabs, Button, Spin, Badge } from 'antd';\nimport AdvancedServerParams from './AdvancedServerParams';\nimport SessionStyles from './Session.css';\nimport CloudProviders from './CloudProviders';\nimport CloudProviderSelector from './CloudProviderSelector';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { BUTTON } from '../AntdTypes';\n\nconst ADD_CLOUD_PROVIDER = 'addCloudProvider';\nconst CAPS_DOCS_LINK = 'https://appium.io/docs/en/latest/guides/caps/';\n\nconst Session = (props) => {\n  const { tabKey, switchTabs, serverType, server, visibleProviders = [],\n          caps, capsUUID, capsName, isCapsDirty, isEditingDesiredCaps, requestSaveAsModal,\n          saveSession, newSession, savedSessions, newSessionLoading, attachSessId, t } = props;\n\n  const isAttaching = tabKey === 'attach';\n\n  const handleSelectServerTab = async (tab) => {\n    const { changeServerType, addCloudProvider } = props;\n    if (tab === ADD_CLOUD_PROVIDER) {\n      addCloudProvider();\n      return;\n    }\n    await changeServerType(tab);\n  };\n\n  useEffect(() => {\n    const { setLocalServerParams, getSavedSessions, setSavedServerParams, setStateFromAppiumFile,\n            setVisibleProviders, getRunningSessions, bindWindowClose, initFromQueryString, saveFile } = props;\n    (async () => {\n      try {\n        bindWindowClose();\n        switchTabs('new');\n        await getSavedSessions();\n        await setSavedServerParams();\n        await setLocalServerParams();\n        await setVisibleProviders();\n        getRunningSessions();\n        await initFromQueryString();\n        await setStateFromAppiumFile();\n        ipcRenderer.on('open-file', (_, filePath) => setStateFromAppiumFile(filePath));\n        ipcRenderer.on('save-file', (_, filePath) => saveFile(filePath));\n      } catch (e) {\n        console.error(e); // eslint-disable-line no-console\n      }\n    })();\n  }, []);\n\n  return [\n    <Spin spinning={!!newSessionLoading} key=\"main\">\n      <div className={SessionStyles.sessionContainer}>\n        <div id='serverTypeTabs' className={SessionStyles.serverTab}>\n          <Tabs activeKey={serverType} onChange={(tab) => handleSelectServerTab(tab)} className={SessionStyles.serverTabs} items={[\n            {label: t('Appium Server'), key: 'remote', children: <ServerTabCustom {...props} />},\n            ..._(visibleProviders).map((providerName) => {\n              const provider = CloudProviders[providerName];\n              if (!provider) {\n                return true;\n              }\n              return {label: <div>{provider.tabhead()}</div>, key: providerName, children: provider.tab(props)};\n            }),\n            {label: <span className='addCloudProviderTab'>{ t('Select Cloud Providers') }</span>, key: ADD_CLOUD_PROVIDER}\n          ]}/>\n          <AdvancedServerParams {...props} />\n        </div>\n\n        <Tabs activeKey={tabKey} onChange={switchTabs} className={SessionStyles.scrollingTabCont} items={[\n          {label: t('Desired Capabilities'),\n           key: 'new', className: SessionStyles.scrollingTab, children: <CapabilityEditor {...props} />},\n          {label: (<span>{t('Saved Capability Sets')} <Badge count={savedSessions.length} offset={[0, -3]}/></span>),\n           key: 'saved', className: SessionStyles.scrollingTab, disabled: savedSessions.length === 0, children: <SavedSessions {...props} />},\n          {label: t('Attach to Session'),\n           key: 'attach', className: SessionStyles.scrollingTab, children: <AttachToSession {...props} />}\n        ]}/>\n\n        <div className={SessionStyles.sessionFooter}>\n          <div className={SessionStyles.desiredCapsLink}>\n            <a href=\"#\" onClick={(e) => e.preventDefault() || shell.openExternal(CAPS_DOCS_LINK)}>\n              <LinkOutlined />&nbsp;\n              {t('desiredCapabilitiesDocumentation')}\n            </a>\n          </div>\n          {(!isAttaching && capsUUID) && <Button\n            onClick={() => saveSession(server, serverType, caps, {name: capsName, uuid: capsUUID})}\n            disabled={!isCapsDirty || isEditingDesiredCaps}>{t('Save')}\n          </Button>}\n          {!isAttaching && <Button\n            onClick={requestSaveAsModal} disabled={isEditingDesiredCaps}>{t('saveAs')}\n          </Button>}\n          {!isAttaching && <Button type={BUTTON.PRIMARY} id='btnStartSession'\n            onClick={() => newSession(caps)} className={SessionStyles['start-session-button']}>{t('startSession')}\n          </Button>}\n          {isAttaching && <Button type={BUTTON.PRIMARY} disabled={!attachSessId}\n            onClick={() => newSession(null, attachSessId)}>{t('attachToSession')}\n          </Button>}\n        </div>\n\n      </div>\n    </Spin>,\n    <CloudProviderSelector {...props} key='CloudProviderSelector' />\n  ];\n};\n\nexport default Session;\n","import { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as SessionActions from '../actions/Session';\nimport Session from '../components/Session/Session';\n\nfunction mapStateToProps (state) {\n  return state.session;\n}\n\nexport default withTranslation(Session, connect(mapStateToProps, SessionActions));\n","import React from 'react';\nimport InspectorCSS from './Inspector.css';\n\n/**\n * Absolute positioned divs that overlay the app screenshot and highlight the bounding\n * boxes of the elements in the app\n */\nconst HighlighterRect = (props) => {\n  const { selectedElement = {}, selectHoveredElement, unselectHoveredElement, hoveredElement = {},\n          selectElement, unselectElement, element, scaleRatio, xOffset, elLocation, elSize, dimensions } = props;\n  const { path: hoveredPath } = hoveredElement;\n  const { path: selectedPath } = selectedElement;\n\n  let width, height, left, top, highlighterClasses, key;\n  highlighterClasses = [InspectorCSS['highlighter-box']];\n\n  if (element) {\n    ({width, height, left, top} = dimensions);\n\n    // Add class + special classes to hovered and selected elements\n    if (hoveredPath === element.path) {\n      highlighterClasses.push(InspectorCSS['hovered-element-box']);\n    }\n    if (selectedPath === element.path) {\n      highlighterClasses.push(InspectorCSS['inspected-element-box']);\n    }\n    key = element.path;\n  } else if (elLocation && elSize) {\n    width = elSize.width / scaleRatio;\n    height = elSize.height / scaleRatio;\n    top = elLocation.y / scaleRatio;\n    left = elLocation.x / scaleRatio + xOffset;\n    // Unique keys are assigned to elements by their x & y coordinates\n    key = `searchedForElement{x: ${elLocation.x}, y: ${elLocation.y}}`;\n    highlighterClasses.push(InspectorCSS['inspected-element-box']);\n  }\n\n  return <div className={highlighterClasses.join(' ').trim()}\n    onMouseOver={() => selectHoveredElement(key)}\n    onMouseOut={unselectHoveredElement}\n    onClick={() => key === selectedPath ? unselectElement() : selectElement(key)}\n    key={key}\n    style={{left: (left || 0), top: (top || 0), width: (width || 0), height: (height || 0)}}>\n    <div></div>\n  </div>;\n};\n\nexport default HighlighterRect;\n","import React from 'react';\nimport InspectorCSS from './Inspector.css';\nimport { RENDER_CENTROID_AS } from './shared';\n\nconst { CENTROID, OVERLAP, EXPAND } = RENDER_CENTROID_AS;\nconst CENTROID_STYLES = {\n  VISIBLE: 'visible',\n  HIDDEN: 'hidden',\n  CONTAINER: '50%',\n  NON_CONTAINER: '0%',\n};\n\n// Generate new coordinates along a circlular trajectory\n// for overlapping elements only\nconst getCentroidPos = (type, angle, coord) => {\n  if (type === OVERLAP) {\n    return `calc((${angle} * 2.6vh) + ${coord}px)`;\n  }\n  return coord;\n};\n\n/**\n * Shows all element centroids\n */\nconst HighlighterCentroid = (props) => {\n  const { selectedElementPath, hoveredElement = {}, element, elementProperties,\n          centroidType, hoveredCentroid, selectedCentroid } = props;\n  const { centerX, centerY, angleX, angleY, keyCode, path, container } = elementProperties;\n\n  const onMouseEnter = (path) => {\n    const { selectHoveredElement, selectHoveredCentroid } = props;\n    if (centroidType === EXPAND) {\n      selectHoveredCentroid(path);\n    } else {\n      selectHoveredElement(path);\n    }\n  };\n\n  const onMouseLeave = () => {\n    const { unselectHoveredElement, unselectHoveredCentroid } = props;\n    if (centroidType === EXPAND) {\n      unselectHoveredCentroid();\n    } else {\n      unselectHoveredElement();\n    }\n  };\n\n  const onClickCentroid = (path) => {\n    const { selectElement, unselectElement, selectCentroid, unselectCentroid } = props;\n    if (centroidType === EXPAND) {\n      if (path === selectedCentroid) {\n        unselectCentroid();\n      } else {\n        selectCentroid(path);\n      }\n    } else {\n      if (path === selectedElementPath) {\n        unselectElement();\n      } else {\n        selectElement(path);\n      }\n    }\n  };\n\n  const centroidClasses = [InspectorCSS['centroid-box']];\n  centroidClasses.push(InspectorCSS[centroidType]);\n\n  // Highlight centroids that represent elements\n  if (centroidType !== EXPAND) {\n    if (hoveredElement.path === path) {\n      centroidClasses.push(InspectorCSS['hovered-element-box']);\n    }\n    if (selectedElementPath === path) {\n      centroidClasses.push(InspectorCSS['inspected-element-box']);\n    }\n  }\n\n  // Highlight +/- centroids\n  if (centroidType !== CENTROID) {\n    if (hoveredCentroid === keyCode) {\n      centroidClasses.push(InspectorCSS['hovered-element-box']);\n    }\n    if (selectedCentroid === keyCode && !element) {\n      centroidClasses.push(InspectorCSS['inspected-element-box']);\n    }\n  }\n\n  const overlapDivStyle = {\n    visibility:\n      keyCode === selectedCentroid ?\n        CENTROID_STYLES.VISIBLE : CENTROID_STYLES.HIDDEN,\n  };\n\n  const centroidDivStyle = {\n    left: getCentroidPos(centroidType, angleX, centerX),\n    top: getCentroidPos(centroidType, angleY, centerY),\n    borderRadius:\n      element && !container ?\n        CENTROID_STYLES.NON_CONTAINER : CENTROID_STYLES.CONTAINER,\n    ...(centroidType === OVERLAP ? overlapDivStyle : {})\n  };\n\n  const placeHolder = centroidType === EXPAND ?\n    <div className={InspectorCSS['plus-minus']}>\n      {keyCode === selectedCentroid ? '-' : '+'}\n    </div>\n    :\n    <div></div>;\n\n  return <div\n    className={centroidClasses.join(' ').trim()}\n    onMouseOver={() => onMouseEnter(path)}\n    onMouseOut={() => onMouseLeave()}\n    onClick={() => onClickCentroid(path)}\n    key={path}\n    style={centroidDivStyle}>\n    {placeHolder}\n  </div>;\n};\n\nexport default HighlighterCentroid;\n","import React from 'react';\nimport HighlighterRect from './HighlighterRect';\nimport HighlighterCentroid from './HighlighterCentroid';\nimport { parseCoordinates, RENDER_CENTROID_AS } from './shared';\n\nconst { CENTROID, OVERLAP, EXPAND } = RENDER_CENTROID_AS;\n\n/**\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\n */\nconst HighlighterRects = (props) => {\n  console.log(\"🚀 ~ file: HighlighterRects.js:12 ~ HighlighterRects ~ props:\", props)\n  const { source, containerEl, searchedForElementBounds, scaleRatio, showCentroids,\n          isLocatorTestModalVisible, isSiriCommandModalVisible } = props;\n\n  const highlighterRects = [];\n  const highlighterCentroids = [];\n  let highlighterXOffset = 0;\n  let screenshotEl = null;\n\n  const getElements = (source) => {\n    const elementsByOverlap = buildElementsWithProps(source, null, [], {});\n    let elements = [];\n\n    // Adjust overlapping elements\n    for (const key of Object.keys(elementsByOverlap)) {\n      if (elementsByOverlap[key].length > 1) {\n        const {centerX, centerY} = elementsByOverlap[key][0].properties;\n\n        // Create new element obj which will be a +/- centroid\n\n        const element = {\n          type: EXPAND,\n          element: null,\n          parent: null,\n          properties: {\n            left: null,\n            top: null,\n            width: null,\n            height: null,\n            centerX,\n            centerY,\n            angleX: null,\n            angleY: null,\n            path: key,\n            keyCode: key,\n            container: null,\n            accessible: null\n          }\n        };\n        elements = [...elements, element,\n          ...updateOverlapsAngles(elementsByOverlap[key], key)];\n      } else {\n        elements.push(elementsByOverlap[key][0]);\n      }\n    }\n\n    return elements;\n  };\n\n  // This func creates a new object for each element and determines its properties\n  // 'elements' is an array that stores all prev elements\n  // 'overlaps' is an object which organzies elements by their positions\n  const buildElementsWithProps = (source, prevElement, elements, overlaps) => {\n    if (!source) { return {}; }\n    const { x1, y1, x2, y2 } = parseCoordinates(source);\n    const xOffset = highlighterXOffset || 0;\n    const centerPoint = (v1, v2) => Math.round(v1 + ((v2 - v1) / 2)) / scaleRatio;\n    const obj = {\n      type: CENTROID,\n      element: source,\n      parent: prevElement,\n      properties: {\n        left: x1 / scaleRatio + xOffset,\n        top: y1 / scaleRatio,\n        width: (x2 - x1) / scaleRatio,\n        height: (y2 - y1) / scaleRatio,\n        centerX: centerPoint(x1, x2) + xOffset,\n        centerY: centerPoint(y1, y2),\n        angleX: null,\n        angleY: null,\n        path: source.path,\n        keyCode: null,\n        container: false,\n        accessible: source.attributes ? source.attributes.accessible : null\n      }\n    };\n    const coordinates = `${obj.properties.centerX}.${obj.properties.centerY}`;\n    obj.properties.container = isElementContainer(obj, elements);\n\n    elements.push(obj);\n\n    if (source.path) {\n      if (overlaps[coordinates]) {\n        overlaps[coordinates].push(obj);\n      } else {\n        overlaps[coordinates] = [obj];\n      }\n    }\n\n    if (source.children) {\n      for (const childEl of source.children) {\n        buildElementsWithProps(childEl, source, elements, overlaps);\n      }\n    }\n\n    return overlaps;\n  };\n\n  const isElementContainer = (element1, elements) => {\n    for (const element2 of elements) {\n      if (element2.element !== element1.element\n        && isElementOverElement(element1.properties, element2.properties)\n        && !isAncestor(element1.parent, element2.element, elements)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const isElementOverElement = (element1, element2) =>\n    element1.left <= element2.left\n      && element1.width >= element2.width\n      && element1.top >= element2.top\n      && element1.height >= element2.height;\n\n  // Traverse through parent elements until we reach maybeAncestor\n  const isAncestor = (curElement, maybeAncestor, elements) => {\n    if (elements.length > 0) {\n      while (curElement !== null) {\n        if (curElement === maybeAncestor) { return true; }\n\n        for (const elem of elements) {\n          if (elem.element === curElement) { curElement = elem.parent; }\n        }\n      }\n    }\n    return false;\n  };\n\n  // Generate angles for circular positioning for overlaping elements\n  const updateOverlapsAngles = (elements, key) => {\n    const steps = elements.length;\n    for (let step = 0; step < steps; step++) {\n      const [el, elProps] = [elements[step], elements[step].properties];\n      el.type = OVERLAP;\n      elProps.keyCode = key;\n      elProps.angleX = Math.cos(2 * Math.PI * (step / steps));\n      elProps.angleY = Math.sin(2 * Math.PI * (step / steps));\n    }\n    return elements;\n  };\n\n  // Displays element rectangles only\n  const renderElements = (source) => {\n    for (const elem of source) {\n      highlighterRects.push(\n        <HighlighterRect {...props}\n          dimensions={elem.properties}\n          element={elem.element}\n          scaleRatio={scaleRatio}\n          key={elem.properties.path}\n          xOffset={highlighterXOffset} />\n      );\n    }\n  };\n\n  // Displays centroids only\n  const renderCentroids = (centroids) => {\n    for (const elem of centroids) {\n      highlighterCentroids.push(\n        <HighlighterCentroid {...props}\n          centroidType={elem.type}\n          elementProperties={elem.properties}\n          element={elem.element}\n          key={elem.properties.path} />\n      );\n    }\n  };\n\n  // Array of all element objects with properties to draw rectangles and/or centroids\n  const elements = getElements(source);\n\n  if (containerEl) {\n    screenshotEl = containerEl.querySelector('img');\n    highlighterXOffset = screenshotEl.getBoundingClientRect().left -\n                         containerEl.getBoundingClientRect().left;\n  }\n\n  // If the user selected an element that they searched for, highlight that element\n  if (searchedForElementBounds && isLocatorTestModalVisible) {\n    const {location: elLocation, size} = searchedForElementBounds;\n    highlighterRects.push(\n      <HighlighterRect\n        elSize={size}\n        elLocation={elLocation}\n        scaleRatio={scaleRatio}\n        xOffset={highlighterXOffset} />\n    );\n  }\n\n  // Don't show highlighter rects when Search Elements modal is open\n  if (!isLocatorTestModalVisible && !isSiriCommandModalVisible) {\n    renderElements(elements);\n    if (showCentroids) {\n      renderCentroids(elements);\n    }\n  }\n\n  return (\n    <div>\n      {highlighterRects}\n      {highlighterCentroids}\n    </div>\n  );\n};\n\nexport default HighlighterRects;\n","/* eslint-disable space-in-parens */\n/* eslint-disable no-console */\n/* eslint-disable quotes */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-unused-vars */\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport HighlighterRects from './HighlighterRects';\nimport { Spin, Tooltip } from 'antd';\nimport B from 'bluebird';\nimport styles from './Inspector.css';\nimport {\n  SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE, POINTER_TYPES,\n  DEFAULT_TAP, DEFAULT_SWIPE, DEFAULT_LONGPRESS, DEFAULT_DRAG_AND_DROP, DEFAULT_ZOOM\n} from './shared';\n\nconst { POINTER_UP, POINTER_DOWN, PAUSE, POINTER_MOVE } = POINTER_TYPES;\nconst { TAP, SELECT, SLIDE, SWIPE, LONGPRESS, DRAG_AND_DROP, DOUBLE_TAP, ZOOMIN } = SCREENSHOT_INTERACTION_MODE;\nconst TYPES = { FILLED: 'filled', NEW_DASHED: 'newDashed', WHOLE: 'whole', DASHED: 'dashed', DRAG: 'drag' };\n\n\n\n/**\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\n */\nconst Screenshot = (props) => {\n  const { screenshot, mjpegScreenshotUrl, methodCallInProgress, screenshotInteractionMode, swipeStart, swipeEnd1, swipeStart1, swipeEnd, scaleRatio, selectedTick, selectedInteractionMode, applyClientMethod, t, hoveredElement } = props;\n  console.log(\"inside the screenshot function props!!!\", props);\n  const [xLongPress, setXLongPress] = useState(null);\n  const [yLongPress, setYLongPress] = useState(null);\n\n  useEffect(() => {\n    if (hoveredElement && hoveredElement.attributes && hoveredElement.attributes.bounds) {\n      const coordinatesString = hoveredElement.attributes.bounds;\n      const coordinatesArray = coordinatesString.match(/\\d+/g); // Extract all numbers from the string\n      if (coordinatesArray.length >= 4) {\n        const x1 = parseInt(coordinatesArray[0], 10);\n        const y1 = parseInt(coordinatesArray[1], 10);\n        const x2 = parseInt(coordinatesArray[2], 10);\n        const y2 = parseInt(coordinatesArray[3], 10);\n\n        console.log(\"x1:\", x1);\n        console.log(\"y1:\", y1);\n        console.log(\"x2:\", x2);\n        console.log(\"y2:\", y2);\n        const centerX = Math.round(x2);\n        const centerY = Math.round(y2);\n        // setX(centerX);\n        // setY(centerY);\n        setXLongPress(centerX);\n        setYLongPress(centerY);\n      }\n\n    }\n  }, [hoveredElement]);\n\n  if (hoveredElement) {\n    console.log(\"hoveredElement.attributes.bounds:\", hoveredElement.attributes.bounds);\n  }\n\n\n  const containerEl = useRef();\n  const [x, setX] = useState();\n  const [y, setY] = useState();\n  const [isLongPress, setIsLongPress] = useState(false);\n  const [element, setElement] = useState({});\n\n  const [coords, setCoords] = useState({});\n  // const [dragging, setDragging] = useState(false);\n  // const [coords, setCoords] = useState(false);\n  // const [state, setState] = useState({});\n\n  // const [zoomLevel, setZoomLevel] = useState(1);\n  // const svgRef = useRef(null);\n\n  // function getInitialState() {\n  //   return {\n  //     x: 0,\n  //     y: 0,\n  //     scale: 1,\n  //   };\n  // };\n\n  let [crop, setCrop] = useState({ x: 0, y: 0, scale: 1 });\n  let imageElement = containerEl.current;\n  let imageRef = useRef();\n  // eslint-disable-next-line no-console\n  // console.log('🚀 ~ file: Screenshot.js:41 ~ Screenshot ~ imageRef:', imageRef);\n  // // let imageElement = imageRef.querySelector('img');\n  // let image = imageRef && imageRef.getElementById('#screenshot');\n  // // eslint-disable-next-line no-console\n  // console.log('🚀 ~ file: Screenshot.js:45 ~ Screenshot ~ imageElement:', imageElement);\n  // if (screenshotInteractionMode === ZOOMIN) {\n  //   useGesture(\n  //   {\n  //     onDrag: ({ offset: [dx, dy] }) => {\n  //       setCrop((crop) => ({ ...crop, x: dx, y: dy }));\n  //     },\n  //     onPinch: ({ offset: [d] }) => {\n  //       setCrop((crop) => ({ ...crop, scale: 1 + d / 50 }));\n  //     },\n  //   },\n  //   {\n  //     domTarget: containerEl.current,\n  //     eventOptions: { passive: false },\n  //   }\n  //   );\n  // }\n\n  const handleScreenshotClick = async () => {\n    const { setSwipeStart, setSwipeEnd, tapTickCoordinates, setSwipeStart1, setSwipeEnd1 } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON } = DEFAULT_TAP;\n    const { LONGPRESS_POINTER_NAME, LONGPRESS_DURATION_1, LONGPRESS_DURATION_2, LONGPRESS_BUTTON } = DEFAULT_LONGPRESS;\n\n\n    if (screenshotInteractionMode === TAP) {\n      applyClientMethod({\n        methodName: TAP,\n        args: [\n          {\n            [POINTER_NAME]: [\n              { type: POINTER_MOVE, duration: DURATION_1, x, y },\n              { type: POINTER_DOWN, button: BUTTON },\n              { type: PAUSE, duration: DURATION_2 },\n              { type: POINTER_UP, button: BUTTON }\n            ],\n          }\n        ],\n      });\n    } else if (screenshotInteractionMode === LONGPRESS) {\n      console.log(\"inside the condition of the longpress!!\");\n      console.log('xxxxxxxxxx: YYYYYYYYYYY: from the long', xLongPress, yLongPress);\n      console.log('xxxxxxxxxx: YYYYYYYYYYY: after the set', x, y);\n      setTimeout(() => {\n        applyClientMethod({\n          methodName: TAP,\n          args: [\n            {\n              [LONGPRESS_POINTER_NAME]: [\n                { type: POINTER_MOVE, duration: LONGPRESS_DURATION_1, x, y },\n                { type: POINTER_DOWN, button: LONGPRESS_BUTTON },\n                { type: PAUSE, duration: LONGPRESS_DURATION_2 },\n                { type: POINTER_UP, button: LONGPRESS_BUTTON }\n              ],\n            }\n          ],\n        });\n      }, LONGPRESS_DURATION_2);\n    } else if (screenshotInteractionMode === DOUBLE_TAP) {\n      console.log(\"inside the double tap function!!!\");\n      applyClientMethod({\n        methodName: TAP,\n        args: [\n          {\n            [POINTER_NAME]: [\n              { type: POINTER_MOVE, duration: DURATION_1, x, y },\n              { type: POINTER_DOWN, button: BUTTON },\n              { type: PAUSE, duration: DURATION_2 },\n              { type: POINTER_UP, button: BUTTON }\n            ],\n          }\n        ],\n      });\n      const delay = 200;\n      setTimeout(() => {\n        applyClientMethod({\n          methodName: TAP,\n          args: [\n            {\n              [POINTER_NAME]: [\n                { type: POINTER_MOVE, duration: DURATION_1, x, y },\n                { type: POINTER_DOWN, button: BUTTON },\n                { type: PAUSE, duration: DURATION_2 },\n                { type: POINTER_UP, button: BUTTON },\n\n              ],\n            }\n          ],\n        });\n      }, delay);\n\n    } else if (screenshotInteractionMode === DRAG_AND_DROP) {\n      console.log(\"inside the drage and drop condition value!!!!!!\");\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        if (isLongPress) {\n          // await B.delay(500);\n          // await applyClientMethod({ methodName: SWIPE, args: { /* ... */ } });\n          // await handleDoDragAndDrop({ x, y });\n        }\n        handleDragStart({ x, y });\n      }\n    } else if (selectedTick) {\n      tapTickCoordinates(x, y);\n    } else if (screenshotInteractionMode === SWIPE) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500);\n        await handleDoSwipe({ x, y });\n      }\n    } else if (screenshotInteractionMode === ZOOMIN) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500); // Wait a second to do the swipe so user can see the SVG line\n        setCoords({ x, y });\n        // setTimeout(() => {\n        //  handleDoZoom({x, y});\n        // }, 2000);\n      } else if (!swipeStart1) {\n        setSwipeStart1(x, y);\n      } else if (!swipeEnd1) {\n        setSwipeEnd1(x, y);\n        await B.delay(500); // Wait a second to do the swipe so user can see the SVG line\n        await handleDoZoom({ x, y }, coords); // Pass swipeEnd because otherwise it is not retrieved\n      }\n    } else if (screenshotInteractionMode === SLIDE) {\n      if(props.selectedElement){\n        setElement(props.selectedElement)\n      }\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500);\n        await handleDoSlide({ x, y });\n      }\n    }\n  };\n\n\n  const handleLongPress = () => {\n    setIsLongPress(true);\n  };\n\n\n  const handleDoSwipe = async (swipeEndLocal) => {\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_SWIPE;\n    await applyClientMethod({\n      methodName: SWIPE,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n          { type: POINTER_UP, button: BUTTON }\n        ]\n      },\n    });\n    clearSwipeAction();\n  };\n\n  const handleDoSlide = async (swipeEndLocal) => {\n    console.log('handleDoSlide >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>',element)\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_SWIPE;\n    await applyClientMethod({\n      methodName: SWIPE,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n          { type: POINTER_UP, button: BUTTON }\n        ]\n      },\n    });\n    clearSwipeAction();\n  };\n\n  const handleDoDragAndDrop = async (swipeEndLocal) => {\n    console.log(\"value of the x and y\", swipeEndLocal);\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_DRAG_AND_DROP;\n    await applyClientMethod({\n      methodName: TAP,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, origin: ORIGIN, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: PAUSE, duration: DURATION_2 },\n          { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n          { type: POINTER_UP, button: BUTTON }\n        ]\n      },\n    });\n  };\n\n  const handleDoZoom = async (swipeEndLocal, swipeEndLocal1) => {\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME1, POINTER_NAME2, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_ZOOM;\n    console.log(`swipeStart.x : ${swipeStart.x}, swipeStart.y : : ${swipeStart.y} , swipeEndLocal1.x : ${swipeEndLocal1.x} , swipeEndLocal1.y : ${swipeEndLocal1.y} , swipeStart1.x : ${swipeStart1.x} , swipeStart1.y : ${swipeStart1.y}, swipeEndLocal.x : ${swipeEndLocal.x} , swipeEndLocal.y : ${swipeEndLocal.y}`)\n    if (swipeEndLocal && swipeEndLocal1) {\n      await applyClientMethod({\n        methodName: SWIPE,\n        args: {\n          [POINTER_NAME1]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart.x, y: swipeStart.y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal1.x, y: swipeEndLocal1.y },\n            { type: POINTER_UP, button: BUTTON }\n          ],\n          [POINTER_NAME2]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart1.x, y: swipeStart1.y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n            { type: POINTER_UP, button: BUTTON }\n          ]\n        },\n      });\n      clearSwipeAction();\n    }\n  };\n\n\n  const handleMouseMove = (e) => {\n    if (screenshotInteractionMode !== (SELECT || LONGPRESS)) {\n      const offsetX = e.nativeEvent.offsetX;\n      const offsetY = e.nativeEvent.offsetY;\n      const newX = offsetX * scaleRatio;\n      const newY = offsetY * scaleRatio;\n      setX(Math.round(newX));\n      setY(Math.round(newY));\n    }\n    // if (screenshotInteractionMode === ZOOMIN) {\n    //   if (!dragging) {\n    //     return;\n    //   }\n    //   e.preventDefault();\n    //   //Get mouse change differential\n    //   let xDiff = coords.x - e.pageX,\n    //       yDiff = coords.y - e.pageY;\n\n    //   //Update to our new coordinates\n    //   coords.x = e.pageX;\n    //   coords.y = e.pageY;\n    //   //Adjust our x,y based upon the x/y diff from before\n    //   state.x = state.x - xDiff;\n    //   state.y = state.y - yDiff;\n\n    //   //Re-render\n    //   setState(state);\n    // }\n  };\n\n  // function isNegative (n) {\n  //   return ((n = +n) || 1 / n) < 0;\n  // };\n\n  const handleMouseOut = () => {\n    setX(null);\n    setY(null);\n  };\n  const handleDragStart = (startPoint) => {\n    console.log('Drag start:', startPoint);\n\n  };\n\n  const handleDrop = (event) => {\n    // event.preventDefault();\n    const { offsetX, offsetY } = event.nativeEvent;\n    const dropX = offsetX * scaleRatio;\n    const dropY = offsetY * scaleRatio;\n    const roundedDropX = Math.round(dropX);\n    const roundedDropY = Math.round(dropY);\n    console.log('Drop position:', { x: roundedDropX, y: roundedDropY });\n    setX(roundedDropX);\n    setY(roundedDropY);\n\n    setTimeout(async () => {\n      await handleDoDragAndDrop({ x: roundedDropX, y: roundedDropY });\n    }, 1000);\n\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n\n  // function handleMouseWheel (e) {\n  //   if (screenshotInteractionMode === ZOOMIN) {\n\n  //     let ZOOM_STEP = 0.03;\n\n  //     //require the shift key to be pressed to scroll\n  //     if (!e.shiftKey) {\n  //       return;\n  //     }\n  //     e.preventDefault();\n  //     let direction = isNegative(e.deltaX) && isNegative(e.deltaY) ? 'down' : 'up';\n\n  //     if (direction === 'up') {\n  //       state.scale += ZOOM_STEP;\n  //     } else {\n  //       state.scale -= ZOOM_STEP;\n  //     }\n  //     state.scale = state.scale < 0 ? 0 : state.scale;\n  //     setState(state);\n  //   }\n  // }\n\n  // retrieve and format gesture for svg drawings\n  const getGestureCoordinates = () => {\n    const { showGesture } = props;\n    const { FILLED, NEW_DASHED, WHOLE, DASHED } = TYPES;\n    const defaultTypes = { pointerDown: WHOLE, pointerUp: DASHED };\n\n    if (!showGesture) { return null; }\n    return showGesture.map((pointer) => {\n      // 'type' is used to keep track of the last pointerup/pointerdown move\n      let type = DASHED;\n      const temp = [];\n      for (const tick of pointer.ticks) {\n        if (tick.type === PAUSE) { continue; }\n        const len = temp.length;\n        type = tick.type !== POINTER_MOVE ? defaultTypes[tick.type] : type;\n        if (tick.type === POINTER_MOVE && tick.x !== undefined && tick.y !== undefined) {\n          temp.push({ id: tick.id, type, x: tick.x, y: tick.y, color: pointer.color });\n        }\n        if (len === 0) {\n          if (tick.type === POINTER_DOWN) {\n            temp.push({ id: tick.id, type: FILLED, x: 0, y: 0, color: pointer.color });\n          }\n        } else {\n          if (tick.type === POINTER_DOWN && temp[len - 1].type === DASHED) {\n            temp[len - 1].type = FILLED;\n          }\n          if (tick.type === POINTER_UP && temp[len - 1].type === WHOLE) {\n            temp[len - 1].type = NEW_DASHED;\n          }\n        }\n      }\n      return temp;\n    });\n  };\n\n  // If we're tapping or swiping, show the 'crosshair' cursor style\n  const screenshotStyle = {};\n  if ([TAP, SWIPE].includes(screenshotInteractionMode) || selectedTick) {\n    screenshotStyle.cursor = 'crosshair';\n  } else if ([DRAG_AND_DROP].includes(screenshotInteractionMode) || selectedTick) {\n    screenshotStyle.cursor = 'move';\n  } else {\n    screenshotStyle.cursor = 'pointer';\n  }\n  if ([ZOOMIN].includes(screenshotInteractionMode) || selectedTick) {\n    screenshotStyle.cursor = 'crosshair';\n  }\n\n\n  let swipeInstructions = null;\n  if (screenshotInteractionMode === SWIPE && (!swipeStart || !swipeEnd)) {\n    if (!swipeStart) {\n      swipeInstructions = t('Click swipe start point');\n    } else if (!swipeEnd) {\n      swipeInstructions = t('Click swipe end point');\n    }\n  }\n\n  const screenSrc = mjpegScreenshotUrl || `data:image/gif;base64,${screenshot}`;\n  const screenImg = <img src={screenSrc} id=\"screenshot\" />;\n  const points = getGestureCoordinates();\n\n  // const screenshotStyle1 = {\n  //   transform: `scale(${2})`, // Apply the zoom level to the transform style\n  // };\n  // Show the screenshot and highlighter rects.\n  // Show loading indicator if a method call is in progress, unless using MJPEG mode.\n  return (\n    <Spin size='large' spinning={!!methodCallInProgress && !mjpegScreenshotUrl}>\n      <div className={styles.innerScreenshotContainer}>\n        <div ref={containerEl}\n          style={screenshotStyle}\n          onMouseDown={handleScreenshotClick}\n          onMouseMove={handleMouseMove}\n          onMouseOut={handleMouseOut}\n          onDragOver={handleDragOver}\n          onDrop={handleDrop}\n          className={styles.screenshotBox}>\n          {screenshotInteractionMode !== SELECT && <div className={styles.coordinatesContainer}>\n            <p>{t('xCoordinate', { x })}</p>\n            <p>{t('yCoordinate', { y })}</p>\n          </div>}\n          {swipeInstructions && <Tooltip open={true} title={swipeInstructions} placement=\"topLeft\">{screenImg}</Tooltip>}\n          {!swipeInstructions && screenImg}\n          {screenshotInteractionMode === SELECT && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === SLIDE && containerEl.current &&\n          <div>\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio} />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio} />}\n            </svg>\n            </div>\n          }\n          {/* {screenshotInteractionMode === LONGPRESS && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          } */}\n          {screenshotInteractionMode === SWIPE &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n            </svg>\n          }\n          {screenshotInteractionMode === ZOOMIN &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n              {swipeStart1 && !swipeEnd1 && <circle\n                cx={swipeStart1.x / scaleRatio}\n                cy={swipeStart1.y / scaleRatio}\n              />}\n              {swipeStart1 && swipeEnd1 && <line\n                x1={swipeStart1.x / scaleRatio}\n                y1={swipeStart1.y / scaleRatio}\n                x2={swipeEnd1.x / scaleRatio}\n                y2={swipeEnd1.y / scaleRatio}\n              />}\n            </svg>\n          }\n          {screenshotInteractionMode === TAP &&\n            <div className={styles.tapDiv}></div>\n          }\n          {selectedInteractionMode === INTERACTION_MODE.GESTURES && points &&\n            <svg key='gestureSVG' className={styles.gestureSvg}>\n              {points.map((pointer) =>\n                pointer.map((tick, index) =>\n                  <React.Fragment key={tick.id}>\n                    {index > 0 && <line\n                      className={styles[tick.type]}\n                      key={`${tick.id}.line`}\n                      x1={pointer[index - 1].x / scaleRatio}\n                      y1={pointer[index - 1].y / scaleRatio}\n                      x2={tick.x / scaleRatio}\n                      y2={tick.y / scaleRatio}\n                      style={{ stroke: tick.color }} />\n                    }\n                    <circle\n                      className={styles[`circle-${tick.type}`]}\n                      key={`${tick.id}.circle`}\n                      cx={tick.x / scaleRatio}\n                      cy={tick.y / scaleRatio}\n                      style={tick.type === TYPES.FILLED ? { fill: tick.color } : { stroke: tick.color }} />\n                  </React.Fragment>\n                )\n              )}\n            </svg>\n          }\n        </div>\n      </div>\n    </Spin>\n  );\n};\n\nexport default Screenshot;\n","import React from 'react';\nimport { Button, Tooltip, Space } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport { HiOutlineMicrophone, HiOutlineHome } from 'react-icons/hi';\nimport { BiSquare, BiCircle } from 'react-icons/bi';\nimport { IoChevronBackOutline } from 'react-icons/io5';\nimport { APP_MODE } from './shared';\nimport { BUTTON } from '../AntdTypes';\nimport {\n  ReloadOutlined,\n  PlayCircleOutlined,\n  PauseCircleOutlined,\n  EyeOutlined,\n  PauseOutlined,\n  SearchOutlined,\n  CloseOutlined,\n  AppstoreOutlined,\n  GlobalOutlined\n} from '@ant-design/icons';\n\nconst HeaderButtons = (props) => {\n  const { selectAppMode, appMode, mjpegScreenshotUrl, isSourceRefreshOn, toggleRefreshingState,\n          isRecording, startRecording, pauseRecording, showLocatorTestModal, showSiriCommandModal,\n          applyClientMethod, quitSession, driver, t } = props;\n\n  const deviceControls = <Button.Group>\n    {driver && driver.client.isIOS && <>\n      <Tooltip title={t('Press Home Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<HiOutlineHome className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() =>\n            applyClientMethod({ methodName: 'executeScript', args: ['mobile:pressButton', [{name: 'home'}]]})\n          } />\n      </Tooltip>\n      <Tooltip title={t('Execute Siri Command')}>\n        <Button id='siriCommand'\n          icon={<HiOutlineMicrophone className={InspectorStyles['custom-button-icon']}/>}\n          onClick={showSiriCommandModal} />\n      </Tooltip>\n    </>}\n    {driver && driver.client.isAndroid && <>\n      <Tooltip title={t('Press Back Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<IoChevronBackOutline className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [4]})} />\n      </Tooltip>\n      <Tooltip title={t('Press Home Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<BiCircle className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [3]})} />\n      </Tooltip>\n      <Tooltip title={t('Press App Switch Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<BiSquare className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [187]})} />\n      </Tooltip>\n    </>}\n  </Button.Group>;\n\n  const appModeControls = <Button.Group value={appMode}>\n    <Tooltip title={t('Native App Mode')}>\n      <Button icon={<AppstoreOutlined/>} onClick={() => {selectAppMode(APP_MODE.NATIVE);}}\n        type={appMode === APP_MODE.NATIVE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n      />\n    </Tooltip>\n    <Tooltip title={t('Web/Hybrid App Mode')}>\n      <Button icon={<GlobalOutlined/>} onClick={() => {selectAppMode(APP_MODE.WEB_HYBRID);}}\n        type={appMode === APP_MODE.WEB_HYBRID ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n      />\n    </Tooltip>\n  </Button.Group>;\n\n  const generalControls = <Button.Group>\n    {mjpegScreenshotUrl && !isSourceRefreshOn &&\n        <Tooltip title={t('Start Refreshing Source')}>\n          <Button id='btnStartRefreshing' icon={<PlayCircleOutlined/>} onClick={toggleRefreshingState}/>\n        </Tooltip>\n    }\n    {mjpegScreenshotUrl && isSourceRefreshOn &&\n      <Tooltip title={t('Pause Refreshing Source')}>\n        <Button id='btnPauseRefreshing' icon={<PauseCircleOutlined/>} onClick={toggleRefreshingState}/>\n      </Tooltip>\n    }\n    <Tooltip title={t('refreshSource')}>\n      <Button id='btnReload' icon={<ReloadOutlined/>} onClick={() => applyClientMethod({methodName: 'getPageSource'})}/>\n    </Tooltip>\n    <Tooltip title={t('Search for element')}>\n      <Button id='searchForElement' icon={<SearchOutlined/>} onClick={showLocatorTestModal} />\n    </Tooltip>\n    {!isRecording &&\n      <Tooltip title={t('Start Recording')}>\n        <Button id='btnStartRecording' icon={<EyeOutlined/>} onClick={startRecording}/>\n      </Tooltip>\n    }\n    {isRecording &&\n      <Tooltip title={t('Pause Recording')}>\n        <Button id='btnPause' icon={<PauseOutlined/>} type={BUTTON.DANGER} onClick={pauseRecording}/>\n      </Tooltip>\n    }\n  </Button.Group>;\n\n  const quitSessionButton = <Tooltip title={t('quitSessionAndClose')}>\n    <Button id='btnClose' icon={<CloseOutlined/>} onClick={() => quitSession()}/>\n  </Tooltip>;\n\n  return <div className={InspectorStyles['inspector-toolbar']}>\n    <Space size='middle'>\n      {deviceControls}\n      {appModeControls}\n      {generalControls}\n      {quitSessionButton}\n    </Space>\n  </div>;\n};\n\nexport default HeaderButtons;\n","/* eslint-disable no-console */\n/* eslint-disable quotes */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-unused-vars */\n\nimport React, { useRef } from 'react';\nimport _ from 'lodash';\nimport { getLocators } from './shared';\nimport styles from './Inspector.css';\nimport { Button, Row, Col, Input, Table, Alert, Tooltip, Select, Spin } from 'antd';\nimport { clipboard, shell } from '../../polyfills';\nimport { LoadingOutlined, CopyOutlined, AimOutlined, SendOutlined,\n         ClearOutlined, HourglassOutlined } from '@ant-design/icons';\nimport { ROW, ALERT } from '../AntdTypes';\n\nconst NATIVE_APP = 'NATIVE_APP';\nconst CLASS_CHAIN_DOCS_URL = 'https://github.com/facebookarchive/WebDriverAgent/wiki/Class-Chain-Queries-Construction-Rules';\nconst PREDICATE_DOCS_URL = 'https://github.com/facebookarchive/WebDriverAgent/wiki/Predicate-Queries-Construction-Rules';\n\nconst selectedElementTableCell = (text, copyToClipBoard) => {\n  if (copyToClipBoard) {\n    return <div className={styles['selected-element-table-cells']}>\n      <Tooltip title='Copied!' trigger=\"click\">\n        <span className={styles['element-cell-copy']} onClick = {() => clipboard.writeText(text)}>\n          {text}\n        </span>\n      </Tooltip>\n    </div>;\n  } else {\n    return <div className={styles['selected-element-table-cells']}>{text}</div>;\n  }\n};\n\n/**\n * Shows details of the currently selected element and shows methods that can\n * be called on the elements (tap, sendKeys)\n */\nconst SelectedElement = (props) => {\n  console.log('props inside the selected Element!!', props);\n  console.log('props.hoveredElement$$$$$$$4!!', props.hoveredElement);\n  const { applyClientMethod, contexts, currentContext, getFindElementsTimes, findElementsExecutionTimes,\n          isFindingElementsTimes, selectedElement, selectedElementId, sourceXML,\n          elementInteractionsNotAvailable, selectedElementSearchInProgress, t } = props; \n\n  console.log('selectedElementId inside the selected Element!!', selectedElementId);\n\n  const sendKeys = useRef();\n\n  const contextSelect = () => {\n    const { setContext } = props;\n    return (\n      <Tooltip title={t('contextSwitcher')}>\n        <Select value={currentContext} onChange={(value) => {\n          setContext(value);\n          applyClientMethod({methodName: 'switchContext', args: [value]});\n        }}\n        className={styles['context-selector']}>\n          {contexts.map(({id, title}) =>\n            <Select.Option key={id} value={id}>{title ? `${title} (${id})` : id}</Select.Option>\n          )}\n        </Select>\n      </Tooltip>\n    );\n  };\n\n  const { attributes, classChain, predicateString, xpath } = selectedElement;\n  const isDisabled = selectedElementSearchInProgress || isFindingElementsTimes;\n\n  // Get the columns for the attributes table\n  let attributeColumns = [{\n    title: t('Attribute'),\n    dataIndex: 'name',\n    key: 'name',\n    width: 100,\n    render: (text) => selectedElementTableCell(text, false),\n  }, {\n    title: t('Value'),\n    dataIndex: 'value',\n    key: 'value',\n    render: (text) => selectedElementTableCell(text, true),\n  }];\n\n  // Get the data for the attributes table\n  let attrArray = _.toPairs(attributes).filter(([key]) => key !== 'path');\n  let dataSource = attrArray.map(([key, value]) => ({\n    key,\n    value,\n    name: key,\n  }));\n  dataSource.unshift({key: 'elementId', value: selectedElementId, name: 'elementId'});\n  // console.log('dataSource in the dataSource', dataSource);\n\n  // Get the columns for the strategies table\n  let findColumns = [{\n    title: t('Find By'),\n    dataIndex: 'find',\n    key: 'find',\n    width: 100,\n    render: (text) => selectedElementTableCell(text, false),\n  }, {\n    title: t('Selector'),\n    dataIndex: 'selector',\n    key: 'selector',\n    render: (text) => selectedElementTableCell(text, true),\n  }];\n\n  if (findElementsExecutionTimes.length > 0) {\n    findColumns.push({\n      title: t('Time'),\n      dataIndex: 'time',\n      key: 'time',\n      align: 'right',\n      width: 100,\n      render: (text) => selectedElementTableCell(text, false),\n    });\n  }\n\n  // Get the data for the strategies table\n  let findDataSource = _.toPairs(getLocators(attributes, sourceXML)).map(([key, selector]) => ({\n    key,\n    selector,\n    find: key,\n  }));\n\n  // If XPath is the only provided data source, warn the user about it's brittleness\n  let showXpathWarning = false;\n  if (findDataSource.length === 0) {\n    showXpathWarning = true;\n  }\n\n  // Add class chain to the data source as well\n  if (classChain && currentContext === NATIVE_APP) {\n    const classChainText = <span>\n      -ios class chain\n      <strong>\n        <a onClick={(e) => e.preventDefault() || shell.openExternal(CLASS_CHAIN_DOCS_URL)}>&nbsp;(docs)</a>\n      </strong>\n    </span>;\n\n    findDataSource.push({\n      key: '-ios class chain',\n      find: classChainText,\n      selector: classChain,\n    });\n  }\n\n  // Add predicate string to the data source as well\n  if (predicateString && currentContext === NATIVE_APP) {\n    const predicateStringText = <span>\n      -ios predicate string\n      <strong>\n        <a onClick={(e) => e.preventDefault() || shell.openExternal(PREDICATE_DOCS_URL)}>&nbsp;(docs)</a>\n      </strong>\n    </span>;\n\n    findDataSource.push({\n      key: '-ios predicate string',\n      find: predicateStringText,\n      selector: predicateString,\n    });\n  }\n\n  // Add XPath to the data source as well\n  if (xpath) {\n    findDataSource.push({\n      key: 'xpath',\n      find: 'xpath',\n      selector: xpath,\n    });\n    // console.log('findDataSource in the Xpath condition####', findDataSource);\n    //add the datasource to the findDataSource\n    let sendData = findDataSource.concat(dataSource);\n    console.log(\"🚀 ~ file: SelectedElement.js:169 ~ SelectedElement ~ sendData:\", sendData);\n  }\n\n  // Replace table data with table data that has the times\n  if (findElementsExecutionTimes.length > 0) {\n    findDataSource = findElementsExecutionTimes;\n  }\n\n  let tapIcon = <AimOutlined/>;\n  if (!(elementInteractionsNotAvailable || selectedElementId) || selectedElementSearchInProgress) {\n    tapIcon = <LoadingOutlined/>;\n  }\n\n  return <div>\n    {elementInteractionsNotAvailable &&\n      <Row type={ROW.FLEX} gutter={10} className={styles.selectedElemNotInteractableAlertRow}>\n        <Col>\n          <Alert type={ALERT.INFO} message={t('interactionsNotAvailable')} showIcon />\n        </Col>\n      </Row>\n    }\n    <Row justify=\"center\" type={ROW.FLEX} align=\"middle\" className={styles.elementActions}>\n      <Tooltip title={t('Tap')}>\n        <Button\n          disabled={isDisabled}\n          icon={tapIcon}\n          id='btnTapElement'\n          onClick={() => applyClientMethod({methodName: 'click', elementId: selectedElementId})} />\n      </Tooltip>\n      <Button.Group className={styles.elementKeyInputActions}>\n        <Input className={styles.elementKeyInput}\n          disabled={isDisabled}\n          placeholder={t('Enter Keys to Send')}\n          allowClear={true}\n          onChange={(e) => sendKeys.current = e.target.value} />\n        <Tooltip title={t('Send Keys')}>\n          <Button\n            disabled={isDisabled}\n            id='btnSendKeysToElement'\n            icon={<SendOutlined/>}\n            onClick={() => applyClientMethod({methodName: 'sendKeys', elementId: selectedElementId, args: [sendKeys.current || '']})} />\n        </Tooltip>\n        <Tooltip title={t('Clear')}>\n          <Button\n            disabled={isDisabled}\n            id='btnClearElement'\n            icon={<ClearOutlined/>}\n            onClick={() => applyClientMethod({methodName: 'clear', elementId: selectedElementId})} />\n        </Tooltip>\n      </Button.Group>\n      <Button.Group>\n        <Tooltip title={t('Copy Attributes to Clipboard')}>\n          <Button\n            disabled={isDisabled}\n            id='btnCopyAttributes'\n            icon={<CopyOutlined/>}\n            onClick={() => clipboard.writeText(JSON.stringify(dataSource))} />\n        </Tooltip>\n        <Tooltip title={t('Get Timing')}>\n          <Button\n            disabled={isDisabled}\n            id='btnGetTiming'\n            icon={<HourglassOutlined/>}\n            onClick={() => getFindElementsTimes(findDataSource)} />\n        </Tooltip>\n      </Button.Group>\n    </Row>\n    {findDataSource.length > 0 &&\n      <Row>\n        <Spin spinning={isFindingElementsTimes}>\n          <Table\n            columns={findColumns}\n            dataSource={findDataSource}\n            size=\"small\"\n            tableLayout='fixed'\n            pagination={false} />\n        </Spin>\n      </Row>\n    }\n    <br />\n    {currentContext === NATIVE_APP && showXpathWarning &&\n      <div>\n        <Alert\n          message={t('usingXPathNotRecommended')}\n          type={ALERT.WARNING}\n          showIcon />\n        <br />\n      </div>\n    }\n    {currentContext === NATIVE_APP && contexts && contexts.length > 1 &&\n      <div>\n        <Alert\n          message={t('usingSwitchContextRecommended')}\n          type={ALERT.WARNING}\n          showIcon />\n        <br />\n      </div>\n    }\n    {currentContext !== NATIVE_APP &&\n      <div>\n        <Alert\n          message={t('usingWebviewContext')}\n          type={ALERT.WARNING}\n          showIcon />\n        <br />\n      </div>\n    }\n    {contexts && contexts.length > 1 &&\n      <div>\n        {contextSelect()}\n        <br /><br />\n      </div>\n    }\n    {dataSource.length > 0 &&\n      <Row>\n        <Table\n          columns={attributeColumns}\n          dataSource={dataSource}\n          size=\"small\"\n          pagination={false} />\n      </Row>\n    }\n  </div>;\n};\n\nexport default SelectedElement;\n","import React, { useRef } from 'react';\nimport { Alert, Input, Row, Button, Badge, List, Space, Spin, Tooltip } from 'antd';\nimport { AimOutlined, ClearOutlined, SendOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport { ALERT } from '../AntdTypes';\nimport InspectorStyles from './Inspector.css';\n\nconst LocatedElements = (props) => {\n  const { locatedElements, locatedElementsExecutionTime, applyClientMethod, setLocatorTestElement, locatorTestElement,\n          isFindingLocatedElementInSource, searchedForElementBounds, selectLocatedElement, source, driver, t } = props;\n\n  const sendKeys = useRef(null);\n\n  const showIdAutocompleteInfo = () => {\n    const { locatorTestStrategy, locatorTestValue } = props;\n    const automationName = driver.client.capabilities.automationName;\n    const idLocatorAutocompletionDisabled = driver.client.capabilities.disableIdLocatorAutocompletion;\n    if (automationName && automationName.toLowerCase() === 'uiautomator2' &&\n      locatorTestStrategy === 'id' && !locatorTestValue.includes(':id/') && !idLocatorAutocompletionDisabled) {\n      return <Row><Alert message={t('idAutocompletionCanBeDisabled')} type={ALERT.INFO} showIcon/></Row>;\n    }\n  };\n\n  return <>\n    {locatedElements.length === 0 && <Space className={InspectorStyles.spaceContainer} direction='vertical' size='small'>\n      <Row><i>{t('couldNotFindAnyElements')}</i></Row>\n      {showIdAutocompleteInfo()}\n    </Space>}\n    {locatedElements.length > 0 && <Spin spinning={isFindingLocatedElementInSource}>\n      <Space className={InspectorStyles.spaceContainer} direction='vertical' size='small'>\n        <Row justify='space-between'>\n          <span>{t('elementsCount')} <Badge count={locatedElements.length} offset={[0, -2]}/></span>\n          <>{t('Time')}: {locatedElementsExecutionTime}</>\n        </Row>\n        <Row>\n          <List className={InspectorStyles.searchResultsList}\n            size='small'\n            dataSource={locatedElements}\n            renderItem={(elementId) =>\n              <List.Item type='text'\n                {...(locatorTestElement === elementId ? { className: InspectorStyles.searchResultsSelectedItem } : {})}\n                {...(locatorTestElement !== elementId ? { onClick: () => {setLocatorTestElement(elementId);} } : {})}\n              >\n                {elementId}\n              </List.Item>\n            }\n          />\n        </Row>\n        <Row justify='center'>\n          <Space direction='horizontal' size='small'>\n            <Tooltip title={t('Find and Select in Source')} placement='bottom'>\n              <Button\n                disabled={!locatorTestElement}\n                icon={<MenuUnfoldOutlined/>}\n                onClick={() => selectLocatedElement(source, searchedForElementBounds, locatorTestElement)}\n              />\n            </Tooltip>\n            <Tooltip title={t('Tap')} placement='bottom'>\n              <Button\n                disabled={!locatorTestElement}\n                icon={<AimOutlined/>}\n                onClick={() => applyClientMethod({methodName: 'click', elementId: locatorTestElement})}\n              />\n            </Tooltip>\n            <Button.Group className={InspectorStyles.searchResultsActions}>\n              <Input className={InspectorStyles.searchResultsKeyInput}\n                disabled={!locatorTestElement}\n                placeholder={t('Enter Keys to Send')}\n                allowClear={true}\n                onChange={(e) => sendKeys.current = e.target.value}/>\n              <Tooltip title={t('Send Keys')} placement='bottom'>\n                <Button\n                  disabled={!locatorTestElement}\n                  icon={<SendOutlined/>}\n                  onClick={() => applyClientMethod({methodName: 'sendKeys', elementId: locatorTestElement, args: [sendKeys.current || '']})}\n                />\n              </Tooltip>\n              <Tooltip title={t('Clear')} placement='bottom'>\n                <Button\n                  disabled={!locatorTestElement}\n                  id='btnClearElement'\n                  icon={<ClearOutlined/>}\n                  onClick={() => applyClientMethod({methodName: 'clear', elementId: locatorTestElement})}\n                />\n              </Tooltip>\n            </Button.Group>\n          </Space>\n        </Row>\n      </Space>\n    </Spin>}\n  </>;\n};\n\nexport default LocatedElements;\n","import React from 'react';\nimport { Alert, Input, Space, Radio, Row } from 'antd';\nimport { ALERT } from '../AntdTypes';\nimport InspectorStyles from './Inspector.css';\n\nconst STRAT_ID = ['id', 'Id'];\nconst STRAT_XPATH = ['xpath', 'XPath'];\nconst STRAT_NAME = ['name', 'Name'];\nconst STRAT_CLASS_NAME = ['class name', 'Class Name'];\nconst STRAT_ACCESSIBILITY_ID = ['accessibility id', 'Accessibility ID'];\nconst STRAT_PREDICATE = ['-ios predicate string', 'Predicate String'];\nconst STRAT_CLASS_CHAIN = ['-ios class chain', 'Class Chain'];\nconst STRAT_UIAUTOMATOR = ['-android uiautomator', 'UIAutomator'];\nconst STRAT_DATAMATCHER = ['-android datamatcher', 'DataMatcher'];\nconst STRAT_VIEWTAG = ['-android viewtag', 'View Tag'];\n\nconst locatorStrategies = (driver) => {\n  const automationName = driver.client.capabilities.automationName;\n  let strategies = [STRAT_ID, STRAT_XPATH, STRAT_NAME, STRAT_CLASS_NAME, STRAT_ACCESSIBILITY_ID];\n  if (!automationName) { return strategies; }\n  switch (automationName.toLowerCase()) {\n    case 'xcuitest':\n    case 'mac2':\n      strategies.push(STRAT_PREDICATE, STRAT_CLASS_CHAIN);\n      break;\n    case 'espresso':\n      strategies.push(STRAT_DATAMATCHER, STRAT_VIEWTAG);\n      break;\n    case 'uiautomator2':\n      strategies.push(STRAT_UIAUTOMATOR);\n      break;\n  }\n  return strategies;\n};\n\nconst showMissingAutomationNameInfo = (driver, t) => {\n  if (!driver.client.capabilities.automationName) {\n    return <Alert message={t('missingAutomationNameForStrategies')} type={ALERT.INFO} showIcon/>;\n  }\n};\n\nconst ElementLocator = (props) => {\n  const { setLocatorTestValue, locatorTestValue, setLocatorTestStrategy, locatorTestStrategy, driver, t } = props;\n\n  return (\n    <Space className={InspectorStyles.spaceContainer} direction='vertical' size='small'>\n      {t('locatorStrategy')}\n      <Row justify=\"center\">\n        <Radio.Group buttonStyle=\"solid\"\n          onChange={(e) => setLocatorTestStrategy(e.target.value)}\n          defaultValue={locatorTestStrategy}\n        >\n          <Row justify=\"center\">\n            {locatorStrategies(driver).map(([strategyValue, strategyName]) => (\n              <Radio.Button\n                className={InspectorStyles.locatorStrategyBtn}\n                value={strategyValue}\n                key={strategyValue}\n              >\n                {strategyName}\n              </Radio.Button>\n            ))}\n          </Row>\n        </Radio.Group>\n      </Row>\n      {showMissingAutomationNameInfo(driver, t)}\n      {t('selector')}\n      <Input.TextArea\n        className={InspectorStyles.locatorSelectorTextArea}\n        onChange={(e) => setLocatorTestValue(e.target.value)}\n        value={locatorTestValue}\n        allowClear={true}\n        rows={3} />\n    </Space>\n  );\n};\n\nexport default ElementLocator;\n","import React from 'react';\nimport { Modal, Button } from 'antd';\nimport LocatedElements from './LocatedElements';\nimport ElementLocator from './ElementLocator';\n\nconst LocatorTestModal = (props) => {\n  const { isLocatorTestModalVisible, isSearchingForElements, clearSearchResults, locatedElements, t } = props;\n\n  const onCancel = () => {\n    const { hideLocatorTestModal } = props;\n    hideLocatorTestModal();\n    clearSearchResults();\n  };\n\n  const onSubmit = () => {\n    const { locatorTestStrategy, locatorTestValue, searchForElement } = props;\n    if (locatedElements) {\n      onCancel();\n    } else {\n      searchForElement(locatorTestStrategy, locatorTestValue);\n    }\n  };\n\n  // Footer displays all the buttons at the bottom of the Modal\n  return <Modal open={isLocatorTestModalVisible}\n    title={t('Search for element')}\n    onCancel={onCancel}\n    footer=\n      {<>\n        {locatedElements &&\n        <Button onClick={(e) => e.preventDefault() || clearSearchResults()}>\n          {t('Back')}\n        </Button>}\n        <Button loading={isSearchingForElements} onClick={onSubmit} type=\"primary\">\n          {locatedElements ? t('Done') : t('Search')}\n        </Button>\n      </>}>\n    {!locatedElements && <ElementLocator {...props} />}\n    {locatedElements && <LocatedElements {...props} />}\n  </Modal>;\n};\n\nexport default LocatorTestModal;\n","import React from 'react';\nimport { Modal, Button, Input, Row } from 'antd';\n\nconst SiriCommandModal = (props) => {\n  const { siriCommandValue, setSiriCommandValue, isSiriCommandModalVisible, t } = props;\n\n  const onSubmit = () => {\n    const { applyClientMethod } = props;\n    applyClientMethod({ methodName: 'executeScript', args: ['mobile:siriCommand', [{text: siriCommandValue}]]});\n    onCancel();\n  };\n\n  const onCancel = () => {\n    const { hideSiriCommandModal } = props;\n    hideSiriCommandModal();\n  };\n\n  // Footer displays all the buttons at the bottom of the Modal\n  return <Modal open={isSiriCommandModalVisible}\n    title={t('Execute Siri Command')}\n    onCancel={onCancel}\n    footer={<Button onClick={onSubmit} type=\"primary\">{t('Execute Command')}</Button>}>\n    <Row>\n      {t('Command')}\n      <Input.TextArea onChange={(e) => setSiriCommandValue(e.target.value)} value={siriCommandValue} />\n    </Row>\n  </Modal>;\n};\n\nexport default SiriCommandModal;\n","import React from 'react';\nimport { Tree, Spin } from 'antd';\nimport LocatorTestModal from './LocatorTestModal';\nimport InspectorStyles from './Inspector.css';\nimport SiriCommandModal from './SiriCommandModal';\n\nconst IMPORTANT_ATTRS = [\n  'name',\n  'content-desc',\n  'resource-id',\n  'AXDescription',\n  'AXIdentifier',\n];\n\n/**\n * Shows the 'source' of the app as a Tree\n */\nconst Source = (props) => {\n  const { source, sourceError, setExpandedPaths, expandedPaths, selectedElement = {}, showSourceAttrs,\n          methodCallInProgress, mjpegScreenshotUrl, isSourceRefreshOn, t } = props;\n\n  const getFormattedTag = (el, showAllAttrs) => {\n    const { tagName, attributes } = el;\n    let attrs = [];\n\n    for (let attr of Object.keys(attributes)) {\n      if (IMPORTANT_ATTRS.includes(attr) || showAllAttrs) {\n        attrs.push(<span key={attr}>&nbsp;\n          <i\n            className={InspectorStyles.sourceAttrName}\n          >{attr}</i>=<span\n            className={InspectorStyles.sourceAttrValue}\n          >&quot;{attributes[attr]}&quot;</span>\n        </span>);\n      }\n    }\n    return <span>\n      &lt;<b className={InspectorStyles.sourceTag}>{tagName}</b>{attrs}&gt;\n    </span>;\n  };\n\n  /**\n   * Binds to antd Tree onSelect. If an item is being unselected, path is undefined\n   * otherwise 'path' refers to the element's path.\n   */\n  const handleSelectElement = (path) => {\n    const { selectElement, unselectElement } = props;\n\n    if (!path) {\n      unselectElement();\n    } else {\n      selectElement(path);\n    }\n  };\n\n  // Recursives through the source and renders a TreeNode for an element\n  const recursive = (elemObj) => {\n    if (!((elemObj || {}).children || []).length) { return null; }\n\n    return elemObj.children.map((el) => ({\n      title: getFormattedTag(el, showSourceAttrs),\n      key: el.path,\n      children: recursive(el),\n    }));\n  };\n\n  const treeData = source && recursive(source);\n\n  return <div id='sourceContainer' className={InspectorStyles['tree-container']} tabIndex=\"0\">\n    {!source && !sourceError && <i>{t('Gathering initial app source…')}</i>}\n    {sourceError && t('couldNotObtainSource', {errorMsg: JSON.stringify(sourceError)})}\n    {/* Show loading indicator in MJPEG mode if a method call is in progress and source refresh is on */}\n    <Spin size='large' spinning={!!methodCallInProgress && mjpegScreenshotUrl && isSourceRefreshOn}>\n      {/* Must switch to a new antd Tree component when there's changes to treeData  */}\n      {treeData ?\n        <Tree\n          defaultExpandAll={true}\n          onExpand={setExpandedPaths}\n          expandedKeys={expandedPaths}\n          onSelect={(selectedPaths) => handleSelectElement(selectedPaths[0])}\n          selectedKeys={[selectedElement.path]}\n          treeData={treeData} />\n        :\n        <Tree\n          treeData={[]} />\n      }\n    </Spin>\n    <LocatorTestModal {...props} />\n    <SiriCommandModal {...props} />\n  </div>;\n};\n\nexport default Source;\n","import { clipboard } from '../../polyfills';\nimport React from 'react';\nimport { Card, Select, Tooltip, Button } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport frameworks from '../../lib/client-frameworks';\nimport { highlight } from 'highlight.js';\nimport { ExportOutlined, CopyOutlined, DeleteOutlined, CloseOutlined, CodeOutlined } from '@ant-design/icons';\nimport { BUTTON } from '../AntdTypes';\n\nconst RecordedActions = (props) => {\n  const { showBoilerplate, recordedActions, actionFramework, t } = props;\n\n  const code = (raw = true) => {\n    const { host, port, path, https, desiredCapabilities } = props.sessionDetails;\n\n    let framework = new frameworks[actionFramework](host, port, path, https, desiredCapabilities);\n    framework.actions = recordedActions;\n    const rawCode = framework.getCodeString(showBoilerplate);\n    if (raw) {\n      return rawCode;\n    }\n    return highlight(framework.language, rawCode, true).value;\n  };\n\n  const actionBar = () => {\n    const { setActionFramework, toggleShowBoilerplate, clearRecording, closeRecorder, isRecording } = props;\n\n    return <div>\n      {!!recordedActions.length &&\n        <Select defaultValue={actionFramework} onChange={setActionFramework}\n          className={InspectorStyles['framework-dropdown']} size=\"small\">\n          {Object.keys(frameworks).map((f) =>\n            <Select.Option value={f} key={f}>{frameworks[f].readableName}</Select.Option>\n          )}\n        </Select>\n      }\n      {(!!recordedActions.length || !isRecording) &&\n        <Button.Group size=\"small\">\n          {!!recordedActions.length &&\n          <Tooltip title={t('Show/Hide Boilerplate Code')}>\n            <Button\n              onClick={toggleShowBoilerplate}\n              icon={<ExportOutlined/>}\n              type={showBoilerplate ? BUTTON.PRIMARY : BUTTON.DEFAULT} />\n          </Tooltip>\n          }\n          {!!recordedActions.length &&\n          <Tooltip title={t('Copy code to clipboard')}>\n            <Button\n              icon={<CopyOutlined/>}\n              onClick={() => clipboard.writeText(code())} />\n          </Tooltip>\n          }\n          {!!recordedActions.length &&\n          <Tooltip title={t('Clear Actions')}>\n            <Button\n              icon={<DeleteOutlined/>}\n              onClick={clearRecording} />\n          </Tooltip>\n          }\n          {!isRecording &&\n          <Tooltip title={t('Close Recorder')}>\n            <Button\n              icon={<CloseOutlined/>}\n              onClick={closeRecorder} />\n          </Tooltip>\n          }\n        </Button.Group>\n      }\n    </div>;\n  };\n\n  const highlightedCode = code(false);\n\n  return (\n    <Card title={<span><CodeOutlined /> {t('Recorder')}</span>}\n      className={InspectorStyles['recorded-actions']}\n      extra={actionBar()}>\n      {!recordedActions.length &&\n        <div className={InspectorStyles['no-recorded-actions']}>\n          {t('Perform some actions to see code show up here')}\n        </div>\n      }\n      {!!recordedActions.length &&\n        <div className={InspectorStyles['recorded-code']}\n          dangerouslySetInnerHTML={{__html: highlightedCode}} />\n      }\n    </Card>\n  );\n};\n\nexport default RecordedActions;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Row, Col, Button, Select, Modal, Input, Switch, notification, } from 'antd';\nimport { COMMAND_DEFINITIONS, COMMAND_ARG_TYPES } from './shared';\nimport InspectorStyles from './Inspector.css';\nimport { INPUT } from '../AntdTypes';\n\nconst Commands = (props) => {\n  const { selectCommandGroup, selectCommandSubGroup, selectedCommandGroup, selectedCommandSubGroup,\n          pendingCommand, cancelPendingCommand, setCommandArg, applyClientMethod, t } = props;\n\n  const startPerformingCommand = (commandName, command) => {\n    const { startEnteringCommandArgs } = props;\n    if (_.isEmpty(command.args)) {\n      applyClientMethod({methodName: command.methodName, args: [], skipRefresh: !command.refresh, ignoreResult: false});\n    } else {\n      startEnteringCommandArgs(commandName, command);\n    }\n  };\n\n  const executeCommand = () => {\n    let { args, command } = pendingCommand;\n\n    // Special case for 'rotateDevice'\n    if (command.methodName === 'rotateDevice') {\n      args = {x: args[0], y: args[1], duration: args[2], radius: args[3], rotation: args[4], touchCount: args[5]};\n    }\n\n    // Special case for 'setGeoLocation'\n    if (command.methodName === 'setGeoLocation') {\n      args = {latitude: args[0], longitude: args[1], altitude: args[2]};\n    }\n\n    // Special case for 'execute'\n    if (command.methodName === 'executeScript') {\n      if (!_.isEmpty(args[1])) {\n        try {\n          args[1] = JSON.parse(args[1]);\n        } catch (e) {\n          notification.error({\n            message: t('invalidJson', {json: args[1]}),\n            duration: 5,\n          });\n        }\n      }\n    }\n\n    // Special case for 'updateSettings'\n    if (command.methodName === 'updateSettings') {\n      if (_.isString(args[0])) {\n        try {\n          args[0] = JSON.parse(args[0]);\n        } catch (e) {\n          notification.error({\n            message: t('invalidJson', {json: args[0]}),\n            duration: 5,\n          });\n        }\n      }\n    }\n\n    applyClientMethod({methodName: command.methodName, args, skipRefresh: !command.refresh, ignoreResult: false});\n    cancelPendingCommand();\n  };\n\n  return <div className={InspectorStyles['commands-container']}>\n    <Row gutter={16} className={InspectorStyles['arg-row']}>\n      <Col span={24}>\n        <Select onChange={(commandGroupName) => selectCommandGroup(commandGroupName)} placeholder={t('Select Command Group')}>\n          { _.keys(COMMAND_DEFINITIONS).map((commandGroup) => <Select.Option key={commandGroup}>{t(commandGroup)}</Select.Option>) }\n        </Select>\n      </Col>\n    </Row>\n    {selectedCommandGroup && <Row>\n      <Col span={24}>\n        <Select onChange={(commandGroupName) => selectCommandSubGroup(commandGroupName)} placeholder={t('Select Sub Group')}>\n          { _.keys(COMMAND_DEFINITIONS[selectedCommandGroup]).map((commandGroup) => <Select.Option key={commandGroup}>{t(commandGroup)}</Select.Option>) }\n        </Select>\n      </Col>\n    </Row>}\n    <Row>\n      {selectedCommandSubGroup && _.toPairs(COMMAND_DEFINITIONS[selectedCommandGroup][selectedCommandSubGroup]).map(([commandName, command], index) => <Col key={index} span={8}>\n        <div className={InspectorStyles['btn-container']}>\n          <Button onClick={() => startPerformingCommand(commandName, command)}>{t(commandName)}</Button>\n        </div>\n      </Col>)}\n    </Row>\n    {!!pendingCommand && <Modal\n      title={t(pendingCommand.commandName)}\n      okText={t('Execute Command')}\n      cancelText={t('Cancel')}\n      open={!!pendingCommand}\n      onOk={() => executeCommand()}\n      onCancel={() => cancelPendingCommand()}>\n      {\n        !_.isEmpty(pendingCommand.command.args) && _.map(pendingCommand.command.args, ([argName, argType], index) => <Row key={index} gutter={16}>\n          <Col span={24} className={InspectorStyles['arg-container']}>\n            {\n              argType === COMMAND_ARG_TYPES.NUMBER && <Input\n                type={INPUT.NUMBER}\n                value={pendingCommand.args[index]}\n                addonBefore={t(argName)}\n                onChange={(e) => setCommandArg(index, _.toNumber(e.target.value))}\n              />\n            }\n            {argType === COMMAND_ARG_TYPES.BOOLEAN && <div>{t(argName)} <Switch checked={pendingCommand.args[index]} onChange={(v) => setCommandArg(index, v)} /></div>}\n            {argType === COMMAND_ARG_TYPES.STRING && <Input addonBefore={t(argName)} onChange={(e) => setCommandArg(index, e.target.value)}/>}\n          </Col>\n        </Row>)\n      }\n    </Modal>}\n  </div>;\n};\n\nexport default Commands;\n","import React, { useEffect, useRef } from 'react';\nimport { Table, Button, Space, Tooltip } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport { EditOutlined, DeleteOutlined, PlusOutlined, PlayCircleOutlined } from '@ant-design/icons';\nimport { SCREENSHOT_INTERACTION_MODE, POINTER_TYPES, percentageToPixels } from './shared';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nconst SAVED_ACTIONS_OBJ = {NAME: 'Name', DESCRIPTION: 'Description', CREATED: 'Created', ACTIONS: 'Actions'};\n\nconst SavedGestures = (props) => {\n  const { savedGestures, showGestureEditor, removeGestureDisplay, t } = props;\n\n  const drawnGestureRef = useRef(null);\n\n  const onRowClick = (rowKey) => {\n    const gesture = getGestureByID(rowKey);\n    if (gesture.id === drawnGestureRef.current) {\n      removeGestureDisplay();\n      drawnGestureRef.current = null;\n    } else {\n      onDraw(gesture);\n      drawnGestureRef.current = gesture.id;\n    }\n  };\n\n  const loadSavedGesture = (gesture) => {\n    const { setLoadedGesture } = props;\n    removeGestureDisplay();\n    setLoadedGesture(gesture);\n    showGestureEditor();\n  };\n\n  const handleDelete = (id) => {\n    const { deleteSavedGesture } = props;\n    if (window.confirm('Are you sure?')) {\n      deleteSavedGesture(id);\n    }\n  };\n\n  const getGestureByID = (id) => {\n    for (const gesture of savedGestures) {\n      if (gesture.id === id) {\n        return gesture;\n      }\n    }\n    throw new Error(`Couldn't find session with id ${id}`);\n  };\n\n  const onDraw = (gesture) => {\n    const { displayGesture } = props;\n    const pointers = convertCoordinates(gesture.actions);\n    displayGesture(pointers);\n  };\n\n  const onPlay = (gesture) => {\n    const { applyClientMethod } = props;\n    const pointers = convertCoordinates(gesture.actions);\n    const actions = formatGesture(pointers);\n    applyClientMethod({methodName: SCREENSHOT_INTERACTION_MODE.GESTURE, args: [actions]});\n  };\n\n  const formatGesture = (pointers) => {\n    const actions = {};\n    for (const pointer of pointers) {\n      actions[pointer.name] = pointer.ticks.map((tick) => _.omit(tick, 'id'));\n    }\n    return actions;\n  };\n\n  const convertCoordinates = (pointers) => {\n    const { windowSize } = props;\n    const newPointers = JSON.parse(JSON.stringify(pointers));\n    for (const pointer of newPointers) {\n      for (const tick of pointer.ticks) {\n        if (tick.type === POINTER_TYPES.POINTER_MOVE) {\n          tick.x = percentageToPixels(tick.x, windowSize.width);\n          tick.y = percentageToPixels(tick.y, windowSize.height);\n        }\n      }\n    }\n    return newPointers;\n  };\n\n  const dataSource = () => {\n    if (!savedGestures) { return []; }\n    return savedGestures.map((gesture) => ({\n      key: gesture.id,\n      Name: (gesture.name || '(Unnamed)'),\n      Created: moment(gesture.date).format('YYYY-MM-DD'),\n      Description: gesture.description || 'No Description',\n    }));\n  };\n\n  const columns = (Object.keys(SAVED_ACTIONS_OBJ)).map((key) => {\n    if (SAVED_ACTIONS_OBJ[key] === SAVED_ACTIONS_OBJ.ACTIONS) {\n      return {title: SAVED_ACTIONS_OBJ[key], key: SAVED_ACTIONS_OBJ[key], render: (_, record) => {\n        const gesture = getGestureByID(record.key);\n        return (\n          <Button.Group>\n            <Tooltip title={t('Play')}>\n              <Button key='play' type='primary' icon={<PlayCircleOutlined />} onClick={() => onPlay(gesture)}/>\n            </Tooltip>\n            <Button icon={<EditOutlined/>} onClick={() => loadSavedGesture(gesture)}/>\n            <Button icon={<DeleteOutlined/>} onClick={() => handleDelete(gesture.id)}/>\n          </Button.Group>\n        );\n      }};\n    } else {\n      return {title: SAVED_ACTIONS_OBJ[key], dataIndex: SAVED_ACTIONS_OBJ[key], key: SAVED_ACTIONS_OBJ[key]};\n    }\n  });\n\n  useEffect(() => {\n    const { getSavedGestures } = props;\n    getSavedGestures();\n    return () => drawnGestureRef.current = null;\n  }, []);\n\n  return (\n    <Space className={InspectorStyles.spaceContainer} direction='vertical' size='middle'>\n      {t('gesturesDescription')}\n      <Table\n        onRow={(row) => ({onClick: () => onRowClick(row.key)})}\n        pagination={false}\n        dataSource={dataSource()}\n        columns={columns}\n        footer={() => <Button\n          onClick={showGestureEditor}\n          icon={<PlusOutlined/>}\n        />}\n      />\n    </Space>\n  );\n};\n\nexport default SavedGestures;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { Tabs, Input, Button, Card, Select, Row, Col, notification,\n         PageHeader, Space, Steps, Divider, Tooltip, Popover } from 'antd';\nimport { QuestionCircleOutlined, PlayCircleOutlined, PlusCircleOutlined,\n         CloseOutlined, AimOutlined, RightCircleOutlined,\n         DownCircleOutlined, UpCircleOutlined, PauseCircleOutlined } from '@ant-design/icons';\nimport { SCREENSHOT_INTERACTION_MODE, POINTER_TYPES,\n         percentageToPixels, pixelsToPercentage } from './shared';\nimport InspectorCSS from './Inspector.css';\n\nconst { POINTER_UP, POINTER_DOWN, PAUSE, POINTER_MOVE } = POINTER_TYPES;\n\nconst DEFAULT_DURATION_TIME = 2500;\nconst COLORS = ['#FF3333', '#FF8F00', '#B65FF4', '#6CFF00', '#00FFDC'];\nconst BUTTONS = {LEFT: 0, RIGHT: 1};\nconst ACTION_TYPES = {ADD: 'add', REMOVE: 'remove'};\nconst MSG_TYPES = {ERROR: 'error', SUCCESS: 'success'};\nconst COORD_TYPE = {PERCENTAGES: 'percentages', PIXELS: 'pixels'};\nconst TICK_PROPS = {POINTER_TYPE: 'pointerType', DURATION: 'duration', BUTTON: 'button', X: 'x', Y: 'y'};\nconst CURSOR = {POINTER: 'pointer', TEXT: 'text'};\nconst STATUS = {WAIT: 'wait', FINISH: 'finish', COLOR: '#FFFFFF', FILLER: 'filler'};\nconst DISPLAY = {[POINTER_UP]: 'Pointer Up', [POINTER_DOWN]: 'Pointer Down',\n                 [PAUSE]: 'Pause', [POINTER_MOVE]: 'Move'};\n\nconst DEFAULT_POINTERS = () => [{\n  name: 'pointer1',\n  ticks: [{id: '1.1'}],\n  color: COLORS[0],\n  id: '1',\n}];\n\n/**\n * Shows the gesture editor interface\n */\nconst GestureEditor = (props) => {\n  const { loadedGesture, saveGesture, tickCoordinates, selectedTick, selectTick, unselectTick, windowSize, t } = props;\n\n  const [pointers, setPointers] = useState(loadedGesture ? loadedGesture.actions : DEFAULT_POINTERS());\n  const [name, setName] = useState(loadedGesture ? loadedGesture.name : t('Untitled Gesture'));\n  const [description, setDescription] = useState(loadedGesture ? loadedGesture.description : t('Add Description'));\n  const [coordType, setCoordType] = useState(COORD_TYPE.PERCENTAGES);\n  const [activePointerId, setActivePointerId] = useState('1');\n\n  // Draw gesture whenever pointers change\n  useEffect(() => {\n    const { displayGesture } = props;\n    const convertedPointers = getConvertedPointers(COORD_TYPE.PIXELS);\n    displayGesture(convertedPointers);\n  }, [pointers]);\n\n  // Retrieve coordinates when user taps screenshot\n  useEffect(() => {\n    if (tickCoordinates) {\n      updateCoordinates(selectedTick, tickCoordinates.x, tickCoordinates.y);\n    }\n  }, [selectedTick, tickCoordinates]);\n\n  const onSave = () => {\n    const { id, date } = loadedGesture;\n    if (duplicatePointerNames(pointers)) { return null; }\n    const gesture = {name, description, id, date, actions: getConvertedPointers(COORD_TYPE.PERCENTAGES)};\n    saveGesture(gesture);\n    displayNotificationMsg(MSG_TYPES.SUCCESS, t('Gesture saved'));\n  };\n\n  const onSaveAs = () => {\n    if (duplicatePointerNames(pointers)) { return null; }\n    const gesture = {name, description, actions: getConvertedPointers(COORD_TYPE.PERCENTAGES)};\n    saveGesture(gesture);\n    displayNotificationMsg(MSG_TYPES.SUCCESS, t('Gesture saved as', {gestureName: name}));\n    onBack();\n  };\n\n  const onPlay = () => {\n    const { applyClientMethod } = props;\n    if (duplicatePointerNames(pointers)) { return null; }\n    const formattedPointers = getW3CPointers();\n    applyClientMethod({methodName: SCREENSHOT_INTERACTION_MODE.GESTURE, args: [formattedPointers]});\n  };\n\n  const onBack = () => {\n    const { hideGestureEditor, removeLoadedGesture, removeGestureDisplay } = props;\n    unselectTick();\n    removeGestureDisplay();\n    removeLoadedGesture();\n    hideGestureEditor();\n  };\n\n  // Check if pointer names are duplicates before saving/playing\n  const duplicatePointerNames = (localPointers) => {\n    const duplicates = {};\n    for (const pointer of localPointers) {\n      if (duplicates[pointer.name]) {\n        displayNotificationMsg(MSG_TYPES.ERROR, t('Duplicate pointer names are not allowed'));\n        return true;\n      } else {\n        duplicates[pointer.name] = pointer;\n      }\n    }\n    return false;\n  };\n\n  const displayNotificationMsg = (type, msg) => {\n    notification[type]({\n      message: msg,\n      duration: 5,\n    });\n  };\n\n  // Change gesture datastructure to fit Webdriver spec\n  const getW3CPointers = () => {\n    const newPointers = {};\n    const currentPointers = getConvertedPointers(COORD_TYPE.PIXELS);\n    for (const pointer of currentPointers) {\n      newPointers[pointer.name] = pointer.ticks.map((tick) => _.omit(tick, 'id'));\n    }\n    return newPointers;\n  };\n\n  // This converts all the coordinates in the gesture to px/%\n  const getConvertedPointers = (type) => {\n    const { width, height } = windowSize;\n    if (type === coordType) { return pointers; }\n    const newPointers = _.cloneDeep(pointers);\n    for (const pointer of newPointers) {\n      for (const tick of pointer.ticks) {\n        if (tick.type === POINTER_TYPES.POINTER_MOVE) {\n          if (type === COORD_TYPE.PIXELS) {\n            tick.x = percentageToPixels(tick.x, width);\n            tick.y = percentageToPixels(tick.y, height);\n          } else {\n            tick.x = pixelsToPercentage(tick.x, width);\n            tick.y = pixelsToPercentage(tick.y, height);\n          }\n        }\n      }\n    }\n    return newPointers;\n  };\n\n  const getDefaultMoveDuration = (ticks, tickId, x2, y2, coordFromTap) => {\n    const { width, height } = windowSize;\n    const ticksExceptCurrent = ticks.filter((tick) => tick.id !== tickId);\n    const prevPointerMoves = [];\n    for (const tick of ticksExceptCurrent) {\n      if (tick.type === POINTER_MOVE && tick.x !== undefined && tick.y !== undefined) {\n        prevPointerMoves.push({x: tick.x, y: tick.y});\n      }\n    }\n    const len = prevPointerMoves.length;\n    if (len === 0) {\n      return 0;\n    }\n    const obj = {x1: prevPointerMoves[len - 1].x, y1: prevPointerMoves[len - 1].y, x2, y2};\n    if (coordType === COORD_TYPE.PERCENTAGES) {\n      obj.x1 = percentageToPixels(obj.x1, width);\n      obj.y1 = percentageToPixels(obj.y1, height);\n      // No need to convert coordinates from tap since they are in px\n      if (!coordFromTap) {\n        obj.x2 = percentageToPixels(obj.x2, width);\n        obj.y2 = percentageToPixels(obj.y2, height);\n      }\n    }\n    const calcLength = (v1, v2) => Math.sqrt((v1 ** 2) + (v2 ** 2));\n    const calcDiff = (v1, v2) => Math.abs(v2) - Math.abs(v1);\n    const xDiff = calcDiff(obj.x1, obj.x2);\n    const yDiff = calcDiff(obj.y1, obj.y2);\n    const maxScreenLength = calcLength(width, height);\n    const lineLength = calcLength(xDiff, yDiff);\n    const lineLengthPct = lineLength / maxScreenLength;\n    return Math.round(lineLengthPct * DEFAULT_DURATION_TIME);\n  };\n\n  // Update tapped coordinates within local state\n  const updateCoordinates = (tickKey, updateX, updateY) => {\n    if (!updateX || !updateY) { return null; }\n    const { width, height } = windowSize;\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((pointer) => pointer.id === tickKey[0]);\n    const currentTick = currentPointer.ticks.find((tick) => tick.id === tickKey);\n    const x = parseFloat(updateX, 10);\n    const y = parseFloat(updateY, 10);\n    if (coordType === COORD_TYPE.PERCENTAGES) {\n      currentTick.x = pixelsToPercentage(x, width);\n      currentTick.y = pixelsToPercentage(y, height);\n    } else {\n      currentTick.x = x;\n      currentTick.y = y;\n    }\n\n    if (currentTick.duration === undefined) {\n      currentTick.duration = getDefaultMoveDuration(currentPointer.ticks, currentTick.id, x, y, true);\n    }\n    setPointers(copiedPointers);\n  };\n\n  const addPointer = () => {\n    const key = pointers.length + 1;\n    const pointerId = String(key);\n    const copiedPointers = _.cloneDeep(pointers);\n    copiedPointers.push({\n      name: `pointer${key}`,\n      ticks: [{id: `${key}.1`}],\n      id: pointerId,\n      color: COLORS[key - 1]\n    });\n    setPointers(copiedPointers);\n    setActivePointerId(pointerId);\n  };\n\n  const deletePointer = (targetKey) => {\n    // 'newActivePointerId' variable keeps track of the previous pointer before deleting the current one\n    // its default is the first pointer\n    let newActivePointerId = '1';\n    const pointersExceptCurrent = pointers.filter((pointer) => pointer.id !== targetKey);\n    const newPointers = pointersExceptCurrent.map((pointer, index) => {\n      const id = String(index + 1);\n      if (id !== pointer.id) {\n        pointer.id = id;\n        pointer.color = COLORS[index];\n        pointer.ticks = pointer.ticks.map((tick) => {\n          tick.id = `${id}.${tick.id[2]}`;\n          return tick;\n        });\n      } else {\n        newActivePointerId = pointer.id;\n      }\n      return pointer;\n    });\n    unselectTick();\n    setPointers(newPointers);\n    setActivePointerId(newActivePointerId);\n  };\n\n  const addTick = (pointerKey) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((pointer) => pointer.id === pointerKey);\n    const id = `${pointerKey}.${(currentPointer.ticks).length + 1}`;\n    currentPointer.ticks.push({id});\n    setPointers(copiedPointers);\n  };\n\n  const deleteTick = (pointerKey, tickKey) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((pointer) => pointer.id === pointerKey);\n    const ticksToKeep = currentPointer.ticks.filter((tick) => tick.id !== tickKey);\n    const newTicks = ticksToKeep.map((tick, index) => {\n      const id = String(index + 1);\n      if (tick.id !== id) {\n        tick.id = `${tick.id[0]}.${id}`;\n      }\n      return tick;\n    });\n    currentPointer.ticks = newTicks;\n    unselectTick();\n    setPointers(copiedPointers);\n  };\n\n  // Updates the current tick within local state\n  const updateTick = (tick, msg, value) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((p) => p.id === tick.id[0]);\n    const targetTickIdx = currentPointer.ticks.findIndex((t) => t.id === tick.id);\n    // currentTick can be assigned a new tick object if made changes to pointer types\n    let currentTick = currentPointer.ticks[targetTickIdx];\n\n    // We create an entire new tick for changes in pointer types to ensure previous properties are removed\n    if (msg === TICK_PROPS.POINTER_TYPE) {\n      if (value === POINTER_MOVE) {\n        selectTick(tick.id);\n      }\n      currentTick = {id: tick.id, type: value,\n                     ...([POINTER_DOWN, POINTER_UP].includes(value) && {button: BUTTONS.LEFT}),\n                     ...(value === PAUSE && {duration: 0})};\n    } else {\n      // We just modify the existing tick values\n      currentTick[msg] = parseFloat(value, 10);\n\n      // set default duration for if not set already\n      if (currentTick.x !== undefined && currentTick.y !== undefined && currentTick.duration === undefined) {\n        currentTick.duration = getDefaultMoveDuration(currentPointer.ticks, tick.id, currentTick.x, currentTick.y, false);\n      }\n    }\n\n    currentPointer.ticks[targetTickIdx] = currentTick;\n    setPointers(copiedPointers);\n  };\n\n  // Reformats the gesture only for the timeline by populating the 'filler' ticks for each pointer\n  // to match same length to keep timeline lengths consistent and accurate\n  const updateGestureForTimeline = () => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const allTickLengths = copiedPointers.map((pointer) => pointer.ticks.length);\n    const maxTickLength = Math.max(...allTickLengths);\n    return copiedPointers.map((pointer) => {\n      const currentLength = pointer.ticks.length;\n      if (currentLength > 0) {\n        pointer.ticks[currentLength - 1].customStep = STATUS.WAIT;\n        if (currentLength < maxTickLength) {\n          const fillers = Array.from({length: maxTickLength - currentLength},\n            () => ({type: STATUS.FILLER, color: STATUS.COLOR}));\n          pointer.ticks.push(...fillers);\n        }\n      }\n      return pointer;\n    });\n  };\n\n  const updatePointerName = (pointerName, pointerIndex) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    copiedPointers[pointerIndex].name = pointerName;\n    setPointers(copiedPointers);\n  };\n\n  const headerTitle =\n    <Tooltip title={t('Edit')}>\n      <Input\n        defaultValue={name}\n        className={InspectorCSS['gesture-header-title']}\n        onChange={(e) => setName(e.target.value)}\n        size='small' />\n    </Tooltip>;\n\n  const headerButtons = <>\n    <Button.Group>\n      <Button\n        className={InspectorCSS['gesture-header-coord-btn']}\n        type={coordType === COORD_TYPE.PERCENTAGES ? 'primary' : 'default'}\n        onClick={() => { setPointers(getConvertedPointers(COORD_TYPE.PERCENTAGES)); setCoordType(COORD_TYPE.PERCENTAGES); }}\n        size='small'>%</Button>\n      <Button\n        className={InspectorCSS['gesture-header-coord-btn']}\n        type={coordType === COORD_TYPE.PIXELS ? 'primary' : 'default'}\n        onClick={() => { setPointers(getConvertedPointers(COORD_TYPE.PIXELS)); setCoordType(COORD_TYPE.PIXELS); }}\n        size='small'>px</Button>\n    </Button.Group>\n    <Tooltip title={t('Play')}>\n      <Button type='primary' icon={<PlayCircleOutlined/>} onClick={() => onPlay()} />\n    </Tooltip>\n    <Button onClick={() => onSaveAs()}>{t('saveAs')}</Button>\n    <Button onClick={() => onSave()} disabled={!loadedGesture}>{t('Save')}</Button>\n  </>;\n\n  const headerDescription =\n    <Tooltip title={t('Edit')}>\n      <Input\n        defaultValue={description}\n        className={InspectorCSS['gesture-header-description']}\n        onChange={(e) => setDescription(e.target.value)}\n        size='small' />\n    </Tooltip>;\n\n  const regularTimelineIcon = (pointer, tick) => {\n    const { type, duration, button, x, y } = tick;\n    const iconStyle = {color: pointer.color};\n    return (\n      <Popover placement='bottom'\n        title={<center>{t(DISPLAY[type])}</center>}\n        content={\n          <div className={InspectorCSS['timeline-tick-title']}>\n            {duration !== undefined && <p>{t('Duration')}: {duration}ms</p>}\n            {button !== undefined && <p>{t('Button')}: {button === BUTTONS.LEFT ? t('Left') : t('Right')}</p>}\n            {x !== undefined && <p>X: {x}{coordType === COORD_TYPE.PIXELS ? 'px' : '%'}</p>}\n            {y !== undefined && <p>Y: {y}{coordType === COORD_TYPE.PIXELS ? 'px' : '%'}</p>}\n            {type === undefined && <p>{t('Action Type Not Defined')}</p>}\n          </div>\n        }>\n        {type === POINTER_MOVE && <RightCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === POINTER_DOWN && <DownCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === POINTER_UP && <UpCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === PAUSE && <PauseCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === undefined && <QuestionCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n      </Popover>\n    );\n  };\n\n  const timeline = updateGestureForTimeline().map((pointer) =>\n    <center key={pointer.id}>\n      <Steps className={InspectorCSS['gesture-header-timeline']}\n        style={{'--timelineColor': pointer.color}}\n        items={pointer.ticks.map((tick) => {\n          if (tick.type !== STATUS.FILLER) {\n            return {key: 'timeline-steps', status: tick.customStep || STATUS.FINISH, icon: regularTimelineIcon(pointer, tick)};\n          } else {\n            return {key: 'transparent-steps', status: STATUS.WAIT, icon:\n              <RightCircleOutlined className={InspectorCSS['gesture-header-icon']} style={{color: tick.color}}/>\n            };\n          }\n        })} />\n    </center>);\n\n  const tickButton = (tick) =>\n    <center>\n      <Button.Group className={InspectorCSS['tick-button-group']}>\n        <Button\n          type={tick.button === BUTTONS.LEFT ? 'primary' : 'default'}\n          className={InspectorCSS['tick-button-input']}\n          onClick={() => updateTick(tick, TICK_PROPS.BUTTON, BUTTONS.LEFT)}>\n          {t('Left')}\n        </Button>\n        <Button\n          type={tick.button === BUTTONS.RIGHT ? 'primary' : 'default'}\n          className={InspectorCSS['tick-button-input']}\n          onClick={() => updateTick(tick, TICK_PROPS.BUTTON, BUTTONS.RIGHT)}>\n          {t('Right')}\n        </Button>\n      </Button.Group>\n    </center>;\n\n  const tickDuration = (tick) =>\n    <center>\n      <Input\n        className={InspectorCSS['tick-input-box']}\n        value={!isNaN(tick.duration) ? tick.duration : null}\n        placeholder={t('Duration')}\n        defaultValue={tick.duration}\n        onChange={(e) => updateTick(tick, TICK_PROPS.DURATION, e.target.value)}\n        addonAfter='ms' />\n    </center>;\n\n  const tickCoords = (tick) =>\n    <center>\n      <div className={InspectorCSS['tick-input-box']}>\n        <Input\n          className={InspectorCSS['tick-coord-box']}\n          value={!isNaN(tick.x) ? tick.x : ''}\n          placeholder='X'\n          defaultValue={tick.x}\n          onChange={(e) => updateTick(tick, TICK_PROPS.X, e.target.value)} />\n        <Input\n          className={InspectorCSS['tick-coord-box']}\n          value={!isNaN(tick.y) ? tick.y : ''}\n          placeholder='Y'\n          defaultValue={tick.y}\n          onChange={(e) => updateTick(tick, TICK_PROPS.Y, e.target.value)} />\n      </div>\n    </center>;\n\n  const tickType = (tick) =>\n    <center>\n      <Select\n        className={InspectorCSS['tick-pointer-input']}\n        placeholder={t('Action Type')}\n        value={tick.type}\n        defaultValue={tick.type}\n        size='middle'\n        dropdownMatchSelectWidth={false}\n        onChange={(e) => updateTick(tick, TICK_PROPS.POINTER_TYPE, e)}>\n        <Select.Option className={InspectorCSS['option-inpt']} value={POINTER_MOVE}>\n          {t(DISPLAY.pointerMove)}\n        </Select.Option>\n        <Select.Option className={InspectorCSS['option-inpt']} value={POINTER_DOWN}>\n          {t(DISPLAY.pointerDown)}\n        </Select.Option>\n        <Select.Option className={InspectorCSS['option-inpt']} value={POINTER_UP}>\n          {t(DISPLAY.pointerUp)}\n        </Select.Option>\n        <Select.Option className={InspectorCSS['option-inpt']} value={PAUSE}>\n          {t(DISPLAY.pause)}\n        </Select.Option>\n      </Select>\n    </center>;\n\n  const tapCoordinatesBtn = (tickId) =>\n    <Tooltip title={selectedTick === tickId ? t('Click to Set Coordinates') : t('Set Coordinates Via Field')}>\n      <Button\n        size='small'\n        type={selectedTick === tickId ? 'primary' : 'text'}\n        icon={<AimOutlined/>}\n        onClick={() => selectedTick === tickId ? unselectTick() : selectTick(tickId)} />\n    </Tooltip>;\n\n  const tickCard = (tick) =>\n    <Card\n      hoverable={true}\n      className={InspectorCSS['tick-card']}\n      extra={\n        <>\n          {tick.type === POINTER_MOVE && tapCoordinatesBtn(tick.id)}\n          <Button size='small' type='text' icon={<CloseOutlined/>}\n            onClick={() => deleteTick(tick.id[0], tick.id)} />\n        </>\n      }>\n      <Space className={InspectorCSS.spaceContainer} direction='vertical' size='middle'>\n        {tickType(tick)}\n        {(tick.type === POINTER_MOVE || tick.type === PAUSE) && tickDuration(tick)}\n        {(tick.type === POINTER_DOWN || tick.type === POINTER_UP) && tickButton(tick)}\n        {tick.type === POINTER_MOVE && tickCoords(tick)}\n      </Space>\n    </Card>;\n\n  const pointerTicksGrid = (pointer) =>\n    <Row gutter={[24, 24]}>\n      {pointer.ticks.map((tick) =>\n        <Col xs={12} sm={12} md={12} lg={8} xl={6} xxl={4} key={tick.id}>\n          {tickCard(tick)}\n        </Col>\n      )}\n      <Col xs={12} sm={12} md={12} lg={8} xl={6} xxl={4}>\n        <Card className={InspectorCSS['tick-plus-card']} bordered={false}>\n          <center>\n            <Button className={InspectorCSS['tick-plus-btn']} icon={<PlusCircleOutlined/>}\n              onClick={() => addTick(pointer.id)} />\n          </center>\n        </Card>\n      </Col>\n    </Row>;\n\n  const pointerTabs = pointers.map((pointer, index) =>\n    ({\n      label: <Tooltip title={t('Edit')}>\n        <Input\n          className={InspectorCSS['pointer-title']}\n          style={{ cursor: activePointerId === pointer.id ? CURSOR.TEXT : CURSOR.POINTER, textDecorationColor: pointer.color}}\n          value={pointer.name}\n          defaultValue={pointer.name}\n          bordered={false}\n          maxLength={10}\n          onChange={(e) => updatePointerName(e.target.value, index)} />\n      </Tooltip>,\n      key: pointer.id,\n      children: pointerTicksGrid(pointer)\n    })\n  );\n\n  return (\n    <>\n      <PageHeader\n        className={InspectorCSS['gesture-header']}\n        onBack={() => onBack()}\n        title={headerTitle}\n        extra={headerButtons}\n        footer={\n          <>\n            {headerDescription}\n            <Divider/>\n            {timeline}\n          </>\n        } />\n      <Tabs\n        type='editable-card'\n        onChange={(pointerId) => setActivePointerId(pointerId)}\n        activeKey={activePointerId}\n        onEdit={(targetKey, action) => action === ACTION_TYPES.ADD ? addPointer() : deletePointer(targetKey)}\n        hideAdd={pointers.length === 5}\n        centered={true}\n        tabBarGutter={10}\n        items={pointerTabs} />\n    </>\n  );\n};\n\nexport default GestureEditor;\n","import React from 'react';\nimport { Card, Tooltip, Button, Select } from 'antd';\nimport { CopyOutlined, CodeOutlined } from '@ant-design/icons';\nimport InspectorStyles from './Inspector.css';\nimport frameworks from '../../lib/client-frameworks';\nimport { highlight } from 'highlight.js';\nimport { clipboard } from '../../polyfills';\n\nconst SessionCodeBox = ({ actionFramework, setActionFramework, sessionDetails, t }) => {\n\n  const code = () => {\n    const { host, port, path, https, desiredCapabilities } = sessionDetails;\n    const framework = new frameworks[actionFramework](host, port, path, https, desiredCapabilities);\n    const rawCode = framework.getCodeString(true);\n\n    return highlight(framework.language, rawCode, true).value;\n  };\n\n  const actionBar = () => <div>\n    <Select defaultValue={actionFramework} onChange={setActionFramework}\n      className={InspectorStyles['framework-dropdown']} size='small'>\n      {Object.keys(frameworks).map((f) =>\n        <Select.Option value={f} key={f}>{frameworks[f].readableName}</Select.Option>\n      )}\n    </Select>\n    <Tooltip title={t('Copy Code to Clipboard')}>\n      <Button\n        icon={<CopyOutlined/>}\n        onClick={() => clipboard.writeText(code())}\n        type='text' />\n    </Tooltip>\n  </div>;\n\n  return (\n    <Card title={<span><CodeOutlined /> {t('Start this Kind of Session with Code')}</span>}\n      className={InspectorStyles['recorded-actions']}\n      extra={actionBar()}>\n      <div className={InspectorStyles['recorded-code']} dangerouslySetInnerHTML={{__html: code()}} />\n    </Card>\n  );\n};\n\nexport default SessionCodeBox;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Table, Row, Col } from 'antd';\nimport SessionCodeBox from './SessionCodeBox';\nimport InspectorStyles from './Inspector.css';\nimport formatJSON from 'format-json';\n\nconst SESSION_OBJ = {\n  session_id: 'Session ID', session_url: 'Session URL',\n  server_details: 'Server Details', session_length: 'Session Length',\n  session_details: 'Session Details', active_appId: 'Currently Active App ID'\n};\n\nconst OUTER_TABLE_KEY = 'sessionInfo';\nconst SESSION_TABLE_KEY = 'sessionDetails';\nconst SERVER_TABLE_KEY = 'serverDetails';\n\nconst SCROLL_DISTANCE_Y = 104;\nconst COLUMN_WIDTH = 200;\nlet SESSION_DETAILS;\n\nconst SessionInfo = (props) => {\n  const { driver } = props;\n\n  const sessionArray = Object.keys(SESSION_OBJ).map((key) =>\n    [key, String(SESSION_OBJ[key])]\n  );\n\n  const generateSessionTime = () => {\n    const { sessionStartTime } = props;\n    const currentTime = Date.now();\n    const timeDiff = currentTime - sessionStartTime;\n\n    const hours = timeDiff / 3600000;\n    const minutes = (hours - Math.floor(hours)) * 60;\n    const seconds = (minutes - Math.floor(minutes)) * 60;\n\n    const showTime = (time) => String(Math.floor(time)).padStart(2, '0');\n\n    return `${showTime(hours)}:${showTime(minutes)}:${showTime(seconds)}`;\n  };\n\n  const interval = useRef();\n  const [time, setTime] = useState(generateSessionTime());\n\n  const getTable = (tableValues, keyName, outerTable) => {\n    const keyValue = `${keyName}_value`;\n    const dataSource = tableValues.map(([name, value]) =>\n      ({key: name, [keyName]: outerTable ? value : name, [keyValue]: value })\n    );\n\n    const columns = [{\n      dataIndex: keyName,\n      key: keyName,\n      ...(outerTable && { width: COLUMN_WIDTH })\n    }, {\n      dataIndex: keyValue,\n      key: keyValue,\n      render: outerTable ?\n        (text) => generateSessionInfo(text)\n        :\n        (text) => typeof text === 'object' ?\n          <pre>{formatJSON.plain(text)}</pre>\n          :\n          String(text)\n    }];\n\n    return outerTable ?\n      <div className={InspectorStyles['session-info-table']}>\n        <Row>\n          <Col span={24}>\n            <Table\n              columns={columns}\n              dataSource={dataSource}\n              pagination={false}\n              showHeader={false}\n              bordered={true}\n              size=\"small\" />\n          </Col>\n        </Row>\n        <div className={InspectorStyles['session-code-box']}>\n          <Row>\n            <SessionCodeBox {...props} />\n          </Row>\n        </div>\n      </div>\n      :\n      <Table\n        className={InspectorStyles['session-inner-table']}\n        columns={columns}\n        dataSource={dataSource}\n        pagination={false}\n        showHeader={false}\n        size=\"small\"\n        scroll={{ y: SCROLL_DISTANCE_Y }} />;\n  };\n\n  const generateSessionInfo = (name) => {\n    const { sessionDetails, appId, status } = props;\n    const { host, path, port } = sessionDetails;\n    const { sessionId, connectedUrl } = driver || '';\n\n    const serverDetailsArray = [['host', host], ['path', path], ['port', port]];\n    const sessionArray = SESSION_DETAILS != null ?\n      Object.keys(SESSION_DETAILS).map((key) =>\n        [key, (SESSION_DETAILS[key])]\n      )\n      :\n      [];\n    const serverStatusArray = status != null ?\n      Object.keys(status).map((key) =>\n        [key, String(status[key])]\n      )\n      :\n      [];\n\n    // TODO: Fetch URL from Cloud Providers\n    const sessionUrl = sessionId && connectedUrl ?\n      `${connectedUrl}session/${sessionId}`\n      :\n      'Error Fetching Session Url';\n\n    switch (name) {\n      case 'Session ID': return sessionId;\n      case 'Session URL': return sessionUrl;\n      case 'Server Details': return getTable([...serverDetailsArray, ...serverStatusArray],\n        SERVER_TABLE_KEY, false);\n      case 'Session Length': return time;\n      case 'Session Details': return getTable(sessionArray, SESSION_TABLE_KEY, false);\n      case 'Currently Active App ID': return appId;\n      default: return name;\n    }\n  };\n\n  useEffect(() => {\n    const { getActiveAppId, getServerStatus, applyClientMethod } = props;\n    const { isIOS, isAndroid } = driver.client;\n\n    getActiveAppId(isIOS, isAndroid);\n    getServerStatus();\n\n    (async () => SESSION_DETAILS = await applyClientMethod({methodName: 'getSession'}))();\n    interval.current = setInterval(() => {\n      setTime(generateSessionTime());\n    }, 1000);\n\n    return () => clearInterval(interval.current);\n  }, []);\n\n  return getTable(sessionArray, OUTER_TABLE_KEY, true);\n};\n\nexport default SessionInfo;\n","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { debounce } from 'lodash';\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE } from './shared';\nimport { Card, Button, Spin, Tooltip, Modal, Tabs, Space, Switch } from 'antd';\nimport Screenshot from './Screenshot';\nimport HeaderButtons from './HeaderButtons';\nimport SelectedElement from './SelectedElement';\nimport Source from './Source';\nimport InspectorStyles from './Inspector.css';\nimport RecordedActions from './RecordedActions';\nimport Commands from './Commands';\nimport SavedGestures from './SavedGestures';\nimport GestureEditor from './GestureEditor';\nimport SessionInfo from './SessionInfo';\nimport { clipboard } from '../../polyfills';\nimport {\n  SelectOutlined,\n  ScanOutlined,\n  SwapRightOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  CopyOutlined,\n  DownloadOutlined,\n  FileTextOutlined,\n  TagOutlined,\n  SlidersOutlined,\n  InfoCircleOutlined,\n  ThunderboltOutlined,\n  HighlightOutlined,\n  CodeOutlined,\n  ShrinkOutlined,\n  DragOutlined,\n  InfoOutlined,\n  UpCircleOutlined\n} from '@ant-design/icons';\nimport { BUTTON } from '../AntdTypes';\n\nconst {SELECT, SWIPE, TAP, LONGPRESS, DRAG_AND_DROP, DOUBLE_TAP, ZOOMIN, SLIDE } = SCREENSHOT_INTERACTION_MODE;\n\nconst ButtonGroup = Button.Group;\n\nconst MIN_WIDTH = 870;\nconst MIN_HEIGHT = 610;\nconst MAX_SCREENSHOT_WIDTH = 500;\n\nconst MJPEG_STREAM_CHECK_INTERVAL = 1000;\n\nfunction downloadXML (sourceXML) {\n  let element = document.createElement('a');\n  element.setAttribute('href', 'data:application/xml;charset=utf-8,' + encodeURIComponent(sourceXML));\n  element.setAttribute('download', 'source.xml');\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport default class Inspector extends Component {\n\n  constructor () {\n    super();\n    this.didInitialResize = false;\n    this.state = {\n      scaleRatio: 1,\n    };\n    this.screenAndSourceEl = null;\n    this.lastScreenshot = null;\n    this.screenshotEl = null;\n    this.updateSourceTreeWidth = debounce(this.updateSourceTreeWidth.bind(this), 50);\n    this.updateScaleRatio = debounce(this.updateScaleRatio.bind(this), 500);\n    this.mjpegStreamCheckInterval = null;\n  }\n\n  /**\n   * Calculates the ratio that the image is being scaled by\n   */\n  updateScaleRatio () {\n    const screenshotImg = this.screenshotEl.querySelector('img');\n\n    // now update scale ratio\n    this.setState({\n      scaleRatio: (this.props.windowSize.width / screenshotImg.offsetWidth)\n    });\n  }\n\n  updateSourceTreeWidth () {\n    // the idea here is to keep track of the screenshot image width. if it has\n    // too much space to the right or bottom, adjust the max-width of the\n    // screenshot container so the source tree flex adjusts to always fill the\n    // remaining space. This keeps everything looking tight.\n    if (!this.screenAndSourceEl) {\n      return;\n    }\n\n    const screenshotBox = this.screenAndSourceEl.querySelector('#screenshotContainer');\n    const img = this.screenAndSourceEl.querySelector('#screenshotContainer img#screenshot');\n\n    if (!img) {\n      return;\n    }\n\n    const imgRect = img.getBoundingClientRect();\n    const screenshotRect = screenshotBox.getBoundingClientRect();\n    screenshotBox.style.flexBasis = `${imgRect.width}px`;\n    if (imgRect.height < screenshotRect.height) {\n      // get what the img width would be if it fills screenshot box height\n      const attemptedWidth = (screenshotRect.height / imgRect.height) * imgRect.width;\n      screenshotBox.style.maxWidth = attemptedWidth > MAX_SCREENSHOT_WIDTH ?\n        `${MAX_SCREENSHOT_WIDTH}px` :\n        `${attemptedWidth}px`;\n    } else if (imgRect.width < screenshotRect.width) {\n      screenshotBox.style.maxWidth = `${imgRect.width}px`;\n    }\n\n    this.updateScaleRatio();\n  }\n\n  componentDidMount () {\n    const curHeight = window.innerHeight;\n    const curWidth = window.innerWidth;\n    const needsResize = (curHeight < MIN_HEIGHT) || (curWidth < MIN_WIDTH);\n    if (!this.didInitialResize && needsResize) {\n      const newWidth = curWidth < MIN_WIDTH ? MIN_WIDTH : curWidth;\n      const newHeight = curHeight < MIN_HEIGHT ? MIN_HEIGHT : curHeight;\n      // resize width to something sensible for using the inspector on first run\n      window.resizeTo(newWidth, newHeight);\n    }\n    this.didInitialResize = true;\n    // setInterval(() => {\n    //   this.props.applyClientMethod({methodName: 'getPageSource', ignoreResult: true});\n    // }, 8000);\n    this.props.applyClientMethod({methodName: 'getPageSource', ignoreResult: true});\n    this.props.getSavedActionFramework();\n    this.props.runKeepAliveLoop();\n    window.addEventListener('resize', this.updateSourceTreeWidth);\n    this.props.setSessionTime(Date.now());\n\n    if (this.props.mjpegScreenshotUrl) {\n      this.mjpegStreamCheckInterval = setInterval(this.checkMjpegStream.bind(this),\n        MJPEG_STREAM_CHECK_INTERVAL);\n    }\n  }\n\n  async checkMjpegStream () {\n    const {mjpegScreenshotUrl, isAwaitingMjpegStream, setAwaitingMjpegStream} = this.props;\n    const img = new Image();\n    img.src = mjpegScreenshotUrl;\n    let imgReady = false;\n    try {\n      await img.decode();\n      imgReady = true;\n    } catch (ign) {}\n    if (imgReady && isAwaitingMjpegStream) {\n      setAwaitingMjpegStream(false);\n      this.updateSourceTreeWidth();\n    } else if (!imgReady && !isAwaitingMjpegStream) {\n      setAwaitingMjpegStream(true);\n    }\n  }\n\n  componentDidUpdate () {\n    const {screenshot} = this.props;\n    // only update when the screenshot changed, not for any other kind of\n    // update\n    if (screenshot !== this.lastScreenshot) {\n      this.updateSourceTreeWidth();\n      this.lastScreenshot = screenshot;\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.mjpegStreamCheckInterval) {\n      clearInterval(this.mjpegStreamCheckInterval);\n      this.mjpegStreamCheckInterval = null;\n    }\n  }\n\n  screenshotInteractionChange (mode) {\n    const {selectScreenshotInteractionMode, clearSwipeAction} = this.props;\n    clearSwipeAction(); // When the action changes, reset the swipe action\n    selectScreenshotInteractionMode(mode);\n  }\n\n  render () {\n    const {screenshot, screenshotError, selectedElement = {},\n           quitSession, showRecord,\n           screenshotInteractionMode, visibleCommandMethod,\n           selectedInteractionMode, selectInteractionMode, setVisibleCommandResult,\n           showKeepAlivePrompt, keepSessionAlive, sourceXML, t, visibleCommandResult,\n           mjpegScreenshotUrl, isAwaitingMjpegStream, toggleShowCentroids, showCentroids,\n           isGestureEditorVisible, toggleShowAttributes, isSourceRefreshOn\n    } = this.props;\n    const {path} = selectedElement;\n\n    const showScreenshot = ((screenshot && !screenshotError) ||\n                            (mjpegScreenshotUrl && (!isSourceRefreshOn || !isAwaitingMjpegStream)));\n\n    let screenShotControls = <div className={InspectorStyles['screenshot-controls']}>\n      <Space size='middle'>\n        <Tooltip title={t(showCentroids ? 'Hide Element Handles' : 'Show Element Handles')} placement=\"topRight\">\n          <Switch\n            checkedChildren={<CheckCircleOutlined />}\n            unCheckedChildren={<CloseCircleOutlined />}\n            defaultChecked={false}\n            onChange={() => toggleShowCentroids()}\n            disabled={isGestureEditorVisible}\n          />\n        </Tooltip>\n        <ButtonGroup value={screenshotInteractionMode}>\n          <Tooltip title={t('Select Elements')}>\n            <Button icon={<SelectOutlined/>} onClick={() => {this.screenshotInteractionChange(SELECT);}}\n              type={screenshotInteractionMode === SELECT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible}\n            />\n          </Tooltip>\n          <Tooltip title={t('Swipe By Coordinates')}>\n            <Button icon={<SwapRightOutlined/>} onClick={() => {this.screenshotInteractionChange(SWIPE);}}\n              type={screenshotInteractionMode === SWIPE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible}\n            />\n          </Tooltip>\n          <Tooltip title={t('Tap By Coordinates')}>\n            <Button icon={<ScanOutlined/>} onClick={() => {this.screenshotInteractionChange(TAP);}}\n              type={screenshotInteractionMode === TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible}\n            />\n          </Tooltip>\n          <Tooltip title={t('LongPress')}>\n            <Button icon={<InfoOutlined/>} onClick={() => {this.screenshotInteractionChange(LONGPRESS);}}\n              type={screenshotInteractionMode === LONGPRESS ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible}\n            />\n          </Tooltip>\n          <Tooltip title={t('drag_and_drop')}>\n            <Button icon={<DragOutlined/>} onClick={() => {this.screenshotInteractionChange(DRAG_AND_DROP);}}\n              type={screenshotInteractionMode === DRAG_AND_DROP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible}\n            />\n          </Tooltip>\n          <Tooltip title={t('Double Tap')}>\n            <Button icon={<UpCircleOutlined/>} onClick={() => {this.screenshotInteractionChange(DOUBLE_TAP);}}\n              type={screenshotInteractionMode === DOUBLE_TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}/>\n          </Tooltip>\n          <Tooltip title={t('Zoom In and Zoom Out')}>\n            <Button icon={<ShrinkOutlined/>} onClick={() => {this.screenshotInteractionChange(ZOOMIN);}}\n              type={screenshotInteractionMode === ZOOMIN ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible}\n            />\n          </Tooltip>\n          <Tooltip title={t('Slider')}>\n            <Button icon={<SlidersOutlined />} onClick={() => {this.screenshotInteractionChange(SLIDE);}}\n              type={screenshotInteractionMode === SLIDE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible}\n            />\n          </Tooltip>\n        </ButtonGroup>\n      </Space>\n    </div>;\n    let main = <div className={InspectorStyles['inspector-main']} ref={(el) => {this.screenAndSourceEl = el;}}>\n      <div id='screenshotContainer' className={InspectorStyles['screenshot-container']} ref={(el) => {this.screenshotEl = el;}}>\n        {screenShotControls}\n        {showScreenshot && <Screenshot {...this.props} scaleRatio={this.state.scaleRatio}/>}\n        {screenshotError && t('couldNotObtainScreenshot', {screenshotError})}\n        {!showScreenshot &&\n          <Spin size=\"large\" spinning={true}>\n            <div className={InspectorStyles.screenshotBox} />\n          </Spin>\n        }\n      </div>\n      <div id='sourceTreeContainer' className={InspectorStyles['interaction-tab-container']} >\n        {showRecord &&\n          <RecordedActions {...this.props} />\n        }\n        <Tabs activeKey={selectedInteractionMode}\n          size=\"small\"\n          onChange={(tab) => selectInteractionMode(tab)}\n          items={[{\n            label: t('Source'), key: INTERACTION_MODE.SOURCE, children:\n            <div className='action-row'>\n              {/* <div className='action-col'>\n                <Card title={<span><FileTextOutlined /> {t('App Source')} </span>}\n                  extra={\n                    <span>\n                      <Tooltip title={t('Toggle Attributes')}>\n                        <Button type='text' id='btnToggleAttrs' icon={<CodeOutlined/>} onClick={toggleShowAttributes} />\n                      </Tooltip>\n                      <Tooltip title={t('Copy XML Source to Clipboard')}>\n                        <Button type='text' id='btnSourceXML' icon={<CopyOutlined/>} onClick={() => clipboard.writeText(sourceXML)} />\n                      </Tooltip>\n                      <Tooltip title={t('Download Source as .XML File')}>\n                        <Button type='text' id='btnDownloadSourceXML' icon={<DownloadOutlined/>} onClick={() => downloadXML(sourceXML)}/>\n                      </Tooltip>\n                    </span>\n                  }>\n                  <Source {...this.props} />\n                </Card>\n              </div> */}\n              <div id='selectedElementContainer'\n                className={`${InspectorStyles['interaction-tab-container']} ${InspectorStyles['element-detail-container']} action-col`}>\n                <Card title={<span><TagOutlined /> {t('selectedElement')}</span>}\n                  className={InspectorStyles['selected-element-card']}>\n                  {path && <SelectedElement {...this.props}/>}\n                  {!path && <i>{t('selectElementInSource')}</i>}\n                </Card>\n              </div>\n            </div>\n          }, {\n            label: t('Commands'), key: INTERACTION_MODE.COMMANDS, children:\n            <Card\n              title={<span><ThunderboltOutlined /> {t('Execute Commands')}</span>}\n              className={InspectorStyles['interaction-tab-card']}>\n              <Commands {...this.props} />\n            </Card>\n          }, {\n            label: t('Gestures'), key: INTERACTION_MODE.GESTURES, children:\n            isGestureEditorVisible ?\n              <Card\n                title={<span><HighlightOutlined /> {t('Gesture Builder')}</span>}\n                className={InspectorStyles['interaction-tab-card']}>\n                <GestureEditor {...this.props}/>\n              </Card>\n              :\n              <Card\n                title={<span><HighlightOutlined /> {t('Saved Gestures')}</span>}\n                className={InspectorStyles['interaction-tab-card']}>\n                <SavedGestures {...this.props} />\n              </Card>\n          }, {\n            label: t('Session Information'), key: INTERACTION_MODE.SESSION_INFO, children:\n            <Card\n              title={<span><InfoCircleOutlined /> {t('Session Information')}</span>}\n              className={InspectorStyles['interaction-tab-card']}>\n              <SessionInfo {...this.props} />\n            </Card>\n          }]}\n        />\n      </div>\n    </div>;\n\n    return (<div className={InspectorStyles['inspector-container']}>\n      <HeaderButtons {...this.props}/>\n      {main}\n      <Modal\n        title={t('Session Inactive')}\n        open={showKeepAlivePrompt}\n        onOk={() => keepSessionAlive()}\n        onCancel={() => quitSession()}\n        okText={t('Keep Session Running')}\n        cancelText={t('Quit Session')}\n      >\n        <p>{t('Your session is about to expire')}</p>\n      </Modal>\n      <Modal\n        title={t('methodCallResult', {methodName: visibleCommandMethod})}\n        open={!!visibleCommandResult}\n        onOk={() => setVisibleCommandResult(null)}\n        onCancel={() => setVisibleCommandResult(null)}\n      >\n        <pre><code>{visibleCommandResult}</code></pre>\n      </Modal>\n    </div>);\n  }\n}\n","import { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as InspectorActions from '../actions/Inspector';\nimport InspectorPage from '../components/Inspector/Inspector';\n\nfunction mapStateToProps (state) {\n  return state.inspector;\n}\n\nexport default withTranslation(InspectorPage, connect(mapStateToProps, InspectorActions));\n","import React from 'react';\nimport styles from './Spinner.css';\n\nconst Spinner = () => (\n  <div className={styles.container}>\n    <div className={styles.loader}/>\n  </div>\n);\n\nexport default Spinner;\n","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport App from './containers/App';\nimport SessionPage from './containers/SessionPage';\nimport InspectorPage from './containers/InspectorPage';\nimport Spinner from './components/Spinner/Spinner';\nimport { ipcRenderer } from './polyfills';\nimport i18n from '../configs/i18next.config.renderer';\n\nipcRenderer.on('appium-language-changed', (event, message) => {\n  if (i18n.language !== message.language) {\n    i18n.changeLanguage(message.language);\n  }\n});\n\nexport default () => (\n  <Suspense fallback={<Spinner />}>\n    <App>\n      <Switch>\n        <Route exact path=\"/\">\n          <SessionPage />\n        </Route>\n        <Route path=\"/session\">\n          <SessionPage />\n        </Route>\n        <Route path=\"/inspector\">\n          <InspectorPage />\n        </Route>\n      </Switch>\n    </App>\n  </Suspense>\n);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport Routes from '../routes';\n\nexport default class Root extends Component {\n  render () {\n    const { store, history } = this.props;\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Routes />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import React from 'react';\nimport { Alert, Button, Tooltip } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport styles from './ErrorMessage.css';\nimport { ALERT } from '../AntdTypes';\nimport { withTranslation } from '../../util';\nimport { shell } from '../../polyfills';\n\nconst CREATE_ISSUE_URL = 'https://github.com/appium/appium-inspector/issues/new/choose';\n\nconst ErrorMessage = ({ error, copyTrace, t }) => (\n  <div className={styles.errorMessage}>\n    <Alert\n      message={<>{t('Unexpected Error:')} <code children={error.message} /></>}\n      type={ALERT.ERROR}\n      showIcon\n      description={\n        <>\n          {t('Please report this issue at:')}&nbsp;\n          <a onClick={(e) => e.preventDefault() || shell.openExternal(CREATE_ISSUE_URL)} children={CREATE_ISSUE_URL} />\n          <br />\n          {t('Full error trace:')}\n          <Tooltip title={t('Copy Error Trace')}>\n            <Button size='small'\n              className={styles.copyTraceBtn}\n              onClick={copyTrace(error.stack)}\n              icon={<CopyOutlined/>} />\n          </Tooltip>\n          <pre children={error.stack} />\n        </>\n      }\n    />\n  </div>\n);\n\nexport default withTranslation(ErrorMessage);\n","import React from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { clipboard } from '../../polyfills';\n\nconst copyTrace = (trace) => {\n  clipboard.writeText(trace);\n};\n\nexport default class ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError (error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  render () {\n    const { error } = this.state;\n    if (error) {\n      return <ErrorMessage error={error} copyTrace={copyTrace}/>;\n    }\n    return this.props.children;\n  }\n}\n","export const SET_UPDATE_STATE = 'SET_UPDATE_STATE';\n\nexport function setUpdateState (updateState) {\n  return (dispatch) => {\n    dispatch({type: SET_UPDATE_STATE, updateState});\n  };\n}\n","import * as inspectorActions from './Inspector';\nimport * as sessionActions from './Session';\nimport * as updaterActions from './Updater';\n\nexport default {\n  ...inspectorActions,\n  ...sessionActions,\n  ...updaterActions,\n};\n","import _, {omit} from 'lodash';\nimport formatJSON from 'format-json';\n\nimport { NEW_SESSION_REQUESTED, NEW_SESSION_LOADING, NEW_SESSION_DONE,\n         SAVE_SESSION_REQUESTED, SAVE_SESSION_DONE,\n         GET_SAVED_SESSIONS_REQUESTED, GET_SAVED_SESSIONS_DONE,\n         SET_CAPABILITY_PARAM, ADD_CAPABILITY, REMOVE_CAPABILITY, SET_CAPS_AND_SERVER,\n         SWITCHED_TABS, SAVE_AS_MODAL_REQUESTED, HIDE_SAVE_AS_MODAL_REQUESTED, SET_SAVE_AS_TEXT,\n         DELETE_SAVED_SESSION_REQUESTED, DELETE_SAVED_SESSION_DONE,\n         CHANGE_SERVER_TYPE, SET_SERVER_PARAM, SET_SERVER, SET_ATTACH_SESS_ID,\n         GET_SESSIONS_REQUESTED, GET_SESSIONS_DONE,\n         ENABLE_DESIRED_CAPS_NAME_EDITOR, ABORT_DESIRED_CAPS_NAME_EDITOR, SAVE_DESIRED_CAPS_NAME, SET_DESIRED_CAPS_NAME,\n         ENABLE_DESIRED_CAPS_EDITOR, ABORT_DESIRED_CAPS_EDITOR, SAVE_RAW_DESIRED_CAPS, SET_RAW_DESIRED_CAPS, SHOW_DESIRED_CAPS_JSON_ERROR,\n         IS_ADDING_CLOUD_PROVIDER, SET_PROVIDERS, SET_ADD_VENDOR_PREFIXES, SET_STATE_FROM_URL, SET_STATE_FROM_SAVED,\n         ServerTypes } from '../actions/Session';\nimport { notification } from 'antd';\n\nconst visibleProviders = []; // Pull this from \"electron-settings\"\nconst server = {\n  local: {},\n  remote: {},\n  advanced: {},\n};\n\nfor (const serverName of _.keys(ServerTypes)) {\n  server[serverName] = {};\n}\n\n// Make sure there's always at least one cap\nconst INITIAL_STATE = {\n  savedSessions: [],\n  tabKey: 'new',\n  serverType: ServerTypes.remote,\n  visibleProviders,\n  server: {\n    local: {},\n    remote: {},\n    sauce: {\n      dataCenter: 'us-west-1',\n    },\n    headspin: {},\n    browserstack: {},\n    lambdatest: {},\n    advanced: {},\n    bitbar: {},\n    kobiton: {},\n    perfecto: {},\n    pcloudy: {},\n    testingbot: {},\n    experitest: {},\n    roboticmobi: {},\n    remotetestkit: {},\n  },\n  attachSessId: null,\n\n  // Make sure there's always at least one cap\n  caps: [{\n    type: 'text',\n  }],\n\n  isCapsDirty: true,\n  gettingSessions: false,\n  runningAppiumSessions: [],\n  isEditingDesiredCapsName: false,\n  isEditingDesiredCaps: false,\n  isValidCapsJson: true,\n  isValidatingCapsJson: false,\n  isAddingCloudProvider: false,\n  addVendorPrefixes: true,\n};\n\nlet nextState;\n\n// returns false if the attachSessId is not present in the runningSessions list\nconst isAttachSessIdValid = (runningSessions, attachSessId) => {\n  if (!attachSessId || !runningSessions) {\n    return false;\n  }\n  for (const session of runningSessions) {\n    if (session.id === attachSessId) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default function session (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case NEW_SESSION_REQUESTED:\n      return {\n        ...state,\n        newSessionRequested: true,\n      };\n\n    case NEW_SESSION_LOADING:\n      nextState = {\n        ...state,\n        newSessionLoading: true,\n      };\n      return omit(nextState, 'newSessionRequested');\n\n    case NEW_SESSION_DONE:\n      return omit(state, 'newSessionLoading');\n\n\n    case ADD_CAPABILITY:\n      return {\n        ...state,\n        caps: [\n          ...state.caps,\n          {type: 'text'},\n        ],\n      };\n\n    case REMOVE_CAPABILITY:\n      return {\n        ...state,\n        caps: state.caps.filter((cap, index) => index !== action.index),\n        isCapsDirty: true,\n      };\n\n    case SET_CAPABILITY_PARAM:\n      return {\n        ...state,\n        isCapsDirty: true,\n        caps: state.caps.map((cap, index) => index !== action.index ? cap : {\n          ...cap,\n          [action.name]: action.value\n        }),\n      };\n\n    case SET_CAPS_AND_SERVER:\n      nextState = {\n        ...state,\n        server: action.server,\n        serverType: action.serverType,\n        caps: action.caps,\n        capsUUID: action.uuid,\n        capsName: action.name,\n      };\n      return omit(nextState, 'isCapsDirty');\n\n    case SAVE_SESSION_REQUESTED:\n      nextState = {\n        ...state,\n        saveSessionRequested: true,\n      };\n      return omit(nextState, 'showSaveAsModal');\n\n    case SAVE_SESSION_DONE:\n      return omit(state, ['saveSessionRequested', 'saveAsText']);\n\n    case GET_SAVED_SESSIONS_REQUESTED:\n      return {\n        ...state,\n        getSavedSessionsRequested: true,\n      };\n\n    case GET_SAVED_SESSIONS_DONE:\n      nextState = {\n        ...state,\n        savedSessions: action.savedSessions || [],\n      };\n      return omit(nextState, 'getSavedSessionsRequested');\n\n    case DELETE_SAVED_SESSION_REQUESTED:\n      return {\n        ...state,\n        deletingSession: true,\n      };\n\n    case DELETE_SAVED_SESSION_DONE:\n      return {\n        ...state,\n        deletingSession: false,\n        capsUUID: null,\n        capsName: null,\n      };\n\n    case SWITCHED_TABS:\n      return {\n        ...state,\n        tabKey: action.key,\n      };\n\n    case SAVE_AS_MODAL_REQUESTED:\n      return {\n        ...state,\n        'showSaveAsModal': true,\n      };\n\n    case HIDE_SAVE_AS_MODAL_REQUESTED:\n      return omit(state, ['saveAsText', 'showSaveAsModal']);\n\n    case SET_SAVE_AS_TEXT:\n      return {\n        ...state,\n        saveAsText: action.saveAsText,\n      };\n\n    case CHANGE_SERVER_TYPE:\n      return {\n        ...state,\n        serverType: action.serverType,\n      };\n\n    case SET_SERVER_PARAM:\n      return {\n        ...state,\n        server: {\n          ...state.server,\n          [action.serverType]: {\n            ...state.server[action.serverType],\n            [action.name]: action.value,\n          }\n        },\n      };\n\n    case SET_SERVER:\n      return {\n        ...state,\n        server: {\n          ...(function extendCurrentServerStateWithNewServerState (currentServerState, newServerState) {\n            // Copy current server state and extend it with new server state\n            const nextServerState = _.cloneDeep(currentServerState || {});\n\n            // Extend each server (sauce, remote, kobiton, etc...)\n            for (let serverName of _.keys(nextServerState)) {\n              nextServerState[serverName] = {\n                ...(nextServerState[serverName] || {}),\n                ...(newServerState[serverName] || {}),\n              };\n            }\n            return nextServerState;\n          })(state.server, action.server),\n        },\n        serverType: action.serverType || ServerTypes.local,\n      };\n\n    case SET_ATTACH_SESS_ID:\n      return {\n        ...state,\n        attachSessId: action.attachSessId\n      };\n\n    case GET_SESSIONS_REQUESTED:\n      return {\n        ...state,\n        gettingSessions: true,\n      };\n\n    case GET_SESSIONS_DONE: {\n      const attachSessId = isAttachSessIdValid(action.sessions, state.attachSessId) ? state.attachSessId : null;\n      return {\n        ...state,\n        gettingSessions: false,\n        attachSessId: (action.sessions && action.sessions.length > 0 && !attachSessId) ? action.sessions[0].id : attachSessId,\n        runningAppiumSessions: action.sessions || [],\n      };\n    }\n\n    case ENABLE_DESIRED_CAPS_NAME_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCapsName: true,\n        desiredCapsName: state.capsName,\n      };\n\n    case ABORT_DESIRED_CAPS_NAME_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCapsName: false,\n        desiredCapsName: null,\n      };\n\n    case SAVE_DESIRED_CAPS_NAME:\n      return {\n        ...state,\n        isEditingDesiredCapsName: false,\n        capsName: action.name,\n      };\n\n    case SET_DESIRED_CAPS_NAME:\n      return {\n        ...state,\n        desiredCapsName: action.desiredCapsName,\n      };\n\n    case ENABLE_DESIRED_CAPS_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCaps: true,\n        rawDesiredCaps: formatJSON.plain(\n          // Translate the caps definition to a proper capabilities JS Object\n          _.reduce(\n            state.caps,\n            (result, obj) => ({\n              ...result,\n              [obj.name]: obj.value,\n            }),\n            {}\n          )\n        ),\n        isValidCapsJson: true,\n        isValidatingCapsJson: false, // Don't start validating JSON until the user has attempted to save the JSON\n      };\n\n    case ABORT_DESIRED_CAPS_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCaps: false,\n        rawDesiredCaps: null,\n      };\n\n    case SAVE_RAW_DESIRED_CAPS:\n      return {\n        ...state,\n        isEditingDesiredCaps: false,\n        caps: action.caps,\n        isCapsDirty: true,\n      };\n\n    case SHOW_DESIRED_CAPS_JSON_ERROR:\n      return {\n        ...state,\n        invalidCapsJsonReason: action.message,\n        isValidCapsJson: false,\n        isValidatingCapsJson: true,\n      };\n\n    case SET_RAW_DESIRED_CAPS:\n      return {\n        ...state,\n        rawDesiredCaps: action.rawDesiredCaps,\n        isValidCapsJson: action.isValidCapsJson,\n        invalidCapsJsonReason: action.invalidCapsJsonReason,\n      };\n\n    case IS_ADDING_CLOUD_PROVIDER:\n      return {\n        ...state,\n        isAddingCloudProvider: action.isAddingProvider,\n      };\n\n    case SET_PROVIDERS:\n      return {\n        ...state,\n        visibleProviders: action.providers || []\n      };\n\n    case SET_ADD_VENDOR_PREFIXES:\n      return {\n        ...state,\n        addVendorPrefixes: action.addVendorPrefixes,\n      };\n\n    case SET_STATE_FROM_URL:\n      return {\n        ...state,\n        server: {\n          ...state.server,\n          ...(action.state.server || {})\n        },\n        ...omit(action.state, ['server']),\n      };\n\n    case SET_STATE_FROM_SAVED:\n      if (!Object.keys(ServerTypes).includes(action.state.serverType)) {\n        notification.error({\n          message: `Failed to load session: ${action.state.serverType} is not a valid server type`,\n        });\n        return state;\n      }\n      if (![...state.visibleProviders, ServerTypes.local, ServerTypes.remote].includes(action.state.serverType)) {\n        state.visibleProviders.push(action.state.serverType);\n      }\n      return {\n        ...state,\n        ...action.state,\n        filePath: action.filePath,\n      };\n\n    default:\n      return {...state};\n  }\n}\n","import { omit } from 'lodash';\nimport { SET_SOURCE_AND_SCREENSHOT, QUIT_SESSION_REQUESTED, QUIT_SESSION_DONE,\n         SESSION_DONE, SELECT_ELEMENT, UNSELECT_ELEMENT, SELECT_HOVERED_ELEMENT, SET_SELECTED_ELEMENT_ID, SET_INTERACTIONS_NOT_AVAILABLE,\n         UNSELECT_HOVERED_ELEMENT, METHOD_CALL_REQUESTED, METHOD_CALL_DONE,\n         SET_EXPANDED_PATHS, START_RECORDING, PAUSE_RECORDING, CLEAR_RECORDING,\n         SET_ACTION_FRAMEWORK, RECORD_ACTION, CLOSE_RECORDER, SET_SHOW_BOILERPLATE, SET_SESSION_DETAILS,\n         SHOW_LOCATOR_TEST_MODAL, HIDE_LOCATOR_TEST_MODAL, SHOW_SIRI_COMMAND_MODAL, HIDE_SIRI_COMMAND_MODAL, SET_LOCATOR_TEST_STRATEGY, SET_LOCATOR_TEST_VALUE,\n         SEARCHING_FOR_ELEMENTS, SEARCHING_FOR_ELEMENTS_COMPLETED, SET_LOCATOR_TEST_ELEMENT, CLEAR_SEARCH_RESULTS,\n         FINDING_ELEMENT_IN_SOURCE, FINDING_ELEMENT_IN_SOURCE_COMPLETED, ADD_ASSIGNED_VAR_CACHE, CLEAR_ASSIGNED_VAR_CACHE, SET_SCREENSHOT_INTERACTION_MODE,\n         SET_SWIPE_START, SET_SWIPE_START1, SET_SWIPE_END, SET_SWIPE_END1, CLEAR_SWIPE_ACTION, SET_SEARCHED_FOR_ELEMENT_BOUNDS, CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS,\n         PROMPT_KEEP_ALIVE, HIDE_PROMPT_KEEP_ALIVE, GET_FIND_ELEMENTS_TIMES, GET_FIND_ELEMENTS_TIMES_COMPLETED,\n         SELECT_COMMAND_GROUP, SELECT_COMMAND_SUB_GROUP, SET_APP_MODE,\n         SELECT_INTERACTION_MODE, ENTERING_COMMAND_ARGS, SET_COMMAND_ARG, CANCEL_PENDING_COMMAND, SET_CONTEXT,\n         SET_KEEP_ALIVE_INTERVAL, SET_USER_WAIT_TIMEOUT, SET_LAST_ACTIVE_MOMENT, SET_VISIBLE_COMMAND_RESULT,\n         SET_AWAITING_MJPEG_STREAM, SET_APP_ID, SET_SERVER_STATUS, SET_SESSION_TIME, SHOW_GESTURE_EDITOR, HIDE_GESTURE_EDITOR,\n         GET_SAVED_GESTURES_REQUESTED, GET_SAVED_GESTURES_DONE, SET_LOADED_GESTURE, REMOVE_LOADED_GESTURE, SHOW_GESTURE_ACTION, HIDE_GESTURE_ACTION,\n         SELECT_TICK_ELEMENT, UNSELECT_TICK_ELEMENT, SET_GESTURE_TAP_COORDS_MODE, CLEAR_TAP_COORDINATES, DELETE_SAVED_GESTURES_REQUESTED, DELETE_SAVED_GESTURES_DONE,\n         SELECT_HOVERED_CENTROID, UNSELECT_HOVERED_CENTROID, SELECT_CENTROID, UNSELECT_CENTROID,\n         SET_SHOW_CENTROIDS, TOGGLE_SHOW_ATTRIBUTES, TOGGLE_REFRESHING_STATE, SET_SIRI_COMMAND_VALUE\n} from '../actions/Inspector';\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE, APP_MODE } from '../components/Inspector/shared';\n\nconst DEFAULT_FRAMEWORK = 'java';\nconst NATIVE_APP = 'NATIVE_APP';\n\nconst INITIAL_STATE = {\n  savedGestures: [],\n  driver: null,\n  keepAliveInterval: null,\n  showKeepAlivePrompt: false,\n  userWaitTimeout: null,\n  lastActiveMoment: null,\n  expandedPaths: ['0'],\n  isRecording: false,\n  isSourceRefreshOn: true,\n  showRecord: false,\n  showBoilerplate: false,\n  recordedActions: [],\n  actionFramework: DEFAULT_FRAMEWORK,\n  sessionDetails: {},\n  isGestureEditorVisible: false,\n  isLocatorTestModalVisible: false,\n  isSiriCommandModalVisible: false,\n  siriCommandValue: '',\n  showCentroids: false,\n  locatorTestStrategy: 'id',\n  locatorTestValue: '',\n  isSearchingForElements: false,\n  assignedVarCache: {},\n  screenshotInteractionMode: SCREENSHOT_INTERACTION_MODE.SELECT,\n  searchedForElementBounds: null,\n  selectedCommandGroup: null,\n  selectedCommandSubGroup: null,\n  selectedInteractionMode: INTERACTION_MODE.SOURCE,\n  appMode: APP_MODE.NATIVE,\n  mjpegScreenshotUrl: null,\n  pendingCommand: null,\n  findElementsExecutionTimes: [],\n  isFindingElementsTimes: false,\n  isFindingLocatedElementInSource: false,\n  visibleCommandResult: null,\n  visibleCommandMethod: null,\n  isAwaitingMjpegStream: true,\n  showSourceAttrs: false,\n};\n\nlet nextState;\n\n/**\n * Look up an element in the source with the provided path\n */\nfunction findElementByPath (path, source) {\n  let selectedElement = source;\n  for (let index of path.split('.')) {\n    selectedElement = selectedElement.children[index];\n  }\n  return {...selectedElement};\n}\n\nexport default function inspector (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_SOURCE_AND_SCREENSHOT:\n      return {\n        ...state,\n        contexts: action.contexts,\n        contextsError: action.contextsError,\n        currentContext: action.currentContext || NATIVE_APP,\n        currentContextError: action.currentContextError,\n        source: action.source,\n        sourceXML: action.sourceXML,\n        sourceError: action.sourceError,\n        screenshot: action.screenshot,\n        screenshotError: action.screenshotError,\n        windowSize: action.windowSize,\n        windowSizeError: action.windowSizeError,\n        findElementsExecutionTimes: [],\n      };\n\n    case QUIT_SESSION_REQUESTED:\n      return {\n        ...state,\n        methodCallInProgress: true,\n        isQuittingSession: true,\n      };\n\n    case QUIT_SESSION_DONE:\n      return {\n        ...INITIAL_STATE\n      };\n\n    case SESSION_DONE:\n      return {\n        ...state,\n        isSessionDone: true,\n        methodCallInProgress: false,\n      };\n\n    case SELECT_ELEMENT:\n      return {\n        ...state,\n        selectedElement: findElementByPath(action.path, state.source),\n        selectedElementPath: action.path,\n        selectedElementSearchInProgress: true,\n        elementInteractionsNotAvailable: false,\n        findElementsExecutionTimes: [],\n      };\n\n    case UNSELECT_ELEMENT:\n      return {\n        ...state,\n        selectedElement: undefined,\n        selectedElementPath: null,\n        selectedElementId: null,\n        selectedElementVariableName: null,\n        selectedElementVariableType: null,\n        selectedElementSearchInProgress: false,\n      };\n\n    case SELECT_CENTROID:\n      return {\n        ...state,\n        selectedCentroid: action.path,\n      };\n\n    case UNSELECT_CENTROID:\n      return omit(state, 'selectedCentroid');\n\n    case SET_SELECTED_ELEMENT_ID:\n      return {\n        ...state,\n        selectedElementId: action.elementId,\n        selectedElementVariableName: action.variableName,\n        selectedElementVariableType: action.variableType,\n        selectedElementSearchInProgress: false,\n        findElementsExecutionTimes: [],\n      };\n\n    case SET_INTERACTIONS_NOT_AVAILABLE:\n      return {\n        ...state,\n        elementInteractionsNotAvailable: true,\n        selectedElementSearchInProgress: false,\n      };\n\n    case SELECT_HOVERED_ELEMENT:\n      return {\n        ...state,\n        hoveredElement: findElementByPath(action.path, state.source),\n      };\n\n    case UNSELECT_HOVERED_ELEMENT:\n      return omit(state, 'hoveredElement');\n\n    case SELECT_HOVERED_CENTROID:\n      return {\n        ...state,\n        hoveredCentroid: action.path,\n      };\n\n    case UNSELECT_HOVERED_CENTROID:\n      return omit(state, 'hoveredCentroid');\n\n    case METHOD_CALL_REQUESTED:\n      return {\n        ...state,\n        methodCallInProgress: true,\n      };\n\n    case METHOD_CALL_DONE:\n      return {\n        ...state,\n        methodCallInProgress: false,\n      };\n\n    case SET_EXPANDED_PATHS:\n      return {\n        ...state,\n        expandedPaths: action.paths,\n        findElementsExecutionTimes: [],\n      };\n\n    case START_RECORDING:\n      return {\n        ...state,\n        isRecording: true,\n        showRecord: true\n      };\n\n    case PAUSE_RECORDING:\n      return {\n        ...state,\n        isRecording: false,\n        showRecord: state.recordedActions.length > 0\n      };\n\n    case CLEAR_RECORDING:\n      return {\n        ...state,\n        recordedActions: []\n      };\n\n    case SET_ACTION_FRAMEWORK:\n      return {\n        ...state,\n        actionFramework: action.framework || DEFAULT_FRAMEWORK\n      };\n\n    case RECORD_ACTION:\n      return {\n        ...state,\n        recordedActions: [\n          ...state.recordedActions,\n          {action: action.action, params: action.params}\n        ]\n      };\n\n    case ADD_ASSIGNED_VAR_CACHE:\n      return {\n        ...state,\n        assignedVarCache: {\n          ...state.assignedVarCache,\n          [action.varName]: true,\n        }\n      };\n\n    case CLEAR_ASSIGNED_VAR_CACHE:\n      return {\n        ...state,\n        assignedVarCache: [],\n      };\n\n    case CLOSE_RECORDER:\n      return {\n        ...state,\n        showRecord: false\n      };\n\n    case SET_SHOW_BOILERPLATE:\n      return {...state, showBoilerplate: action.show};\n\n    case SET_SESSION_DETAILS:\n      return {\n        ...state,\n        sessionDetails: action.sessionDetails,\n        driver: action.driver,\n        appMode: action.mode,\n        mjpegScreenshotUrl: action.mjpegScreenshotUrl\n      };\n\n    case SHOW_LOCATOR_TEST_MODAL:\n      return {\n        ...state,\n        isLocatorTestModalVisible: true,\n      };\n\n    case HIDE_LOCATOR_TEST_MODAL:\n      return {\n        ...state,\n        isLocatorTestModalVisible: false,\n      };\n\n    case SHOW_SIRI_COMMAND_MODAL:\n      return {\n        ...state,\n        isSiriCommandModalVisible: true,\n      };\n\n    case HIDE_SIRI_COMMAND_MODAL:\n      return {\n        ...state,\n        isSiriCommandModalVisible: false,\n      };\n\n    case SET_SIRI_COMMAND_VALUE:\n      return {\n        ...state,\n        siriCommandValue: action.siriCommandValue\n      };\n\n    case SET_LOCATOR_TEST_STRATEGY:\n      return {\n        ...state,\n        locatorTestStrategy: action.locatorTestStrategy\n      };\n\n    case SET_LOCATOR_TEST_VALUE:\n      return {\n        ...state,\n        locatorTestValue: action.locatorTestValue\n      };\n\n    case SEARCHING_FOR_ELEMENTS:\n      return {\n        ...state,\n        locatedElements: null,\n        locatedElementsExecutionTime: null,\n        locatorTestElement: null,\n        isSearchingForElements: true,\n      };\n\n    case SEARCHING_FOR_ELEMENTS_COMPLETED:\n      return {\n        ...state,\n        locatedElements: action.elements,\n        locatedElementsExecutionTime: action.executionTime,\n        isSearchingForElements: false,\n      };\n\n    case GET_FIND_ELEMENTS_TIMES:\n      return {\n        ...state,\n        isFindingElementsTimes: true,\n      };\n\n    case GET_FIND_ELEMENTS_TIMES_COMPLETED:\n      return {\n        ...state,\n        findElementsExecutionTimes: action.findElementsExecutionTimes,\n        isFindingElementsTimes: false,\n      };\n\n    case SET_LOCATOR_TEST_ELEMENT:\n      return {\n        ...state,\n        locatorTestElement: action.elementId,\n      };\n\n    case FINDING_ELEMENT_IN_SOURCE:\n      return {\n        ...state,\n        isFindingLocatedElementInSource: true,\n      };\n\n    case FINDING_ELEMENT_IN_SOURCE_COMPLETED:\n      return {\n        ...state,\n        isFindingLocatedElementInSource: false,\n      };\n\n    case CLEAR_SEARCH_RESULTS:\n      return {\n        ...state,\n        locatedElements: null,\n        isFindingLocatedElementInSource: false,\n      };\n\n    case SET_SCREENSHOT_INTERACTION_MODE:\n      return {\n        ...state,\n        screenshotInteractionMode: action.screenshotInteractionMode,\n      };\n\n    case SET_SWIPE_START:\n      return {\n        ...state,\n        swipeStart: {\n          x: action.swipeStartX,\n          y: action.swipeStartY,\n        },\n      };\n\n    case SET_SWIPE_END:\n      return {\n        ...state,\n        swipeEnd: {\n          x: action.swipeEndX,\n          y: action.swipeEndY,\n        },\n      };\n\n      case SET_SWIPE_START1:\n        return {\n          ...state,\n          swipeStart1: {\n            x: action.swipeStartX,\n            y: action.swipeStartY,\n          },\n        };  \n     \n      case SET_SWIPE_END1:\n        return {\n          ...state,\n          swipeEnd1: {\n            x: action.swipeEndX,\n            y: action.swipeEndY,\n          },\n        };\n      \n        \n\n    case CLEAR_SWIPE_ACTION:\n      return {\n        ...state,\n        swipeStart: null,\n        swipeEnd: null,\n        swipeStart1:null,\n        swipeEnd1:null\n      };\n\n    case SET_SEARCHED_FOR_ELEMENT_BOUNDS:\n      return {\n        ...state,\n        searchedForElementBounds: {\n          location: action.location,\n          size: action.size,\n        }\n      };\n\n    case CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS:\n      return {\n        ...state,\n        searchedForElementBounds: null,\n      };\n\n    case PROMPT_KEEP_ALIVE:\n      return {\n        ...state,\n        showKeepAlivePrompt: true,\n      };\n\n    case HIDE_PROMPT_KEEP_ALIVE:\n      return {\n        ...state,\n        showKeepAlivePrompt: false,\n      };\n\n    case SELECT_COMMAND_GROUP:\n      return {\n        ...state,\n        selectedCommandGroup: action.group\n      };\n\n    case SELECT_COMMAND_SUB_GROUP:\n      return {\n        ...state,\n        selectedCommandSubGroup: action.group,\n      };\n\n    case SELECT_INTERACTION_MODE:\n      return {\n        ...state,\n        selectedInteractionMode: action.interaction,\n      };\n\n    case SET_APP_MODE:\n      return {\n        ...state,\n        appMode: action.mode,\n      };\n\n    case SET_SHOW_CENTROIDS:\n      return {\n        ...state,\n        showCentroids: action.show,\n      };\n\n    case ENTERING_COMMAND_ARGS:\n      return {\n        ...state,\n        pendingCommand: {\n          commandName: action.commandName,\n          command: action.command,\n          args: [],\n        }\n      };\n\n    case SET_COMMAND_ARG:\n      return {\n        ...state,\n        pendingCommand: {\n          ...state.pendingCommand,\n          args: Object.assign([], state.pendingCommand.args, {[action.index]: action.value}), // Replace 'value' at 'index'\n        },\n      };\n\n    case CANCEL_PENDING_COMMAND:\n      return {\n        ...state,\n        pendingCommand: null,\n      };\n\n    case SET_CONTEXT:\n      return {\n        ...state,\n        currentContext: action.context\n      };\n\n    case SET_KEEP_ALIVE_INTERVAL:\n      return {\n        ...state,\n        keepAliveInterval: action.keepAliveInterval,\n      };\n\n    case SET_USER_WAIT_TIMEOUT:\n      return {\n        ...state,\n        userWaitTimeout: null,\n      };\n\n    case SET_LAST_ACTIVE_MOMENT:\n      return {\n        ...state,\n        lastActiveMoment: action.lastActiveMoment,\n      };\n\n    case SET_VISIBLE_COMMAND_RESULT:\n      return {\n        ...state,\n        visibleCommandResult: action.result,\n        visibleCommandMethod: action.methodName,\n      };\n\n    case SET_SESSION_TIME:\n      return {\n        ...state,\n        sessionStartTime: action.sessionStartTime,\n      };\n\n    case SET_APP_ID:\n      return {\n        ...state,\n        appId: action.appId,\n      };\n\n    case SET_SERVER_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n\n    case SET_AWAITING_MJPEG_STREAM:\n      return {...state, isAwaitingMjpegStream: action.isAwaiting};\n\n    case SHOW_GESTURE_EDITOR:\n      return {\n        ...state,\n        isGestureEditorVisible: true,\n      };\n\n    case HIDE_GESTURE_EDITOR:\n      return {\n        ...state,\n        isGestureEditorVisible: false,\n      };\n\n    case GET_SAVED_GESTURES_REQUESTED:\n      return {\n        ...state,\n        getSavedGesturesRequested: true,\n      };\n\n    case GET_SAVED_GESTURES_DONE:\n      nextState = {\n        ...state,\n        savedGestures: action.savedGestures || [],\n      };\n      return omit(nextState, 'getSavedGesturesRequested');\n\n    case DELETE_SAVED_GESTURES_REQUESTED:\n      return {\n        ...state,\n        deleteGesture: action.deleteGesture,\n      };\n\n    case DELETE_SAVED_GESTURES_DONE:\n      return omit(state, 'deleteGesture');\n\n    case SET_LOADED_GESTURE:\n      return {\n        ...state,\n        loadedGesture: action.loadedGesture,\n      };\n\n    case REMOVE_LOADED_GESTURE:\n      return omit(state, 'loadedGesture');\n\n    case SHOW_GESTURE_ACTION:\n      return {\n        ...state,\n        showGesture: action.showGesture,\n      };\n\n    case HIDE_GESTURE_ACTION:\n      return omit(state, 'showGesture');\n\n    case SELECT_TICK_ELEMENT:\n      return {\n        ...state,\n        selectedTick: action.selectedTick,\n      };\n\n    case UNSELECT_TICK_ELEMENT:\n      return omit(state, 'selectedTick');\n\n    case SET_GESTURE_TAP_COORDS_MODE:\n      return {\n        ...state,\n        tickCoordinates: {\n          x: action.x,\n          y: action.y,\n        },\n      };\n\n    case CLEAR_TAP_COORDINATES:\n      return omit(state, 'tickCoordinates');\n\n    case TOGGLE_SHOW_ATTRIBUTES:\n      return {...state, showSourceAttrs: !state.showSourceAttrs};\n\n    case TOGGLE_REFRESHING_STATE:\n      return {...state, isSourceRefreshOn: !state.isSourceRefreshOn};\n\n    default:\n      return {...state};\n  }\n}\n","import { SET_UPDATE_STATE } from '../actions/Updater';\n\nconst INITIAL_STATE = {};\n\nexport default function session (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_UPDATE_STATE:\n      return {...action.updateState};\n    default:\n      return {...state};\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport session from './Session';\nimport inspector from './Inspector';\nimport updater from './Updater';\n\n// create our root reducer\nexport default function createRootReducer (routerReducer) {\n  return combineReducers({\n    router: routerReducer,\n    session,\n    inspector,\n    updater,\n  });\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createHashHistory } from 'history';\nimport { createReduxHistoryContext, push } from 'redux-first-history';\nimport actions from './actions';\nimport createRootReducer from './reducers';\n\nconst { createReduxHistory, routerMiddleware, routerReducer } = createReduxHistoryContext({\n  history: createHashHistory()\n});\n\nconst rootReducer = createRootReducer(routerReducer);\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => {\n    const middleware = getDefaultMiddleware({\n      serializableCheck: false\n    });\n\n    // Additional development tools\n    if (process.env.NODE_ENV === 'development') {\n      // Logging Middleware\n      const { createLogger } = require('redux-logger');\n      const logger = createLogger({\n        level: 'info',\n        collapsed: true\n      });\n      middleware.push(logger);\n    }\n\n    // Router Middleware\n    middleware.push(routerMiddleware);\n\n    return middleware;\n  },\n  devTools: process.env.NODE_ENV !== 'development' ? false : {\n    actionCreators: {...actions, push}\n  }\n});\n\nexport const history = createReduxHistory(store);\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Root from './containers/Root';\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\nimport { store, history } from './store';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <ErrorBoundary>\n    <Root store={store} history={history} />\n  </ErrorBoundary>\n);\n\nif (module.hot) {\n  module.hot.accept('./containers/Root', () => {\n    const NextRoot = require('./containers/Root').default;\n    root.render(\n      <AppContainer>\n        <NextRoot store={store} history={history} />\n      </AppContainer>\n    );\n  });\n}\n"]}