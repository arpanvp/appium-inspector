{"version":3,"sources":["polyfills/browser.js","polyfills/electron.js","polyfills/index.js","../shared/settings.js","../configs/app.config.js","util.js","containers/App.js","components/Inspector/shared.js","lib/client-frameworks/framework.js","lib/client-frameworks/js-wd.js","lib/client-frameworks/js-wdio.js","lib/client-frameworks/js-oxygen.js","lib/client-frameworks/java.js","lib/client-frameworks/python.js","lib/client-frameworks/ruby.js","lib/client-frameworks/robot.js","lib/client-frameworks/index.js","../configs/i18next.config.renderer.js","lib/webview-helpers.js","lib/appium-client.js","actions/Inspector.js","components/Session/ServerTabHeadspin.js","components/AntdTypes.js","components/Session/ServerTabBrowserstack.js","components/Session/ServerTabLambdatest.js","components/Session/ServerTabBitbar.js","components/Session/ServerTabKobiton.js","components/Session/ServerTabPerfecto.js","components/Session/ServerTabPcloudy.js","components/Session/ServerTabSauce.js","components/Session/ServerTabTestingbot.js","components/Session/ServerTabExperitest.js","components/Session/ServerTabRobotQA.js","components/Session/ServerTabRemoteTestKit.js","components/Session/CloudProviders.js","../main/helpers.js","actions/Session.js","components/Session/FormattedCaps.js","components/Session/CapabilityControl.js","components/Session/CapabilityEditor.js","components/Session/SavedSessions.js","components/Session/AttachToSession.js","components/Session/ServerTabCustom.js","components/Session/AdvancedServerParams.js","components/Session/CloudProviderSelector.js","components/Session/Session.js","containers/SessionPage.js","components/Inspector/HighlighterRect.js","components/Inspector/HighlighterCentroid.js","components/Inspector/HighlighterRects.js","components/Inspector/Screenshot.js","components/Inspector/HeaderButtons.js","components/Inspector/SelectedElement.js","components/Inspector/LocatedElements.js","components/Inspector/ElementLocator.js","components/Inspector/LocatorTestModal.js","components/Inspector/SiriCommandModal.js","components/Inspector/Source.js","components/Inspector/RecordedActions.js","components/Inspector/Commands.js","components/Inspector/SavedGestures.js","components/Inspector/GestureEditor.js","components/Inspector/SessionCodeBox.js","components/Inspector/SessionInfo.js","components/Inspector/Inspector.js","containers/InspectorPage.js","components/Spinner/Spinner.js","routes.js","containers/Root.js","components/ErrorBoundary/ErrorMessage.js","components/ErrorBoundary/ErrorBoundary.js","actions/Updater.js","actions/index.js","reducers/Session.js","reducers/Inspector.js","reducers/Updater.js","reducers/index.js","store.js","index.js"],"names":["browser","clipboard","writeText","text","navigator","shell","openExternal","url","window","open","remote","getCurrentWindow","getSize","innerWidth","innerHeight","ipcRenderer","on","evt","console","warn","fs","util","BrowserSettings","has","key","get","set","val","localStorage","setItem","JSON","stringify","parse","getItem","getSync","log","exports","settings","i18NextBackend","require","default","i18NextBackendOptions","backends","backendOptions","loadPath","_path","_interopRequireDefault","_electron","_electronLog","_electronSettings","_i18nextFsBackend","_fs","_util","obj","__esModule","path","join","__dirname","addPath","jsonIndent","buildForBrowser","process","env","BUILD_BROWSER","test","userAgent","_polyfills","SAVED_SESSIONS","SET_SAVED_GESTURES","SERVER_ARGS","SESSION_SERVER_PARAMS","SESSION_SERVER_TYPE","SAVED_FRAMEWORK","DEFAULT_SETTINGS","getSetting","setting","setSetting","value","_default","_settings","config","platform","languages","fallbackLng","namespace","getI18NextOptions","backend","interpolation","escapeValue","lng","whitelist","_xpath","_reactI18next","_lodash","_app","_xmldom","VALID_W3C_CAPS","UNIQUE_XPATH_ATTRIBUTES","UNIQUE_CLASS_CHAIN_ATTRIBUTES","UNIQUE_PREDICATE_ATTRIBUTES","xmlToJSON","source","childNodesOf","xmlNode","hasChildNodes","result","childIdx","childNodes","length","childNode","item","nodeType","push","translateRecursively","parentPath","index","attributes","attrIdx","attr","name","_","isNil","classChainSelector","isIOS","getOptimalClassChain","xmlDoc","predicateStringSelector","getOptimalPredicateString","children","map","childIndex","tagName","xpath","getOptimalXPath","classChain","predicateString","includes","DOMParser","parseFromString","firstChild","documentElement","doc","domNode","uniqueAttributes","attrName","attrValue","getAttribute","othersWithAttr","XPath","select","ign","indexOf","parentNode","Array","prototype","slice","call","filter","error","xpathAttributes","isString","withTranslation","componentCls","hocs","flow","wt","addVendorPrefixes","caps","cap","_react","_propTypes","App","React","Component","render","props","createElement","Fragment","propTypes","PropTypes","element","isRequired","pixelsToPercentage","px","maxPixels","isNaN","parseFloat","toFixed","percentageToPixels","pct","Math","round","parseCoordinates","bounds","x","y","width","height","boundsArray","split","str","x1","parseInt","x2","y1","y2","isUnique","sourceXML","replace","STRATEGY_MAPPINGS","getLocators","res","strategyAlias","strategy","POINTER_TYPES","POINTER_UP","POINTER_DOWN","PAUSE","POINTER_MOVE","DEFAULT_SWIPE","POINTER_NAME","DURATION_1","DURATION_2","BUTTON","ORIGIN","DEFAULT_ZOOM","POINTER_NAME1","POINTER_NAME2","POINTER_NAME3","POINTER_NAME4","DEFAULT_TAP","DEFAULT_LONGPRESS","LONGPRESS_POINTER_NAME","LONGPRESS_DURATION_1","LONGPRESS_DURATION_2","LONGPRESS_BUTTON","DEFAULT_DRAG_AND_DROP","RENDER_CENTROID_AS","CENTROID","EXPAND","OVERLAP","SCREENSHOT_INTERACTION_MODE","SELECT","SWIPE","TAP","LONGPRESS","DRAG_AND_DROP","DOUBLE_TAP","GESTURE","ZOOMIN","SLIDE","SLIDE_SWIPE","SELECT_LONG","SELECT_DOUBLE","FILE_UPLOAD","SELECT_FILE","EXPECTED_VALUE","TAKE_SCREENSHOT","SCRATCH","HIDE_KEYBOARD","GET_DEVICE_TIME","GET_CLIPBOARD","ROTATE","APP_MODE","NATIVE","WEB_HYBRID","COMMAND_ARG_TYPES","STRING","NUMBER","BOOLEAN","COMMAND_DEFINITIONS","methodName","args","refresh","INTERACTION_MODE","SOURCE","COMMANDS","GESTURES","SESSION_INFO","_shared","Framework","constructor","host","port","https","scheme","actions","localVarCount","localVarCache","lastAssignedVar","getTapCoordinatesFromPointerActions","pointerActions","pointerMoveAction","getSwipeCoordinatesFromPointerActions","pointerMoveActionStart","pointerMoveActionEnd","Error","addAction","action","params","wrapWithBoilerplate","indent","spaces","lines","spaceStr","i","l","trim","getCodeString","includeBoilerplate","genCodeFn","code","getNewLocalVar","getVarForFind","locator","wasNew","getVarName","varName","varIndex","codeFor_findAndAssign","codeFor_findElement","localVar","codeFor_tap","codeFor_swipe","_framework","JsWdFramework","serverUrl","codeFor_executeScript","isArray","suffixMap","codeFor_click","codeFor_clear","codeFor_sendKeys","codeFor_back","varNameIgnore","varIndexIgnore","codeFor_getCurrentActivity","codeFor_getCurrentPackage","codeFor_installApp","app","codeFor_isAppInstalled","codeFor_launchApp","codeFor_background","timeout","codeFor_closeApp","codeFor_reset","codeFor_removeApp","codeFor_getStrings","language","stringFile","codeFor_getClipboard","codeFor_setClipboard","clipboardText","codeFor_pressKeyCode","keyCode","metaState","flags","codeFor_longPressKeyCode","codeFor_hideKeyboard","codeFor_isKeyboardShown","codeFor_pushFile","pathToInstallTo","fileContentString","codeFor_pullFile","pathToPullFrom","codeFor_pullFolder","folderToPullFrom","codeFor_toggleAirplaneMode","codeFor_toggleData","codeFor_toggleWiFi","codeFor_toggleLocationServices","codeFor_sendSMS","phoneNumber","codeFor_gsmCall","codeFor_gsmSignal","signalStrength","codeFor_gsmVoice","state","codeFor_shake","codeFor_lock","seconds","codeFor_unlock","codeFor_isLocked","codeFor_rotateDevice","radius","rotation","touchCount","duration","codeFor_getPerformanceData","packageName","dataType","dataReadTimeout","codeFor_getPerformanceDataTypes","codeFor_touchId","match","codeFor_toggleEnrollTouchId","enroll","codeFor_openNotifications","codeFor_getDeviceTime","codeFor_fingerprint","fingerprintId","codeFor_getSession","codeFor_setTimeouts","codeFor_getOrientation","codeFor_setOrientation","orientation","codeFor_getGeoLocation","codeFor_setGeoLocation","latitude","longitude","altitude","codeFor_getLogTypes","codeFor_getLogs","logType","codeFor_updateSettings","settingsJson","codeFor_getSettings","codeFor_navigateTo","codeFor_getUrl","codeFor_forward","codeFor_refresh","codeFor_getContext","codeFor_getContexts","codeFor_switchContext","readableName","JsWdIoFramework","chainifyCode","proto","contentType","codeFor_setCommandTimeout","JsOxygenFramework","platformName","toLowerCase","browserName","type","JavaFramework","pkg","cls","Object","keys","k","codeFor_startActivity","settingName","settingValue","toPairs","e","PythonFramework","getPythonVal","jsonVal","RubyFramework","lowerCase","RobotFramework","getCapsVariables","getApplicationInitialization","lastID","_jsWd","_jsWdio","_jsOxygen","_java","_python","_ruby","_robot","frameworks","jsWd","jsWdIo","jsOxygen","java","python","ruby","robot","_i18next","i18nextOptions","i18n","isInitialized","use","initReactI18next","init","_cheerio","_htmlparser","getWebviewStatusAddressBarHeight","statBarHeight","isAndroid","dpr","devicePixelRatio","osAddressBarDefaultHeight","addressToolBarHeight","screen","setHtmlElementAttributes","webviewStatusAddressBarHeight","htmlElements","document","body","getElementsByTagName","from","forEach","el","rect","getBoundingClientRect","setAttribute","left","top","parseSource","dom","parseDocument","$","load","remove","removeAttr","each","$el","rectAttr","xml","_bluebird","_webviewHelpers","NATIVE_APP","_instance","AppiumClient","driver","elementCache","elVarCount","elArrayVarCount","selector","fetchArray","elementId","skipRefresh","skipScreenshot","appMode","quit","screenshot","windowSize","executeMethod","fetchElements","fetchElement","cachedEl","isUndefined","variableName","apply","id","parameters","pointerType","performActions","contextUpdate","sourceUpdate","screenshotUpdate","windowSizeUpdate","Bluebird","delay","getScreenshotUpdate","getWindowUpdate","getContextUpdate","getSourceUpdate","commandRes","start","Date","now","els","findElements","executionTime","elements","elementList","variableIndex","variableType","findElement","err","elementData","windowSizeError","client","capabilities","deviceScreenSize","automationName","toLower","getWindowRect","contexts","contextsError","currentContext","currentContextError","pixelRatio","viewportRect","webViewPosition","hasContextsCommand","getContext","switchContext","getSession","executeScript","parseAndroidContexts","getRect","getPageSource","sourceError","takeScreenshot","screenshotError","getContexts","parsedWebviews","webview","info","pages","webviewName","page","description","descriptionJSON","attached","title","handle","Boolean","instance","_interopRequireWildcard","_reduxFirstHistory","_Session","_uuid","_clientFrameworks","_i18nextConfig","_appiumClient","_antd","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","hasOwnProperty","desc","SET_SESSION_DETAILS","SET_SOURCE_AND_SCREENSHOT","SESSION_DONE","SELECT_ELEMENT","UNSELECT_ELEMENT","SET_SELECTED_ELEMENT_ID","SET_INTERACTIONS_NOT_AVAILABLE","METHOD_CALL_REQUESTED","METHOD_CALL_DONE","SET_EXPANDED_PATHS","SELECT_HOVERED_ELEMENT","UNSELECT_HOVERED_ELEMENT","SELECT_HOVERED_CENTROID","UNSELECT_HOVERED_CENTROID","SELECT_CENTROID","UNSELECT_CENTROID","SET_SHOW_CENTROIDS","QUIT_SESSION_REQUESTED","QUIT_SESSION_DONE","SET_SESSION_TIME","START_RECORDING","PAUSE_RECORDING","CLEAR_RECORDING","CLOSE_RECORDER","SET_ACTION_FRAMEWORK","RECORD_ACTION","STEPS_ARRAY","SET_SHOW_BOILERPLATE","SHOW_LOCATOR_TEST_MODAL","HIDE_LOCATOR_TEST_MODAL","SHOW_SIRI_COMMAND_MODAL","HIDE_SIRI_COMMAND_MODAL","SET_SIRI_COMMAND_VALUE","SET_LOCATOR_TEST_STRATEGY","SET_LOCATOR_TEST_VALUE","SEARCHING_FOR_ELEMENTS","SEARCHING_FOR_ELEMENTS_COMPLETED","GET_FIND_ELEMENTS_TIMES","GET_FIND_ELEMENTS_TIMES_COMPLETED","SET_LOCATOR_TEST_ELEMENT","FINDING_ELEMENT_IN_SOURCE","FINDING_ELEMENT_IN_SOURCE_COMPLETED","CLEAR_SEARCH_RESULTS","ADD_ASSIGNED_VAR_CACHE","CLEAR_ASSIGNED_VAR_CACHE","SET_SCREENSHOT_INTERACTION_MODE","SET_APP_MODE","SET_SEARCHED_FOR_ELEMENT_BOUNDS","CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS","SET_SWIPE_START","SET_SWIPE_END","SET_SWIPE_START1","SET_SWIPE_END1","CLEAR_SWIPE_ACTION","PROMPT_KEEP_ALIVE","HIDE_PROMPT_KEEP_ALIVE","SELECT_INTERACTION_MODE","SELECT_COMMAND_GROUP","SELECT_COMMAND_SUB_GROUP","ENTERING_COMMAND_ARGS","CANCEL_PENDING_COMMAND","SET_COMMAND_ARG","SET_CONTEXT","SET_APP_ID","SET_SERVER_STATUS","SET_KEEP_ALIVE_INTERVAL","SET_USER_WAIT_TIMEOUT","SET_LAST_ACTIVE_MOMENT","SET_VISIBLE_COMMAND_RESULT","SET_AWAITING_MJPEG_STREAM","SHOW_GESTURE_EDITOR","HIDE_GESTURE_EDITOR","GET_SAVED_GESTURES_REQUESTED","GET_SAVED_GESTURES_DONE","DELETE_SAVED_GESTURES_REQUESTED","DELETE_SAVED_GESTURES_DONE","SET_LOADED_GESTURE","REMOVE_LOADED_GESTURE","SHOW_GESTURE_ACTION","HIDE_GESTURE_ACTION","SELECT_TICK_ELEMENT","UNSELECT_TICK_ELEMENT","SET_GESTURE_TAP_COORDS_MODE","CLEAR_TAP_COORDINATES","TOGGLE_SHOW_ATTRIBUTES","TOGGLE_REFRESHING_STATE","KEEP_ALIVE_PING_INTERVAL","NO_NEW_COMMAND_LIMIT","WAIT_FOR_USER_KEEP_ALIVE","debounce","strategyMap","dispatch","getState","callClientMethod","inspector","selectedElementPath","selectElement","selectedElement","expandedPaths","copiedExpandedPaths","pathArr","splice","paths","unselectElement","selectCentroid","unselectCentroid","selectHoveredCentroid","unselectHoveredCentroid","selectHoveredElement","unselectHoveredElement","applyClientMethod","isRecording","callAction","findAndAssign","findAction","concat","dispatchEvent","Event","showError","addAssignedVarCache","setExpandedPaths","quitSession","reason","killedByUser","killKeepAliveLoop","killAction","applyAction","notification","message","t","startRecording","pauseRecording","clearRecording","getSavedActionFramework","framework","setActionFramework","recordAction","closeRecorder","toggleShowBoilerplate","show","showBoilerplate","setSessionDetails","sessionDetails","mode","mjpegScreenshotUrl","showLocatorTestModal","hideLocatorTestModal","showSiriCommandModal","hideSiriCommandModal","setSiriCommandValue","siriCommandValue","setLocatorTestValue","locatorTestValue","setLocatorTestStrategy","locatorTestStrategy","setContext","context","searchForElement","getFindElementsTimes","findDataSource","findElementsExecutionTimes","find","time","sortBy","assignedVarCache","setLocatorTestElement","skipRecord","ignoreResult","location","size","selectLocatedElement","UPPER_FILTER_LIMIT","findPathsMatchingBounds","endX","endY","coords","findPathsFromCoords","trees","collectedPaths","tree","combinedBounds","String","findPathsFromBounds","filterFoundPaths","foundPaths","findElementWithMatchingId","foundPath","clearSearchResults","selectScreenshotInteractionMode","screenshotInteractionMode","toggleRefreshingState","selectAppMode","toggleShowCentroids","showCentroids","getActiveAppId","bundleId","appId","appPackage","getServerStatus","status","build","setSessionTime","sessionStartTime","setSwipeStart","swipeStartX","swipeStartY","setSwipeStart1","setSwipeEnd","swipeEndX","swipeEndY","setSwipeEnd1","clearSwipeAction","promptKeepAlive","hideKeepAlivePrompt","selectCommandGroup","group","selectCommandSubGroup","selectInteractionMode","interaction","startEnteringCommandArgs","commandName","command","cancelPendingCommand","setCommandArg","runKeepAliveLoop","lastActiveMoment","keepAliveInterval","setInterval","getTimeouts","userWaitTimeout","setTimeout","clearInterval","clearTimeout","keepSessionAlive","fetchSteps","data","fetch","method","headers","isSourceRefreshOn","sessionId","run","postdata","data1","then","response","catch","json","expected_value","sendData","isObject","isEmpty","truncatedResult","truncate","setVisibleCommandResult","setAwaitingMjpegStream","isAwaiting","saveGesture","savedGestures","gesture","UUID","date","getSavedGestures","deleteSavedGesture","deleteGesture","newGestures","showGestureEditor","hideGestureEditor","setLoadedGesture","loadedGesture","removeLoadedGesture","displayGesture","showGesture","removeGestureDisplay","selectTick","tick","tickCoordinates","undefined","selectedTick","unselectTick","tapTickCoordinates","toggleShowAttributes","headspinUrl","ServerTabHeadspin","server","setServerParam","Form","Row","gutter","Col","span","Item","Input","className","SessionStyles","customServerInputLeft","placeholder","addonBefore","headspin","webDriverUrl","onChange","target","localDesc","DEFAULT","PRIMARY","DISABLED","DANGER","ALERT","ERROR","WARNING","INFO","INPUT","TEXT","TEXTAREA","PASSWORD","SUBMIT","ROW","FLEX","_AntdTypes","browserstackUsernamePlaceholder","BROWSERSTACK_USERNAME","environmentVariable","browserstackAccessKeyPlaceholder","BROWSERSTACK_ACCESS_KEY","ServerTabBrowserstack","browserstack","username","accessKey","lambdatestUsernamePlaceholder","LAMBDATEST_USERNAME","lambdatestAccessKeyPlaceholder","LAMBDATEST_ACCESS_KEY","ServerTabLambdatest","lambdatest","bitbarApiKeyPlaceholder","BITBAR_API_KEY","ServerTabBitbar","bitbar","apiKey","kobitonUsernamePlaceholder","KOBITON_USERNAME","kobitonAccessKeyPlaceholder","KOBITON_ACCESS_KEY","ServerTabKobiton","kobiton","cloudPerfectoUrl","portPlaceholder","perfecto","ssl","perfectoTokenPlaceholder","PERFECTO_TOKEN","ServerTabPerfecto","hostname","token","Checkbox","checked","pcloudyUsernamePlaceholder","pcloudyHostPlaceholder","pcloudyAccessKeyExample","ServerTabPcloudy","pcloudy","sauceUsernamePlaceholder","SAUCE_USERNAME","sauceAccessKeyPlaceholder","SAUCE_ACCESS_KEY","ServerTabSauce","sauce","addonDataCenter","Radio","Group","inputDataCenter","addonDataCenterRadioContainer","buttonStyle","defaultValue","dataCenter","Tooltip","placement","align","useSCProxy","disabled","scHost","scPort","testingbotKeyPlaceholder","TB_KEY","testingbotSecretPlaceholder","TB_SECRET","ServerTabTestingbot","testingbot","secret","accessKeyPlaceholder","placeholderUrl","ServerTabExperitest","experitest","robotQATokenPlaceholder","ROBOTQA_TOKEN","ServerTabRobotQA","roboticmobi","ServerTabRemoteTestkit","remotetestkit","_ServerTabHeadspin","_ServerTabBrowserstack","_ServerTabLambdatest","_ServerTabBitbar","_ServerTabKobiton","_ServerTabPerfecto","_ServerTabPcloudy","_ServerTabSauce","_ServerTabTestingbot","_ServerTabExperitest","_ServerTabRobotQA","_ServerTabRemoteTestKit","_sauce_logo","_headspin_logo","_browserstack_logo","_lambdatest_logo","_bitbar_logo","_kobiton_logo","_perfecto_logo","_pcloudy_logo","_testingbot_logo","_experitest_logo","_robotqa_logo","_remotetestkit_logo","CloudProviders","tabhead","tabText","src","SauceLogo","tab","logo","HeadSpinLogo","BrowserStackLogo","LambdaTestLogo","BitBarLogo","KobitonLogo","PerfectoLogo","PcloudyLogo","TestingBotLogo","ExperitestLogo","RobotQALogo","RemoteTestKitLogo","APPIUM_SESSION_FILE_VERSION","getAppiumSessionFilePath","argv","isPackaged","isDev","getSaveableState","reduxState","version","serverType","visibleProviders","APPIUM_SESSION_EXTENSION","_Inspector","_CloudProviders","_web2driver","_umd","_moment","_helpers","NEW_SESSION_REQUESTED","NEW_SESSION_LOADING","NEW_SESSION_DONE","CHANGE_CAPABILITY","SAVE_SESSION_REQUESTED","SAVE_SESSION_DONE","GET_SAVED_SESSIONS_REQUESTED","GET_SAVED_SESSIONS_DONE","SET_CAPABILITY_PARAM","ADD_CAPABILITY","REMOVE_CAPABILITY","SWITCHED_TABS","SET_CAPS_AND_SERVER","SAVE_AS_MODAL_REQUESTED","HIDE_SAVE_AS_MODAL_REQUESTED","SET_SAVE_AS_TEXT","DELETE_SAVED_SESSION_REQUESTED","DELETE_SAVED_SESSION_DONE","CHANGE_SERVER_TYPE","SET_SERVER_PARAM","SET_SERVER","VISIBLE_PROVIDERS","SET_ATTACH_SESS_ID","GET_SESSIONS_REQUESTED","GET_SESSIONS_DONE","ENABLE_DESIRED_CAPS_NAME_EDITOR","ABORT_DESIRED_CAPS_NAME_EDITOR","SAVE_DESIRED_CAPS_NAME","SET_DESIRED_CAPS_NAME","ENABLE_DESIRED_CAPS_EDITOR","ABORT_DESIRED_CAPS_EDITOR","SAVE_RAW_DESIRED_CAPS","SET_RAW_DESIRED_CAPS","SHOW_DESIRED_CAPS_JSON_ERROR","IS_ADDING_CLOUD_PROVIDER","SET_PROVIDERS","SET_ADD_VENDOR_PREFIXES","SET_STATE_FROM_URL","SET_STATE_FROM_SAVED","CAPS_NEW_COMMAND","CAPS_CONNECT_HARDWARE_KEYBOARD","CAPS_NATIVE_WEB_SCREENSHOT","CAPS_ENSURE_WEBVIEW_HAVE_PAGES","CAPS_INCLUDE_SAFARI_IN_WEBVIEWS","FILE_PATH_STORAGE_KEY","AUTO_START_URL_PARAM","MJPEG_CAP","MJPEG_PORT_CAP","CONN_RETRIES","CONN_TIMEOUT","HEADERS_CONTENT","NEW_COMMAND_TIMEOUT_SEC","isFirstRun","serverTypes","local","ServerTypes","DEFAULT_SERVER_PATH","DEFAULT_SERVER_HOST","DEFAULT_SERVER_PORT","SAUCE_OPTIONS_CAP","JSON_TYPES","getCapsObject","assign","secs","errMessage","setCapsAndServer","uuid","changeCapability","addCapability","setCapabilityParam","removeCapability","_addVendorPrefixes","capsUUID","capsName","session","prefixedCaps","newSession","attachSessId","desiredCapabilities","addCustomCaps","isPlainObject","dateTime","moment","format","URL","pathname","protocol","securityToken","BROWSERSTACK_HOST","BROWSERSTACK_PORT","LAMBDATEST_HOST","LAMBDATEST_PORT","isRealMobile","advanced","useProxy","proxyUrl","proxy","BITBAR_HOST","KOBITON_HOST","pCloudy_Username","PCLOUDY_USERNAME","pCloudy_ApiKey","PCLOUDY_ACCESS_KEY","TB_HOST","experitestUrl","robotqa_token","accessToken","serverOpts","connectionRetryCount","connectionRetryTimeout","user","logLevel","NODE_ENV","attachedSessionCaps","runningAppiumSessions","isMobile","Web2Driver","attachToSession","_isAttachedSession","navigateTo","mjpegScreenshotPort","saveSession","savedSessions","newSavedSession","getSavedSessions","switchTabs","requestSaveAsModal","hideSaveAsModal","setSaveAsText","saveAsText","deleteSavedSession","newSessions","setAttachSessId","changeServerType","getRunningSessions","debounceGetRunningSessions","setLocalServerParams","serverArgs","setSavedServerParams","currentProviders","setStateFromAppiumFile","newFilepath","filePath","lastArg","startsWith","sessionStorage","appiumJson","promisify","readFile","stack","saveFile","filepath","appiumFileInfo","writeFile","send","serverInfo","adjPath","endsWith","ky","btoa","sessions","startDesiredCapsNameEditor","abortDesiredCapsNameEditor","saveDesiredCapsName","desiredCapsName","setDesiredCapsName","startDesiredCapsEditor","abortDesiredCapsEditor","saveRawDesiredCaps","rawDesiredCaps","capsArray","newCaps","newCapsArray","setRawDesiredCaps","invalidCapsJsonReason","isValidCapsJson","isValidatingCapsJson","addCloudProvider","isAddingProvider","stopAddCloudProvider","addVisibleProvider","provider","providers","union","removeVisibleProvider","without","setVisibleProviders","androidCustomCaps","iosCustomCaps","bindWindowClose","addEventListener","returnValue","setAddVendorPrefixes","initFromQueryString","href","initialState","searchParams","autoStartSession","_formatJson","_Session2","_icons","FormattedCaps","isEditingDesiredCapsName","isEditingDesiredCaps","Card","formattedCaps","setCapsTitle","capsEditorTitle","extra","setCapsTitleButtons","Button","onClick","icon","CloseOutlined","capsNameEditorButton","SaveOutlined","EditOutlined","capsEditorControls","capsEditorButton","capsEditor","capsEditorBody","capsEditorBodyFull","capsEditorBodyResized","Alert","formattedCapsBody","formatJSON","plain","getLocalFilePath","canceled","filePaths","dialog","showOpenDialog","properties","CapabilityControl","onSetCapabilityParam","onPressEnter","capsBoxFont","Switch","checkedChildren","unCheckedChildren","rows","fileControlWrapper","addonAfter","FileOutlined","_FormattedCaps","_CapabilityControl","_extends","bind","arguments","whitespaces","whitespaceMsg","leadingSpace","trailingSpace","handleSetType","translatedValue","CapabilityEditor","showSaveAsModal","onSaveAsOk","latestCapField","useRef","useEffect","current","input","__didFocus","focus","justify","capsFormRow","order","capsFormCol","newSessionForm","ref","Select","Option","btnDeleteCap","DeleteOutlined","PlusOutlined","capsFormattedCol","Modal","okText","cancelText","onCancel","onOk","DATE_COLUMN_WIDTH","ACTIONS_COLUMN_WIDTH","dataSource","sessionFromUUID","SavedSessions","handleCapsAndServer","columns","dataIndex","record","editSession","confirm","handleDelete","Table","pagination","sticky","onRow","row","rowClassName","selected","formatCaps","importantCaps","deviceName","formatCapsBrowserstack","sessionName","formatCapsLambdaTest","desired","platformVersion","getSessionInfo","AttachToSession","showSearch","notFoundContent","btnReload","ReloadOutlined","ServerTabCustom","AdvancedServerParams","styles","advancedSettingsContainerCol","advancedSettingsContainer","Collapse","bordered","Panel","header","allowUnauthorized","CloudProviderSelector","isAddingCloudProvider","footer","providersGrid","chunk","cloudProviderModal","providerName","style","borderColor","role","toggleVisibleProvider","_CapabilityEditor","_SavedSessions","_AttachToSession","_ServerTabCustom","_AdvancedServerParams","_CloudProviderSelector","ADD_CLOUD_PROVIDER","CAPS_DOCS_LINK","Session","tabKey","isCapsDirty","newSessionLoading","isAttaching","Spin","spinning","sessionContainer","serverTab","Tabs","activeKey","handleSelectServerTab","serverTabs","items","label","scrollingTabCont","scrollingTab","Badge","count","offset","sessionFooter","desiredCapsLink","preventDefault","LinkOutlined","_reactRedux","SessionActions","mapStateToProps","connect","HighlighterRect","hoveredElement","scaleRatio","xOffset","elLocation","elSize","dimensions","hoveredPath","selectedPath","highlighterClasses","InspectorCSS","onMouseOver","onMouseOut","CENTROID_STYLES","VISIBLE","HIDDEN","CONTAINER","NON_CONTAINER","getCentroidPos","angle","coord","HighlighterCentroid","elementProperties","centroidType","hoveredCentroid","selectedCentroid","centerX","centerY","angleX","angleY","container","centroidClasses","overlapDivStyle","visibility","centroidDivStyle","borderRadius","placeHolder","onMouseEnter","onMouseLeave","onClickCentroid","_HighlighterRect","_HighlighterCentroid","HighlighterRects","containerEl","searchedForElementBounds","isLocatorTestModalVisible","isSiriCommandModalVisible","highlighterRects","highlighterCentroids","highlighterXOffset","screenshotEl","buildElementsWithProps","prevElement","overlaps","centerPoint","v1","v2","parent","accessible","coordinates","isElementContainer","childEl","element1","element2","isElementOverElement","isAncestor","curElement","maybeAncestor","elem","updateOverlapsAngles","steps","step","elProps","cos","PI","sin","elementsByOverlap","getElements","querySelector","renderElements","centroids","renderCentroids","_HighlighterRects","_io","_bi","TYPES","FILLED","NEW_DASHED","WHOLE","DASHED","DRAG","Screenshot","methodCallInProgress","step_object","swipeStart","swipeEnd1","swipeStart1","swipeEnd","selectedInteractionMode","locatorTestElement","xLongPress","setXLongPress","useState","yLongPress","setYLongPress","setElement","setCoordinates","scratch","setScratch","coordinatesString","coordinatesArray","setX","setY","isLongPress","setIsLongPress","setCoords","crop","setCrop","scale","useFileUpload","button","useLongPress","longdata","useDoubleTap","scratchCard","handleMouseMove","handleDoSwipe","origin","swipeEndLocal","handleDoSwipeSlide","handleDoDragAndDrop","handleDoZoom","swipeEndLocal1","fetchExpectedValue","offsetX","nativeEvent","offsetY","newX","newY","prevCoordinates","screenshotStyle","cursor","swipeInstructions","screenSrc","screenImg","screenimage","points","getGestureCoordinates","defaultTypes","pointerDown","pointerUp","pointer","temp","ticks","len","color","display","innerScreenshotContainer","onMouseDown","B","onMouseMove","handleMouseOut","onDragOver","event","onDrop","dropX","dropY","roundedDropX","roundedDropY","screenshotBox","coordinatesContainer","swipeSvg","cx","cy","tapDiv","gestureSvg","stroke","fill","IoChevronBackOutline","BiCircle","BiSquare","_hi","_testinglogo","_hamburger","HeaderButtons","headerLogo","InspectorStyles","menuButton","alt","deviceControls","HiOutlineHome","HiOutlineMicrophone","appModeControls","gap","AppstoreOutlined","GlobalOutlined","generalControls","PlayCircleOutlined","PauseCircleOutlined","SearchOutlined","EyeOutlined","PauseOutlined","quitSessionButton","Space","alignItems","CLASS_CHAIN_DOCS_URL","PREDICATE_DOCS_URL","selectedElementTableCell","copyToClipBoard","trigger","SelectedElement","isFindingElementsTimes","selectedElementId","elementInteractionsNotAvailable","selectedElementSearchInProgress","sendKeys","isDisabled","attributeColumns","unshift","findColumns","showXpathWarning","classChainText","predicateStringText","tapIcon","AimOutlined","LoadingOutlined","selectedElemNotInteractableAlertRow","showIcon","elementActions","elementKeyInputActions","elementKeyInput","allowClear","SendOutlined","ClearOutlined","CopyOutlined","HourglassOutlined","tableLayout","contextSelect","LocatedElements","locatedElements","locatedElementsExecutionTime","isFindingLocatedElementInSource","spaceContainer","direction","showIdAutocompleteInfo","idLocatorAutocompletionDisabled","disableIdLocatorAutocompletion","List","searchResultsList","renderItem","searchResultsSelectedItem","MenuUnfoldOutlined","searchResultsActions","searchResultsKeyInput","STRAT_ID","STRAT_XPATH","STRAT_NAME","STRAT_CLASS_NAME","STRAT_ACCESSIBILITY_ID","STRAT_PREDICATE","STRAT_CLASS_CHAIN","STRAT_UIAUTOMATOR","STRAT_DATAMATCHER","STRAT_VIEWTAG","locatorStrategies","strategies","showMissingAutomationNameInfo","ElementLocator","strategyValue","strategyName","locatorStrategyBtn","TextArea","locatorSelectorTextArea","_LocatedElements","_ElementLocator","LocatorTestModal","isSearchingForElements","loading","onSubmit","SiriCommandModal","_LocatorTestModal","_SiriCommandModal","IMPORTANT_ATTRS","Source","showSourceAttrs","getFormattedTag","showAllAttrs","attrs","sourceAttrName","sourceAttrValue","sourceTag","recursive","elemObj","treeData","tabIndex","errorMsg","Tree","defaultExpandAll","onExpand","expandedKeys","onSelect","selectedPaths","handleSelectElement","selectedKeys","_highlight","RecordedActions","recordedActions","actionFramework","raw","rawCode","highlight","highlightedCode","CodeOutlined","actionBar","f","ExportOutlined","dangerouslySetInnerHTML","__html","Commands","selectedCommandGroup","selectedCommandSubGroup","pendingCommand","commandGroupName","commandGroup","startPerformingCommand","executeCommand","argName","argType","toNumber","v","SAVED_ACTIONS_OBJ","NAME","DESCRIPTION","CREATED","ACTIONS","SavedGestures","drawnGestureRef","getGestureByID","onDraw","convertCoordinates","formatGesture","pointers","omit","newPointers","onPlay","loadSavedGesture","rowKey","onRowClick","Name","Created","Description","DEFAULT_DURATION_TIME","COLORS","BUTTONS","LEFT","RIGHT","ACTION_TYPES","ADD","REMOVE","MSG_TYPES","SUCCESS","COORD_TYPE","PERCENTAGES","PIXELS","TICK_PROPS","POINTER_TYPE","DURATION","X","Y","CURSOR","POINTER","STATUS","WAIT","FINISH","COLOR","FILLER","DISPLAY","DEFAULT_POINTERS","GestureEditor","setPointers","setName","setDescription","coordType","setCoordType","activePointerId","setActivePointerId","getConvertedPointers","updateCoordinates","onBack","duplicatePointerNames","localPointers","duplicates","displayNotificationMsg","msg","getW3CPointers","currentPointers","cloneDeep","getDefaultMoveDuration","tickId","coordFromTap","ticksExceptCurrent","prevPointerMoves","calcLength","sqrt","calcDiff","abs","xDiff","yDiff","maxScreenLength","lineLengthPct","tickKey","updateX","updateY","copiedPointers","currentPointer","currentTick","updateTick","p","targetTickIdx","findIndex","headerTitle","headerButtons","formattedPointers","onSaveAs","gestureName","onSave","headerDescription","regularTimelineIcon","iconStyle","Popover","content","RightCircleOutlined","DownCircleOutlined","UpCircleOutlined","QuestionCircleOutlined","timeline","updateGestureForTimeline","allTickLengths","maxTickLength","max","currentLength","customStep","fillers","Steps","tapCoordinatesBtn","tickCard","hoverable","deleteTick","pointerKey","newTicks","dropdownMatchSelectWidth","pointerMove","pause","tickType","tickDuration","tickButton","tickCoords","pointerTicksGrid","xs","sm","md","lg","xl","xxl","PlusCircleOutlined","addTick","pointerTabs","textDecorationColor","maxLength","updatePointerName","pointerName","pointerIndex","PageHeader","Divider","pointerId","onEdit","targetKey","addPointer","newActivePointerId","deletePointer","hideAdd","centered","tabBarGutter","SessionCodeBox","_SessionCodeBox","SESSION_OBJ","session_id","session_url","server_details","session_length","session_details","active_appId","OUTER_TABLE_KEY","SESSION_TABLE_KEY","SERVER_TABLE_KEY","SCROLL_DISTANCE_Y","COLUMN_WIDTH","SESSION_DETAILS","SessionInfo","sessionArray","generateSessionTime","hours","minutes","floor","showTime","padStart","interval","setTime","getTable","tableValues","keyName","outerTable","keyValue","generateSessionInfo","showHeader","scroll","connectedUrl","serverDetailsArray","serverStatusArray","sessionUrl","_Screenshot","_HeaderButtons","_SelectedElement","_Source","_RecordedActions","_Commands","_SavedGestures","_GestureEditor","_SessionInfo","ButtonGroup","MIN_WIDTH","MIN_HEIGHT","MAX_SCREENSHOT_WIDTH","MJPEG_STREAM_CHECK_INTERVAL","downloadXML","encodeURIComponent","appendChild","click","removeChild","Inspector","didInitialResize","activeIndex","showPanel","currentSelection","step_array","total_array","screenAndSourceEl","lastScreenshot","updateSourceTreeWidth","updateScaleRatio","mjpegStreamCheckInterval","screenshotImg","setState","offsetWidth","img","imgRect","screenshotRect","flexBasis","attemptedWidth","maxWidth","componentDidMount","curHeight","curWidth","needsResize","newWidth","newHeight","resizeTo","checkMjpegStream","isAwaitingMjpegStream","Image","imgReady","decode","componentDidUpdate","componentWillUnmount","handlePanel","screenshotInteractionChange","option","setActiveIndex","hideKeyboard","getDeviceTime","formattedTime","utc","utcOffset","alert","showRecord","visibleCommandMethod","showKeepAlivePrompt","visibleCommandResult","isGestureEditorVisible","flow_steps","showScreenshot","screenShotControls","CheckCircleOutlined","CloseCircleOutlined","defaultChecked","BarsOutlined","textAlign","padding","borderBottom","position","HeatMapOutlined","fontSize","flexDirection","zIndex","SelectOutlined","SwapRightOutlined","ScanOutlined","InfoOutlined","DragOutlined","ShrinkOutlined","SlidersOutlined","FileAddOutlined","DollarOutlined","FundProjectionScreenOutlined","CaretDownOutlined","FieldTimeOutlined","PaperClipOutlined","RotateRightOutlined","setOrientation","NotificationOutlined","openNotifications","isInput","inputBundleId","activateApp","backgroundColor","resetApp","SwitcherOutlined","main","fontWeight","overflowX","overflowY","TagOutlined","ThunderboltOutlined","HighlightOutlined","InfoCircleOutlined","InspectorActions","_Inspector2","InspectorPage","_Spinner","Spinner","loader","_reactRouterDom","_App","_SessionPage","_InspectorPage","changeLanguage","Suspense","fallback","Route","exact","_routes","Root","store","history","Provider","Router","_ErrorMessage","CREATE_ISSUE_URL","ErrorMessage","copyTrace","errorMessage","copyTraceBtn","trace","ErrorBoundary","SET_UPDATE_STATE","setUpdateState","updateState","inspectorActions","sessionActions","updaterActions","serverName","INITIAL_STATE","gettingSessions","nextState","isAttachSessIdValid","runningSessions","newSessionRequested","saveSessionRequested","getSavedSessionsRequested","deletingSession","currentServerState","newServerState","nextServerState","reduce","DEFAULT_FRAMEWORK","findElementByPath","isQuittingSession","isSessionDone","selectedElementVariableName","selectedElementVariableType","getSavedGesturesRequested","_Updater","_toolkit","createRootReducer","routerReducer","combineReducers","router","updater","_history","_actions","_reducers","createReduxHistory","routerMiddleware","createReduxHistoryContext","createHashHistory","rootReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","createLogger","logger","level","collapsed","devTools","actionCreators","_client","_Root","_ErrorBoundary","_store","getElementById","root","createRoot","module","hot","accept","NextRoot","AppContainer"],"mappings":"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","file":"renderer.e31bb0bc.js","sourceRoot":"../app/renderer","sourcesContent":["const browser = {\n  clipboard: {\n    writeText: (text) => navigator.clipboard.writeText(text)\n  },\n  shell: {\n    openExternal: (url) => window.open(url, '')\n  },\n  remote: {\n    getCurrentWindow: () => ({\n      getSize: () => [window.innerWidth, window.innerHeight]\n    })\n  },\n  ipcRenderer: {\n    on: (evt) => {\n      console.warn(`Cannot listen for IPC event ${evt} in browser context`); // eslint-disable-line no-console\n    }\n  },\n  fs: null,\n  util: null,\n};\n\nclass BrowserSettings {\n  has (key) {\n    return this.get(key) !== null;\n  }\n\n  set (key, val) {\n    return localStorage.setItem(key, JSON.stringify(val));\n  }\n\n  get (key) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  getSync (key) {\n    return this.get(key);\n  }\n}\n\nconst log = console;\nconst settings = new BrowserSettings();\nconst {clipboard, shell, remote, ipcRenderer} = browser;\nconst i18NextBackend = require('i18next-chained-backend').default;\nconst i18NextBackendOptions = {\n  backends: [\n    require('i18next-localstorage-backend').default,\n    require('i18next-http-backend').default,\n  ], backendOptions: [{\n  }, {\n    loadPath: './locales/{{lng}}/{{ns}}.json'\n  }]\n};\n\nexport {\n  log,\n  settings,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  i18NextBackend,\n  i18NextBackendOptions,\n};\n","import path from 'path';\nimport { clipboard, shell, remote, ipcRenderer } from 'electron';\nimport log from 'electron-log';\nimport settings from 'electron-settings';\nimport i18NextBackend from 'i18next-fs-backend';\nimport fs from 'fs';\nimport util from 'util';\nconst i18NextBackendOptions = {\n  loadPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n  addPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n  jsonIndent: 2,\n};\n\nexport {\n  log,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  settings,\n  i18NextBackend,\n  i18NextBackendOptions,\n  fs,\n  util,\n};\n","let log, settings, clipboard, shell, remote, ipcRenderer,\n    i18NextBackend, i18NextBackendOptions, fs, util;\n\nfunction buildForBrowser () {\n  if (process.env.BUILD_BROWSER) {\n    return true;\n  }\n\n  if (typeof navigator !== 'undefined' && !/electron/i.test(navigator.userAgent)) {\n    return true;\n  }\n\n  return false;\n}\n\nif (buildForBrowser()) {\n  ({log, settings, clipboard, shell, remote,\n    ipcRenderer, i18NextBackend,\n    i18NextBackendOptions, fs, util} = require('./browser'));\n} else {\n  ({log, settings, clipboard, shell, remote,\n    ipcRenderer, i18NextBackend,\n    i18NextBackendOptions, fs, util} = require('./electron'));\n}\n\nexport {\n  log,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  settings,\n  i18NextBackend,\n  i18NextBackendOptions,\n  fs,\n  util,\n};\n","import { settings } from '../renderer/polyfills';\n\nexport const SAVED_SESSIONS = 'SAVED_SESSIONS';\nexport const SET_SAVED_GESTURES = 'SET_SAVED_GESTURES';\nexport const SERVER_ARGS = 'SERVER_ARGS';\nexport const SESSION_SERVER_PARAMS = 'SESSION_SERVER_PARAMS';\nexport const SESSION_SERVER_TYPE = 'SESSION_SERVER_TYPE';\nexport const SAVED_FRAMEWORK = 'SAVED_FRAMEWORK';\n\nconst DEFAULT_SETTINGS = {\n  [SAVED_SESSIONS]: [],\n  [SET_SAVED_GESTURES]: [],\n  [SERVER_ARGS]: null,\n  [SESSION_SERVER_PARAMS]: null,\n  [SESSION_SERVER_TYPE]: null,\n  [SAVED_FRAMEWORK]: 'java',\n};\n\nexport async function getSetting (setting) {\n  if (await settings.has(setting)) {\n    return await settings.get(setting);\n  }\n  return DEFAULT_SETTINGS[setting];\n}\n\nexport async function setSetting (setting, value) {\n  await settings.set(setting, value);\n}\n\nexport default settings;\n","import settings from '../shared/settings';\n\nconst config = {\n  platform: process.platform,\n  languages: [\n    'de', 'en', 'es-ES', 'fa', 'hi', 'it', 'ja', 'ko', 'kn',\n    'ml-IN', 'pa-IN', 'pl', 'pt-BR', 'pt-PT', 'ru', 'te', 'uk', 'zh-CN'\n  ],\n  fallbackLng: 'en',\n  namespace: 'translation',\n};\n\nfunction getI18NextOptions (backend) {\n  return {\n    backend,\n    // debug: true,\n    // saveMissing: true,\n    interpolation: {\n      escapeValue: false\n    },\n    lng: settings && settings.getSync('PREFERRED_LANGUAGE') || 'en',\n    fallbackLng: config.fallbackLng,\n    whitelist: config.languages\n  };\n}\n\n\nexport default config;\nexport { getI18NextOptions };\n","import XPath from 'xpath';\nimport { withTranslation as wt } from 'react-i18next';\nimport _ from 'lodash';\nimport { log } from './polyfills';\nimport config from '../configs/app.config';\nimport { DOMParser } from '@xmldom/xmldom';\n\nconst VALID_W3C_CAPS = ['platformName', 'browserName', 'browserVersion', 'acceptInsecureCerts',\n  'pageLoadStrategy', 'proxy', 'setWindowRect', 'timeouts', 'unhandledPromptBehavior'];\n\n\n// Attributes on nodes that we know are unique to the node\nconst UNIQUE_XPATH_ATTRIBUTES = [\n  'name',\n  'content-desc',\n  'id',\n  'accessibility-id',\n];\nconst UNIQUE_CLASS_CHAIN_ATTRIBUTES = [\n  'label',\n  'name',\n  'value',\n];\nconst UNIQUE_PREDICATE_ATTRIBUTES = [\n  'label',\n  'name',\n  'value',\n  'type',\n];\n\n/**\n * Translates sourceXML to JSON\n *\n * @param {string} source\n * @returns {Object}\n */\nexport function xmlToJSON (source) {\n  const childNodesOf = (xmlNode) => {\n    if (!xmlNode || !xmlNode.hasChildNodes()) {\n      return [];\n    }\n\n    const result = [];\n    for (let childIdx = 0; childIdx < xmlNode.childNodes.length; ++childIdx) {\n      const childNode = xmlNode.childNodes.item(childIdx);\n      if (childNode.nodeType === 1) {\n        result.push(childNode);\n      }\n    }\n    return result;\n  };\n  const translateRecursively = (xmlNode, parentPath = '', index = null) => {\n    const attributes = {};\n    for (let attrIdx = 0; attrIdx < xmlNode.attributes.length; ++attrIdx) {\n      const attr = xmlNode.attributes.item(attrIdx);\n      attributes[attr.name] = attr.value;\n    }\n\n    // Dot Separated path of indices\n    const path = _.isNil(index) ? '' : `${!parentPath ? '' : parentPath + '.'}${index}`;\n    const classChainSelector = isIOS ? getOptimalClassChain(xmlDoc, xmlNode, UNIQUE_CLASS_CHAIN_ATTRIBUTES) : '';\n    const predicateStringSelector = isIOS ? getOptimalPredicateString(xmlDoc, xmlNode, UNIQUE_PREDICATE_ATTRIBUTES) : '';\n\n    return {\n      children: childNodesOf(xmlNode)\n        .map((childNode, childIndex) => translateRecursively(childNode, path, childIndex)),\n      tagName: xmlNode.tagName,\n      attributes,\n      xpath: getOptimalXPath(xmlDoc, xmlNode, UNIQUE_XPATH_ATTRIBUTES),\n      ...(isIOS ? {classChain: classChainSelector ? `**${classChainSelector}` : ''} : {}),\n      ...(isIOS ? {predicateString: predicateStringSelector ? predicateStringSelector : ''} : {}),\n      path,\n    };\n  };\n  const isIOS = source.includes('XCUIElement');\n  const xmlDoc = new DOMParser().parseFromString(source);\n  // get the first child element node in the doc. some drivers write their xml differently so we\n  // first try to find an element as a direct descendend of the doc, then look for one in\n  // documentElement\n  const firstChild = childNodesOf(xmlDoc)[0] || childNodesOf(xmlDoc.documentElement)[0];\n\n  return firstChild ? translateRecursively(firstChild) : {};\n}\n\n/**\n * Get an optimal XPath for a DOMNode\n *\n * @param {DOMDocument} doc\n * @param {DOMNode} domNode\n * @param {Array<String>} uniqueAttributes Attributes we know are unique (defaults to just 'id')\n * @returns {string|null}\n */\nexport function getOptimalXPath (doc, domNode, uniqueAttributes = ['id']) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1) {\n      return '';\n    }\n\n    // BASE CASE #2: If this node has a unique attribute, return an absolute XPath with that attribute\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n      if (attrValue) {\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\n        let othersWithAttr;\n\n        // If the XPath does not parse, move to the next unique attribute\n        try {\n          othersWithAttr = XPath.select(xpath, doc);\n        } catch (ign) {\n          continue;\n        }\n\n        // If the attribute isn't actually unique, get it's index too\n        if (othersWithAttr.length > 1) {\n          let index = othersWithAttr.indexOf(domNode);\n          xpath = `(${xpath})[${index + 1}]`;\n        }\n        return xpath;\n      }\n    }\n\n    // Get the relative xpath of this node using tagName\n    let xpath = `/${domNode.tagName}`;\n\n    // If this node has siblings of the same tagName, get the index of this node\n    if (domNode.parentNode) {\n      // Get the siblings\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\n      ));\n\n      // If there's more than one sibling, append the index\n      if (childNodes.length > 1) {\n        let index = childNodes.indexOf(domNode);\n        xpath += `[${index + 1}]`;\n      }\n    }\n\n    // Make a recursive call to this nodes parents and prepend it to this xpath\n    return getOptimalXPath(doc, domNode.parentNode, uniqueAttributes) + xpath;\n  } catch (error) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    log.error(`The most optimal XPATH could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\n\n    return null;\n  }\n}\n\n/**\n * Get an optimal Class Chain for a DOMNode based on the getOptimalXPath method\n *\n * @param {DOMDocument} doc\n * @param {DOMNode} domNode\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\n * @returns {string|null}\n */\nfunction getOptimalClassChain (doc, domNode, uniqueAttributes) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\n    // which is not an official XCUITest element, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\n      return '';\n    }\n\n    // BASE CASE #2: If this node has a unique class chain based on attributes then return it\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n      if (attrValue) {\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\n        let classChain = `/${domNode.tagName || '*'}[\\`${attrName} == \"${attrValue}\"\\`]`;\n        let othersWithAttr;\n\n        // If the XPath does not parse, move to the next unique attribute\n        try {\n          othersWithAttr = XPath.select(xpath, doc);\n        } catch (ign) {\n          continue;\n        }\n\n        // If the attribute isn't actually unique, get it's index too\n        if (othersWithAttr.length > 1) {\n          let index = othersWithAttr.indexOf(domNode);\n          classChain = `${classChain}[${index + 1}]`;\n        }\n        return classChain;\n      }\n    }\n\n    // Get the relative xpath of this node using tagName\n    let classChain = `/${domNode.tagName}`;\n\n    // If this node has siblings of the same tagName, get the index of this node\n    if (domNode.parentNode) {\n      // Get the siblings\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\n      ));\n\n      // If there's more than one sibling, append the index\n      if (childNodes.length > 1) {\n        let index = childNodes.indexOf(domNode);\n        classChain += `[${index + 1}]`;\n      }\n    }\n\n    // Make a recursive call to this nodes parents and prepend it to this xpath\n    return getOptimalClassChain(doc, domNode.parentNode, uniqueAttributes) + classChain;\n  } catch (error) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    log.error(`The most optimal '-ios class chain' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\n\n    return null;\n  }\n}\n\n/**\n * Get an optimal Predicate String for a DOMNode based on the getOptimalXPath method\n * The `ios predicate string` can only search a single element, no parent child scope\n *\n * @param {DOMDocument} doc\n * @param {DOMNode} domNode\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\n * @returns {string|null}\n */\nfunction getOptimalPredicateString (doc, domNode, uniqueAttributes) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\n    // which is not an official XCUITest element, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\n      return '';\n    }\n\n    // BASE CASE #2: Check all attributes and try to find the best way\n    let xpathAttributes = [];\n    let predicateString = [];\n\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n\n      if (_.isNil(attrValue) || _.isString(attrValue) && attrValue.length === 0) {\n        continue;\n      }\n\n      xpathAttributes.push(`@${attrName}=\"${attrValue}\"`);\n      const xpath = `//*[${xpathAttributes.join(' and ')}]`;\n      predicateString.push(`${attrName} == \"${attrValue}\"`);\n      let othersWithAttr;\n\n      // If the XPath does not parse, move to the next unique attribute\n      try {\n        othersWithAttr = XPath.select(xpath, doc);\n      } catch (ign) {\n        continue;\n      }\n\n      // If the attribute isn't actually unique, get it's index too\n      if (othersWithAttr.length === 1) {\n        return predicateString.join(' AND ');\n      }\n    }\n  } catch (error) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    log.error(`The most optimal '-ios predicate string' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\n\n    return null;\n  }\n}\n\nexport function withTranslation (componentCls, ...hocs) {\n  return _.flow(\n    ...hocs,\n    wt(config.namespace),\n  )(componentCls);\n}\n\nexport function addVendorPrefixes (caps) {\n  return caps.map((cap) => {\n    // if we don't have a valid unprefixed cap or a cap with an existing prefix, update it\n    if (!VALID_W3C_CAPS.includes(cap.name) && !_.includes(cap.name, ':')) {\n      cap.name = `appium:${cap.name}`;\n    }\n    return cap;\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from '../util';\n\nclass App extends React.Component {\n  render () {\n    const { children } = this.props;\n    return (\n      <React.Fragment>{children}</React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  children: PropTypes.element.isRequired\n};\n\nexport default withTranslation(App);\n","import { DOMParser } from '@xmldom/xmldom';\nimport xpath from 'xpath';\n\nexport function pixelsToPercentage (px, maxPixels) {\n  if (!isNaN(px)) {\n    return parseFloat(((px / maxPixels) * 100).toFixed(1), 10);\n  }\n}\n\nexport function percentageToPixels (pct, maxPixels) {\n  if (!isNaN(pct)) {\n    return Math.round(maxPixels * (pct / 100));\n  }\n}\n\nexport function parseCoordinates (element) {\n  let {bounds, x, y, width, height} = element.attributes || {};\n\n  if (bounds) {\n    let boundsArray = bounds.split(/\\[|\\]|,/).filter((str) => str !== '');\n    const x1 = parseInt(boundsArray[0], 10);\n    const x2 = parseInt(boundsArray[2], 10);\n    const y1 = parseInt(boundsArray[1], 10);\n    const y2 = parseInt(boundsArray[3], 10);\n    return { x1, y1, x2, y2 };\n  } else if (x) {\n    x = parseInt(x, 10);\n    y = parseInt(y, 10);\n    width = parseInt(width, 10);\n    height = parseInt(height, 10);\n    return {x1: x, y1: y, x2: x + width, y2: y + height};\n  } else {\n    return {};\n  }\n}\n\nexport function isUnique (attrName, attrValue, sourceXML) {\n  // If no sourceXML provided, assume it's unique\n  if (!sourceXML) {\n    return true;\n  }\n  const doc = new DOMParser().parseFromString(sourceXML);\n  return xpath.select(`//*[@${attrName}=\"${attrValue.replace(/\"/g, '')}\"]`, doc).length < 2;\n}\n\n// Map of the optimal strategies.\nconst STRATEGY_MAPPINGS = [\n  ['name', 'accessibility id'],\n  ['content-desc', 'accessibility id'],\n  ['id', 'id'],\n  ['rntestid', 'id'],\n  ['resource-id', 'id'],\n  ['class', 'class name'],\n  ['type', 'class name'],\n];\n\nexport function getLocators (attributes, sourceXML) {\n  const res = {};\n  for (let [strategyAlias, strategy] of STRATEGY_MAPPINGS) {\n    const value = attributes[strategyAlias];\n    if (value && isUnique(strategyAlias, value, sourceXML)) {\n      res[strategy] = attributes[strategyAlias];\n    }\n  }\n  return res;\n}\n\nexport const POINTER_TYPES = {\n  POINTER_UP: 'pointerUp',\n  POINTER_DOWN: 'pointerDown',\n  PAUSE: 'pause',\n  POINTER_MOVE: 'pointerMove'\n};\n\nexport const DEFAULT_SWIPE = {\n  POINTER_NAME: 'finger1',\n  DURATION_1: 0,\n  DURATION_2: 750,\n  BUTTON: 0,\n  ORIGIN: 'viewport'\n};\n\nexport const DEFAULT_ZOOM = {\n  POINTER_NAME1: 'finger1',\n  POINTER_NAME2: 'finger2',\n  POINTER_NAME3: 'finger2',\n  POINTER_NAME4: 'finger2',\n  DURATION_1: 0,\n  DURATION_2: 750,\n  BUTTON: 0,\n  ORIGIN: 'viewport'\n};\n\n\nexport const DEFAULT_TAP = {\n  POINTER_NAME: 'finger1',\n  DURATION_1: 0,\n  DURATION_2: 100,\n  BUTTON: 0\n};\n\nexport const DEFAULT_LONGPRESS = {\n  LONGPRESS_POINTER_NAME: 'finger1',\n  LONGPRESS_DURATION_1: 0,\n  LONGPRESS_DURATION_2: 1000,\n  LONGPRESS_BUTTON: 0\n};\n\nexport const DEFAULT_DRAG_AND_DROP = {\n  POINTER_NAME: 'finger1',\n  DURATION_1: 0,\n  DURATION_2: 750,\n  BUTTON: 0,\n  ORIGIN: 'viewport'\n};\n\n\n// 3 Types of Centroids:\n// CENTROID is the circle/square displayed on the screen\n// EXPAND is the +/- circle displayed on the screen\n// OVERLAP is the same as CENTROID but is only visible when clicked on +/- circle\nexport const RENDER_CENTROID_AS = {\n  CENTROID: 'centroid',\n  EXPAND: 'expand',\n  OVERLAP: 'overlap'\n};\n\nexport const SCREENSHOT_INTERACTION_MODE = {\n  SELECT: 'select',\n  SWIPE: 'swipe',\n  TAP: 'tap',\n  LONGPRESS: 'longpress',\n  DRAG_AND_DROP: 'drag_and_drop',\n  DOUBLE_TAP: 'double tap',\n  GESTURE: 'gesture',\n  ZOOMIN: 'zoomin',\n  SLIDE: 'slide',\n  SLIDE_SWIPE: 'slide_swipe',\n  SELECT_LONG: 'select_long',\n  SELECT_DOUBLE: 'select_double',\n  FILE_UPLOAD: 'file_upload',\n  SELECT_FILE: 'select_file',\n  EXPECTED_VALUE: 'expected_value',\n  TAKE_SCREENSHOT: 'take_screenshot',\n  SCRATCH: 'scratch',\n  HIDE_KEYBOARD: 'hide_keyboard',\n  GET_DEVICE_TIME: 'get_device_time',\n  GET_CLIPBOARD: 'get_clipboard',\n  ROTATE: 'rotate'\n};\n\nexport const APP_MODE = {\n  NATIVE: 'native',\n  WEB_HYBRID: 'web_hybrid',\n};\n\nexport const COMMAND_ARG_TYPES = {\n  STRING: 'string',\n  NUMBER: 'number',\n  BOOLEAN: 'boolean',\n};\n\nconst { STRING, NUMBER, BOOLEAN } = COMMAND_ARG_TYPES;\n\n// Note: When adding or removing COMMAND_DEFINITIONS, update `en/translation.json`\nexport const COMMAND_DEFINITIONS = {\n  'Device': {\n    'Execute Script': {\n      'Execute': {methodName: 'executeScript', args: [['executeScriptCommand', STRING], ['jsonArgument', STRING]]}\n    },\n    'Android Activity': {\n      'Start Activity': {methodName: 'startActivity', args: [\n        ['appPackage', STRING], ['appActivity', STRING], ['appWaitPackage', STRING],\n        ['intentAction', STRING], ['intentCategory', STRING], ['intentFlags', STRING],\n        ['optionalIntentArguments', STRING], ['dontStopAppOnReset', STRING],\n      ], refresh: true},\n      'Current Activity': {methodName: 'getCurrentActivity'},\n      'Current Package': {methodName: 'getCurrentPackage'},\n    },\n    'App': {\n      'Install App': {methodName: 'installApp', args: [['appPathOrUrl', STRING]]},\n      'Is App Installed': {methodName: 'isAppInstalled', args: [['appId', STRING]]},\n      'Background App': {methodName: 'background', args: [['timeout', NUMBER]], refresh: true},\n      'Activate App': {methodName: 'activateApp', args: [['appId', STRING]], refresh: true},\n      'Terminate App': {methodName: 'terminateApp', args: [['appId', STRING]], refresh: true},\n      'Remove App': {methodName: 'removeApp', args: [['appId', STRING]]},\n      'Get App Strings': {methodName: 'getStrings', args: [['language', STRING], ['stringFile', STRING]], refresh: true},\n    },\n    'Clipboard': {\n      'Get Clipboard': {methodName: 'getClipboard'},\n      'Set Clipboard': {methodName: 'setClipboard', args: [\n        ['clipboardText', STRING], ['contentType', STRING], ['contentLabel', STRING]\n      ]},\n    },\n    'File': {\n      'Push File': {methodName: 'pushFile', args: [['pathToInstallTo', STRING], ['fileContentString', STRING]]},\n      'Pull File': {methodName: 'pullFile', args: [['pathToPullFrom', STRING]]},\n      'Pull Folder': {methodName: 'pullFolder', args: [['folderToPullFrom', STRING]]},\n    },\n    'Interaction': {\n      'Shake': {methodName: 'shake'},\n      'Lock': {methodName: 'lock', args: [['seconds', NUMBER]], refresh: true},\n      'Unlock': {methodName: 'unlock', refresh: true},\n      'Is Device Locked': {methodName: 'isLocked'},\n      'Rotate Device': {methodName: 'rotateDevice', args: [\n        ['x', NUMBER], ['y', NUMBER], ['radius', NUMBER], ['rotatation', NUMBER], ['touchCount', NUMBER], ['duration', NUMBER]\n      ], refresh: true},\n    },\n    'Keys': {\n      'Press Key': {methodName: 'pressKeyCode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\n      'Long Press Key': {methodName: 'longPressKeyCode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\n      'Hide Keyboard': {methodName: 'hideKeyboard', refresh: true},\n      'Is Keyboard Shown': {methodName: 'isKeyboardShown'},\n    },\n    'Network': {\n      'Toggle Airplane Mode': {methodName: 'toggleAirplaneMode'},\n      'Toggle Data': {methodName: 'toggleData'},\n      'Toggle WiFi': {methodName: 'toggleWiFi'},\n      'Toggle Location Services': {methodName: 'toggleLocationServices'},\n      'Send SMS': {methodName: 'sendSMS', args: [['phoneNumber', STRING], ['text', STRING]]},\n      'GSM Call': {methodName: 'gsmCall', args: [['phoneNumber', STRING], ['action', STRING]]},\n      'GSM Signal': {methodName: 'gsmSignal', args: [['signalStrengh', NUMBER]]},\n      'GSM Voice': {methodName: 'gsmVoice', args: [['state', STRING]]},\n    },\n    'Performance Data': {\n      'Get Data': {methodName: 'getPerformanceData', args: [['packageName', STRING], ['dataType', STRING], ['dataReadTimeout', NUMBER]]},\n      'Get Data Types': {methodName: 'getPerformanceDataTypes'},\n    },\n    'iOS Simulator': {\n      'Perform Touch Id': {methodName: 'touchId', args: [['shouldMatch', BOOLEAN]], refresh: true},\n      'Toggle Touch Id Enrollment': {methodName: 'toggleEnrollTouchId', args: [['shouldEnroll', BOOLEAN]]},\n    },\n    'System': {\n      'Open Notifications': {methodName: 'openNotifications', refresh: true},\n      'Get System Time': {methodName: 'getDeviceTime'},\n      'Fingerprint (Android)': {methodName: 'fingerPrint', args: [['fingerPrintId', NUMBER]], refresh: true}\n    },\n  },\n  'Session': {\n    'Session Capabilities': {\n      'Get Session Capabilities': {methodName: 'getSession'}\n    },\n    'Timeouts': {\n      'Set Timeouts': {methodName: 'setTimeouts', args: [\n        ['implicitTimeout', NUMBER], ['pageLoadTimeout', NUMBER], ['scriptTimeout', NUMBER]\n      ]},\n    },\n    'Orientation': {\n      'Get Orientation': {methodName: 'getOrientation'},\n      'Set Orientation': {methodName: 'setOrientation', args: [['orientation', STRING]], refresh: true},\n    },\n    'Geolocation': {\n      'Get Geolocation': {methodName: 'getGeoLocation'},\n      'Set Geolocation': {methodName: 'setGeoLocation', args: [['latitude', NUMBER], ['longitude', NUMBER], ['altitude', NUMBER]]},\n    },\n    'Logs': {\n      'Get Log Types': {methodName: 'getLogTypes'},\n      'Get Logs': {methodName: 'getLogs', args: [['logType', STRING]]},\n    },\n    'Settings': {\n      'Update Settings': {methodName: 'updateSettings', args: [['settingsJson', STRING]]},\n      'Get Device Settings': {methodName: 'getSettings'},\n    },\n  },\n  'Web': {\n    'Navigation': {\n      'Go to URL': {methodName: 'navigateTo', args: [['url', STRING]], refresh: true},\n      'Get URL': {methodName: 'getUrl'},\n      'Back': {methodName: 'back', refresh: true},\n      'Forward': {methodName: 'forward', refresh: true},\n      'Refresh': {methodName: 'refresh', refresh: true}\n    }\n  },\n  'Context': {\n    'Context': {\n      'Get Current Context': {methodName: 'getContext'},\n      'Get Context List': {methodName: 'getContexts'},\n      'Set Context': {methodName: 'switchContext', args: [['name', STRING]], refresh: true}\n    },\n    'Window (W3C)': {\n      'Get Window Handle': {methodName: 'getWindowHandle'},\n      'Close Window': {methodName: 'closeWindow', refresh: true},\n      'Switch To Window': {methodName: 'switchToWindow', args: [['handle', STRING]], refresh: true},\n      'Get Window Handles': {methodName: 'getWindowHandles'},\n      'New Window': {methodName: 'createWindow', args: [['type', STRING]], refresh: true}\n    }\n  }\n};\n\nexport const INTERACTION_MODE = {\n  SOURCE: 'source',\n  COMMANDS: 'commands',\n  GESTURES: 'gestures',\n  SESSION_INFO: 'sessionInfo',\n};\n","import { DEFAULT_TAP, DEFAULT_SWIPE, DEFAULT_ZOOM, SCREENSHOT_INTERACTION_MODE } from '../../components/Inspector/shared';\n\nexport default class Framework {\n\n  constructor (host, port, path, https, caps) {\n    this.host = host || 'localhost';\n    this.port = port || 4723;\n    this.path = path || '/wd/hub';\n    this.caps = caps || {};\n    this.https = !!https;\n    this.scheme = https ? 'https' : 'http';\n    this.actions = [];\n    this.localVarCount = 0;\n    this.localVarCache = {};\n    this.lastAssignedVar = null;\n  }\n\n  getTapCoordinatesFromPointerActions (pointerActions) {\n    const pointerMoveAction = pointerActions[DEFAULT_TAP.POINTER_NAME][0];\n    return {x: pointerMoveAction.x, y: pointerMoveAction.y};\n  }\n\n  getSwipeCoordinatesFromPointerActions (pointerActions) {\n    let pointerMoveActionStart;\n    let pointerMoveActionEnd;\n    if (SCREENSHOT_INTERACTION_MODE.SWIPE) {\n      pointerMoveActionStart  = pointerActions[DEFAULT_SWIPE.POINTER_NAME][0];\n      pointerMoveActionEnd  = pointerActions[DEFAULT_SWIPE.POINTER_NAME][2];\n    }\n    if (SCREENSHOT_INTERACTION_MODE.ZOOMIN) {\n      pointerMoveActionStart  = pointerActions[DEFAULT_ZOOM.POINTER_NAME1][0];\n      pointerMoveActionEnd  = pointerActions[DEFAULT_ZOOM.POINTER_NAME2][2];\n    }\n\n    return {\n      x1: pointerMoveActionStart.x,\n      y1: pointerMoveActionStart.y,\n      x2: pointerMoveActionEnd.x,\n      y2: pointerMoveActionEnd.y\n    };\n  }\n\n  get serverUrl () {\n    return `${this.scheme}://${this.host}:${this.port}${this.path === '/' ? '' : this.path}`;\n  }\n\n  get name () {\n    throw new Error('Must implement name getter');\n  }\n\n  get language () {\n    throw new Error('Must implement language getter');\n  }\n\n  addAction (action, params) {\n    this.actions.push({action, params});\n  }\n\n  wrapWithBoilerplate () {\n    throw new Error('Must implement wrapWithBoilerplate');\n  }\n\n  indent (str, spaces) {\n    let lines = str.split('\\n');\n    let spaceStr = '';\n    for (let i = 0; i < spaces; i++) {\n      spaceStr += ' ';\n    }\n    return lines\n      .filter((l) => !!l.trim())\n      .map((l) => `${spaceStr}${l}`)\n      .join('\\n');\n  }\n\n  getCodeString (includeBoilerplate = false) {\n    let str = '';\n    for (let {action, params} of this.actions) {\n      const genCodeFn = `codeFor_${action}`;\n      if (!this[genCodeFn]) {\n        throw new Error(`Need to implement '${genCodeFn}()': ${this[genCodeFn]}`);\n      }\n      let code = this[genCodeFn](...params);\n      if (code) {\n        str += `${code}\\n`;\n      }\n    }\n    if (includeBoilerplate) {\n      return this.wrapWithBoilerplate(str);\n    }\n    return str;\n  }\n\n  getNewLocalVar () {\n    this.localVarCount++;\n    return `el${this.localVarCount}`;\n  }\n\n  getVarForFind (strategy, locator) {\n    const key = `${strategy}-${locator}`;\n    let wasNew = false;\n    if (!this.localVarCache[key]) {\n      this.localVarCache[key] = this.getNewLocalVar();\n      wasNew = true;\n    }\n    this.lastAssignedVar = this.localVarCache[key];\n    return [this.localVarCache[key], wasNew];\n  }\n\n  getVarName (varName, varIndex) {\n    if (varIndex || varIndex === 0) {\n      return `${varName}[${varIndex}]`;\n    }\n    return varName;\n  }\n\n  codeFor_findAndAssign () {\n    throw new Error('Need to implement codeFor_findAndAssign');\n  }\n\n  codeFor_findElement (strategy, locator) {\n    let [localVar, wasNew] = this.getVarForFind(strategy, locator);\n    if (!wasNew) {\n      // if we've already found this element, don't print out\n      // finding it again\n      return '';\n    }\n\n    return this.codeFor_findAndAssign(strategy, locator, localVar);\n\n  }\n\n  codeFor_tap () {\n    throw new Error('Need to implement codeFor_tap');\n  }\n\n  codeFor_swipe () {\n    throw new Error('Need to implement codeFor_tap');\n  }\n}\n","import Framework from './framework';\n\nclass JsWdFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  wrapWithBoilerplate (code) {\n    let caps = JSON.stringify(this.caps);\n    return `// Requires the admc/wd client library\n// (npm install wd)\n// Then paste this into a .js file and run with Node 7.6+\n\nconst wd = require('wd');\nconst driver = wd.promiseChainRemote(\"${this.serverUrl}\");\nconst caps = ${caps};\n\nasync function main () {\n  await driver.init(caps);\n  await driver.setImplicitWaitTimeout(5000);\n${this.indent(code, 2)}\n  await driver.quit();\n}\n\nmain().catch(console.log);\n`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `/* TODO implement executeScript */`;\n  }\n\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'XPath',\n      'accessibility id': 'AccessibilityId',\n      'id': 'Id',\n      'name': 'Name',\n      'class name': 'ClassName',\n      '-android uiautomator': 'AndroidUIAutomator',\n      '-android datamatcher': 'AndroidDataMatcher',\n      '-android viewtag': 'unsupported',\n      '-ios predicate string': 'IosUIAutomation',\n      '-ios class chain': 'IosClassChain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `let ${localVar} = await driver.elementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = await driver.elementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.clear();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `await ${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `await driver.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `await (new wd.TouchAction(driver))\n  .tap({x: ${x}, y: ${y}})\n  .perform()\n    `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `await (new wd.TouchAction(driver))\n  .press({x: ${x1}, y: ${y1}})\n  .moveTo({x: ${x2}, y: ${y2}})\n  .release()\n  .perform()\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = await driver.getCurrentActivity()`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = await driver.getCurrentPackage()`;\n  }\n\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = await driver.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `await driver.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `await driver.background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `await driver.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `await driver.reset();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.removeApp('${app}');`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = await driver.getStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `let clipboardText = await driver.getClipboard();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `await driver.setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `await driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `await driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `await driver.pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let fileBase64 = await driver.pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let fileBase64 = await driver.pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `await driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `await driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `await driver.toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `await driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `await driver.sendSms('${phoneNumber}', '${text}');`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `await driver.gsmCall('${phoneNumber}', '${action}');`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `await driver.gsmSignal(${signalStrength});`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `await driver.gsmVoice('${state}');`;\n  }\n\n  codeFor_shake () {\n    return `await driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `await driver.lock(${seconds})`;\n  }\n\n  codeFor_unlock () {\n    return `await driver.unlock()`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = await driver.isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `driver.rotateDevice({x: ${x}, y: ${y}, duration: ${duration}, radius: ${radius}, rotation: ${rotation}, touchCount: ${touchCount}});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = await driver.getPerformanceData('${packageName}', '${dataType}', ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `let supportedPerformanceDataTypes = await driver.getPerformanceDataTypes();`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `await driver.touchId(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `await driver.toggleEnrollTouchId(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `await driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = await driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `await driver.fingerprint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `let caps = await driver.getSession();`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = await driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `await driver.setOrientation('${orientation}');`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = await driver.getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `await driver.setGeoLocation(${latitude}, ${longitude}, ${altitude});`;\n  }\n\n  codeFor_getLogTypes () {\n    return `let getLogTypes = await driver.getLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = await driver.log('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `await driver.updateSettings(${settingsJson});`;\n  }\n\n  codeFor_getSettings () {\n    return `let settings = await driver.settings();`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (url) {\n    return `driver.get('${url}');`;\n  }\n\n  codeFor_getUrl () {\n    return `let current_url = driver.url();`;\n  }\n\n  codeFor_forward () {\n    return `driver.forward();`;\n  }\n\n  codeFor_refresh () {\n    return `driver.refresh();`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.currentContext();`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.contexts();`;\n  }\n\n  codeFor_switchContext (name) {\n    return `driver.context('${name}');`;\n  }\n}\n\nJsWdFramework.readableName = 'JS - WD (Promise)';\n\nexport default JsWdFramework;\n","import Framework from './framework';\n\nclass JsWdIoFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  chainifyCode (code) {\n    return code\n      .replace(/let .+ = /g, '')\n      .replace(/(\\n|^)(driver|el[0-9]+)\\./g, '\\n.')\n      .replace(/;\\n/g, '\\n');\n  }\n\n  wrapWithBoilerplate (code) {\n    let host = JSON.stringify(this.host);\n    let caps = JSON.stringify(this.caps);\n    let proto = JSON.stringify(this.scheme);\n    let path = JSON.stringify(this.path);\n    return `// Requires the webdriverio client library\n// (npm install webdriverio)\n// Then paste this into a .js file and run with Node:\n// node <file>.js\n\nconst wdio = require('webdriverio');\nasync function main () {\n  const caps = ${caps}\n  const driver = await wdio.remote({\n    protocol: ${proto},\n    hostname: ${host},\n    port: ${this.port},\n    path: ${path},\n    capabilities: caps\n  });\n${this.indent(code, 2)}\n  await driver.deleteSession();\n}\n\nmain().catch(console.log);`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `/* TODO implement executeScript */`;\n  }\n\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    // wdio has its own way of indicating the strategy in the locator string\n    switch (strategy) {\n      case 'xpath': break; // xpath does not need to be updated\n      case 'accessibility id': locator = `~${locator}`; break;\n      case 'id': locator = `${locator}`; break;\n      case 'name': locator = `name=${locator}`; break;\n      case 'class name': locator = `${locator}`; break;\n      case '-android uiautomator': locator = `android=${locator}`; break;\n      case '-android datamatcher': locator = `android=${locator}`; break;\n      case '-android viewtag': locator = `android=unsupported`; break;\n      case '-ios predicate string': locator = `ios=${locator}`; break;\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\n      default: throw new Error(`Can't handle strategy ${strategy}`);\n    }\n    if (isArray) {\n      return `let ${localVar} = await driver.$$(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = await driver.$(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.clearValue();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `await ${this.getVarName(varName, varIndex)}.setValue(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `await driver.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `await driver.touchAction({actions: 'tap', x: ${x}, y: ${y}})`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `await driver.touchAction([\n  {action: 'press', x: ${x1}, y: ${y1}},\n  {action: 'moveTo', x: ${x2}, y: ${y2}},\n  'release'\n]);`;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = await driver.getCurrentActivity();`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = await driver.getCurrentPackage();`;\n  }\n\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = await driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `await driver.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `await driver.background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `await driver.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `await driver.reset();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.removeApp('${app}')`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = await driver.getStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard (varNameIgnore, varIndexIgnore, contentType) {\n    return `let clipboardText = await driver.getClipboard(${contentType ? `${contentType}, ` : ''});`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `await driver.setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `await driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `let isKeyboardShown = await driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `await driver.pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let data = await driver.pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let data = await driver.pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `await driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `await driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `await driver.toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `await driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `await driver.sendSms(\"${phoneNumber}\", \"${text}\");`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `await driver.gsmCall(\"${phoneNumber}\", \"${action}\");`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `await driver.gsmSignal(\"${signalStrength}\");`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `await driver.gsmVoice(\"${state}\");`;\n  }\n\n  codeFor_shake () {\n    return `await driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `await driver.lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `await driver.unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = await driver.isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `await driver.rotateDevice(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = driver.getPerformanceData(\"${packageName}\", \"${dataType}\", ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `let performanceDataTypes = await driver.getPerformanceDataTypes()`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `await driver.touchId(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `await driver.toggleEnrollTouchId(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `await driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = await driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `await driver.fingerprint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `let caps = await driver.getSession();`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_setCommandTimeout (/*varNameIgnore, varIndexIgnore, ms*/) {\n    return `// Not supported: setCommandTimeout`;\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = await driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `await driver.setOrientation(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = await driver.getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `await driver.setGeoLocation({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\n  }\n\n  codeFor_getLogTypes () {\n    return `let getLogTypes = await driver.getLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = await driver.getLogs('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `await driver.updateSettings(${settingsJson});`;\n  }\n\n  codeFor_getSettings () {\n    return `let settings = await driver.getSettings();`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `await driver.navigateTo('${url}');`;\n  }\n\n  codeFor_getUrl () {\n    return `let current_url = await driver.getUrl();`;\n  }\n\n  codeFor_forward () {\n    return `await driver.forward();`;\n  }\n\n  codeFor_refresh () {\n    return `await driver.refresh();`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `let context = await driver.getContext();`;\n  }\n\n  codeFor_getContexts () {\n    return `let contexts = await driver.getContexts();`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `await driver.switchContext('${name}');`;\n  }\n}\n\nJsWdIoFramework.readableName = 'JS - Webdriver.io';\n\nexport default JsWdIoFramework;\n","import Framework from './framework';\n\nclass JsOxygenFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  get type () {\n    if (this.caps && this.caps.platformName) {\n      const platformName = this.caps.platformName.toLowerCase();\n      if (platformName === 'windows') {\n        return 'win';\n      }\n      if (['android', 'androiddriver'].includes(platformName)) {\n        return 'mob';\n      }\n      if (['ios', 'iosdriver'].includes(platformName)) {\n        return 'mob';\n      }\n    }\n    return 'mob';\n  }\n\n  wrapWithBoilerplate (code) {\n    if (code && code.includes('mob.open')) {\n      this.caps.browserName = '__chrome_or_safari__';\n    } else {\n      this.caps.app = '__application_path_or_name__';\n    }\n    let caps = JSON.stringify(this.caps, null, 2);\n    let url = JSON.stringify(`${this.scheme}://${this.host}:${this.port}${this.path}`);\n    return `// Requires the Oxygen HQ client library\n// (npm install oxygen-cli -g)\n// Then paste this into a .js file and run with:\n// oxygen <file>.js\nconst capabilities = ${caps};\nconst appiumUrl = ${url};\n${this.type}.init(capabilities, appiumUrl);\n\n${code}\n\n`;\n  }\n\n  codeFor_executeScript (varNameIgnore, varIndexIgnore, args) {\n    return `${this.type}.execute(${args})`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    // wdio has its own way of indicating the strategy in the locator string\n    switch (strategy) {\n      case 'xpath': break; // xpath does not need to be updated\n      case 'accessibility id': locator = `~${locator}`; break;\n      case 'id': locator = `id=${locator}`; break;\n      case 'name': locator = `name=${locator}`; break;\n      case 'class name': locator = `css=${locator}`; break;\n      case '-android uiautomator': locator = `android=${locator}`; break;\n      case '-android datamatcher': locator = `android=${locator}`; break;\n      case '-ios predicate string': locator = `ios=${locator}`; break;\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\n      default: throw new Error(`Can't handle strategy ${strategy}`);\n    }\n    if (isArray) {\n      return `let ${localVar} = mob.findElements(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = mob.findElement(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.type}.click(${this.getVarName(varName, varIndex)});`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.type}.clear(${this.getVarName(varName, varIndex)});`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.type}.type(${this.getVarName(varName, varIndex)}, ${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `${this.type}.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `${this.type}.tap(${x}, ${y});`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `${this.type}.swipeScreen(${x1}, ${y1}, ${x2}, ${y2});`;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = ${this.type}.getCurrentActivity();`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = ${this.type}.getCurrentPackage();`;\n  }\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `${this.type}.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = ${this.type}.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `${this.type}.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `${this.type}.getDriver().background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `${this.type}.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `${this.type}.resetApp();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `${this.type}.removeApp('${app}')`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = ${this.type}.getDriver().getStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `let clipboardText = ${this.type}.getDriver().getClipboard();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `${this.type}.getDriver().setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode) {\n    return `${this.type}.pressKeyCode(${keyCode});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode) {\n    return `${this.type}.longPressKeyCode(${keyCode});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `${this.type}.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `let isKeyboardShown = ${this.type}.getDriver().isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `${this.type}.getDriver().pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let fileBase64 = ${this.type}.getDriver().pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let fileBase64 = ${this.type}.getDriver().pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `${this.type}.getDriver().toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `${this.type}.getDriver().toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `${this.type}.getDriver().toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `${this.type}.getDriver().toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `${this.type}.getDriver().sendSms('${phoneNumber}', '${text}');`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `${this.type}.getDriver().gsmCall('${phoneNumber}', '${action}');`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `${this.type}.getDriver().gsmSignal(${signalStrength});`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `${this.type}.getDriver().gsmVoice('${state}');`;\n  }\n\n  codeFor_shake () {\n    return `${this.type}.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `${this.type}.getDriver().lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `${this.type}.getDriver().unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = ${this.type}.getDriver().isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `${this.type}.getDriver().rotateDevice({x: ${x}, y: ${y}, duration: ${duration}, radius: ${radius}, rotation: ${rotation}, touchCount: ${touchCount}});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = ${this.type}.getDriver().getPerformanceData('${packageName}', '${dataType}', ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `let supportedPerformanceDataTypes = ${this.type}.getDriver().getPerformanceDataTypes();`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `${this.type}.getDriver().touchId(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `${this.type}.getDriver().toggleEnrollTouchId(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `${this.type}.getDriver().openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = ${this.type}.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `${this.type}.getDriver().fingerPrint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `let caps = ${this.type}.getDriver().capabilities;`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_setCommandTimeout () {\n    return `// Not supported: setCommandTimeout`;\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = ${this.type}.getDriver().getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `${this.type}.getDriver().setOrientation(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = ${this.type}.getDriver().getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `${this.type}.getDriver().setGeoLocation({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\n  }\n\n  codeFor_getLogTypes () {\n    return `let getLogTypes = ${this.type}.getDriver().getLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = ${this.type}.getDriver().getLogs('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `${this.type}.getDriver().updateSettings(${settingsJson});`;\n  }\n\n  codeFor_getSettings () {\n    return `let settings = ${this.type}.getDriver().getSettings();`;\n  }\n}\n\nJsOxygenFramework.readableName = 'JS - Oxygen HQ';\n\nexport default JsOxygenFramework;\n","import Framework from './framework';\nimport _ from 'lodash';\n\nclass JavaFramework extends Framework {\n\n  get language () {\n    return 'java';\n  }\n\n  wrapWithBoilerplate (code) {\n    let [pkg, cls] = (() => {\n      if (this.caps.platformName) {\n        switch (this.caps.platformName.toLowerCase()) {\n          case 'ios': return ['ios', 'IOSDriver'];\n          case 'android': return ['android', 'AndroidDriver'];\n          default: return ['unknownPlatform', 'UnknownDriver'];\n        }\n      } else {\n        return ['unknownPlatform', 'UnknownDriver'];\n      }\n    })();\n    let capStr = this.indent(Object.keys(this.caps).map((k) => `desiredCapabilities.setCapability(${JSON.stringify(k)}, ${JSON.stringify(this.caps[k])});`).join('\\n'), 4);\n    return `import io.appium.java_client.MobileElement;\nimport io.appium.java_client.${pkg}.${cls};\nimport junit.framework.TestCase;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport org.openqa.selenium.remote.DesiredCapabilities;\n\npublic class SampleTest {\n\n  private ${cls} driver;\n\n  @Before\n  public void setUp() throws MalformedURLException {\n    DesiredCapabilities desiredCapabilities = new DesiredCapabilities();\n${capStr}\n\n    URL remoteUrl = new URL(\"${this.serverUrl}\");\n\n    driver = new ${cls}(remoteUrl, desiredCapabilities);\n  }\n\n  @Test\n  public void sampleTest() {\n${this.indent(code, 4)}\n  }\n\n  @After\n  public void tearDown() {\n    driver.quit();\n  }\n}\n`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `/* TODO implement executeScript */`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'XPath',\n      'accessibility id': 'AccessibilityId',\n      'id': 'Id',\n      'class name': 'ClassName',\n      'name': 'Name',\n      '-android uiautomator': 'AndroidUIAutomator',\n      '-android datamatcher': 'AndroidDataMatcher',\n      '-android viewtag': 'AndroidViewTag',\n      '-ios predicate string': 'IosNsPredicate',\n      '-ios class chain': 'IosClassChain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `List<MobileElement> ${localVar} = (MobileElement) driver.findElementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    } else {\n      return `MobileElement ${localVar} = (MobileElement) driver.findElementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    }\n  }\n\n  getVarName (varName, varIndex) {\n    if (varIndex || varIndex === 0) {\n      return `${varName}.get(${varIndex})`;\n    }\n    return varName;\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `driver.navigate().back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `(new TouchAction(driver)).tap(${x}, ${y}).perform()`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `(new TouchAction(driver))\n  .press(PointOption.point(${x1}, ${y1}}))\n  .moveTo(PointOption.point(${x2}, ${y2}}))\n  .release()\n  .perform();\n  `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `String activityName = driver.currentActivity()`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `String packageName = driver.currentPackage()`;\n  }\n\n  codeFor_startActivity () {\n    return `driver.`;\n  }\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.installApp(\"${app}\");`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `boolean isAppInstalled = driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.runAppInBackground(Duration.ofSeconds(${timeout}));`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `driver.reset();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.removeApp(\"${app}\");`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `Map<String, String> appStrings = driver.getAppStringMap(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `String clipboardText = driver.getClipboardText();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.setClipboardText(\"${clipboardText}\");`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.pressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `boolean isKeyboardShown = driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.pushFile(\"${pathToInstallTo}\", ${fileContentString})`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `byte[] fileBase64 = driver.pullFile(\"${pathToPullFrom}\");`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `byte[] fileBase64 = driver.pullFolder(\"${folderToPullFrom}\");`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggleWifi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `driver.sendSMS(\"${phoneNumber}\", \"${text}\");`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.makeGsmCall(\"${phoneNumber}\", \"${action}\");`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.setGsmSignalStrength(\"${signalStrength}\");`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.setGsmVoice(\"${state}\");`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lockDevice(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlockDevice()`;\n  }\n\n  codeFor_isLocked () {\n    return `boolean isLocked = driver.isDeviceLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `driver.rotate(new DeviceRotation(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration}));`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `List<List<Object>> performanceData = driver.getPerformanceData(\"${packageName}\", \"${dataType}\", ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `List<String> performanceTypes = driver.getPerformanceDataTypes();`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.performTouchID(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggleTouchIDEnrollment(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `String time = driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.fingerPrint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `Map<String, Object> caps = driver.getSessionDetails();`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_getOrientation () {\n    return `ScreenOrientation orientation = driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.rotate(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `Location location = driver.location();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.setLocation(new Location(${latitude}, ${longitude}, ${altitude}));`;\n  }\n\n  codeFor_getLogTypes () {\n    return `Set<String> getLogTypes = driver.manage().logs().getAvailableLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `LogEntries logEntries = driver.manage().logs().get(\"${logType}\");`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    try {\n      let settings = '';\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\n        settings += `driver.setSetting(\"${settingName}\", \"${settingValue}\");\\n`;\n      }\n      return settings;\n    } catch (e) {\n      return `// Could not parse: ${settingsJson}`;\n    }\n  }\n\n  codeFor_getSettings () {\n    return `Map<String, Object> settings = driver.getSettings();`;\n  }\n\n  /*\n\n  codeFor_ REPLACE_ME (varNameIgnore, varIndexIgnore) {\n    return `REPLACE_ME`;\n  }\n\n  */\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `driver.get(\"${url}\");`;\n  }\n\n  codeFor_getUrl () {\n    return `String current_url = driver.getCurrentUrl();`;\n  }\n\n  codeFor_forward () {\n    return `driver.navigate().forward();`;\n  }\n\n  codeFor_refresh () {\n    return `driver.navigate().refresh();`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.getContext()`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.getContextHandles();`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `driver.context(\"${name}\");`;\n  }\n}\n\nJavaFramework.readableName = 'Java - JUnit';\n\nexport default JavaFramework;\n","import Framework from './framework';\n\nclass PythonFramework extends Framework {\n\n  get language () {\n    return 'python';\n  }\n\n  getPythonVal (jsonVal) {\n    if (typeof jsonVal === 'boolean') {\n      return jsonVal ? 'True' : 'False';\n    }\n    return JSON.stringify(jsonVal);\n  }\n\n  wrapWithBoilerplate (code) {\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${this.getPythonVal(this.caps[k])}`).join('\\n');\n    return `# This sample code uses the Appium python client v2\n# pip install Appium-Python-Client\n# Then you can paste this into a file and simply run with Python\n\nfrom appium import webdriver\nfrom appium.webdriver.common.appiumby import AppiumBy\n\n# For W3C actions\nfrom selenium.webdriver.common.action_chains import ActionChains\nfrom selenium.webdriver.common.actions import interaction\nfrom selenium.webdriver.common.actions.action_builder import ActionBuilder\nfrom selenium.webdriver.common.actions.pointer_input import PointerInput\n\ncaps = {}\n${capStr}\n\ndriver = webdriver.Remote(\"${this.serverUrl}\", caps)\n\n${code}\ndriver.quit()`;\n  }\n\n  codeFor_executeScript (varNameIgnore, varIndexIgnore, args) {\n    return `driver.execute_script('${args}')`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'AppiumBy.XPATH',\n      'accessibility id': 'AppiumBy.ACCESSIBILITY_ID',\n      'id': 'AppiumBy.ID',\n      'name': 'AppiumBy.NAME',\n      'class name': 'AppiumBy.CLASS_NAME',\n      '-android uiautomator': 'AppiumBy.ANDROID_UIAUTOMATOR',\n      '-android datamatcher': 'AppiumBy.ANDROID_DATA_MATCHER',\n      '-android viewtag': 'AppiumBy.ANDROID_VIEWTAG',\n      '-ios predicate string': 'AppiumBy.IOS_PREDICATE',\n      '-ios class chain': 'AppiumBy.IOS_CLASS_CHAIN',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `${localVar} = driver.find_elements(by=${suffixMap[strategy]}, value=${JSON.stringify(locator)})`;\n    } else {\n      return `${localVar} = driver.find_element(by=${suffixMap[strategy]}, value=${JSON.stringify(locator)})`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click()`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear()`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.send_keys(${JSON.stringify(text)})`;\n  }\n\n  codeFor_back () {\n    return `driver.back()`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `actions = ActionChains(driver)\nactions.w3c_actions = ActionBuilder(driver, mouse=PointerInput(interaction.POINTER_TOUCH, \"touch\"))\nactions.w3c_actions.pointer_action.move_to_location(${x}, ${y})\nactions.w3c_actions.pointer_action.pointer_down()\nactions.w3c_actions.pointer_action.pause(0.1)\nactions.w3c_actions.pointer_action.release()\nactions.perform()\n    `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `actions = ActionChains(driver)\nactions.w3c_actions = ActionBuilder(driver, mouse=PointerInput(interaction.POINTER_TOUCH, \"touch\"))\nactions.w3c_actions.pointer_action.move_to_location(${x1}, ${y1})\nactions.w3c_actions.pointer_action.pointer_down()\nactions.w3c_actions.pointer_action.move_to_location(${x2}, ${y2})\nactions.w3c_actions.pointer_action.release()\nactions.perform()\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `activity_name = driver.current_activity`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `package_name = driver.current_package`;\n  }\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.install_app('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `is_app_installed = driver.is_app_installed('${app}');`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launch_app()`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.background_app(${timeout})`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.close_app()`;\n  }\n\n  codeFor_reset () {\n    return `driver.reset()`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.remove_app('${app}');`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `appStrings = driver.app_strings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''})`;\n  }\n\n  codeFor_getClipboard () {\n    return `clipboard_text = driver.get_clipboard_text()`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.set_clipboard_text('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.press_keycode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.long_press_keycode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `driver.hide_keyboard()`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `driver.is_keyboard_shown()`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.push_file('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `file_base64 = self.driver.pull_file('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `file_base64 = self.driver.pull_folder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `# Not supported: toggleAirplaneMode`;\n  }\n\n  codeFor_toggleData () {\n    return `# Not supported: toggleData`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggle_wifi()`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggle_location_services();`;\n  }\n\n  codeFor_sendSMS () {\n    return `# Not supported: sendSMS`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.make_gsm_call(${phoneNumber}, ${action})`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.set_gsm_signal(${signalStrength})`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.set_gsm_voice(${state})`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `driver.is_locked()`;\n  }\n\n  codeFor_rotateDevice () {\n    return `# Not supported: rotate device`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `driver.get_performance_data('${packageName}', '${dataType}', ${dataReadTimeout})`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `driver.get_performance_data_types()`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.touch_id(${match})`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggle_touch_id_enrollment(${enroll})`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.open_notifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `time = self.driver.device_time()`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.finger_print(${fingerprintId})`;\n  }\n\n  codeFor_getSession () {\n    return `desired_caps = self.driver.desired_capabilities()`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '# TODO implement setTimeouts';\n  }\n\n  codeFor_getOrientation () {\n    return `orientation = self.driver.orientation()`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.orientation = \"${orientation}\"`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `location = self.driver.location()`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.set_location(${latitude}, ${longitude}, ${altitude})`;\n  }\n\n  codeFor_getLogTypes () {\n    return `log_types = driver.log_types();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `logs = driver.get_log('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `driver.update_settings(${settingsJson}))`;\n  }\n\n  codeFor_getSettings () {\n    return `settings = driver.get_settings`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `driver.get('${url}')`;\n  }\n\n  codeFor_getUrl () {\n    return `current_url = driver.current_url`;\n  }\n\n  codeFor_forward () {\n    return `driver.forward()`;\n  }\n\n  codeFor_refresh () {\n    return `driver.refresh()`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.current_context`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.contexts()`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `driver.switch_to.context('${name}')`;\n  }\n}\n\nPythonFramework.readableName = 'Python';\n\nexport default PythonFramework;\n","import Framework from './framework';\nimport _ from 'lodash';\n\nclass RubyFramework extends Framework {\n\n  get language () {\n    return 'ruby';\n  }\n\n  wrapWithBoilerplate (code) {\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${JSON.stringify(this.caps[k])}`).join('\\n');\n    return `# This sample code uses the Appium ruby lib core client v5\n# gem install appium_lib_core\n# Then you can paste this into a file and simply run with Ruby\n\nrequire 'appium_lib_core'\n\ncaps = {}\n${capStr}\nopts = {\n    server_url: \"${this.serverUrl}\"\n}\ndriver = Appium::Core.for({caps: caps, appium_lib: opts}).start_driver\n\n${code}\ndriver.quit`;\n  }\n\n  codeFor_executeScript (varNameIgnore, varIndexIgnore, args) {\n    return `driver.execute_script '${args}'`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      'xpath': ':xpath',\n      'accessibility id': ':accessibility_id',\n      'id': ':id',\n      'name': ':name',\n      'class name': ':class_name',\n      '-android uiautomator': ':uiautomation',\n      '-android datamatcher': ':datamatcher',\n      '-android viewtag': ':viewtag',\n      '-ios predicate string': ':predicate',\n      '-ios class chain': ':class_chain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `${localVar} = driver.find_elements ${suffixMap[strategy]}, ${JSON.stringify(locator)}`;\n    } else {\n      return `${localVar} = driver.find_element ${suffixMap[strategy]}, ${JSON.stringify(locator)}`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.send_keys ${JSON.stringify(text)}`;\n  }\n\n  codeFor_back () {\n    return `driver.back`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `driver\n  .action\n  .move_to_location(${x}, ${y})\n  .pointer_down(:left)\n  .release\n  .perform\n  `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `driver\n  .action\n  .move_to_location(${x1}, ${y1})\n  .pointer_down(:left)\n  .move_to_location(${x2}, ${y2})\n  .release\n  .perform\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `current_activity = driver.current_activity`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `current_package = driver.current_package`;\n  }\n\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.app_installed? '${app}'`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `is_app_installed = driver.app_installed? '${app}'`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launch_app`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.background_app ${timeout}`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.close_app`;\n  }\n\n  codeFor_reset () {\n    return `driver.reset`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.remove_app '${app}'`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `driver.app_strings ${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''}`;\n  }\n\n  codeFor_getClipboard () {\n    return `clipboard_text = driver.get_clipboard`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.set_clipboard content: '${clipboardText}'`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.press_keycode ${keyCode}, ${metaState}, ${flags}`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.long_press_keycode ${keyCode}, ${metaState}, ${flags}`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `driver.hide_keyboard`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `is_keyboard_shown = driver.is_keyboard_shown`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.push_file '${pathToInstallTo}', '${fileContentString}'`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `driver.pull_file '${pathToPullFrom}'`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `driver.pull_folder '${folderToPullFrom}'`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `driver.toggle_flight_mode`;\n  }\n\n  codeFor_toggleData () {\n    return `driver.toggle_data`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggle_wifi`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggle_location_services`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `driver.send_sms phone_number: '${phoneNumber}', message: '${text}'`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.gsm_call phone_number: '${phoneNumber}', action: :${action}`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.gsm_signal :${signalStrength}`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.gsm_voice :${state}`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lock ${seconds}`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlock`;\n  }\n\n  codeFor_isLocked () {\n    return `is_device_locked = driver.device_locked?`;\n  }\n\n  codeFor_rotateDevice () {\n    return `# Not supported: rotateDevice`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `performance_data = driver.get_performance_data package_name: '${packageName}', data_type: '${dataType}', data_read_timeout: ${dataReadTimeout}`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `performance_data = driver.get_performance_data_types`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.touch_id ${match}`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggle_touch_id_enrollment ${enroll}`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.open_notifications`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `device_time = driver.device_time`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.finger_print ${fingerprintId}`;\n  }\n\n  codeFor_getSession () {\n    return `session_capabilities = driver.session_capabilities`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '# TODO implement setTimeouts';\n  }\n\n  codeFor_getOrientation () {\n    return `orientation = driver.orientation`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.rotation = :${_.lowerCase(orientation)}`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `geo_location = driver.location`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.set_location ${latitude}, ${longitude}, ${altitude}`;\n  }\n\n  codeFor_getLogTypes () {\n    return `log_types = driver.logs.available_types`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `driver.logs.get '${logType}'`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    try {\n      let settings = '';\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\n        settings += `driver.settings.update ${settingName}: '${settingValue}'\\n`;\n      }\n      return settings;\n    } catch (e) {\n      return `// Could not parse: ${settingsJson}`;\n    }\n  }\n\n  codeFor_getSettings () {\n    return `settings = driver.settings.get`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `driver.get '${url}'`;\n  }\n\n  codeFor_getUrl () {\n    return `current_url = driver.current_url`;\n  }\n\n  codeFor_forward () {\n    return `driver.navigate().forward`;\n  }\n\n  codeFor_refresh () {\n    return `driver.navigate().refresh`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.current_context`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.available_contexts`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `driver.context = '${name}'`;\n  }\n}\n\nRubyFramework.readableName = 'Ruby';\n\nexport default RubyFramework;\n","/* eslint no-useless-escape: 0 */\n\nimport Framework from './framework';\n\nclass RobotFramework extends Framework {\n\n  get language () {\n    //TODO: Make https://highlightjs.org/ use robot syntax\n    return 'python';\n  }\n\n  get getCapsVariables () {\n    return Object.keys(this.caps).map((k) => `\\$\\{${k}\\}    ${this.getPythonVal(this.caps[k])}`).join('\\n');\n  }\n\n  getPythonVal (jsonVal) {\n    if (typeof jsonVal === 'boolean') {\n      return jsonVal ? 'true' : 'false';\n    }\n    return jsonVal;\n  }\n\n  wrapWithBoilerplate (code) {\n    return `# This sample code uses the Appium robot client\n# pip install robotframework-appiumlibrary\n# Then you can paste this into a file and simply run with robot\n#\n#  more keywords on: http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html\n#\n# if your tests fails saying 'did not match any elements' consider use 'wait activity' or \n# 'wait until page contains element' before a click command \n\n*** Settings ***\nLibrary           AppiumLibrary\nTest Teardown     Quit Application\nSuite Teardown    Close Application\n\n*** Variables ***\n$\\{REMOTE_URL\\}   ${this.serverUrl}\n${this.getCapsVariables}\n\n*** Test Cases ***\nTest case name\n${this.indent(this.getApplicationInitialization(), 4)}\n${this.indent(code, 4)}\n`;\n  }\n\n  codeFor_findAndAssign (strategy, locator/*, localVar, isArray*/) {\n    let suffixMap = {\n      xpath: 'xpath',\n      'accessibility id': 'accessibility_id',\n      'id': 'id',\n      'name': 'name', // TODO: How does Python use name selector\n      'class name': 'class_name',\n      '-android uiautomator': 'unsupported',\n      '-android datamatcher': 'unsupported',\n      '-android viewtag': 'unsupported',\n      '-ios predicate string': 'ios_predicate',\n      '-ios class chain': 'ios_uiautomation', // TODO: Could not find iOS UIAutomation\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    //TODO: in the robot case, we need the ID on the codeFor_ for execution\n    this.lastID = `${strategy}=${locator}`;\n\n    if (this.lastID.includes('accessibility id')) {\n      this.lastID = this.lastID.replace('accessibility id', 'accessibility_id');\n    }\n\n    return `# ${this.lastID}`;\n  }\n\n  getApplicationInitialization () {\n    let varString = Object.keys(this.caps).map((k) => `${k}=\\$\\{${k}\\}`).join('  ');\n    return `    Open Application    \\$\\{REMOTE_URL\\}   ${varString}`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `    Execute Script    TODO implement executeScript`;\n  }\n\n\n  codeFor_click (/*varName, varIndex*/) {\n    return `    Click Element    ${this.lastID}`;\n  }\n\n  codeFor_clear (/*varName, varIndex*/) {\n    return `    Clear Text    ${this.lastID}`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `    Input Text    ${this.lastID}    ${text}`;\n  }\n\n  codeFor_back () {\n    return `    Go Back`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `    Tap With Positions    100    \\$\\{${x}, ${y}\\}`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `    Swipe    ${x1}    ${y1}    ${x2}    ${y2}`;\n  }\n\n  // TODO: Add these robot framework commands\n  codeFor_getCurrentActivity () {\n    return '';\n  }\n\n  codeFor_getCurrentPackage () {\n    return '';\n  }\n\n  codeFor_installApp () {\n    return ``;\n  }\n\n  codeFor_isAppInstalled () {\n    return ``;\n  }\n\n  codeFor_launchApp () {\n    return ``;\n  }\n\n  codeFor_background () {\n    return ``;\n  }\n\n  codeFor_closeApp () {\n    return ``;\n  }\n\n  codeFor_reset () {\n    return ``;\n  }\n\n  codeFor_removeApp () {\n    return ``;\n  }\n\n  codeFor_getStrings () {\n    return ``;\n  }\n\n  codeFor_getClipboard () {\n    return ``;\n  }\n\n  codeFor_setClipboard () {\n    return ``;\n  }\n\n  codeFor_pressKeyCode () {\n    return ``;\n  }\n\n  codeFor_longPressKeyCode () {\n    return ``;\n  }\n\n  codeFor_hideKeyboard () {\n    return ``;\n  }\n\n  codeFor_isKeyboardShown () {\n    return ``;\n  }\n\n  codeFor_pushFile () {\n    return ``;\n  }\n\n  codeFor_pullFile () {\n    return ``;\n  }\n\n  codeFor_pullFolder () {\n    return ``;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return ``;\n  }\n\n  codeFor_toggleData () {\n    return ``;\n  }\n\n  codeFor_toggleWiFi () {\n    return ``;\n  }\n\n  codeFor_toggleLocationServices () {\n    return ``;\n  }\n\n  codeFor_sendSMS () {\n    return ``;\n  }\n\n  codeFor_gsmCall () {\n    return ``;\n  }\n\n  codeFor_gsmSignal () {\n    return ``;\n  }\n\n  codeFor_gsmVoice () {\n    return ``;\n  }\n\n  codeFor_shake () {\n    return ``;\n  }\n\n  codeFor_lock () {\n    return ``;\n  }\n\n  codeFor_unlock () {\n    return ``;\n  }\n\n  codeFor_isLocked () {\n    return ``;\n  }\n\n  codeFor_rotateDevice () {\n    return ``;\n  }\n\n  codeFor_getPerformanceData () {\n    return ``;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return ``;\n  }\n\n  codeFor_touchId () {\n    return ``;\n  }\n\n  codeFor_toggleEnrollTouchId () {\n    return ``;\n  }\n\n  codeFor_openNotifications () {\n    return ``;\n  }\n\n  codeFor_getDeviceTime () {\n    return ``;\n  }\n\n  codeFor_fingerprint () {\n    return ``;\n  }\n\n  codeFor_getSession () {\n    return ``;\n  }\n\n  codeFor_setTimeouts () {\n    return ``;\n  }\n\n  codeFor_getOrientation () {\n    return ``;\n  }\n\n  codeFor_setOrientation () {\n    return ``;\n  }\n\n  codeFor_getGeoLocation () {\n    return ``;\n  }\n\n  codeFor_setGeoLocation () {\n    return ``;\n  }\n\n  codeFor_getLogTypes () {\n    return ``;\n  }\n\n  codeFor_getLogs () {\n    return ``;\n  }\n\n  codeFor_updateSettings () {\n    return ``;\n  }\n\n  codeFor_getSettings () {\n    return ``;\n  }\n\n  // Web\n\n  codeFor_navigateTo () {\n    return ``;\n  }\n\n  codeFor_getUrl () {\n    return ``;\n  }\n\n  codeFor_forward () {\n    return ``;\n  }\n\n  codeFor_refresh () {\n    return ``;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return ``;\n  }\n\n  codeFor_getContexts () {\n    return ``;\n  }\n\n  codeFor_switchContext () {\n    return ``;\n  }\n}\n\nRobotFramework.readableName = 'Robot Framework';\n\nexport default RobotFramework;\n","import JsWdFramework from './js-wd';\nimport JsWdIoFramework from './js-wdio';\nimport JsOxygenFramework from './js-oxygen';\nimport JavaFramework from './java';\nimport PythonFramework from './python';\nimport RubyFramework from './ruby';\nimport RobotFramework from './robot';\n\nconst frameworks = {\n  jsWd: JsWdFramework,\n  jsWdIo: JsWdIoFramework,\n  jsOxygen: JsOxygenFramework,\n  java: JavaFramework,\n  python: PythonFramework,\n  ruby: RubyFramework,\n  robot: RobotFramework,\n};\n\nexport default frameworks;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport { getI18NextOptions } from './app.config';\nimport { i18NextBackend, i18NextBackendOptions } from '../renderer/polyfills';\n\nconst i18nextOptions = getI18NextOptions(i18NextBackendOptions);\n\nif (!i18n.isInitialized) {\n  i18n\n    .use(initReactI18next)\n    .use(i18NextBackend)\n    .init(i18nextOptions);\n}\n\nexport default i18n;\n","import {load} from 'cheerio';\nimport {parseDocument} from 'htmlparser2';\n\n/**\n * JS code that is executed in the webview to determine the status+address bar height\n *\n * NOTE:\n * object destructuring the arguments resulted in this error with iOS (not with Android)\n *\n * `Duplicate parameter 'e' not allowed in function with destructuring parameters.`\n *\n * That's why the object destructuring is done in the method itself\n */\nexport function getWebviewStatusAddressBarHeight (obj) {\n  // Calculate the status + address bar height\n  // Address bar height for iOS 11+ is 50, for lower it is 44,\n  // but we take 50 as a default here\n  // For Chrome it is 56 for Android 6 to 10\n  const {platformName, statBarHeight} = obj;\n  const isAndroid = platformName.toLowerCase() === 'android';\n  // iOS uses CSS sizes for elements and screenshots, Android sizes times DRP\n  const dpr = isAndroid ? window.devicePixelRatio : 1;\n  const screenHeight = window.screen.height;\n  const viewportHeight = window.innerHeight;\n  // Need to determine this later for Chrome\n  const osAddressBarDefaultHeight = isAndroid ? 56 : 50;\n  const addressToolBarHeight = screenHeight - viewportHeight - statBarHeight;\n  // When a manual scroll has been executed for iOS and Android\n  // the address bar becomes smaller\n  const addressBarHeight = (addressToolBarHeight >= 0) && (addressToolBarHeight - osAddressBarDefaultHeight) < 0\n    ? addressToolBarHeight : osAddressBarDefaultHeight;\n\n  return statBarHeight + (addressBarHeight * dpr);\n}\n\n/**\n * JS code that is executed in the webview to set the needed attributes on the DOM so the source can be used for the\n * native inspector window.\n *\n * NOTE:\n * object destructuring the arguments resulted in this error with iOS (not with Android)\n *\n * `Duplicate parameter 'e' not allowed in function with destructuring parameters.`\n *\n * That's why the object destructuring is done in the method itself\n */\nexport function setHtmlElementAttributes (obj) {\n  const {platformName, webviewStatusAddressBarHeight} = obj;\n  const htmlElements = document.body.getElementsByTagName('*');\n  const isAndroid = platformName.toLowerCase() === 'android';\n  // iOS uses CSS sizes for elements and screenshots, Android sizes times DRP\n  const dpr = isAndroid ? window.devicePixelRatio : 1;\n\n  Array.from(htmlElements).forEach((el) => {\n    const rect = el.getBoundingClientRect();\n\n    el.setAttribute('data-appium-inspector-width', Math.round(rect.width * dpr));\n    el.setAttribute('data-appium-inspector-height', Math.round(rect.height * dpr));\n    el.setAttribute('data-appium-inspector-x', Math.round(rect.left * dpr));\n    el.setAttribute('data-appium-inspector-y', Math.round(webviewStatusAddressBarHeight + (rect.top * dpr)));\n  });\n}\n\n/**\n * Parse the source if it's HTML:\n * - head and scripts need to be removed to clean the HTML tree\n * - all custom attributes need to be transformed to normal width/height/x/y\n */\nexport function parseSource (source) {\n  // TODO this check is a bit brittle, figure out a better way to check whether we have a web\n  // source vs something else. Just checking for <html in the source doesn't work because fake\n  // driver app sources can include embedded <html elements even though the overall source is not\n  // html. So for now just look for fake-drivery things like <app> or <mock...> and ensure we don't\n  // parse that as html\n  if (!source.includes('<html') || source.includes('<app ') || source.includes('<mock')) {\n    return source;\n  }\n\n  const dom = parseDocument(source);\n  const $ = load(dom);\n\n  // Remove the head and the scripts\n  const head = $('head');\n  head.remove();\n  const scripts = $('script');\n  scripts.remove();\n\n  // Clean the source\n  $('*')\n    // remove all existing width height or x/y attributes\n    .removeAttr('width')\n    .removeAttr('height')\n    .removeAttr('x')\n    .removeAttr('y')\n    // remove all `data-appium-inspector-` prefixes so only the width|height|x|y are there\n    .each(function () {\n      const $el = $(this);\n\n      ['width', 'height', 'x', 'y'].forEach((rectAttr) => {\n        if ($el.attr(`data-appium-inspector-${rectAttr}`)) {\n          $el.attr(rectAttr, $el.attr(`data-appium-inspector-${rectAttr}`));\n\n          /* remove the old attribute */\n          $el.removeAttr(`data-appium-inspector-${rectAttr}`);\n        }\n      });\n    });\n\n  return $.xml();\n}\n","import _ from 'lodash';\nimport Bluebird from 'bluebird';\nimport {getWebviewStatusAddressBarHeight, parseSource, setHtmlElementAttributes} from './webview-helpers';\nimport {SCREENSHOT_INTERACTION_MODE, APP_MODE} from '../components/Inspector/shared';\n\nconst {TAP, SWIPE, GESTURE} = SCREENSHOT_INTERACTION_MODE;\n\nexport const NATIVE_APP = 'NATIVE_APP';\nlet _instance = null;\n\nexport default class AppiumClient {\n  constructor (driver) {\n    this.driver = driver;\n    this.elementCache = {};\n    this.elVarCount = 0;\n    this.elArrayVarCount = 0;\n  }\n\n  async run (params) {\n    const {\n      methodName, // Optional. Name of method being provided\n      strategy, // Optional. Element locator strategy\n      selector, // Optional. Element fetch selector\n      fetchArray = false, // Optional. Are we fetching an array of elements or just one?\n      elementId, // Optional. Element being operated on\n      args = [], // Optional. Arguments passed to method\n      skipRefresh = false, // Optional. Do we want the updated source and screenshot?\n      skipScreenshot = false, // Optional. Do we want to skip getting screenshot alone?\n      appMode = APP_MODE.NATIVE, // Optional. Whether we're in a native or hybrid mode\n    } = params;\n\n    if (methodName === 'quit') {\n      try {\n        await this.driver.quit();\n      } catch (ign) {\n      }\n\n      _instance = null;\n\n      // when we've quit the session, there's no source/screenshot to send\n      // back\n      return {\n        source: null,\n        screenshot: null,\n        windowSize: null,\n        result: null\n      };\n    }\n\n    let res = {};\n    if (methodName) {\n      if (elementId) {\n        console.log(`Handling client method request with method '${methodName}', args ${JSON.stringify(args)} and elementId ${elementId}`); // eslint-disable-line no-console\n        res = await this.executeMethod({elementId, methodName, args, skipRefresh, skipScreenshot, appMode});\n      } else {\n        console.log(`Handling client method request with method '${methodName}' and args ${JSON.stringify(args)}`); // eslint-disable-line no-console\n        res = await this.executeMethod({methodName, args, skipRefresh, skipScreenshot, appMode});\n      }\n    } else if (strategy && selector) {\n      if (fetchArray) {\n        console.log(`Fetching elements with selector '${selector}' and strategy ${strategy}`); // eslint-disable-line no-console\n        res = await this.fetchElements({strategy, selector});\n      } else {\n        console.log(`Fetching an element with selector '${selector}' and strategy ${strategy}`); // eslint-disable-line no-console\n        res = await this.fetchElement({strategy, selector});\n      }\n    }\n\n    return res;\n  }\n\n  async executeMethod ({elementId, methodName, args, skipRefresh, skipScreenshot, appMode}) {\n    let cachedEl;\n    let res = {};\n    if (!_.isArray(args) && !_.isUndefined(args)) {\n      args = [args];\n    }\n\n    if (elementId) {\n      // Give the cached element a variable name (el1, el2, el3,...) the first time it's used\n      cachedEl = this.elementCache[elementId];\n\n      if (!cachedEl.variableName) {\n        // now that we are actually going to use this element, let's assign it a variable name\n        // if it doesn't already have one\n        this.elVarCount += 1;\n        cachedEl.variableName = `el${this.elVarCount}`;\n      }\n\n      // and then execute whatever method we requested on the actual element\n      res = await cachedEl.el[methodName].apply(cachedEl.el, args);\n    } else {\n      // Specially handle the tap and swipe method\n      if ([TAP, SWIPE, GESTURE].includes(methodName)) {\n        const actions = Object.keys(args[0]).map((key) => (\n          {\n            type: 'pointer',\n            id: key,\n            parameters: {pointerType: 'touch'},\n            actions: args[0][key]\n          }));\n        res = await this.driver.performActions(actions);\n      } else if (methodName !== 'getPageSource' && methodName !== 'takeScreenshot') {\n        res = await this.driver[methodName].apply(this.driver, args);\n      }\n    }\n\n\n    let contextUpdate = {}, sourceUpdate = {}, screenshotUpdate = {}, windowSizeUpdate = {};\n    if (!skipRefresh) {\n      // Give the source/screenshot time to change before taking the screenshot\n      await Bluebird.delay(500);\n      if (!skipScreenshot) {\n        screenshotUpdate = await this.getScreenshotUpdate();\n      }\n      windowSizeUpdate = await this.getWindowUpdate();\n      // only do context updates if user has selected web/hybrid mode (takes forever)\n      if (appMode === APP_MODE.WEB_HYBRID) {\n        contextUpdate = await this.getContextUpdate();\n      }\n      sourceUpdate = await this.getSourceUpdate();\n    }\n    return {\n      ...cachedEl,\n      ...contextUpdate,\n      ...sourceUpdate,\n      ...screenshotUpdate,\n      ...windowSizeUpdate,\n      commandRes: res,\n    };\n  }\n\n  async fetchElements ({strategy, selector}) {\n    const start = Date.now();\n    const els = await this.driver.findElements(strategy, selector);\n    const executionTime = Date.now() - start;\n\n    this.elArrayVarCount += 1;\n    const variableName = `els${this.elArrayVarCount}`;\n    const variableType = 'array';\n\n    const elements = {};\n    // Cache the elements that we find\n    const elementList = els.map((el, index) => {\n      const res = {\n        el,\n        variableName,\n        variableIndex: index,\n        variableType: 'string',\n        id: el.elementId,\n        strategy,\n        selector,\n      };\n      elements[el.elementId] = res;\n      return res;\n    });\n\n    this.elementCache = {...this.elementCache, ...elements};\n\n    return {\n      variableName,\n      variableType,\n      strategy,\n      selector,\n      elements: elementList,\n      executionTime,\n    };\n  }\n\n  async fetchElement ({strategy, selector}) {\n    const start = Date.now();\n    let element = null;\n    try {\n      element = await this.driver.findElement(strategy, selector);\n    } catch (err) {\n      return {};\n    }\n\n    const executionTime = Date.now() - start;\n\n    const id = element.elementId;\n\n    // Cache this ID along with its variable name, variable type and strategy/selector\n    const elementData = {\n      el: element,\n      variableType: 'string',\n      strategy,\n      selector,\n      id,\n    };\n\n    this.elementCache[id] = elementData;\n\n    return {\n      ...elementData,\n      executionTime,\n    };\n  }\n\n  async getWindowUpdate () {\n    let windowSize, windowSizeError;\n    const {client: {capabilities: {deviceScreenSize, platformName, automationName}}} = this.driver;\n    try {\n      // The call doesn't need to be made for Android for two reasons\n      // - when appMode is hybrid Chrome driver doesn't know this command\n      // - the data is already on the driver\n      if (_.toLower(platformName) === 'android' && _.toLower(automationName) === 'uiautomator2') {\n        const [width, height] = deviceScreenSize.split('x');\n        windowSize = {width, height, x: 0, y: 0};\n      } else {\n        windowSize = await this.driver.getWindowRect();\n      }\n    } catch (e) {\n      windowSizeError = e;\n    }\n\n    return {windowSize, windowSizeError};\n  }\n\n  async getContextUpdate () {\n    let contexts,\n        contextsError,\n        currentContext,\n        currentContextError,\n        pixelRatio,\n        platformName,\n        statBarHeight,\n        viewportRect,\n        webViewPosition;\n    if (!await this.hasContextsCommand()) {\n      return {currentContext: null, contexts: []};\n    }\n\n    try {\n      currentContext = await this.driver.getContext();\n    } catch (e) {\n      currentContextError = e;\n    }\n\n    // Note: These methods need to be executed in the native context because ChromeDriver behaves differently\n    if (currentContext !== NATIVE_APP) {\n      await this.driver.switchContext(NATIVE_APP);\n    }\n\n    ({platformName, pixelRatio, statBarHeight, viewportRect} = await this.driver.getSession());\n    const isAndroid = _.toLower(platformName) === 'android';\n\n    try {\n      contexts = await this.driver.executeScript('mobile:getContexts', []);\n      contexts = isAndroid ? this.parseAndroidContexts(contexts) : contexts;\n    } catch (e) {\n      contextsError = e;\n    }\n\n\n    if (currentContext !== NATIVE_APP) {\n      try {\n        // Get the webview offset\n        if (viewportRect) {\n          // The viewport rectangles are based on the screen density,\n          // iOS needs CSS pixels\n          webViewPosition = {\n            x: isAndroid ? viewportRect.left : Math.round(viewportRect.left / pixelRatio),\n            y: isAndroid ? viewportRect.top : Math.round(viewportRect.top / pixelRatio),\n          };\n        } else {\n          // Fallback\n          const el = await this.driver.findElement(\n            isAndroid ? 'xpath' : '-ios class chain',\n            isAndroid ? '//android.webkit.WebView' : '**/XCUIElementTypeWebView'\n          );\n          if (el) {\n            webViewPosition = await el.getRect();\n          }\n        }\n      } catch (ign) {\n      }\n      await this.driver.switchContext(currentContext);\n    }\n\n    /**\n     * If its a webview then update the HTML with the element location\n     * so the source can be used in the native inspector\n     */\n    try {\n      if (currentContext !== NATIVE_APP) {\n        // Fallback if the webview position can't be determined,\n        // then do it based on the web context\n        if (!webViewPosition) {\n          webViewPosition = {\n            x: 0,\n            y: await this.driver.executeScript(\n              `return (${getWebviewStatusAddressBarHeight}).apply(null, arguments)`,\n              [{platformName, statBarHeight}],\n            ),\n          };\n        }\n        await this.driver.executeScript(\n          `return (${setHtmlElementAttributes}).apply(null, arguments)`,\n          [{platformName, webviewStatusAddressBarHeight: webViewPosition.y}],\n        );\n      }\n    } catch (ign) {\n    }\n\n    return {contexts, contextsError, currentContext, currentContextError};\n  }\n\n  async getSourceUpdate () {\n    try {\n      const source = parseSource(await this.driver.getPageSource());\n      return {source};\n    } catch (err) {\n      return {sourceError: err};\n    }\n  }\n\n  async getScreenshotUpdate () {\n    try {\n      const screenshot = await this.driver.takeScreenshot();\n      return {screenshot};\n    } catch (err) {\n      return {screenshotError: err};\n    }\n  }\n\n  /**\n   * If the app under test can return contexts command.\n   *\n   * @returns {boolean} True if the app under test supports contexts command.\n   *\n   */\n  async hasContextsCommand () {\n    try {\n      await this.driver.getContexts();\n      return true;\n    } catch (ign) {\n    }\n\n    // If the app under test returns non JSON format response\n    return false;\n  }\n\n  /**\n   * Parse the Android contexts webview data\n   *\n   * Returns\n   * {\n   *   id: string;             // NATIVE_APP or the webview name\n   *   title?: string;         // the name of the page\n   *   url?: string;           // the url\n   *   bundleId?: string;      // for iOS\n   *   packageName?: string;   // for Android\n   *   handle?: string;        // the id of the active page in the webview of Android\n   * }[];\n   */\n  parseAndroidContexts (contexts) {\n    const parsedWebviews = [];\n\n    // Walk over every context and add all webviews into the parsedWebviews array\n    contexts\n      // Filter out all contexts that have a webviewName\n      .filter((webview) => _.has(webview, 'webviewName'))\n      // Now construct a new array with data\n      .map(({info, pages, webviewName}) => {\n        // The context result can have:\n        // - no pages => this might be Chrome running in the background\n        // - pages => this can be:\n        //   - Chrome with one or multiple tabs open\n        //   - A webview with one or multiple webviews\n        if (!pages) {\n          return;\n        }\n\n        pages.filter((page) => {\n          // The description is a string and:\n          // 1. can contain a JSON string for webviews which can contain\n          //    an `attached`-value telling if the webview is active\n          // 2. can be an empty string, this is most of the times for tabs\n          //    in Chrome\n          const description = _.has(page, 'description') ? page.description : '';\n          let descriptionJSON = {attached: false};\n          try {\n            descriptionJSON = JSON.parse(page.description);\n          } catch (ign) {}\n\n          // You can have multiple `type` of pages, like service workers\n          // We need to have pages with or 1. an attached view or 2. with an empty description\n          return page.type === 'page' && (description === '' || descriptionJSON.attached);\n        })\n          .map((page) => {\n            parsedWebviews.push({\n              id: webviewName,\n              ...(page && _.has(page, 'title') ? {title: page.title} : {}),\n              ...(page && _.has(page, 'url') ? {url: page.url} : {}),\n              ...(page && _.has(info, 'Android-Package') ? {packageName: info['Android-Package']} : {}),\n              ...(page && _.has(page, 'id') ? {handle: page.id} : {}),\n            });\n          });\n\n        return parsedWebviews;\n      });\n\n    return [\n      // The Android contexts dont have the `NATIVE_APP` context so add it here\n      {id: 'NATIVE_APP'},\n      // Add the parsedWebviews, but make sure to filter out all undefined webviews\n      ...parsedWebviews.filter(Boolean),\n    ];\n  }\n}\n\nAppiumClient.instance = (driver) => {\n  if (_instance === null) {\n    _instance = new AppiumClient(driver);\n  }\n  return _instance;\n};\n","/* eslint-disable promise/prefer-await-to-callbacks */\n/* eslint-disable indent */\n/* eslint-disable space-in-parens */\n/* eslint-disable no-console */\n/* eslint-disable quotes */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-unused-vars */\nimport _, { get } from 'lodash';\nimport { push } from 'redux-first-history';\nimport { getLocators, APP_MODE } from '../components/Inspector/shared';\nimport { showError } from './Session';\nimport { xmlToJSON } from '../util';\nimport { v4 as UUID } from 'uuid';\nimport frameworks from '../lib/client-frameworks';\nimport { getSetting, setSetting, SAVED_FRAMEWORK, SET_SAVED_GESTURES } from '../../shared/settings';\nimport i18n from '../../configs/i18next.config.renderer';\nimport AppiumClient, { NATIVE_APP } from '../lib/appium-client';\nimport { notification } from 'antd';\n// import { useState } from 'react';\n\nexport const SET_SESSION_DETAILS = 'SET_SESSION_DETAILS';\nexport const SET_SOURCE_AND_SCREENSHOT = 'SET_SOURCE_AND_SCREENSHOT';\nexport const SESSION_DONE = 'SESSION_DONE';\nexport const SELECT_ELEMENT = 'SELECT_ELEMENT';\nexport const UNSELECT_ELEMENT = 'UNSELECT_ELEMENT';\nexport const SET_SELECTED_ELEMENT_ID = 'SET_SELECTED_ELEMENT_ID';\nexport const SET_INTERACTIONS_NOT_AVAILABLE = 'SET_INTERACTIONS_NOT_AVAILABLE';\nexport const METHOD_CALL_REQUESTED = 'METHOD_CALL_REQUESTED';\nexport const METHOD_CALL_DONE = 'METHOD_CALL_DONE';\nexport const SET_EXPANDED_PATHS = 'SET_EXPANDED_PATHS';\nexport const SELECT_HOVERED_ELEMENT = 'SELECT_HOVERED_ELEMENT';\nexport const UNSELECT_HOVERED_ELEMENT = 'UNSELECT_HOVERED_ELEMENT';\n\nexport const SELECT_HOVERED_CENTROID = 'SELECT_HOVERED_CENTROID';\nexport const UNSELECT_HOVERED_CENTROID = 'UNSELECT_HOVERED_CENTROID';\nexport const SELECT_CENTROID = 'SELECT_CENTROID';\nexport const UNSELECT_CENTROID = 'UNSELECT_CENTROID';\nexport const SET_SHOW_CENTROIDS = 'SET_SHOW_CENTROIDS';\n\nexport const QUIT_SESSION_REQUESTED = 'QUIT_SESSION_REQUESTED';\nexport const QUIT_SESSION_DONE = 'QUIT_SESSION_DONE';\nexport const SET_SESSION_TIME = 'SET_SESSION_TIME';\n\nexport const START_RECORDING = 'START_RECORDING';\nexport const PAUSE_RECORDING = 'PAUSE_RECORDING';\nexport const CLEAR_RECORDING = 'CLEAR_RECORDING';\nexport const CLOSE_RECORDER = 'CLOSE_RECORDER';\nexport const SET_ACTION_FRAMEWORK = 'SET_ACTION_FRAMEWORK';\nexport const RECORD_ACTION = 'RECORD_ACTION';\nexport const STEPS_ARRAY = 'STEPS_ARRAY';\nexport const SET_SHOW_BOILERPLATE = 'SET_SHOW_BOILERPLATE';\n\nexport const SHOW_LOCATOR_TEST_MODAL = 'SHOW_LOCATOR_TEST_MODAL';\nexport const HIDE_LOCATOR_TEST_MODAL = 'HIDE_LOCATOR_TEST_MODAL';\nexport const SHOW_SIRI_COMMAND_MODAL = 'SHOW_SIRI_COMMAND_MODAL';\nexport const HIDE_SIRI_COMMAND_MODAL = 'HIDE_SIRI_COMMAND_MODAL';\nexport const SET_SIRI_COMMAND_VALUE = 'SET_SIRI_COMMAND_VALUE';\nexport const SET_LOCATOR_TEST_STRATEGY = 'SET_LOCATOR_TEST_STRATEGY';\nexport const SET_LOCATOR_TEST_VALUE = 'SET_LOCATOR_TEST_VALUE';\nexport const SEARCHING_FOR_ELEMENTS = 'SEARCHING_FOR_ELEMENTS';\nexport const SEARCHING_FOR_ELEMENTS_COMPLETED = 'SEARCHING_FOR_ELEMENTS_COMPLETED';\nexport const GET_FIND_ELEMENTS_TIMES = 'GET_FIND_ELEMENTS_TIMES';\nexport const GET_FIND_ELEMENTS_TIMES_COMPLETED = 'GET_FIND_ELEMENTS_TIMES_COMPLETED';\nexport const SET_LOCATOR_TEST_ELEMENT = 'SET_LOCATOR_TEST_ELEMENT';\nexport const FINDING_ELEMENT_IN_SOURCE = 'FINDING_ELEMENT_IN_SOURCE';\nexport const FINDING_ELEMENT_IN_SOURCE_COMPLETED = 'FINDING_ELEMENT_IN_SOURCE_COMPLETED';\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\nexport const ADD_ASSIGNED_VAR_CACHE = 'ADD_ASSIGNED_VAR_CACHE';\nexport const CLEAR_ASSIGNED_VAR_CACHE = 'CLEAR_ASSIGNED_VAR_CACHE';\nexport const SET_SCREENSHOT_INTERACTION_MODE = 'SET_SCREENSHOT_INTERACTION_MODE';\nexport const SET_APP_MODE = 'SET_APP_MODE';\nexport const SET_SEARCHED_FOR_ELEMENT_BOUNDS = 'SET_SEARCHED_FOR_ELEMENT_BOUNDS';\nexport const CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS = 'CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS';\n\nexport const SET_SWIPE_START = 'SET_SWIPE_START';\nexport const SET_SWIPE_END = 'SET_SWIPE_END';\nexport const SET_SWIPE_START1 = 'SET_SWIPE_START1';\nexport const SET_SWIPE_END1 = 'SET_SWIPE_END1';\nexport const CLEAR_SWIPE_ACTION = 'CLEAR_SWIPE_ACTION';\nexport const PROMPT_KEEP_ALIVE = 'PROMPT_KEEP_ALIVE';\nexport const HIDE_PROMPT_KEEP_ALIVE = 'HIDE_PROMPT_KEEP_ALIVE';\n\nexport const SELECT_INTERACTION_MODE = 'SELECT_INTERACTION_MODE';\n\nexport const SELECT_COMMAND_GROUP = 'SELECT_COMMAND_GROUP';\nexport const SELECT_COMMAND_SUB_GROUP = 'SELECT_COMMAND_SUB_GROUP';\nexport const ENTERING_COMMAND_ARGS = 'ENTERING_COMMAND_ARGS';\nexport const CANCEL_PENDING_COMMAND = 'CANCEL_PENDING_COMMAND';\nexport const SET_COMMAND_ARG = 'SET_COMMAND_ARG';\n\nexport const SET_CONTEXT = 'SET_CONTEXT';\n\nexport const SET_APP_ID = 'SET_APP_ID';\nexport const SET_SERVER_STATUS = 'SET_SERVER_STATUS';\n\nexport const SET_KEEP_ALIVE_INTERVAL = 'SET_KEEP_ALIVE_INTERVAL';\nexport const SET_USER_WAIT_TIMEOUT = 'SET_USER_WAIT_TIMEOUT';\nexport const SET_LAST_ACTIVE_MOMENT = 'SET_LAST_ACTIVE_MOMENT';\n\nexport const SET_VISIBLE_COMMAND_RESULT = 'SET_VISIBLE_COMMAND_RESULT';\n\nexport const SET_AWAITING_MJPEG_STREAM = 'SET_AWAITING_MJPEG_STREAM';\n\nexport const SHOW_GESTURE_EDITOR = 'SHOW_GESTURE_EDITOR';\nexport const HIDE_GESTURE_EDITOR = 'HIDE_GESTURE_EDITOR';\nexport const GET_SAVED_GESTURES_REQUESTED = 'GET_SAVED_GESTURES_REQUESTED';\nexport const GET_SAVED_GESTURES_DONE = 'GET_SAVED_GESTURES_DONE';\nexport const DELETE_SAVED_GESTURES_REQUESTED = 'DELETE_SAVED_GESTURES_REQUESTED';\nexport const DELETE_SAVED_GESTURES_DONE = 'DELETE_SAVED_GESTURES_DONE';\nexport const SET_LOADED_GESTURE = 'SET_LOADED_GESTURE';\nexport const REMOVE_LOADED_GESTURE = 'REMOVE_LOADED_GESTURE';\nexport const SHOW_GESTURE_ACTION = 'SHOW_GESTURE_ACTION';\nexport const HIDE_GESTURE_ACTION = 'HIDE_GESTURE_ACTION';\nexport const SELECT_TICK_ELEMENT = 'SELECT_TICK_ELEMENT';\nexport const UNSELECT_TICK_ELEMENT = 'UNSELECT_TICK_ELEMENT';\nexport const SET_GESTURE_TAP_COORDS_MODE = 'SET_GESTURE_TAP_COORDS_MODE';\nexport const CLEAR_TAP_COORDINATES = 'CLEAR_TAP_COORDINATES';\n\nexport const TOGGLE_SHOW_ATTRIBUTES = 'TOGGLE_SHOW_ATTRIBUTES';\nexport const TOGGLE_REFRESHING_STATE = 'TOGGLE_REFRESHING_STATE';\n\nconst KEEP_ALIVE_PING_INTERVAL = 20 * 1000;\nconst NO_NEW_COMMAND_LIMIT = 24 * 60 * 60 * 1000; // Set timeout to 24 hours\nconst WAIT_FOR_USER_KEEP_ALIVE = 60 * 60 * 1000; // Give user 1 hour to reply\n\n// const [steps,setFlowSteps] = useState({})\n// A debounced function that calls findElement and gets info about the element\nconst findElement = _.debounce(async function (strategyMap, dispatch, getState, path) {\n  for (let [strategy, selector] of strategyMap) {\n    // Get the information about the element\n    const action = callClientMethod({\n      strategy,\n      selector,\n    });\n    let { elementId, variableName, variableType } = await action(dispatch, getState);\n\n    // Set the elementId, variableName and variableType for the selected element\n    // (check first that the selectedElementPath didn't change, to avoid race conditions)\n    if (elementId && getState().inspector.selectedElementPath === path) {\n      return dispatch({ type: SET_SELECTED_ELEMENT_ID, elementId, variableName, variableType });\n    }\n  }\n\n  return dispatch({ type: SET_INTERACTIONS_NOT_AVAILABLE });\n}, 1000);\n\nexport function selectElement(path) {\n  return async (dispatch, getState) => {\n    // Set the selected element in the source tree\n    dispatch({ type: SELECT_ELEMENT, path });\n    const { selectedElement, sourceXML, expandedPaths } = getState().inspector;\n\n    // Expand all of this element's ancestors so that it's visible in the source tree\n    // Make a copy of the array to avoid state mutation\n    const copiedExpandedPaths = [...expandedPaths];\n    let pathArr = path.split('.').slice(0, path.length - 1);\n    while (pathArr.length > 1) {\n      pathArr.splice(pathArr.length - 1);\n      let path = pathArr.join('.');\n      if (!copiedExpandedPaths.includes(path)) {\n        copiedExpandedPaths.push(path);\n      }\n    }\n    dispatch({ type: SET_EXPANDED_PATHS, paths: copiedExpandedPaths });\n\n\n    // Find the optimal selection strategy. If none found, fall back to XPath.\n    const strategyMap = _.toPairs(getLocators(selectedElement.attributes, sourceXML));\n    strategyMap.push(['xpath', selectedElement.xpath]);\n\n    // Debounce find element so that if another element is selected shortly after, cancel the previous search\n    await findElement(strategyMap, dispatch, getState, path);\n  };\n}\n\nexport function unselectElement() {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_ELEMENT });\n  };\n}\n\n\nexport function selectCentroid(path) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_CENTROID, path });\n  };\n}\n\nexport function unselectCentroid() {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_CENTROID });\n  };\n}\n\nexport function selectHoveredCentroid(path) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_HOVERED_CENTROID, path });\n  };\n}\n\nexport function unselectHoveredCentroid() {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_HOVERED_CENTROID });\n  };\n}\n\nexport function selectHoveredElement(path) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_HOVERED_ELEMENT, path });\n  };\n}\n\nexport function unselectHoveredElement(path) {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_HOVERED_ELEMENT, path });\n  };\n}\n\n/**\n * Requests a method call on appium\n */\nexport function applyClientMethod(params) {\n  return async (dispatch, getState) => {\n    const isRecording = params.methodName !== 'quit' &&\n      params.methodName !== 'getPageSource' &&\n      params.methodName !== 'gesture' &&\n      params.methodName !== 'status' &&\n      getState().inspector.isRecording;\n    try {\n      dispatch({ type: METHOD_CALL_REQUESTED });\n      const callAction = callClientMethod(params);\n      const { contexts, contextsError, commandRes, currentContext, currentContextError,\n        source, screenshot, windowSize, sourceError,\n        screenshotError, windowSizeError, variableName,\n        variableIndex, strategy, selector } = await callAction(dispatch, getState);\n\n      // TODO: Implement recorder code for gestures\n      if (isRecording) {\n        // Add 'findAndAssign' line of code. Don't do it for arrays though. Arrays already have 'find' expression\n        if (strategy && selector && !variableIndex && variableIndex !== 0) {\n          const findAction = findAndAssign(strategy, selector, variableName, false);\n          findAction(dispatch, getState);\n        }\n\n        // now record the actual action\n        let args = [variableName, variableIndex];\n        args = args.concat(params.args || []);\n        dispatch({ type: RECORD_ACTION, action: params.methodName, params: args });\n      }\n      dispatch({ type: METHOD_CALL_DONE });\n\n      if (source) {\n        dispatch({\n          type: SET_SOURCE_AND_SCREENSHOT,\n          contexts,\n          currentContext,\n          source: source && xmlToJSON(source),\n          sourceXML: source,\n          screenshot,\n          windowSize,\n          contextsError,\n          currentContextError,\n          sourceError,\n          screenshotError,\n          windowSizeError,\n        });\n      }\n      window.dispatchEvent(new Event('resize'));\n      return commandRes;\n    } catch (error) {\n      console.log(error); // eslint-disable-line no-console\n      let methodName = params.methodName === 'click' ? 'tap' : params.methodName;\n      showError(error, methodName, 10);\n      dispatch({ type: METHOD_CALL_DONE });\n    }\n  };\n}\n\nexport function addAssignedVarCache(varName) {\n  return (dispatch) => {\n    dispatch({ type: ADD_ASSIGNED_VAR_CACHE, varName });\n  };\n}\n\nexport function setExpandedPaths(paths) {\n  return (dispatch) => {\n    dispatch({ type: SET_EXPANDED_PATHS, paths });\n  };\n}\n\n/**\n * Quit the session and go back to the new session window\n */\nexport function quitSession(reason, killedByUser = true) {\n  return async (dispatch, getState) => {\n    const killAction = killKeepAliveLoop();\n    killAction(dispatch, getState);\n    const applyAction = applyClientMethod({ methodName: 'quit' });\n    await applyAction(dispatch, getState);\n    dispatch({ type: QUIT_SESSION_DONE });\n    dispatch(push('/session'));\n    if (!killedByUser) {\n      notification.error({\n        message: 'Error',\n        description: reason || i18n.t('Session has been terminated'),\n        duration: 0\n      });\n    }\n  };\n}\n\nexport function startRecording() {\n  return (dispatch) => {\n    dispatch({ type: START_RECORDING });\n  };\n}\n\nexport function pauseRecording() {\n  return (dispatch) => {\n    dispatch({ type: PAUSE_RECORDING });\n  };\n}\n\nexport function clearRecording() {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_RECORDING });\n    dispatch({ type: CLEAR_ASSIGNED_VAR_CACHE }); // Get rid of the variable cache\n  };\n}\n\nexport function getSavedActionFramework() {\n  return async (dispatch) => {\n    let framework = await getSetting(SAVED_FRAMEWORK);\n    dispatch({ type: SET_ACTION_FRAMEWORK, framework });\n  };\n}\n\nexport function setActionFramework(framework) {\n  return async (dispatch) => {\n    if (!frameworks[framework]) {\n      throw new Error(i18n.t('frameworkNotSupported', { framework }));\n    }\n    await setSetting(SAVED_FRAMEWORK, framework);\n    dispatch({ type: SET_ACTION_FRAMEWORK, framework });\n  };\n}\n\nexport function recordAction(action, params) {\n  return (dispatch) => {\n    dispatch({ type: RECORD_ACTION, action, params });\n  };\n}\n\nexport function closeRecorder() {\n  return (dispatch) => {\n    dispatch({ type: CLOSE_RECORDER });\n  };\n}\n\nexport function toggleShowBoilerplate() {\n  return (dispatch, getState) => {\n    const show = !getState().inspector.showBoilerplate;\n    dispatch({ type: SET_SHOW_BOILERPLATE, show });\n  };\n}\n\nexport function setSessionDetails({ driver, sessionDetails, mode, mjpegScreenshotUrl }) {\n  return (dispatch) => {\n    dispatch({ type: SET_SESSION_DETAILS, driver, sessionDetails, mode, mjpegScreenshotUrl });\n  };\n}\n\nexport function showLocatorTestModal() {\n  return (dispatch) => {\n    dispatch({ type: SHOW_LOCATOR_TEST_MODAL });\n  };\n}\n\nexport function hideLocatorTestModal() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_LOCATOR_TEST_MODAL });\n  };\n}\n\nexport function showSiriCommandModal() {\n  return (dispatch) => {\n    dispatch({ type: SHOW_SIRI_COMMAND_MODAL });\n  };\n}\n\nexport function hideSiriCommandModal() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_SIRI_COMMAND_MODAL });\n  };\n}\n\nexport function setSiriCommandValue(siriCommandValue) {\n  return (dispatch) => {\n    dispatch({ type: SET_SIRI_COMMAND_VALUE, siriCommandValue });\n  };\n}\n\nexport function setLocatorTestValue(locatorTestValue) {\n  return (dispatch) => {\n    dispatch({ type: SET_LOCATOR_TEST_VALUE, locatorTestValue });\n  };\n}\n\nexport function setLocatorTestStrategy(locatorTestStrategy) {\n  return (dispatch) => {\n    dispatch({ type: SET_LOCATOR_TEST_STRATEGY, locatorTestStrategy });\n  };\n}\n\nexport function setContext(context) {\n  return (dispatch) => {\n    dispatch({ type: SET_CONTEXT, context });\n  };\n}\n\nexport function searchForElement(strategy, selector) {\n  return async (dispatch, getState) => {\n    dispatch({ type: SEARCHING_FOR_ELEMENTS });\n    try {\n      const callAction = callClientMethod({ strategy, selector, fetchArray: true });\n      let { elements, variableName, executionTime } = await callAction(dispatch, getState);\n      const findAction = findAndAssign(strategy, selector, variableName, true);\n      findAction(dispatch, getState);\n      elements = elements.map((el) => el.id);\n      dispatch({ type: SEARCHING_FOR_ELEMENTS_COMPLETED, elements, executionTime });\n    } catch (error) {\n      dispatch({ type: SEARCHING_FOR_ELEMENTS_COMPLETED });\n      showError(error, 10);\n    }\n  };\n}\n\n/**\n * Get all the find element times based on the find data source\n */\nexport function getFindElementsTimes(findDataSource) {\n  return async (dispatch, getState) => {\n    dispatch({ type: GET_FIND_ELEMENTS_TIMES });\n    try {\n      const findElementsExecutionTimes = [];\n      for (const element of findDataSource) {\n        const { find, key, selector } = element;\n        const action = callClientMethod({ strategy: key, selector });\n        const { executionTime } = await action(dispatch, getState);\n        findElementsExecutionTimes.push({ find, key, selector, time: executionTime });\n      }\n\n      dispatch({\n        type: GET_FIND_ELEMENTS_TIMES_COMPLETED,\n        findElementsExecutionTimes: _.sortBy(findElementsExecutionTimes, ['time']),\n      });\n    } catch (error) {\n      dispatch({ type: GET_FIND_ELEMENTS_TIMES_COMPLETED });\n      showError(error, 10);\n    }\n  };\n}\n\nexport function findAndAssign(strategy, selector, variableName, isArray) {\n  return (dispatch, getState) => {\n    const { assignedVarCache } = getState().inspector;\n\n    // If this call to 'findAndAssign' for this variable wasn't done already, do it now\n    if (!assignedVarCache[variableName]) {\n      dispatch({ type: RECORD_ACTION, action: 'findAndAssign', params: [strategy, selector, variableName, isArray] });\n      dispatch({ type: ADD_ASSIGNED_VAR_CACHE, varName: variableName });\n    }\n  };\n}\n\nexport function setLocatorTestElement(elementId) {\n  return async (dispatch, getState) => {\n    dispatch({ type: SET_LOCATOR_TEST_ELEMENT, elementId });\n    dispatch({ type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS });\n    if (elementId) {\n      try {\n        const action = callClientMethod({\n          elementId,\n          methodName: 'getRect',\n          skipRefresh: true,\n          skipRecord: true,\n          ignoreResult: true\n        });\n        const { commandRes } = await action(dispatch, getState);\n        dispatch({\n          type: SET_SEARCHED_FOR_ELEMENT_BOUNDS,\n          location: { x: commandRes.x, y: commandRes.y },\n          size: { width: commandRes.width, height: commandRes.height },\n        });\n      } catch (ign) { }\n    }\n  };\n}\n\n/**\n * Given an element ID found through search, and its bounds,\n * attempt to find and select this element in the source tree\n */\nexport function selectLocatedElement(source, bounds, id) {\n  const UPPER_FILTER_LIMIT = 10;\n\n  // Parse the source tree and find all nodes whose bounds match the expected bounds\n  // Return the path + xpath of each node\n  function findPathsMatchingBounds() {\n    if (!bounds || !source.children || !source.children[0].attributes) { return null; }\n    if (source.children[0].attributes.bounds) {\n      const [endX, endY] = [bounds.location.x + bounds.size.width, bounds.location.y + bounds.size.height];\n      const coords = `[${bounds.location.x},${bounds.location.y}][${endX},${endY}]`;\n      return findPathsFromCoords(source.children, coords);\n    } else if (source.children[0].attributes.x) {\n      const combinedBounds = {\n        x: String(bounds.location.x),\n        y: String(bounds.location.y),\n        height: String(bounds.size.height),\n        width: String(bounds.size.width),\n      };\n      return findPathsFromBounds(source.children, combinedBounds);\n    }\n    return null;\n  }\n\n  // Recursive function for parsing source tree when elements have 'bounds' property\n  function findPathsFromCoords(trees, coords) {\n    let collectedPaths = [];\n    for (const tree of trees) {\n      if (tree.attributes.bounds === coords) {\n        collectedPaths.push([tree.path, tree.xpath]);\n      }\n      if (tree.children.length) {\n        collectedPaths.push(...findPathsFromCoords(tree.children, coords));\n      }\n    }\n    return collectedPaths;\n  }\n\n  // Recursive function for parsing source tree when elements have 'x/y/height/width' properties\n  function findPathsFromBounds(trees, bounds) {\n    let collectedPaths = [];\n    for (const tree of trees) {\n      if (tree.attributes.x === bounds.x && tree.attributes.y === bounds.y\n        && tree.attributes.height === bounds.height && tree.attributes.width === bounds.width) {\n        collectedPaths.push([tree.path, tree.xpath]);\n      }\n      if (tree.children.length) {\n        collectedPaths.push(...findPathsFromBounds(tree.children, bounds));\n      }\n    }\n    return collectedPaths;\n  }\n\n  // If findPathsMatchingBounds found multiple items,\n  // use Appium findElement to filter further by element ID\n  async function filterFoundPaths(foundPaths, dispatch, getState) {\n    if (!foundPaths) { return null; }\n    if (foundPaths.length === 1) {\n      return foundPaths[0][0];\n    } else if (foundPaths.length !== 0 && foundPaths.length <= UPPER_FILTER_LIMIT) {\n      return await findElementWithMatchingId(foundPaths, dispatch, getState);\n    }\n    return null;\n  }\n\n  // Calls Appium findElement for each provided xpath, and returns the path\n  // of the element whose ID matches the expected ID\n  async function findElementWithMatchingId(foundPaths, dispatch, getState) {\n    for (const path of foundPaths) {\n      const action = callClientMethod({ strategy: 'xpath', selector: path[1] });\n      const { el } = await action(dispatch, getState);\n      if (el && el.elementId === id) {\n        return path[0];\n      }\n    }\n    return null;\n  }\n\n  return async (dispatch, getState) => {\n    dispatch({ type: FINDING_ELEMENT_IN_SOURCE });\n    const foundPaths = findPathsMatchingBounds();\n    const foundPath = await filterFoundPaths(foundPaths, dispatch, getState);\n    if (foundPath) {\n      const action = selectElement(foundPath);\n      await action(dispatch, getState);\n    } else {\n      notification.error({\n        message: i18n.t('Error'),\n        description: i18n.t('findingElementInSourceFailed'),\n        duration: 8\n      });\n    }\n    dispatch({ type: FINDING_ELEMENT_IN_SOURCE_COMPLETED });\n  };\n}\n\nexport function clearSearchResults() {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_SEARCH_RESULTS });\n    dispatch({ type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS });\n  };\n}\n\nexport function selectScreenshotInteractionMode(screenshotInteractionMode) {\n  return (dispatch) => {\n    dispatch({ type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode });\n  };\n}\n\nexport function toggleRefreshingState() {\n  return (dispatch) => {\n    dispatch({ type: TOGGLE_REFRESHING_STATE });\n  };\n}\n\nexport function selectAppMode(mode) {\n  return async (dispatch, getState) => {\n    const { appMode } = getState().inspector;\n    dispatch({ type: SET_APP_MODE, mode });\n    // if we're transitioning to hybrid mode, do a pre-emptive search for contexts\n    if (appMode !== mode && mode === APP_MODE.WEB_HYBRID) {\n      const action = applyClientMethod({ methodName: 'getPageSource' });\n      await action(dispatch, getState);\n    }\n    if (appMode !== mode && mode === APP_MODE.NATIVE) {\n      const action = applyClientMethod({ methodName: 'switchContext', args: [NATIVE_APP] });\n      await action(dispatch, getState);\n    }\n  };\n}\n\nexport function toggleShowCentroids() {\n  return (dispatch, getState) => {\n    const { showCentroids } = getState().inspector;\n    const show = !showCentroids;\n    dispatch({ type: SET_SHOW_CENTROIDS, show });\n  };\n}\n\nexport function getActiveAppId(isIOS, isAndroid) {\n  return async (dispatch, getState) => {\n    try {\n      if (isIOS) {\n        const action = applyClientMethod({ methodName: 'executeScript', args: ['mobile:activeAppInfo', []] });\n        const { bundleId } = await action(dispatch, getState);\n        dispatch({ type: SET_APP_ID, appId: bundleId });\n      }\n      if (isAndroid) {\n        const action = applyClientMethod({ methodName: 'getCurrentPackage' });\n        const appPackage = await action(dispatch, getState);\n        dispatch({ type: SET_APP_ID, appId: appPackage });\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(`Could not Retrieve Active App ID: ${err}`);\n    }\n  };\n}\n\nexport function getServerStatus() {\n  return async (dispatch, getState) => {\n    const status = applyClientMethod({ methodName: 'status' });\n    const { build } = await status(dispatch, getState);\n    dispatch({ type: SET_SERVER_STATUS, status: build });\n  };\n}\n\n// Start the session timer once session starts\nexport function setSessionTime(time) {\n  return (dispatch) => {\n    dispatch({ type: SET_SESSION_TIME, sessionStartTime: time });\n  };\n}\n\nexport function setSwipeStart(swipeStartX, swipeStartY) {\n  return (dispatch) => {\n    dispatch({ type: SET_SWIPE_START, swipeStartX, swipeStartY });\n  };\n}\n\n\nexport function setSwipeStart1 (swipeStartX, swipeStartY) {\n  return (dispatch) => {\n    dispatch({type: SET_SWIPE_START1, swipeStartX, swipeStartY});\n  };\n}\n\nexport function setSwipeEnd (swipeEndX, swipeEndY) {\n  return (dispatch) => {\n    dispatch({ type: SET_SWIPE_END, swipeEndX, swipeEndY });\n  };\n}\n\nexport function setSwipeEnd1 (swipeEndX, swipeEndY) {\n  return (dispatch) => {\n    dispatch({type: SET_SWIPE_END1, swipeEndX, swipeEndY});\n  };\n}\n\nexport function clearSwipeAction () {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_SWIPE_ACTION });\n  };\n}\n\nexport function promptKeepAlive() {\n  return (dispatch) => {\n    dispatch({ type: PROMPT_KEEP_ALIVE });\n  };\n}\n\nexport function hideKeepAlivePrompt() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_PROMPT_KEEP_ALIVE });\n  };\n}\n\nexport function selectCommandGroup(group) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_COMMAND_GROUP, group });\n  };\n}\n\nexport function selectCommandSubGroup(group) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_COMMAND_SUB_GROUP, group });\n  };\n}\n\nexport function selectInteractionMode(interaction) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_INTERACTION_MODE, interaction });\n  };\n}\n\nexport function startEnteringCommandArgs(commandName, command) {\n  return (dispatch) => {\n    dispatch({ type: ENTERING_COMMAND_ARGS, commandName, command });\n  };\n}\n\nexport function cancelPendingCommand() {\n  return (dispatch) => {\n    dispatch({ type: CANCEL_PENDING_COMMAND });\n  };\n}\n\nexport function setCommandArg(index, value) {\n  return (dispatch) => {\n    dispatch({ type: SET_COMMAND_ARG, index, value });\n  };\n}\n\n/**\n * Ping server every 30 seconds to prevent `newCommandTimeout` from killing session\n */\nexport function runKeepAliveLoop() {\n  return (dispatch, getState) => {\n    dispatch({ type: SET_LAST_ACTIVE_MOMENT, lastActiveMoment: Date.now() });\n    const { driver } = getState().inspector;\n\n    const keepAliveInterval = setInterval(async () => {\n      const { lastActiveMoment } = getState().inspector;\n      console.log('Pinging Appium server to keep session active'); // eslint-disable-line no-console\n      try {\n        await driver.getTimeouts(); // Pings the Appium server to keep it alive\n      } catch (ign) { }\n      const now = Date.now();\n\n      // If the new command limit has been surpassed, prompt user if they want to keep session going\n      // Give them WAIT_FOR_USER_KEEP_ALIVE ms to respond\n      if (now - lastActiveMoment > NO_NEW_COMMAND_LIMIT) {\n        const action = promptKeepAlive();\n        action(dispatch);\n\n        // After the time limit kill the session (this timeout will be killed if they keep it alive)\n        const userWaitTimeout = setTimeout(() => {\n          const action = quitSession(i18n.t('Session closed due to inactivity'), false);\n          action(dispatch, getState);\n        }, WAIT_FOR_USER_KEEP_ALIVE);\n        dispatch({ type: SET_USER_WAIT_TIMEOUT, userWaitTimeout });\n      }\n    }, KEEP_ALIVE_PING_INTERVAL);\n    dispatch({ type: SET_KEEP_ALIVE_INTERVAL, keepAliveInterval });\n  };\n}\n\n/**\n * Get rid of the intervals to keep the session alive\n */\nexport function killKeepAliveLoop() {\n  return (dispatch, getState) => {\n    const { keepAliveInterval, userWaitTimeout } = getState().inspector;\n    clearInterval(keepAliveInterval);\n    if (userWaitTimeout) {\n      clearTimeout(userWaitTimeout);\n    }\n    dispatch({ type: SET_KEEP_ALIVE_INTERVAL, keepAliveInterval: null });\n    dispatch({ type: SET_USER_WAIT_TIMEOUT, userWaitTimeout: null });\n  };\n}\n\n/**\n * Reset the new command clock and kill the wait for user timeout\n */\nexport function keepSessionAlive() {\n  return (dispatch, getState) => {\n    const { userWaitTimeout } = getState().inspector;\n    const action = hideKeepAlivePrompt();\n    action(dispatch);\n    dispatch({ type: SET_LAST_ACTIVE_MOMENT, lastActiveMoment: +(new Date()) });\n    if (userWaitTimeout) {\n      clearTimeout(userWaitTimeout);\n      dispatch({ type: SET_USER_WAIT_TIMEOUT, userWaitTimeout: null });\n    }\n  };\n}\n\nconst fetchSteps = (data) => fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\nlet data = [];\nexport function callClientMethod(params) {\n  return async (dispatch, getState) => {\n    console.log(\"🚀 ~ file: Inspector.js:803 ~ return ~ params:\", params);\n    console.log(\"🚀 ~ file: Inspector.js:804 ~ return ~ getState\", getState());\n    const { driver, appMode, mjpegScreenshotUrl, isSourceRefreshOn, selectedElement, screenshotInteractionMode } = getState().inspector;\n    console.log(\"🚀 ~ file: Inspector.js:811 ~ return ~ selectedElement:\", selectedElement);\n    const { methodName, ignoreResult = true } = params;\n    params.appMode = appMode;\n\n    // don't retrieve screenshot if we're already using the mjpeg stream\n    if (mjpegScreenshotUrl) {\n      params.skipScreenshot = true;\n    }\n\n    if (!isSourceRefreshOn) {\n      params.skipRefresh = true;\n    }\n\n    console.log('Calling client method with params:', params);\n    const action = keepSessionAlive();\n    action(dispatch, getState);\n    console.log(\"driver session id\", driver.sessionId);\n    const client = AppiumClient.instance(driver);\n    const res = await client.run(params);\n    let { commandRes } = res;\n    let postdata = {\n      \"session_id\": driver.sessionId,\n      params,\n      selectedElement,\n      'step-name': screenshotInteractionMode\n    };\n    let data1 = {\n      \"session_id\": driver.sessionId,\n      'step-name': 'steps'\n    };\n    console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n    if (postdata.params.methodName === \"click\") {\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response:\", response);\n          postdata.response = response;\n          // data.push(...[postdata]);\n          // dispatch({ type: STEPS_ARRAY, data });\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n        // fetchSteps(data1).then((res) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n        //   let data = res.steps;\n        //   dispatch({ type: STEPS_ARRAY, data });\n        // }).catch((error) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n        // });\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(data1),\n        })\n        .then((res) => {\n          // Convert the response to JSON\n          return res.json();\n        })\n        .then((res) => {\n          console.log(\"Response data:\", res);\n          dispatch({ type: STEPS_ARRAY, res });\n        })\n        .catch((error) => {\n          console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n        });\n    } else if (postdata.params.methodName === \"swipe\") {\n      // Exclude selectedElement from postdata\n      delete postdata.selectedElement;\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response:\", response);\n          // console.log(\"🚀 ~ file: Inspector.js:884 ~ .then ~ totalData:\", totalData)\n          postdata.response = response;\n          // if(postdata['step-name'] != 'scratch'){\n          //   data.push(...[postdata])\n          // }\n          console.log(\"🚀 ~ file: Inspector.js:882 ~ .then ~ data:\", data);\n          // dispatch({ type: STEPS_ARRAY, data })\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n        // if(postdata['step-name'] === 'scratch'){\n        //   data.push(...[postdata])\n        // }\n        // fetchSteps(data1).then((res) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n        //   let data = res.steps;\n        //   dispatch({ type: STEPS_ARRAY, data });\n        // }).catch((error) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n        // });\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data1),\n      })\n      .then((res) => {\n        // Convert the response to JSON\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"Response data:\", res);\n        dispatch({ type: STEPS_ARRAY, res });\n      })\n      .catch((error) => {\n        console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n      });\n        //check the if the tap then it would be longpress , double tap, tap and drag and drop\n    } else if (postdata.params.methodName === \"tap\") {\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(postdata),\n        })\n          .then((response) => {\n            console.log(\"API response:\", response);\n          //   postdata['response'] = response\n          // data.push(...[postdata])\n          // dispatch({ type: STEPS_ARRAY, data })\n          })\n          .catch((error) => {\n            console.error(\"API error:\", error);\n          });\n          // fetchSteps(data1).then((res) => {\n          //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n          //   let data = res.steps;\n          //   dispatch({ type: STEPS_ARRAY, data });\n          // }).catch((error) => {\n          //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n          // });\n\n          await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data1),\n          })\n          .then((res) => {\n            // Convert the response to JSON\n            return res.json();\n          })\n          .then((res) => {\n            console.log(\"Response data:\", res);\n            dispatch({ type: STEPS_ARRAY, res });\n          })\n          .catch((error) => {\n            console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n          });\n    } else if (postdata.params.methodName === \"sendKeys\") {\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response:\", response);\n          postdata.response = response;\n          data.push(...[postdata]);\n          // dispatch({ type: STEPS_ARRAY, data })\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n        // fetchSteps(data1).then((res) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n        //   let data = res.steps;\n        //   dispatch({ type: STEPS_ARRAY, data });\n        // }).catch((error) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n        // });\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(data1),\n        })\n        .then((res) => {\n          // Convert the response to JSON\n          return res.json();\n        })\n        .then((res) => {\n          console.log(\"Response data:\", res);\n          dispatch({ type: STEPS_ARRAY, res });\n        })\n        .catch((error) => {\n          console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n        });\n    } else if (postdata['step-name'] === 'expected_value') {\n      postdata.params.xpath = postdata.selectedElement.xpath;\n      postdata.params.expected_value = postdata.selectedElement.attributes.text;\n      console.log(\"🚀 ~ file: Inspector.js:916 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response for expected_value:\", response);\n          postdata.response = response;\n          data.push(...[postdata]);\n          // dispatch({ type: STEPS_ARRAY, data })\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n        // fetchSteps(data1).then((res) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n        //   let data = res.steps;\n        //   dispatch({ type: STEPS_ARRAY, data });\n        // }).catch((error) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n        // });\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data1),\n      })\n      .then((res) => {\n        // Convert the response to JSON\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"Response data:\", res);\n        dispatch({ type: STEPS_ARRAY, res });\n      })\n      .catch((error) => {\n        console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n      });\n    } else if (params.methodName === \"quit\") {\n      console.log(\"🚀 inside the quit function!!\");\n      let sendData = {\n        \"session_id\": driver.sessionId,\n        \"step-name\": \"quit\",        \n      };\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(sendData),\n      })\n      .then((response) => {\n        console.log(\"API response:\", response);\n        // window.close();\n      })\n      .catch((error) => {\n        console.error(\"API error:\", error);\n      });\n      // fetchSteps(data1).then((res) => {\n      //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n      //   let data = res.steps;\n      //   dispatch({ type: STEPS_ARRAY, data });\n      // }).catch((error) => {\n      //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n      // });\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data1),\n      })\n      .then((res) => {\n        // Convert the response to JSON\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"Response data:\", res);\n        dispatch({ type: STEPS_ARRAY, res });\n      })\n      .catch((error) => {\n        console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n      });\n    } else {\n      console.log(\"no api will call becopuse of the no action happend@@@@@@@@@@@\");\n    }\n\n\n\n\n    // Ignore empty objects\n    if (_.isObject(res) && _.isEmpty(res)) {\n      commandRes = null;\n    }\n\n    if (!ignoreResult) {\n      // if the user is running actions manually, we want to show the full response with the\n      // ability to scroll etc...\n      const result = JSON.stringify(commandRes, null, '  ');\n      const truncatedResult = _.truncate(result, { length: 2000 });\n      console.log(`Got result from client method: ${truncatedResult}`);\n      setVisibleCommandResult(result, methodName)(dispatch);\n    }\n    res.elementId = res.id;\n    return res;\n  };\n}\n\nexport function setVisibleCommandResult(result, methodName) {\n  return (dispatch) => {\n    dispatch({ type: SET_VISIBLE_COMMAND_RESULT, result, methodName });\n  };\n}\n\nexport function setAwaitingMjpegStream(isAwaiting) {\n  return (dispatch) => {\n    dispatch({ type: SET_AWAITING_MJPEG_STREAM, isAwaiting });\n  };\n}\n\nexport function saveGesture(params) {\n  return async (dispatch) => {\n    let savedGestures = await getSetting(SET_SAVED_GESTURES) || [];\n    if (!params.id) {\n      params.id = UUID();\n      params.date = Date.now();\n      savedGestures.push(params);\n    } else {\n      for (const gesture of savedGestures) {\n        if (gesture.id === params.id) {\n          gesture.name = params.name;\n          gesture.description = params.description;\n          gesture.actions = params.actions;\n        }\n      }\n    }\n    await setSetting(SET_SAVED_GESTURES, savedGestures);\n    const action = getSavedGestures();\n    await action(dispatch);\n  };\n}\n\nexport function getSavedGestures() {\n  return async (dispatch) => {\n    dispatch({ type: GET_SAVED_GESTURES_REQUESTED });\n    const savedGestures = await getSetting(SET_SAVED_GESTURES);\n    dispatch({ type: GET_SAVED_GESTURES_DONE, savedGestures });\n  };\n}\n\nexport function deleteSavedGesture(id) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_SAVED_GESTURES_REQUESTED, deleteGesture: id });\n    const gestures = await getSetting(SET_SAVED_GESTURES);\n    const newGestures = gestures.filter((gesture) => gesture.id !== id);\n    await setSetting(SET_SAVED_GESTURES, newGestures);\n    dispatch({ type: DELETE_SAVED_GESTURES_DONE });\n    dispatch({ type: GET_SAVED_GESTURES_DONE, savedGestures: newGestures });\n  };\n}\n\nexport function showGestureEditor() {\n  return (dispatch) => {\n    dispatch({ type: SHOW_GESTURE_EDITOR });\n    dispatch({ type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode: 'gesture' });\n  };\n}\n\nexport function hideGestureEditor() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_GESTURE_EDITOR });\n    dispatch({ type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode: 'select' });\n  };\n}\n\nexport function setLoadedGesture(loadedGesture) {\n  return (dispatch) => {\n    dispatch({ type: SET_LOADED_GESTURE, loadedGesture });\n  };\n}\n\nexport function removeLoadedGesture() {\n  return (dispatch) => {\n    dispatch({ type: REMOVE_LOADED_GESTURE });\n  };\n}\n\nexport function displayGesture(showGesture) {\n  return (dispatch) => {\n    dispatch({ type: SHOW_GESTURE_ACTION, showGesture });\n  };\n}\n\nexport function removeGestureDisplay() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_GESTURE_ACTION });\n  };\n}\n\nexport function selectTick(tick) {\n  return (dispatch, getState) => {\n    const { tickCoordinates } = getState().inspector;\n\n    if (tickCoordinates) {\n      dispatch({ type: SET_GESTURE_TAP_COORDS_MODE, x: undefined, y: undefined });\n    }\n\n    dispatch({ type: SELECT_TICK_ELEMENT, selectedTick: tick });\n  };\n}\n\nexport function unselectTick() {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_TAP_COORDINATES });\n    dispatch({ type: UNSELECT_TICK_ELEMENT });\n  };\n}\n\nexport function tapTickCoordinates(x, y) {\n  return (dispatch) => {\n    dispatch({ type: SET_GESTURE_TAP_COORDS_MODE, x, y });\n  };\n}\n\nexport function toggleShowAttributes() {\n  return (dispatch) => {\n    dispatch({ type: TOGGLE_SHOW_ATTRIBUTES });\n  };\n}\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst headspinUrl = 'https://xxxx.headspin.io:4723/v0/your-api-token/wd/hub';\n\nconst ServerTabHeadspin = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='headspinServerHost' placeholder={headspinUrl} addonBefore={t('serverTabHeasdpinWebDriverURL')}\n            value={server.headspin.webDriverUrl} onChange={(e) => setServerParam('webDriverUrl', e.target.value)} />\n          <p className={SessionStyles.localDesc}>{t('sessionHeadspinWebDriverURLDescription')}</p>\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabHeadspin;\n\n","const BUTTON = {\n  DEFAULT: 'default',\n  PRIMARY: 'primary',\n  DISABLED: 'disabled',\n  DANGER: 'danger'\n};\n\nconst ALERT = {\n  ERROR: 'error',\n  WARNING: 'warning',\n  INFO: 'info'\n};\n\nconst INPUT = {\n  NUMBER: 'number',\n  TEXT: 'text',\n  TEXTAREA: 'textarea',\n  PASSWORD: 'password',\n  SUBMIT: 'submit'\n};\n\nconst ROW = {\n  FLEX: 'flex'\n};\n\n\nexport {\n  BUTTON,\n  ALERT,\n  INPUT,\n  ROW\n};\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst browserstackUsernamePlaceholder = (t) => {\n  if (process.env.BROWSERSTACK_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst browserstackAccessKeyPlaceholder = (t) => {\n  if (process.env.BROWSERSTACK_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabBrowserstack = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='browserstackUsername' placeholder={browserstackUsernamePlaceholder(t)} addonBefore={t('BrowserStack Username')} value={server.browserstack.username}\n            onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='browserstackPassword' type={INPUT.PASSWORD} placeholder={browserstackAccessKeyPlaceholder(t)} addonBefore={t('BrowserStack Access Key')}\n            value={server.browserstack.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabBrowserstack;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst lambdatestUsernamePlaceholder = (t) => {\n  if (process.env.LAMBDATEST_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'LAMBDATEST_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst lambdatestAccessKeyPlaceholder = (t) => {\n  if (process.env.LAMBDATEST_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'LAMBDATEST_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabLambdatest = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='lambdatestUsername' placeholder={lambdatestUsernamePlaceholder(t)} addonBefore={t('LambdaTest Username')} value={server.lambdatest.username}\n            onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='lambdatestPassword' type={INPUT.PASSWORD} placeholder={lambdatestAccessKeyPlaceholder(t)} addonBefore={t('LambdaTest Access Key')}\n            value={server.lambdatest.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabLambdatest;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst bitbarApiKeyPlaceholder = (t) => {\n  if (process.env.BITBAR_API_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'BITBAR_API_KEY'});\n  }\n  return t('yourApiKey');\n};\n\nconst ServerTabBitbar = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input id='bitbarApiKey' type={INPUT.PASSWORD} placeholder={bitbarApiKeyPlaceholder(t)} addonBefore={t('Bitbar API Key')}\n            value={server.bitbar.apiKey} onChange={(e) => setServerParam('apiKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabBitbar;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst kobitonUsernamePlaceholder = (t) => {\n  if (process.env.KOBITON_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'KOBITON_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst kobitonAccessKeyPlaceholder = (t) => {\n  if (process.env.KOBITON_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'KOBITON_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabKobiton = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='kobitonUsername' placeholder={kobitonUsernamePlaceholder(t)} addonBefore={t('Your Kobiton Username')} value={server.kobiton.username}\n            onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='kobitonAccessKey' type={INPUT.PASSWORD} placeholder={kobitonAccessKeyPlaceholder(t)} addonBefore={t('Kobiton Access Key')} value={server.kobiton.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabKobiton;\n","import React from 'react';\nimport { Form, Row, Col, Input, Checkbox } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst cloudPerfectoUrl = 'cloud.Perfectomobile.com';\n\nconst portPlaceholder = (server) => server.perfecto.ssl ? '443' : '80';\n\nconst perfectoTokenPlaceholder = (t) => {\n  if (process.env.PERFECTO_TOKEN) {\n    return t('usingDataFoundIn', {environmentVariable: 'PERFECTO_TOKEN'});\n  }\n  return t('Add your token');\n};\n\nconst ServerTabPerfecto = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={9}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='PerfectoServerHost' placeholder={cloudPerfectoUrl} addonBefore={t('Perfecto Host')}\n            value={server.perfecto.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={4}>\n        <Form.Item>\n          <Input id='PerfectoPort' placeholder={portPlaceholder(server)} addonBefore={t('Perfecto Port')} value={server.perfecto.port}\n            onChange={(e) => setServerParam('port', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={9}>\n        <Form.Item>\n          <Input id='token' placeholder={perfectoTokenPlaceholder(t)} addonBefore={t('Perfecto Token')} value={server.perfecto.token}\n            onChange={(e) => setServerParam('token', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={2}>\n        <Form.Item>\n          <Checkbox checked={!!server.perfecto.ssl} onChange={(e) => setServerParam('ssl', e.target.checked)}> {'SSL'}</Checkbox>\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabPerfecto;\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\nimport { INPUT } from '../AntdTypes';\n\nconst pcloudyUsernamePlaceholder = 'username@pcloudy.com';\nconst pcloudyHostPlaceholder = 'cloud.pcloudy.com';\nconst pcloudyAccessKeyExample = 'kjdgtdwn65fdasd78uy6y';\n\nconst ServerTabPcloudy = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={8}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='PcloudyServerHost' placeholder={pcloudyHostPlaceholder} addonBefore={t('Pcloudy Host')}\n            value={server.pcloudy.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={8}>\n        <Form.Item>\n          <Input id='username' type={INPUT.TEXT} placeholder={pcloudyUsernamePlaceholder} addonBefore={t('Pcloudy User Name')}\n            value={server.pcloudy.username} onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={8}>\n        <Form.Item>\n          <Input id='accessKey' type={INPUT.PASSWORD} placeholder={pcloudyAccessKeyExample} addonBefore={t('Pcloudy API Key')}\n            value={server.pcloudy.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabPcloudy;\n","import React from 'react';\nimport { Form, Row, Col, Input, Checkbox, Radio, Tooltip } from 'antd';\nimport SessionStyles from './Session.css';\nimport { INPUT } from '../AntdTypes';\n\nconst sauceUsernamePlaceholder = (t) => {\n  if (process.env.SAUCE_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'SAUCE_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst sauceAccessKeyPlaceholder = (t) => {\n  if (process.env.SAUCE_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'SAUCE_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabSauce = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='sauceUsername' placeholder={sauceUsernamePlaceholder(t)} addonBefore={t('Sauce Username')}\n            value={server.sauce.username} onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='saucePassword' type={INPUT.PASSWORD} placeholder={sauceAccessKeyPlaceholder(t)} addonBefore={t('Sauce Access Key')}\n            value={server.sauce.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n    <Row gutter={8}>\n      <Col span={8}>\n        <Form.Item>\n          <div className={['ant-input-group-addon', SessionStyles.addonDataCenter].join(' ') }>{t('SauceLabs Data Center')}</div>\n          <Radio.Group className={[SessionStyles.inputDataCenter, SessionStyles.addonDataCenterRadioContainer].join(' ')}\n            buttonStyle=\"solid\" defaultValue='us-west-1' id='sauceObjectDataCenter' value={server.sauce.dataCenter} onChange={(e) => setServerParam('dataCenter', e.target.value)}>\n            <Tooltip placement=\"top\" title={t('UP')}>\n              <Radio value='us-west-1'>{t('US')}</Radio>\n            </Tooltip>\n            <Radio value='eu-central-1'>{t('EU')}</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Col>\n      <Col span={8} align=\"right\">\n        <Form.Item>\n          <Checkbox checked={!!server.sauce.useSCProxy} onChange={(e) => setServerParam('useSCProxy', e.target.checked)}> {t('proxyThroughSC')}</Checkbox>\n        </Form.Item>\n      </Col>\n      <Col span={5}>\n        <Form.Item>\n          <Input addonBefore={t('Host')} placeholder={t('localhost')} disabled={!server.sauce.useSCProxy}\n            value={server.sauce.scHost} onChange={(e) => setServerParam('scHost', e.target.value)}/>\n        </Form.Item>\n      </Col>\n      <Col span={3}>\n        <Form.Item>\n          <Input addonBefore={t('Port')} placeholder={4445} disabled={!server.sauce.useSCProxy}\n            value={server.sauce.scPort} onChange={(e) => setServerParam('scPort', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabSauce;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst testingbotKeyPlaceholder = (t) => {\n  if (process.env.TB_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'TB_KEY'});\n  }\n  return t('yourUsername');\n};\n\nconst testingbotSecretPlaceholder = (t) => {\n  if (process.env.TB_SECRET) {\n    return t('usingDataFoundIn', {environmentVariable: 'TB_SECRET'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabTestingbot = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='testingbotKey' placeholder={testingbotKeyPlaceholder(t)} addonBefore={t('TestingBot Key')}\n            value={server.testingbot.key} onChange={(e) => setServerParam('key', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='testingbotSecret' type={INPUT.PASSWORD} placeholder={testingbotSecretPlaceholder(t)} addonBefore={t('TestingBot Secret')}\n            value={server.testingbot.secret} onChange={(e) => setServerParam('secret', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabTestingbot;\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst accessKeyPlaceholder = 'accessKey';\nconst placeholderUrl = 'https://example.experitest.com';\n\nconst ServerTabExperitest = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerUrl' placeholder={placeholderUrl}\n            addonBefore={t('experitestUrl')} value={server.experitest.url}\n            onChange={(evt) => setServerParam('url', evt.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerAccessKey' placeholder={accessKeyPlaceholder}\n            addonBefore={t('experitestAccessKey')} value={server.experitest.accessKey}\n            onChange={(evt) => setServerParam('accessKey', evt.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabExperitest;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\n\nconst robotQATokenPlaceholder = (t) => {\n  if (process.env.ROBOTQA_TOKEN) {\n    return t('usingDataFoundIn', {environmentVariable: 'ROBOTQA_TOKEN'});\n  }\n  return t('Add your token');\n};\n\nconst ServerTabRobotQA = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input id='robotQAToken' placeholder={robotQATokenPlaceholder(t)} addonBefore={t('RobotQA Token')}\n            value={server.roboticmobi.token} onChange={(e) => setServerParam('token', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabRobotQA;\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst ServerTabRemoteTestkit = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input id='remoteTestKitAccessToken' type={INPUT.PASSWORD} addonBefore={t('RemoteTestKit AccessToken')} value={server.remotetestkit.token}\n            onChange={(e) => setServerParam('token', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabRemoteTestkit;\n","import React from 'react';\nimport ServerTabHeadspin from './ServerTabHeadspin';\nimport ServerTabBrowserstack from './ServerTabBrowserstack';\nimport ServerTabLambdatest from './ServerTabLambdatest';\nimport ServerTabBitbar from './ServerTabBitbar';\nimport ServerTabKobiton from './ServerTabKobiton';\nimport ServerTabPerfecto from './ServerTabPerfecto';\nimport ServerTabPcloudy from './ServerTabPcloudy';\nimport ServerTabSauce from './ServerTabSauce';\nimport ServerTabTestingbot from './ServerTabTestingbot';\nimport ServerTabExperitest from './ServerTabExperitest';\nimport ServerTabRobotQA from './ServerTabRobotQA';\nimport ServerTabRemoteTestKit from './ServerTabRemoteTestKit';\n\nimport SessionStyles from './Session.css';\n\n// ParcelJS handles image loading by exporting a path to the image\nimport SauceLogo from '../../images/sauce_logo.svg';\nimport HeadSpinLogo from '../../images/headspin_logo.svg';\nimport BrowserStackLogo from '../../images/browserstack_logo.svg';\nimport LambdaTestLogo from '../../images/lambdatest_logo.svg';\nimport BitBarLogo from '../../images/bitbar_logo.svg';\nimport KobitonLogo from '../../images/kobiton_logo.svg';\nimport PerfectoLogo from '../../images/perfecto_logo.svg';\nimport PcloudyLogo from '../../images/pcloudy_logo.svg';\nimport TestingBotLogo from '../../images/testingbot_logo.svg';\nimport ExperitestLogo from '../../images/experitest_logo.svg';\nimport RobotQALogo from '../../images/robotqa_logo.svg';\nimport RemoteTestKitLogo from '../../images/remotetestkit_logo.svg';\n\nconst CloudProviders = {\n  sauce: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={SauceLogo} /></span>,\n    tab: (props) => <ServerTabSauce {...props} />,\n    logo: SauceLogo,\n  },\n  headspin: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={HeadSpinLogo} /></span>,\n    tab: (props) => <ServerTabHeadspin {...props} />,\n    logo: HeadSpinLogo,\n  },\n  browserstack: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BrowserStackLogo} /></span>,\n    tab: (props) => <ServerTabBrowserstack {...props} />,\n    logo: BrowserStackLogo,\n  },\n  lambdatest: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={LambdaTestLogo} /></span>,\n    tab: (props) => <ServerTabLambdatest {...props} />,\n    logo: LambdaTestLogo,\n  },\n  bitbar: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BitBarLogo} /></span>,\n    tab: (props) => <ServerTabBitbar {...props} />,\n    logo: BitBarLogo,\n  },\n  kobiton: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={KobitonLogo} /></span>,\n    tab: (props) => <ServerTabKobiton {...props} />,\n    logo: KobitonLogo,\n  },\n  perfecto: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PerfectoLogo} /></span>,\n    tab: (props) => <ServerTabPerfecto {...props} />,\n    logo: PerfectoLogo,\n  },\n  pcloudy: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PcloudyLogo} /></span>,\n    tab: (props) => <ServerTabPcloudy {...props} />,\n    logo: PcloudyLogo,\n  },\n  testingbot: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={TestingBotLogo} /></span>,\n    tab: (props) => <ServerTabTestingbot {...props} />,\n    logo: TestingBotLogo,\n  },\n  experitest: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={ExperitestLogo} /></span>,\n    tab: (props) => <ServerTabExperitest {...props} />,\n    logo: ExperitestLogo,\n  },\n  roboticmobi: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={RobotQALogo} /></span>,\n    tab: (props) => <ServerTabRobotQA {...props} />,\n    logo: RobotQALogo,\n  },\n  remotetestkit: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={RemoteTestKitLogo} /></span>,\n    tab: (props) => <ServerTabRemoteTestKit {...props} />,\n    logo: RemoteTestKitLogo,\n  }\n};\n\nexport default CloudProviders;","const APPIUM_SESSION_FILE_VERSION = '1.0';\n\nexport function getAppiumSessionFilePath (argv, isPackaged, isDev) {\n  if (isDev) {\n    // do not use file launcher in dev mode because argv is different\n    // then it is in production\n    return false;\n  }\n  if (process.platform === 'darwin' && !isDev) {\n    // packaged macOS apps do not receive args from process.argv, they\n    // receive the filepath argument from the `electron.app.on('open-file', cb)` event\n    return false;\n  }\n  const argvIndex = isPackaged ? 1 : 2;\n  return argv[argvIndex];\n}\n\n// get the slice of the redux state that's needed for the .appiumsession files\nexport function getSaveableState (reduxState) {\n  return {\n    version: APPIUM_SESSION_FILE_VERSION,\n    caps: reduxState.caps,\n    server: reduxState.server,\n    serverType: reduxState.serverType,\n    visibleProviders: reduxState.visibleProviders,\n  };\n}\n\nexport const APPIUM_SESSION_EXTENSION = 'appiumsession';\n","import { getSetting, setSetting, SAVED_SESSIONS, SERVER_ARGS, SESSION_SERVER_TYPE,\n         SESSION_SERVER_PARAMS } from '../../shared/settings';\nimport { v4 as UUID } from 'uuid';\nimport { push } from 'redux-first-history';\nimport { notification } from 'antd';\nimport { includes, debounce, toPairs, union, without, keys, isUndefined, isPlainObject } from 'lodash';\nimport { setSessionDetails, quitSession } from './Inspector';\nimport i18n from '../../configs/i18next.config.renderer';\nimport CloudProviders from '../components/Session/CloudProviders';\nimport { Web2Driver } from 'web2driver';\nimport { addVendorPrefixes } from '../util';\nimport ky from 'ky/umd';\nimport moment from 'moment';\nimport { APP_MODE } from '../components/Inspector/shared';\nimport { ipcRenderer, fs, util } from '../polyfills';\nimport { getSaveableState } from '../../main/helpers';\n\nexport const NEW_SESSION_REQUESTED = 'NEW_SESSION_REQUESTED';\nexport const NEW_SESSION_LOADING = 'NEW_SESSION_LOADING';\nexport const NEW_SESSION_DONE = 'NEW_SESSION_DONE';\nexport const CHANGE_CAPABILITY = 'CHANGE_CAPABILITY';\nexport const SAVE_SESSION_REQUESTED = 'SAVE_SESSION_REQUESTED';\nexport const SAVE_SESSION_DONE = 'SAVE_SESSION_DONE';\nexport const GET_SAVED_SESSIONS_REQUESTED = 'GET_SAVED_SESSIONS_REQUESTED';\nexport const GET_SAVED_SESSIONS_DONE = 'GET_SAVED_SESSIONS_DONE';\nexport const SET_CAPABILITY_PARAM = 'SET_CAPABILITY_PARAM';\nexport const ADD_CAPABILITY = 'ADD_CAPABILITY';\nexport const REMOVE_CAPABILITY = 'REMOVE_CAPABILITY';\nexport const SWITCHED_TABS = 'SWITCHED_TABS';\nexport const SET_CAPS_AND_SERVER = 'SET_CAPS_AND_SERVER';\nexport const SAVE_AS_MODAL_REQUESTED = 'SAVE_AS_MODAL_REQUESTED';\nexport const HIDE_SAVE_AS_MODAL_REQUESTED = 'HIDE_SAVE_AS_MODAL_REQUESTED';\nexport const SET_SAVE_AS_TEXT = 'SET_SAVE_AS_TEXT';\nexport const DELETE_SAVED_SESSION_REQUESTED = 'DELETE_SAVED_SESSION_REQUESTED';\nexport const DELETE_SAVED_SESSION_DONE = 'DELETE_SAVED_SESSION_DONE';\nexport const CHANGE_SERVER_TYPE = 'CHANGE_SERVER_TYPE';\nexport const SET_SERVER_PARAM = 'SET_SERVER_PARAM';\nexport const SET_SERVER = 'SET_SERVER';\n\nexport const VISIBLE_PROVIDERS = 'VISIBLE_PROVIDERS';\n\nexport const SET_ATTACH_SESS_ID = 'SET_ATTACH_SESS_ID';\n\nexport const GET_SESSIONS_REQUESTED = 'GET_SESSIONS_REQUESTED';\nexport const GET_SESSIONS_DONE = 'GET_SESSIONS_DONE';\n\nexport const ENABLE_DESIRED_CAPS_NAME_EDITOR = 'ENABLE_DESIRED_CAPS_NAME_EDITOR';\nexport const ABORT_DESIRED_CAPS_NAME_EDITOR = 'ABORT_DESIRED_CAPS_NAME_EDITOR';\nexport const SAVE_DESIRED_CAPS_NAME = 'SAVE_DESIRED_CAPS_NAME';\nexport const SET_DESIRED_CAPS_NAME = 'SET_DESIRED_CAPS_NAME';\n\nexport const ENABLE_DESIRED_CAPS_EDITOR = 'ENABLE_DESIRED_CAPS_EDITOR';\nexport const ABORT_DESIRED_CAPS_EDITOR = 'ABORT_DESIRED_CAPS_EDITOR';\nexport const SAVE_RAW_DESIRED_CAPS = 'SAVE_RAW_DESIRED_CAPS';\nexport const SET_RAW_DESIRED_CAPS = 'SET_RAW_DESIRED_CAPS';\nexport const SHOW_DESIRED_CAPS_JSON_ERROR = 'SHOW_DESIRED_CAPS_JSON_ERROR';\n\nexport const IS_ADDING_CLOUD_PROVIDER = 'IS_ADDING_CLOUD_PROVIDER';\n\nexport const SET_PROVIDERS = 'SET_PROVIDERS';\n\nexport const SET_ADD_VENDOR_PREFIXES = 'SET_ADD_VENDOR_PREFIXES';\n\nexport const SET_STATE_FROM_URL = 'SET_STATE_FROM_URL';\nexport const SET_STATE_FROM_SAVED = 'SET_STATE_FROM_SAVED';\n\n\nconst CAPS_NEW_COMMAND = 'appium:newCommandTimeout';\nconst CAPS_CONNECT_HARDWARE_KEYBOARD = 'appium:connectHardwareKeyboard';\nconst CAPS_NATIVE_WEB_SCREENSHOT = 'appium:nativeWebScreenshot';\nconst CAPS_ENSURE_WEBVIEW_HAVE_PAGES = 'appium:ensureWebviewsHavePages';\nconst CAPS_INCLUDE_SAFARI_IN_WEBVIEWS = 'appium:includeSafariInWebviews';\n\nconst FILE_PATH_STORAGE_KEY = 'last_opened_file';\n\nconst AUTO_START_URL_PARAM = '1'; // what should be passed in to ?autoStart= to turn it on\n\nconst MJPEG_CAP = 'mjpegScreenshotUrl';\nconst MJPEG_PORT_CAP = 'mjpegServerPort';\n\n// Multiple requests sometimes send a new session request\n// after establishing a session.\n// This situation could happen easier on cloud vendors,\n// so let's set zero so far.\n// TODO: increase this retry when we get issues\nexport const CONN_RETRIES = 0;\nconst CONN_TIMEOUT = 5 * 60 * 1000;\nconst HEADERS_CONTENT = 'application/json; charset=utf-8';\n\n// 1 hour default newCommandTimeout\nconst NEW_COMMAND_TIMEOUT_SEC = 3600;\n\nlet isFirstRun = true; // we only want to auto start a session on a first run\n\nconst serverTypes = {};\nfor (const key of keys(CloudProviders)) {\n  serverTypes[key] = key;\n}\nserverTypes.local = 'local';\nserverTypes.remote = 'remote';\n\nexport const ServerTypes = serverTypes;\n\nexport const DEFAULT_SERVER_PATH = '/';\nexport const DEFAULT_SERVER_HOST = '127.0.0.1';\nexport const DEFAULT_SERVER_PORT = 4723;\n\nconst SAUCE_OPTIONS_CAP = 'sauce:options';\n\nconst JSON_TYPES = ['object', 'number', 'boolean'];\n\nexport function getCapsObject (caps) {\n  return Object.assign({}, ...(caps.map((cap) => {\n    if (JSON_TYPES.indexOf(cap.type) !== -1) {\n      try {\n        let obj = JSON.parse(cap.value);\n        return {[cap.name]: obj};\n      } catch (ign) {}\n    }\n    return {[cap.name]: cap.value};\n  })));\n}\n\nexport function showError (e, methodName, secs = 5) {\n  let errMessage;\n  if (e['jsonwire-error'] && e['jsonwire-error'].status === 7) {\n    // FIXME: we probably should set 'findElement' as the method name\n    // if it is also number.\n    if (methodName === 10) {\n      methodName = 'findElements';\n    }\n    errMessage = i18n.t('findElementFailure', {methodName});\n    if (e.message) {\n      errMessage += ` Original error: '${e.message}'`;\n    }\n  } else if (e.data) {\n    try {\n      e.data = JSON.parse(e.data);\n    } catch (ign) {}\n    if (e.data.value && e.data.value.message) {\n      errMessage = e.data.value.message;\n    } else {\n      errMessage = e.data;\n    }\n  } else if (e.message) {\n    errMessage = e.message;\n  } else if (e.code) {\n    errMessage = e.code;\n  } else {\n    errMessage = i18n.t('Could not start session');\n  }\n  if (errMessage === 'ECONNREFUSED' || includes(errMessage, 'Failed to fetch')) {\n    errMessage = i18n.t('couldNotConnect');\n  }\n\n  notification.error({\n    message: methodName ? i18n.t('callToMethodFailed', {methodName}) : i18n.t('Error'),\n    description: errMessage,\n    duration: secs\n  });\n\n}\n\n/**\n * Change the caps object, along with the server details and then go back to the new session tab\n */\nexport function setCapsAndServer (server, serverType, caps, uuid, name) {\n  return (dispatch) => {\n    dispatch({type: SET_CAPS_AND_SERVER, server, serverType, caps, uuid, name});\n  };\n}\n\n/**\n * Change a single desired capability\n */\nexport function changeCapability (key, value) {\n  return (dispatch) => {\n    dispatch({type: CHANGE_CAPABILITY, key, value});\n  };\n}\n\n/**\n * Push a capability to the list\n */\nexport function addCapability () {\n  return (dispatch) => {\n    dispatch({type: ADD_CAPABILITY});\n  };\n}\n\n/**\n * Update value of a capability parameter\n */\nexport function setCapabilityParam (index, name, value) {\n  return (dispatch) => {\n    dispatch({type: SET_CAPABILITY_PARAM, index, name, value});\n  };\n}\n\n/**\n * Delete a capability from the list\n */\nexport function removeCapability (index) {\n  return (dispatch) => {\n    dispatch({type: REMOVE_CAPABILITY, index});\n  };\n}\n\nfunction _addVendorPrefixes (caps, dispatch, getState) {\n  const {server, serverType, capsUUID, capsName} = getState().session;\n  const prefixedCaps = addVendorPrefixes(caps);\n  setCapsAndServer(server, serverType, prefixedCaps, capsUUID, capsName)(dispatch);\n  return prefixedCaps;\n}\n\n/**\n * Start a new appium session with the given caps\n */\nexport function newSession (caps, attachSessId = null) {\n  return async (dispatch, getState) => {\n    let session = getState().session;\n\n    // first add vendor prefixes to caps if requested\n    if (!attachSessId && session.addVendorPrefixes) {\n      caps = _addVendorPrefixes(caps, dispatch, getState);\n    }\n\n    dispatch({type: NEW_SESSION_REQUESTED, caps});\n\n    let desiredCapabilities = caps ? getCapsObject(caps) : {};\n    let host, port, username, accessKey, https, path, token;\n    desiredCapabilities = addCustomCaps(desiredCapabilities);\n\n    switch (session.serverType) {\n      case ServerTypes.local:\n        host = session.server.local.hostname;\n        if (host === '0.0.0.0') {\n          // if we're on windows, we won't be able to connect directly to '0.0.0.0'\n          // so just connect to localhost; if we're listening on all interfaces,\n          // that will of course include 127.0.0.1 on all platforms\n          host = 'localhost';\n        }\n        port = session.server.local.port;\n        break;\n      case ServerTypes.remote:\n        host = session.server.remote.hostname;\n        port = session.server.remote.port;\n        path = session.server.remote.path;\n        https = session.server.remote.ssl;\n        break;\n      case ServerTypes.sauce:\n        path = '/wd/hub';\n        host = `ondemand.${session.server.sauce.dataCenter}.saucelabs.com`;\n        port = 80;\n        if (session.server.sauce.useSCProxy) {\n          host = session.server.sauce.scHost || 'localhost';\n          port = parseInt(session.server.sauce.scPort, 10) || 4445;\n        }\n        username = session.server.sauce.username || process.env.SAUCE_USERNAME;\n        accessKey = session.server.sauce.accessKey || process.env.SAUCE_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('sauceCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = false;\n        if (!isPlainObject(desiredCapabilities[SAUCE_OPTIONS_CAP])) {\n          desiredCapabilities[SAUCE_OPTIONS_CAP] = {};\n        }\n        if (!desiredCapabilities[SAUCE_OPTIONS_CAP].name) {\n          const dateTime = moment().format('lll');\n          desiredCapabilities[SAUCE_OPTIONS_CAP].name = `Appium Desktop Session -- ${dateTime}`;\n        }\n        break;\n      case ServerTypes.headspin: {\n        let headspinUrl;\n        try {\n          headspinUrl = new URL(session.server.headspin.webDriverUrl);\n        } catch (ign) {\n          showError(new Error(`${session.server.headspin.webDriverUrl} is invalid url`), null, 0);\n          return;\n        }\n        host = session.server.headspin.hostname = headspinUrl.hostname;\n        path = session.server.headspin.path = headspinUrl.pathname;\n        https = session.server.headspin.ssl = headspinUrl.protocol === 'https:';\n        // new URL() does not have the port of 443 when `https` and 80 when `http`\n        port = session.server.headspin.port = headspinUrl.port === '' ? (https ? 443 : 80) : headspinUrl.port;\n        break;\n      }\n      case ServerTypes.perfecto:\n        host = session.server.perfecto.hostname;\n        port = session.server.perfecto.port || (session.server.perfecto.ssl ? 443 : 80);\n        token = session.server.perfecto.token || process.env.PERFECTO_TOKEN;\n        path = session.server.perfecto.path = '/nexperience/perfectomobile/wd/hub';\n        if (!token) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('Perfecto SecurityToken is required'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities['perfecto:options'] = {securityToken: token};\n        https = session.server.perfecto.ssl;\n        break;\n      case ServerTypes.browserstack:\n        host = session.server.browserstack.hostname = process.env.BROWSERSTACK_HOST || 'hub-cloud.browserstack.com';\n        port = session.server.browserstack.port = process.env.BROWSERSTACK_PORT || 443;\n        path = session.server.browserstack.path = '/wd/hub';\n        username = session.server.browserstack.username || process.env.BROWSERSTACK_USERNAME;\n        if (!desiredCapabilities['bstack:options']) {\n          desiredCapabilities['bstack:options'] = {};\n        }\n        desiredCapabilities['bstack:options'].source = 'appiumdesktop';\n        accessKey = session.server.browserstack.accessKey || process.env.BROWSERSTACK_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('browserstackCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.browserstack.ssl = (parseInt(port, 10) === 443);\n        break;\n      case ServerTypes.lambdatest:\n        host = session.server.lambdatest.hostname = process.env.LAMBDATEST_HOST || 'mobile-hub.lambdatest.com';\n        port = session.server.lambdatest.port = process.env.LAMBDATEST_PORT || 443;\n        path = session.server.lambdatest.path = '/wd/hub';\n        username = session.server.lambdatest.username || process.env.LAMBDATEST_USERNAME;\n        if (desiredCapabilities.hasOwnProperty.call(desiredCapabilities, 'lt:options')) {\n          desiredCapabilities['lt:options'].source = 'appiumdesktop';\n          desiredCapabilities['lt:options'].isRealMobile = true;\n          if (session.server.advanced.useProxy) {\n            desiredCapabilities['lt:options'].proxyUrl = isUndefined(session.server.advanced.proxy) ? '' : session.server.advanced.proxy;\n          }\n        } else {\n          desiredCapabilities['lambdatest:source'] = 'appiumdesktop';\n          desiredCapabilities['lambdatest:isRealMobile'] = true;\n          if (session.server.advanced.useProxy) {\n            desiredCapabilities['lambdatest:proxyUrl'] = isUndefined(session.server.advanced.proxy) ? '' : session.server.advanced.proxy;\n          }\n        }\n        accessKey = session.server.lambdatest.accessKey || process.env.LAMBDATEST_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('lambdatestCredentialsRequired'),\n            duration: 4,\n          });\n          return;\n        }\n        https = session.server.lambdatest.ssl = parseInt(port, 10) === 443;\n        break;\n      case ServerTypes.bitbar:\n        host = process.env.BITBAR_HOST || 'appium.bitbar.com';\n        port = session.server.bitbar.port = 443;\n        path = session.server.bitbar.path = '/wd/hub';\n        accessKey = session.server.bitbar.apiKey || process.env.BITBAR_API_KEY;\n        if (!accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('bitbarCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities['bitbar:options'] = {\n          source: 'appiumdesktop',\n          apiKey: accessKey,\n        };\n        https = session.server.bitbar.ssl = true;\n        break;\n      case ServerTypes.kobiton:\n        host = process.env.KOBITON_HOST || 'api.kobiton.com';\n        port = session.server.kobiton.port = 443;\n        path = session.server.kobiton.path = '/wd/hub';\n        username = session.server.kobiton.username || process.env.KOBITON_USERNAME;\n        accessKey = session.server.kobiton.accessKey || process.env.KOBITON_ACCESS_KEY;\n        desiredCapabilities['kobiton:options'] = {};\n        desiredCapabilities['kobiton:options'].source = 'appiumdesktop';\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('kobitonCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.kobiton.ssl = true;\n        break;\n      case ServerTypes.pcloudy:\n        host = session.server.pcloudy.hostname;\n        port = session.server.pcloudy.port = 443;\n        path = session.server.pcloudy.path = '/objectspy/wd/hub';\n        desiredCapabilities.pCloudy_Username = session.server.pcloudy.username || process.env.PCLOUDY_USERNAME;\n        desiredCapabilities.pCloudy_ApiKey = session.server.pcloudy.accessKey || process.env.PCLOUDY_ACCESS_KEY;\n        if (!(session.server.pcloudy.username || process.env.PCLOUDY_USERNAME) ||\n              !(session.server.pcloudy.accessKey || process.env.PCLOUDY_ACCESS_KEY)) {\n          notification.error({\n            message: 'Error',\n            description: 'PCLOUDY username and api key are required!',\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.pcloudy.ssl = true;\n        break;\n      case ServerTypes.testingbot:\n        host = session.server.testingbot.hostname = process.env.TB_HOST || 'hub.testingbot.com';\n        port = session.server.testingbot.port = 443;\n        path = session.server.testingbot.path = '/wd/hub';\n        if (!desiredCapabilities['tb:options']) {\n          desiredCapabilities['tb:options'] = {};\n        }\n        desiredCapabilities['tb:options'].key = session.server.testingbot.key || process.env.TB_KEY;\n        desiredCapabilities['tb:options'].secret = session.server.testingbot.secret || process.env.TB_SECRET;\n        if (!(session.server.testingbot.key || process.env.TB_KEY) ||\n              !(session.server.testingbot.secret || process.env.TB_SECRET)) {\n          notification.error({\n            message: 'Error',\n            description: i18n.t('testingbotCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.testingbot.ssl = true;\n        break;\n      case ServerTypes.experitest: {\n        if (!session.server.experitest.url || !session.server.experitest.accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('experitestAccessKeyURLRequired'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities['experitest:accessKey'] = session.server.experitest.accessKey;\n\n        let experitestUrl;\n        try {\n          experitestUrl = new URL(session.server.experitest.url);\n        } catch (ign) {\n          showError(new Error(`${session.server.experitest.url} is invalid url`), null, 0);\n          return;\n        }\n\n        host = session.server.experitest.hostname = experitestUrl.hostname;\n        path = session.server.experitest.path = '/wd/hub';\n        https = session.server.experitest.ssl = experitestUrl.protocol === 'https:';\n        port = session.server.experitest.port = experitestUrl.port === '' ? (https ? 443 : 80) : experitestUrl.port;\n        break;\n      } case ServerTypes.roboticmobi: {\n        host = 'remote.robotqa.com';\n        path = '/wd/hub';\n        port = 443;\n        https = session.server.roboticmobi.ssl = true;\n        if (caps) {\n          desiredCapabilities['robotqa:options'] = {};\n          desiredCapabilities['robotqa:options'].robotqa_token = session.server.roboticmobi.token || process.env.ROBOTQA_TOKEN;\n        }\n        break;\n      } case ServerTypes.remotetestkit: {\n        host = 'gwjp.appkitbox.com';\n        path = '/wd/hub';\n        port = 443;\n        https = true;\n        desiredCapabilities['remotetestkit:options'] = {};\n        desiredCapabilities['remotetestkit:options'].accessToken = session.server.remotetestkit.token;\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    // if the server path is '' (or any other kind of falsy) set it to default\n    path = path || DEFAULT_SERVER_PATH;\n    host = host || DEFAULT_SERVER_HOST;\n    port = port || DEFAULT_SERVER_PORT;\n\n    // TODO W2D handle proxy and rejectUnauthorized cases\n    //let rejectUnauthorized = !session.server.advanced.allowUnauthorized;\n    //let proxy;\n    //if (session.server.advanced.useProxy && session.server.advanced.proxy) {\n    //  proxy = session.server.advanced.proxy;\n    //}\n\n    dispatch({type: NEW_SESSION_LOADING});\n\n\n    const serverOpts = {\n      hostname: host,\n      port: parseInt(port, 10),\n      protocol: https ? 'https' : 'http',\n      path,\n      connectionRetryCount: CONN_RETRIES,\n      connectionRetryTimeout: CONN_TIMEOUT\n    };\n\n    if (username && accessKey) {\n      serverOpts.user = username;\n      serverOpts.key = accessKey;\n    }\n\n    // If a newCommandTimeout wasn't provided, set it to 60 * 60 so that sessions don't close on users in short term.\n    // I saw sometimes infinit session timeout was not so good for cloud providers.\n    // So, let me define this value as NEW_COMMAND_TIMEOUT_SEC by default.\n    if (isUndefined(desiredCapabilities[CAPS_NEW_COMMAND])) {\n      desiredCapabilities[CAPS_NEW_COMMAND] = NEW_COMMAND_TIMEOUT_SEC;\n    }\n\n    // If someone didn't specify connectHardwareKeyboard, set it to true by\n    // default\n    if (isUndefined(desiredCapabilities[CAPS_CONNECT_HARDWARE_KEYBOARD])) {\n      desiredCapabilities[CAPS_CONNECT_HARDWARE_KEYBOARD] = true;\n    }\n\n    serverOpts.logLevel = process.env.NODE_ENV === 'development' ? 'info' : 'warn';\n\n    let driver = null;\n    try {\n      if (attachSessId) {\n        // When attaching to a session id, webdriver does not fully populate\n        // client information, so we should supplement by attaching session\n        // capabilities that we are attaching to.\n        const attachedSessionCaps = session.runningAppiumSessions.find((session) => session.id === attachSessId).capabilities;\n        serverOpts.isMobile = true;\n        serverOpts.isIOS = Boolean(attachedSessionCaps.platformName.match(/iOS/i));\n        serverOpts.isAndroid = Boolean(attachedSessionCaps.platformName.match(/Android/i));\n        driver = await Web2Driver.attachToSession(attachSessId, serverOpts, attachedSessionCaps);\n        driver._isAttachedSession = true;\n      } else {\n        driver = await Web2Driver.remote(serverOpts, desiredCapabilities);\n      }\n    } catch (err) {\n      showError(err, null, 0);\n      return;\n    } finally {\n      dispatch({type: NEW_SESSION_DONE});\n      // Save the current server settings\n      await setSetting(SESSION_SERVER_PARAMS, session.server);\n    }\n\n    // The homepage arg in ChromeDriver is not working with Appium. iOS can have a default url, but\n    // we want to keep the process equal to prevent complexity so we launch a default url here to make\n    // sure we don't start with an empty page which will not show proper HTML in the inspector\n    const {browserName = ''} = desiredCapabilities;\n    let mode = APP_MODE.NATIVE;\n\n    if (browserName.trim() !== '') {\n      try {\n        mode = APP_MODE.WEB_HYBRID;\n        await driver.navigateTo('https://appium.io');\n      } catch (ign) {}\n    }\n\n\n    let mjpegScreenshotUrl = driver.capabilities[`appium:${MJPEG_CAP}`] ||\n      driver.capabilities[MJPEG_CAP] ||\n      null;\n\n    const mjpegScreenshotPort = driver.capabilities[`appium:${MJPEG_PORT_CAP}`] ||\n      driver.capabilities[MJPEG_PORT_CAP] ||\n      null;\n\n    // Build mjpegScreenshotUrl if mjpegServerPort in session capabilities\n    if (!mjpegScreenshotUrl && mjpegScreenshotPort) {\n      mjpegScreenshotUrl = `${https ? 'https' : 'http'}://${host}:${mjpegScreenshotPort}`;\n    }\n\n    // pass some state to the inspector that it needs to build recorder\n    // code boilerplate\n    const action = setSessionDetails({\n      driver,\n      sessionDetails: {\n        desiredCapabilities,\n        host,\n        port,\n        path,\n        username,\n        accessKey,\n        https,\n      },\n      mode,\n      mjpegScreenshotUrl\n    });\n    action(dispatch);\n    dispatch(push('/inspector'));\n  };\n}\n\n\n/**\n * Saves the caps and server details\n */\nexport function saveSession (server, serverType, caps, params) {\n  return async (dispatch) => {\n    let {name, uuid} = params;\n    dispatch({type: SAVE_SESSION_REQUESTED});\n    let savedSessions = await getSetting(SAVED_SESSIONS) || [];\n    if (!uuid) {\n\n      // If it's a new session, add it to the list\n      uuid = UUID();\n      let newSavedSession = {\n        date: Date.now(),\n        name,\n        uuid,\n        caps,\n        server,\n        serverType,\n      };\n      savedSessions.push(newSavedSession);\n    } else {\n\n      // If it's an existing session, overwrite it\n      for (let session of savedSessions) {\n        if (session.uuid === uuid) {\n          session.name = name;\n          session.caps = caps;\n          session.server = server;\n          session.serverType = serverType;\n        }\n      }\n    }\n    await setSetting(SAVED_SESSIONS, savedSessions);\n    const action = getSavedSessions();\n    await action(dispatch);\n    dispatch({type: SET_CAPS_AND_SERVER, server, serverType, caps, uuid, name});\n    dispatch({type: SAVE_SESSION_DONE});\n  };\n}\n\n/**\n * Get the sessions saved by the user\n */\nexport function getSavedSessions () {\n  return async (dispatch) => {\n    dispatch({type: GET_SAVED_SESSIONS_REQUESTED});\n    let savedSessions = await getSetting(SAVED_SESSIONS);\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions});\n  };\n}\n\n/**\n * Switch to a different tab\n */\nexport function switchTabs (key) {\n  return (dispatch) => {\n    dispatch({type: SWITCHED_TABS, key});\n  };\n}\n\n/**\n * Open a 'Save As' modal\n */\nexport function requestSaveAsModal () {\n  return (dispatch) => {\n    dispatch({type: SAVE_AS_MODAL_REQUESTED});\n  };\n}\n\n/**\n * Hide the 'Save As' modal\n */\nexport function hideSaveAsModal () {\n  return (dispatch) => {\n    dispatch({type: HIDE_SAVE_AS_MODAL_REQUESTED});\n  };\n}\n\n/**\n * Set the text to save capabilities as\n */\nexport function setSaveAsText (saveAsText) {\n  return (dispatch) => {\n    dispatch({type: SET_SAVE_AS_TEXT, saveAsText});\n  };\n}\n\n/**\n * Delete a saved session\n */\nexport function deleteSavedSession (uuid) {\n  return async (dispatch) => {\n    dispatch({type: DELETE_SAVED_SESSION_REQUESTED, uuid});\n    let savedSessions = await getSetting(SAVED_SESSIONS);\n    let newSessions = savedSessions.filter((session) => session.uuid !== uuid);\n    await setSetting(SAVED_SESSIONS, newSessions);\n    dispatch({type: DELETE_SAVED_SESSION_DONE});\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions: newSessions});\n  };\n}\n\n/**\n * Set the session id to attach to\n */\nexport function setAttachSessId (attachSessId) {\n  return (dispatch) => {\n    dispatch({type: SET_ATTACH_SESS_ID, attachSessId});\n  };\n}\n\n/**\n * Change the server type\n */\nexport function changeServerType (serverType) {\n  return async (dispatch, getState) => {\n    await setSetting(SESSION_SERVER_TYPE, serverType);\n    dispatch({type: CHANGE_SERVER_TYPE, serverType});\n    const action = getRunningSessions();\n    action(dispatch, getState);\n  };\n}\n\n/**\n * Set a server parameter (host, port, etc...)\n */\nexport function setServerParam (name, value, serverType) {\n  const debounceGetRunningSessions = debounce(getRunningSessions(), 5000);\n  return async (dispatch, getState) => {\n    serverType = serverType || getState().session.serverType;\n    await setSetting(SESSION_SERVER_TYPE, serverType);\n    dispatch({type: SET_SERVER_PARAM, serverType, name, value});\n    debounceGetRunningSessions(dispatch, getState);\n  };\n}\n\n/**\n * Set the local server hostname and port to whatever was saved in 'actions/StartServer.js' so that it\n * defaults to what the currently running appium server is\n */\nexport function setLocalServerParams () {\n  return async (dispatch, getState) => {\n    let serverArgs = await getSetting(SERVER_ARGS);\n    // Get saved server args from settings and set local server settings to it. If there are no saved args, set local\n    // host and port to undefined\n    if (serverArgs) {\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: serverArgs.port});\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: 'localhost'});\n    } else {\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: undefined});\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: undefined});\n      if (getState().session.serverType === 'local') {\n        const action = changeServerType('remote');\n        await action(dispatch, getState);\n      }\n    }\n  };\n}\n\n/**\n * Set the server parameters to whatever they were last saved as.\n * Params are saved whenever there's a new session\n */\nexport function setSavedServerParams () {\n  return async (dispatch, getState) => {\n    let server = await getSetting(SESSION_SERVER_PARAMS);\n    let serverType = await getSetting(SESSION_SERVER_TYPE);\n    let currentProviders = getState().session.visibleProviders;\n\n    if (server) {\n      // if we have a cloud provider as a saved server, but for some reason the\n      // cloud provider is no longer in the list, revert server type to remote\n      if (keys(CloudProviders).includes(serverType) &&\n          !currentProviders.includes(serverType)) {\n        serverType = ServerTypes.remote;\n      }\n      dispatch({type: SET_SERVER, server, serverType});\n    }\n  };\n}\n\nexport function setStateFromAppiumFile (newFilepath = null) {\n  return async (dispatch) => {\n    // no \"fs\" means we're not in an Electron renderer so do nothing\n    if (!fs) {\n      return;\n    }\n    try {\n      let filePath = newFilepath;\n      if (!newFilepath) {\n        const lastArg = process.argv[process.argv.length - 1];\n        if (!lastArg.startsWith('filename=')) {\n          return;\n        }\n        filePath = lastArg.split('=')[1];\n      }\n      if (sessionStorage.getItem(FILE_PATH_STORAGE_KEY) === filePath) {\n        // file was opened already, do nothing\n        return;\n      }\n      const appiumJson = JSON.parse(await util.promisify(fs.readFile)(filePath, 'utf8'));\n      sessionStorage.setItem(FILE_PATH_STORAGE_KEY, filePath);\n      dispatch({type: SET_STATE_FROM_SAVED, state: appiumJson, filePath});\n    } catch (e) {\n      notification.error({\n        message: `Cannot open file '${newFilepath}'.\\n ${e.message}\\n ${e.stack}`,\n      });\n    }\n  };\n}\n\nexport function saveFile (filepath) {\n  return async (dispatch, getState) => {\n    const state = getState().session;\n    const filePath = filepath || state.filePath;\n    if (filePath) {\n      const appiumFileInfo = getSaveableState(state);\n      await util.promisify(fs.writeFile)(filePath, JSON.stringify(appiumFileInfo, null, 2), 'utf8');\n      sessionStorage.setItem(FILE_PATH_STORAGE_KEY, filePath);\n    } else {\n      // no filepath provided, tell the main renderer to open the save file dialog and\n      // ask the user to save file to a provided path\n      ipcRenderer.send('save-file-as');\n    }\n  };\n}\n\nexport function getRunningSessions () {\n  return async (dispatch, getState) => {\n    const avoidServerTypes = [\n      'sauce'\n    ];\n    // Get currently running sessions for this server\n    const state = getState().session;\n    const {server, serverType} = state;\n    const serverInfo = server[serverType];\n\n    let {hostname, port, path, ssl, username, accessKey} = serverInfo;\n\n    // if we have a standard remote server, fill out connection info based on placeholder defaults\n    // in case the user hasn't adjusted those fields\n    if (serverType === ServerTypes.remote) {\n      hostname = hostname || DEFAULT_SERVER_HOST;\n      port = port || DEFAULT_SERVER_PORT;\n      path = path || DEFAULT_SERVER_PATH;\n    }\n\n    if (!hostname || !port || !path) {\n      // no need to get sessions if we don't have complete server info\n      return;\n    }\n\n    dispatch({type: GET_SESSIONS_REQUESTED});\n    if (avoidServerTypes.includes(serverType)) {\n      dispatch({type: GET_SESSIONS_DONE});\n      return;\n    }\n\n    try {\n      const adjPath = path.endsWith('/') ? path : `${path}/`;\n      const res = username && accessKey\n        ? await ky(`http${ssl ? 's' : ''}://${hostname}:${port}${adjPath}sessions`, {\n          headers: {\n            'Authorization': `Basic ${btoa(`${username}:${accessKey}`)}`,\n            'content-type': HEADERS_CONTENT\n          }\n        }).json()\n        : await ky(`http${ssl ? 's' : ''}://${hostname}:${port}${adjPath}sessions`, {\n          headers: {'content-type': HEADERS_CONTENT}\n        }).json();\n      dispatch({type: GET_SESSIONS_DONE, sessions: res.value});\n    } catch (err) {\n      console.warn(`Ignoring error in getting list of active sessions: ${err}`); // eslint-disable-line no-console\n      dispatch({type: GET_SESSIONS_DONE});\n    }\n  };\n}\n\nexport function startDesiredCapsNameEditor () {\n  return (dispatch) => {\n    dispatch({type: ENABLE_DESIRED_CAPS_NAME_EDITOR});\n  };\n}\n\nexport function abortDesiredCapsNameEditor () {\n  return (dispatch) => {\n    dispatch({type: ABORT_DESIRED_CAPS_NAME_EDITOR});\n  };\n}\n\nexport function saveDesiredCapsName () {\n  return (dispatch, getState) => {\n    const {server, serverType, caps, capsUUID, desiredCapsName} = getState().session;\n    dispatch({type: SAVE_DESIRED_CAPS_NAME, name: desiredCapsName});\n    saveSession(server, serverType, caps, {name: desiredCapsName, uuid: capsUUID})(dispatch);\n  };\n}\n\nexport function setDesiredCapsName (desiredCapsName) {\n  return (dispatch) => {\n    dispatch({type: SET_DESIRED_CAPS_NAME, desiredCapsName});\n  };\n}\n\nexport function startDesiredCapsEditor () {\n  return (dispatch) => {\n    dispatch({type: ENABLE_DESIRED_CAPS_EDITOR});\n  };\n}\n\nexport function abortDesiredCapsEditor () {\n  return (dispatch) => {\n    dispatch({type: ABORT_DESIRED_CAPS_EDITOR});\n  };\n}\n\nexport function saveRawDesiredCaps () {\n  return (dispatch, getState) => {\n    const state = getState().session;\n    const {rawDesiredCaps, caps: capsArray} = state;\n    try {\n      const newCaps = JSON.parse(rawDesiredCaps);\n\n      // Transform the current caps array to an object\n      let caps = {};\n      for (let {type, name, value} of capsArray) {\n        caps[name] = {type, value};\n      }\n\n      // Translate the caps JSON to array format\n      let newCapsArray = toPairs(newCaps).map(([name, value]) => ({\n        type: (() => {\n          let type = typeof value;\n\n          // If we already have this cap and it's file type, keep the type the same\n          if (caps[name] && caps[name].type === 'file' && type === 'string') {\n            return 'file';\n          } else if (type === 'string') {\n            return 'text';\n          } else {\n            return type;\n          }\n        })(),\n        name,\n        value,\n      }));\n      dispatch({type: SAVE_RAW_DESIRED_CAPS, caps: newCapsArray});\n    } catch (e) {\n      dispatch({type: SHOW_DESIRED_CAPS_JSON_ERROR, message: e.message});\n    }\n  };\n}\n\nexport function setRawDesiredCaps (rawDesiredCaps) {\n  return (dispatch, getState) => {\n    const state = getState().session;\n    let isValidCapsJson = true;\n    let invalidCapsJsonReason;\n    if (state.isValidatingCapsJson) {\n      try {\n        JSON.parse(rawDesiredCaps);\n      } catch (e) {\n        isValidCapsJson = false;\n        invalidCapsJsonReason = e.message;\n      }\n    }\n    dispatch({type: SET_RAW_DESIRED_CAPS, rawDesiredCaps, isValidCapsJson, invalidCapsJsonReason});\n  };\n}\n\nexport function addCloudProvider () {\n  return (dispatch) => {\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: true});\n  };\n}\n\nexport function stopAddCloudProvider () {\n  return (dispatch) => {\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: false});\n  };\n}\n\nexport function addVisibleProvider (provider) {\n  return async (dispatch, getState) => {\n    let currentProviders = getState().session.visibleProviders;\n    const providers = union(currentProviders, [provider]);\n    await setSetting(VISIBLE_PROVIDERS, providers);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\nexport function removeVisibleProvider (provider) {\n  return async (dispatch, getState) => {\n    let currentProviders = getState().session.visibleProviders;\n    const providers = without(currentProviders, provider);\n    await setSetting(VISIBLE_PROVIDERS, providers);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\nexport function setVisibleProviders () {\n  return async (dispatch) => {\n    const providers = await getSetting(VISIBLE_PROVIDERS);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\n/**\n * Add custom capabilities\n *\n * @param {object} caps\n */\nfunction addCustomCaps (caps) {\n  const {platformName = ''} = caps;\n  const androidCustomCaps = {};\n  // @TODO: remove when this is defaulted in the newest Appium 1.8.x release\n  androidCustomCaps[CAPS_ENSURE_WEBVIEW_HAVE_PAGES] = true;\n  // Make sure the screenshot is taken of the whole screen when the ChromeDriver is used\n  androidCustomCaps[CAPS_NATIVE_WEB_SCREENSHOT] = true;\n\n  const iosCustomCaps = {};\n  // Always add the includeSafariInWebviews for future HTML detection\n  // This will ensure that if you use AD to switch between App and browser\n  // that it can detect Safari as a webview\n  iosCustomCaps[CAPS_INCLUDE_SAFARI_IN_WEBVIEWS] = true;\n\n  return {\n    ...caps,\n    ...(platformName.toLowerCase() === 'android' ? androidCustomCaps : {}),\n    ...(platformName.toLowerCase() === 'ios' ? iosCustomCaps : {}),\n  };\n}\n\nexport function bindWindowClose () {\n  return (dispatch, getState) => {\n    window.addEventListener('beforeunload', async (evt) => {\n      let {driver} = getState().inspector;\n      if (driver) {\n        try {\n          const action = quitSession('Window closed');\n          await action(dispatch, getState);\n        } finally {\n          driver = null;\n        }\n      }\n\n      // to allow the window close to continue, the thing we must do is make sure the event no\n      // longer has any 'returnValue' property\n      delete evt.returnValue;\n    });\n  };\n}\n\nexport function setAddVendorPrefixes (addVendorPrefixes) {\n  return (dispatch) => {\n    dispatch({type: SET_ADD_VENDOR_PREFIXES, addVendorPrefixes});\n  };\n}\n\nexport function initFromQueryString () {\n  return async (dispatch, getState) => {\n    if (!isFirstRun) {\n      return;\n    }\n\n    isFirstRun = false;\n\n    const url = new URL(window.location.href);\n    const initialState = url.searchParams.get('state');\n    const autoStartSession = url.searchParams.get('autoStart');\n\n    if (initialState) {\n      try {\n        const state = JSON.parse(initialState);\n        dispatch({type: SET_STATE_FROM_URL, state});\n      } catch (e) {\n        showError(new Error('Could not parse initial state from URL'), null, 0);\n      }\n    }\n\n    if (autoStartSession === AUTO_START_URL_PARAM) {\n      const {attachSessId, caps} = getState().session;\n      if (attachSessId) {\n        return await newSession(null, attachSessId)(dispatch, getState);\n      }\n      await newSession(caps)(dispatch, getState);\n    }\n  };\n}\n","import React from 'react';\nimport formatJSON from 'format-json';\nimport SessionStyles from './Session.css';\nimport { Card, Button, Alert, Tooltip } from 'antd';\nimport { getCapsObject } from '../../actions/Session.js';\nimport { CloseOutlined, SaveOutlined, EditOutlined } from '@ant-design/icons';\nimport { ALERT } from '../AntdTypes';\n\nconst FormattedCaps = (props) => {\n  const { caps, title, desiredCapsName, isEditingDesiredCapsName,\n          isEditingDesiredCaps, startDesiredCapsEditor, abortDesiredCapsEditor,\n          saveRawDesiredCaps, setRawDesiredCaps, rawDesiredCaps,\n          isValidCapsJson, invalidCapsJsonReason, t } = props;\n\n  const setCapsTitle = () => {\n    const { setDesiredCapsName } = props;\n    if (!title) {\n      return 'JSON Representation';\n    } else if (!isEditingDesiredCapsName) {\n      return title;\n    } else {\n      return <input\n        onChange={(e) => setDesiredCapsName(e.target.value)}\n        value={desiredCapsName}\n        className={SessionStyles.capsEditorTitle}\n      />;\n    }\n  };\n\n  const setCapsTitleButtons = () => {\n    const { startDesiredCapsNameEditor, abortDesiredCapsNameEditor, saveDesiredCapsName } = props;\n    if (!title) {\n      return null;\n    } else if (!isEditingDesiredCapsName) {\n      return <Tooltip title={t('Edit')}>\n        <Button\n          size='small'\n          onClick={startDesiredCapsNameEditor}\n          icon={<EditOutlined/>}\n          className={SessionStyles.capsNameEditorButton}/>\n      </Tooltip>;\n    } else {\n      return <div><Tooltip title={t('Cancel')}>\n        <Button\n          size='small'\n          onClick={abortDesiredCapsNameEditor}\n          icon={<CloseOutlined/>}\n          className={SessionStyles.capsNameEditorButton} />\n      </Tooltip>\n      <Tooltip title={t('Save')}>\n        <Button\n          size='small'\n          onClick={saveDesiredCapsName}\n          icon={<SaveOutlined/>}\n          className={SessionStyles.capsNameEditorButton} />\n      </Tooltip></div>;\n    }\n  };\n\n  return caps && <Card\n    className={SessionStyles.formattedCaps}\n    title={setCapsTitle()}\n    extra={setCapsTitleButtons()}\n  >\n    <div className={SessionStyles.capsEditorControls}>\n      {isEditingDesiredCaps && <Tooltip title={t('Cancel')}>\n        <Button\n          onClick={abortDesiredCapsEditor}\n          icon={<CloseOutlined/>}\n          className={SessionStyles.capsEditorButton} />\n      </Tooltip> }\n      {isEditingDesiredCaps && <Tooltip title={t('Save')}>\n        <Button\n          onClick={saveRawDesiredCaps}\n          icon={<SaveOutlined/>}\n          className={SessionStyles.capsEditorButton} />\n      </Tooltip>}\n      {!isEditingDesiredCaps && <Tooltip title={t('Edit Raw JSON')} placement=\"topRight\" >\n        <Button\n          onClick={startDesiredCapsEditor}\n          icon={<EditOutlined/>} />\n      </Tooltip> }\n    </div>\n    {isEditingDesiredCaps && <div className={SessionStyles.capsEditor}>\n      <textarea onChange={(e) => setRawDesiredCaps(e.target.value)} value={rawDesiredCaps}\n        className={`${SessionStyles.capsEditorBody} ${isValidCapsJson ? SessionStyles.capsEditorBodyFull : SessionStyles.capsEditorBodyResized}`}\n      />\n      {!isValidCapsJson && <Alert message={invalidCapsJsonReason} type={ALERT.ERROR} />}\n    </div>}\n    {!isEditingDesiredCaps && <div className={SessionStyles.formattedCapsBody}>\n      <pre>{formatJSON.plain(getCapsObject(caps))}</pre>\n    </div>}\n  </Card>;\n};\n\nexport default FormattedCaps;\n","import React from 'react';\nimport { Switch, Input } from 'antd';\nimport SessionStyles from './Session.css';\nimport { remote, log } from '../../polyfills';\nimport { FileOutlined } from '@ant-design/icons';\nimport { INPUT } from '../AntdTypes';\nimport _ from 'lodash';\n\nconst getLocalFilePath = async () => {\n  try {\n    const {canceled, filePaths} = await remote.dialog.showOpenDialog({properties: ['openFile']});\n    if (!canceled && !_.isEmpty(filePaths)) {\n      return filePaths[0];\n    }\n  } catch (e) {\n    log.error(e);\n  }\n};\n\nconst CapabilityControl = ({ cap, onSetCapabilityParam, onPressEnter, isEditingDesiredCaps, id, t }) => {\n  switch (cap.type) {\n    case 'text':\n      return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n        onChange={(e) => onSetCapabilityParam(e.target.value)} onPressEnter={onPressEnter} className={SessionStyles.capsBoxFont} />;\n    case 'boolean':\n      return <Switch disabled={isEditingDesiredCaps} id={id} checkedChildren={'true'} unCheckedChildren={'false'}\n        placeholder={t('Value')} checked={cap.value} onChange={(value) => onSetCapabilityParam(value)} />;\n    case 'number':\n      return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n        onChange={(e) => !isNaN(parseInt(e.target.value, 10)) ? onSetCapabilityParam(parseInt(e.target.value, 10)) : onSetCapabilityParam(undefined)}\n        onPressEnter={onPressEnter} className={SessionStyles.capsBoxFont} />;\n    case 'object':\n    case 'json_object':\n      return <Input disabled={isEditingDesiredCaps} id={id} type={INPUT.TEXTAREA} rows={4} placeholder={t('Value')}\n        value={cap.value} onChange={(e) => onSetCapabilityParam(e.target.value)} className={SessionStyles.capsBoxFont} />;\n    case 'file':\n      return <div className={SessionStyles.fileControlWrapper}>\n        <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n          onChange={(e) => onSetCapabilityParam(e.target.value)} onPressEnter={onPressEnter} className={SessionStyles.capsBoxFont}\n          addonAfter={\n            <FileOutlined className={SessionStyles['filepath-button']}\n              onClick={async () => onSetCapabilityParam(await getLocalFilePath() || cap.value)} />\n          } />\n      </div>;\n    default:\n      throw `Invalid cap type: ${cap.type}`;\n  }\n};\n\nexport default CapabilityControl;\n","import React, { useEffect, useRef } from 'react';\nimport { Button, Checkbox, Input, Modal, Form, Row, Col, Select, Tooltip } from 'antd';\nimport FormattedCaps from './FormattedCaps';\nimport CapabilityControl from './CapabilityControl';\nimport SessionStyles from './Session.css';\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport { ROW } from '../AntdTypes';\n\nconst whitespaces = /^\\s|\\s$/;\n\nconst whitespaceMsg = (value) => {\n  const leadingSpace = /^\\s/.test(value);\n  const trailingSpace = /\\s$/.test(value);\n\n  if (leadingSpace && trailingSpace) {return 'Contains Leading & Trailing Whitespace';}\n  if (leadingSpace) {return 'Contains Leading Whitespace';}\n  if (trailingSpace) {return 'Contains Trailing Whitespace';}\n};\n\n// Callback when the type of a capability is changed\nconst handleSetType = (setCapabilityParam, caps, index, type) => {\n  setCapabilityParam(index, 'type', type);\n\n  // Translate the current value to the new type\n  let translatedValue = caps[index].value;\n  switch (type) {\n    case 'boolean':\n      if (translatedValue === 'true') {\n        translatedValue = true;\n      } else if (translatedValue === 'false') {\n        translatedValue = false;\n      } else {\n        translatedValue = !!translatedValue;\n      }\n      break;\n    case 'number':\n      translatedValue = parseInt(translatedValue, 10) || 0;\n      break;\n    case 'text':\n    case 'json_object':\n    case 'object':\n      translatedValue = translatedValue + '';\n      break;\n    case 'file':\n      translatedValue = '';\n      break;\n    default:\n      break;\n  }\n  setCapabilityParam(index, 'value', translatedValue);\n};\n\nconst CapabilityEditor = (props) => {\n  const { setCapabilityParam, caps, addCapability, removeCapability, saveSession, hideSaveAsModal,\n          saveAsText, showSaveAsModal, setSaveAsText, isEditingDesiredCaps, t,\n          setAddVendorPrefixes, addVendorPrefixes, server, serverType } = props;\n\n  const onSaveAsOk = () => saveSession(server, serverType, caps, {name: saveAsText});\n  const latestCapField = useRef();\n\n  // if we have more than one cap and the most recent cap name is empty, it means we've just\n  // added a new cap field, so focus that input element. But only do this once, so we don't annoy\n  // the user if they decide to unfocus and do something else.\n  useEffect(() => {\n    if (caps.length > 1 && !latestCapField.current.input.value && !latestCapField.current.__didFocus) {\n      latestCapField.current.focus();\n      latestCapField.current.__didFocus = true;\n    }\n  }, [caps.length, latestCapField]);\n\n  return (\n    <Row type={ROW.FLEX} align=\"top\" justify=\"start\" className={SessionStyles.capsFormRow}>\n      <Col order={1} span={12} className={SessionStyles.capsFormCol}>\n        <Form className={SessionStyles.newSessionForm}>\n          {caps.map((cap, index) => (\n            <Row gutter={8} key={index}>\n              <Col span={7}>\n                <Form.Item>\n                  <Tooltip title={whitespaceMsg(cap.name)} open={whitespaces.test(cap.name)}>\n                    <Input disabled={isEditingDesiredCaps} id={`desiredCapabilityName_${index}`} placeholder={t('Name')}\n                      value={cap.name} onChange={(e) => setCapabilityParam(index, 'name', e.target.value)}\n                      ref={index === caps.length - 1 ? latestCapField : ''}\n                      className={SessionStyles.capsBoxFont} />\n                  </Tooltip>\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item>\n                  <Select disabled={isEditingDesiredCaps} defaultValue={cap.type}\n                    onChange={(val) => handleSetType(setCapabilityParam, caps, index, val)}>\n                    <Select.Option value='text'>{t('text')}</Select.Option>\n                    <Select.Option value='boolean'>{t('boolean')}</Select.Option>\n                    <Select.Option value='number'>{t('number')}</Select.Option>\n                    <Select.Option value='object'>{t('JSON object')}</Select.Option>\n                    <Select.Option value='file'>{t('filepath')}</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={7}>\n                <Form.Item>\n                  <Tooltip title={whitespaceMsg(cap.value)} open={whitespaces.test(cap.value)}>\n                    <CapabilityControl {...props} cap={cap} id={`desiredCapabilityValue_${index}`}\n                      onSetCapabilityParam={(value) => setCapabilityParam(index, 'value', value)}\n                      onPressEnter={(index === caps.length - 1) ? addCapability : () => {}} />\n                  </Tooltip>\n                </Form.Item>\n              </Col>\n              <Col span={2}>\n                <div className={SessionStyles.btnDeleteCap}>\n                  <Form.Item>\n                    <Button {...{disabled: caps.length <= 1 || isEditingDesiredCaps}}\n                      icon={<DeleteOutlined/>}\n                      onClick={() => removeCapability(index)} />\n                  </Form.Item>\n                </div>\n              </Col>\n            </Row>\n          ))}\n          <Row>\n            <Col span={22}>\n              <Form.Item>\n                <Checkbox checked={addVendorPrefixes}\n                  onChange={(e) => setAddVendorPrefixes(e.target.checked)}>\n                  {t('autoAddPrefixes')}\n                </Checkbox>\n              </Form.Item>\n            </Col>\n            <Col span={2}>\n              <Form.Item>\n                <Button\n                  disabled={isEditingDesiredCaps} id='btnAddDesiredCapability'\n                  icon={<PlusOutlined/>}\n                  onClick={addCapability}\n                  className={SessionStyles['add-desired-capability-button']} />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Col>\n      <Col order={2} span={12} className={SessionStyles.capsFormattedCol}>\n        <FormattedCaps {...props} />\n        <Modal open={showSaveAsModal}\n          title={t('Save Capability Set As')}\n          okText='Save'\n          cancelText='Cancel'\n          onCancel={hideSaveAsModal}\n          onOk={onSaveAsOk}>\n          <Input onChange={(e) => setSaveAsText(e.target.value)} addonBefore={t('Name')}\n            value={saveAsText} onPressEnter={onSaveAsOk} />\n        </Modal>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CapabilityEditor;\n","import React from 'react';\nimport moment from 'moment';\nimport { Button, Row, Col, Table } from 'antd';\nimport FormattedCaps from './FormattedCaps';\nimport SessionStyles from './Session.css';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nconst DATE_COLUMN_WIDTH = '25%';\nconst ACTIONS_COLUMN_WIDTH = '106px';\n\nconst dataSource = (savedSessions) => {\n  if (!savedSessions) {\n    return [];\n  }\n  return savedSessions.map((session) => ({\n    key: session.uuid,\n    name: (session.name || '(Unnamed)'),\n    date: moment(session.date).format('YYYY-MM-DD')\n  }));\n};\n\nconst sessionFromUUID = (savedSessions, uuid) => {\n  for (let session of savedSessions) {\n    if (session.uuid === uuid) {\n      return session;\n    }\n  }\n  throw new Error(`Couldn't find session with uuid ${uuid}`);\n};\n\nconst SavedSessions = (props) => {\n  const { savedSessions, capsUUID, switchTabs } = props;\n\n  const handleCapsAndServer = (uuid) => {\n    const { setCapsAndServer, server, serverType,\n            isEditingDesiredCapsName, abortDesiredCapsNameEditor,\n            isEditingDesiredCaps, abortDesiredCapsEditor } = props;\n    const session = sessionFromUUID(savedSessions, uuid);\n\n    // Disable any editors before changing the selected caps\n    if (isEditingDesiredCapsName) {\n      abortDesiredCapsNameEditor();\n    }\n    if (isEditingDesiredCaps) {\n      abortDesiredCapsEditor();\n    }\n\n    // In case user has CAPS saved from older version of Inspector which\n    // doesn't contain server and serverType within the session object\n    setCapsAndServer(\n      session.server || server,\n      session.serverType || serverType,\n      session.caps,\n      session.uuid,\n      session.name\n    );\n  };\n\n  const handleDelete = (uuid) => {\n    const { deleteSavedSession } = props;\n    if (window.confirm('Are you sure?')) {\n      deleteSavedSession(uuid);\n    }\n  };\n\n  const columns = [{\n    title: 'Capability Set',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Created',\n    dataIndex: 'date',\n    key: 'date',\n    width: DATE_COLUMN_WIDTH\n  }, {\n    title: 'Actions',\n    key: 'action',\n    width: ACTIONS_COLUMN_WIDTH,\n    render: (_, record) => <div>\n      <Button\n        icon={<EditOutlined/>}\n        onClick={() => {handleCapsAndServer(record.key); switchTabs('new');}}\n        className={SessionStyles.editSession}\n      />\n      <Button\n        icon={<DeleteOutlined/>}\n        onClick={() => handleDelete(record.key)}/>\n    </div>\n  }];\n\n  return (\n    <Row className={SessionStyles.savedSessions}>\n      <Col span={12}>\n        <Table\n          pagination={false}\n          sticky={true}\n          dataSource={dataSource(savedSessions)}\n          columns={columns}\n          onRow={(row) => ({onClick: () => handleCapsAndServer(row.key)})}\n          rowClassName={(row) => (capsUUID === row.key ? SessionStyles.selected : '')} />\n      </Col>\n      <Col span={12} className={SessionStyles.capsFormattedCol}>\n        <FormattedCaps {...props}\n          title={capsUUID ? sessionFromUUID(savedSessions, capsUUID).name : null} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SavedSessions;\n","import React from 'react';\nimport { Form, Card, Select, Button, Row, Col } from 'antd';\nimport SessionStyles from './Session.css';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { ServerTypes } from '../../actions/Session';\n\nconst formatCaps = (caps) => {\n  let importantCaps = [caps.app, caps.platformName, caps.deviceName];\n  if (caps.automationName) {\n    importantCaps.push(caps.automationName);\n  }\n  return importantCaps.join(', ').trim();\n};\n\nconst formatCapsBrowserstack = (caps) => {\n  let importantCaps = formatCaps(caps).split(', ');\n  if (caps.sessionName) {\n    importantCaps.push(caps.sessionName);\n  }\n  return importantCaps.join(', ').trim();\n};\n\nconst formatCapsLambdaTest = (caps) => {\n  if (caps.hasOwnProperty.call(caps, 'capabilities')) {\n    caps = caps.capabilities;\n  }\n  const deviceName = caps.desired ? caps.desired.deviceName : caps.deviceName;\n  const importantCaps = [deviceName, caps.platformName, caps.platformVersion];\n  return importantCaps.join(', ').trim();\n};\n\nconst getSessionInfo = (session, serverType) => {\n  switch (serverType) {\n    case ServerTypes.browserstack:\n      return `${session.id} — ${formatCapsBrowserstack(session.capabilities)}`;\n    case ServerTypes.lambdatest:\n      return `${session.id} - ${formatCapsLambdaTest(session.capabilities)}`;\n    default:\n      return `${session.id} — ${formatCaps(session.capabilities)}`;\n  }\n};\n\nconst AttachToSession = ({ serverType, attachSessId, setAttachSessId, runningAppiumSessions, getRunningSessions, t }) => (\n  <Form>\n    <Form.Item>\n      <Card>\n        <p className={SessionStyles.localDesc}>\n          {t('connectToExistingSessionInstructions')}<br/>{t('selectSessionIDInDropdown')}\n        </p>\n      </Card>\n    </Form.Item>\n    <Form.Item>\n      <Row>\n        <Col span={23}>\n          <Select showSearch\n            mode='AutoComplete'\n            notFoundContent='None found'\n            placeholder={t('enterYourSessionId')}\n            value={attachSessId || undefined}\n            onChange={(value) => setAttachSessId(value)}>\n            {runningAppiumSessions.map((session) => <Select.Option key={session.id} value={session.id}>\n              <div>{getSessionInfo(session, serverType)}</div>\n            </Select.Option>)}\n          </Select>\n        </Col>\n        <Col span={1}>\n          <div className={SessionStyles.btnReload}>\n            <Button\n              onClick={getRunningSessions}\n              icon={<ReloadOutlined/>} />\n          </div>\n        </Col>\n      </Row>\n    </Form.Item>\n  </Form>\n);\n\nexport default AttachToSession;\n","import React from 'react';\nimport { Form, Row, Col, Input, Checkbox } from 'antd';\nimport { DEFAULT_SERVER_PATH, DEFAULT_SERVER_HOST, DEFAULT_SERVER_PORT } from '../../actions/Session';\n\nconst ServerTabCustom = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={9}>\n        <Form.Item>\n          <Input id='customServerHost' placeholder={DEFAULT_SERVER_HOST} addonBefore={t('Remote Host')} value={server.remote.hostname}\n            onChange={(e) => setServerParam('hostname', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={4}>\n        <Form.Item>\n          <Input id='customServerPort' placeholder={DEFAULT_SERVER_PORT} addonBefore={t('Remote Port')} value={server.remote.port}\n            onChange={(e) => setServerParam('port', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={9}>\n        <Form.Item>\n          <Input id='customServerPath' placeholder={DEFAULT_SERVER_PATH} addonBefore={t('Remote Path')} value={server.remote.path}\n            onChange={(e) => setServerParam('path', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={2}>\n        <Form.Item>\n          <Checkbox id='customServerSSL' checked={!!server.remote.ssl} value={server.remote.ssl} onChange={(e) => setServerParam('ssl', e.target.checked)}>{t('SSL')}</Checkbox>\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabCustom;\n","import React from 'react';\nimport { Collapse, Form, Row, Col, Checkbox, Input } from 'antd';\nimport styles from './Session.css';\n\nconst AdvancedServerParams = ({ server, setServerParam, serverType, t }) => (\n  <Row gutter={8}>\n    <Col className={styles.advancedSettingsContainerCol}>\n      <div className={styles.advancedSettingsContainer}>\n        <Collapse bordered={true}>\n          <Collapse.Panel header={t('Advanced Settings')}>\n            <Row>\n              {serverType !== 'lambdatest' &&\n              <Col span={7}>\n                <Form.Item>\n                  <Checkbox checked={!!server.advanced.allowUnauthorized} onChange={(e) => setServerParam('allowUnauthorized', e.target.checked, 'advanced')}>{t('allowUnauthorizedCerts')}</Checkbox>\n                </Form.Item>\n              </Col>}\n              <Col span={5} align='right'>\n                <Form.Item>\n                  <Checkbox checked={!!server.advanced.useProxy} onChange={(e) => setServerParam('useProxy', e.target.checked, 'advanced')}>{t('Use Proxy')}</Checkbox>\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item>\n                  <Input disabled={!server.advanced.useProxy} onChange={(e) => setServerParam('proxy', e.target.value, 'advanced')}\n                    placeholder={t('Proxy URL')} value={server.advanced.proxy} />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Collapse.Panel>\n        </Collapse>\n      </div>\n    </Col>\n  </Row>\n);\n\nexport default AdvancedServerParams;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Modal, Row, Col, Button } from 'antd';\nimport CloudProviders from './CloudProviders';\nimport SessionStyles from './Session.css';\nimport { BUTTON } from '../AntdTypes';\n\nconst CloudProviderSelector = (props) => {\n  const { visibleProviders = [], isAddingCloudProvider, stopAddCloudProvider, t } = props;\n\n  const footer = <Button key=\"back\" type={BUTTON.PRIMARY} onClick={stopAddCloudProvider}>{t('Done')}</Button>;\n  const providersGrid = _.chunk(_.keys(CloudProviders), 2); // Converts list of providers into list of pairs of providers\n\n  const toggleVisibleProvider = (providerName) => {\n    const { addVisibleProvider, removeVisibleProvider } = props;\n    if (visibleProviders.includes(providerName)) {\n      removeVisibleProvider(providerName);\n    } else {\n      addVisibleProvider(providerName);\n    }\n  };\n\n  return <Modal key=\"modal\"\n    className={SessionStyles.cloudProviderModal}\n    open={isAddingCloudProvider}\n    onCancel={stopAddCloudProvider}\n    footer={footer}\n    title={t('Select Cloud Providers')}>\n    {[\n      ..._.map(providersGrid, (row, key) => <Row gutter={16} key={key}>{\n        [\n          ..._(row).map((providerName) => {\n            const providerIsVisible = visibleProviders.includes(providerName);\n            const style = {};\n            if (providerIsVisible) {\n              style.borderColor = '#40a9ff';\n            }\n            const provider = CloudProviders[providerName];\n            return provider && <Col span={12} key={providerName}>\n              <Button role=\"checkbox\" style={style} onClick={() => toggleVisibleProvider(providerName)}><img src={provider.logo} /></Button>\n            </Col>;\n          })\n        ]\n      }</Row>)\n    ]}\n  </Modal>;\n};\n\nexport default CloudProviderSelector;\n","import { shell, ipcRenderer } from '../../polyfills';\nimport React, { useEffect } from 'react';\nimport _ from 'lodash';\nimport CapabilityEditor from './CapabilityEditor';\nimport SavedSessions from './SavedSessions';\nimport AttachToSession from './AttachToSession';\nimport ServerTabCustom from './ServerTabCustom';\nimport { Tabs, Button, Spin, Badge } from 'antd';\nimport AdvancedServerParams from './AdvancedServerParams';\nimport SessionStyles from './Session.css';\nimport CloudProviders from './CloudProviders';\nimport CloudProviderSelector from './CloudProviderSelector';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { BUTTON } from '../AntdTypes';\n\nconst ADD_CLOUD_PROVIDER = 'addCloudProvider';\nconst CAPS_DOCS_LINK = 'https://appium.io/docs/en/latest/guides/caps/';\n\nconst Session = (props) => {\n  const { tabKey, switchTabs, serverType, server, visibleProviders = [],\n          caps, capsUUID, capsName, isCapsDirty, isEditingDesiredCaps, requestSaveAsModal,\n          saveSession, newSession, savedSessions, newSessionLoading, attachSessId, t } = props;\n\n  const isAttaching = tabKey === 'attach';\n\n  const handleSelectServerTab = async (tab) => {\n    const { changeServerType, addCloudProvider } = props;\n    if (tab === ADD_CLOUD_PROVIDER) {\n      addCloudProvider();\n      return;\n    }\n    await changeServerType(tab);\n  };\n\n  useEffect(() => {\n    const { setLocalServerParams, getSavedSessions, setSavedServerParams, setStateFromAppiumFile,\n            setVisibleProviders, getRunningSessions, bindWindowClose, initFromQueryString, saveFile } = props;\n    (async () => {\n      try {\n        bindWindowClose();\n        switchTabs('new');\n        await getSavedSessions();\n        await setSavedServerParams();\n        await setLocalServerParams();\n        await setVisibleProviders();\n        getRunningSessions();\n        await initFromQueryString();\n        await setStateFromAppiumFile();\n        ipcRenderer.on('open-file', (_, filePath) => setStateFromAppiumFile(filePath));\n        ipcRenderer.on('save-file', (_, filePath) => saveFile(filePath));\n      } catch (e) {\n        console.error(e); // eslint-disable-line no-console\n      }\n    })();\n  }, []);\n\n  return [\n    <Spin spinning={!!newSessionLoading} key=\"main\">\n      <div className={SessionStyles.sessionContainer}>\n        <div id='serverTypeTabs' className={SessionStyles.serverTab}>\n          <Tabs activeKey={serverType} onChange={(tab) => handleSelectServerTab(tab)} className={SessionStyles.serverTabs} items={[\n            {label: t('Appium Server'), key: 'remote', children: <ServerTabCustom {...props} />},\n            ..._(visibleProviders).map((providerName) => {\n              const provider = CloudProviders[providerName];\n              if (!provider) {\n                return true;\n              }\n              return {label: <div>{provider.tabhead()}</div>, key: providerName, children: provider.tab(props)};\n            }),\n            {label: <span className='addCloudProviderTab'>{ t('Select Cloud Providers') }</span>, key: ADD_CLOUD_PROVIDER}\n          ]}/>\n          <AdvancedServerParams {...props} />\n        </div>\n\n        <Tabs activeKey={tabKey} onChange={switchTabs} className={SessionStyles.scrollingTabCont} items={[\n          {label: t('Desired Capabilities'),\n           key: 'new', className: SessionStyles.scrollingTab, children: <CapabilityEditor {...props} />},\n          {label: (<span>{t('Saved Capability Sets')} <Badge count={savedSessions.length} offset={[0, -3]}/></span>),\n           key: 'saved', className: SessionStyles.scrollingTab, disabled: savedSessions.length === 0, children: <SavedSessions {...props} />},\n          {label: t('Attach to Session'),\n           key: 'attach', className: SessionStyles.scrollingTab, children: <AttachToSession {...props} />}\n        ]}/>\n\n        <div className={SessionStyles.sessionFooter}>\n          <div className={SessionStyles.desiredCapsLink}>\n            <a href=\"#\" onClick={(e) => e.preventDefault() || shell.openExternal(CAPS_DOCS_LINK)}>\n              <LinkOutlined />&nbsp;\n              {t('desiredCapabilitiesDocumentation')}\n            </a>\n          </div>\n          {(!isAttaching && capsUUID) && <Button\n            onClick={() => saveSession(server, serverType, caps, {name: capsName, uuid: capsUUID})}\n            disabled={!isCapsDirty || isEditingDesiredCaps}>{t('Save')}\n          </Button>}\n          {!isAttaching && <Button\n            onClick={requestSaveAsModal} disabled={isEditingDesiredCaps}>{t('saveAs')}\n          </Button>}\n          {!isAttaching && <Button type={BUTTON.PRIMARY} id='btnStartSession'\n            onClick={() => newSession(caps)} className={SessionStyles['start-session-button']}>{t('startSession')}\n          </Button>}\n          {isAttaching && <Button type={BUTTON.PRIMARY} disabled={!attachSessId} id='attchedtosession'\n            onClick={() => newSession(null, attachSessId)}>{t('attachToSession')}\n          </Button>}\n        </div>\n\n      </div>\n    </Spin>,\n    <CloudProviderSelector {...props} key='CloudProviderSelector' />\n  ];\n};\n\nexport default Session;\n","import { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as SessionActions from '../actions/Session';\nimport Session from '../components/Session/Session';\n\nfunction mapStateToProps (state) {\n  return state.session;\n}\n\nexport default withTranslation(Session, connect(mapStateToProps, SessionActions));\n","import React from 'react';\nimport InspectorCSS from './Inspector.css';\n\n/**\n * Absolute positioned divs that overlay the app screenshot and highlight the bounding\n * boxes of the elements in the app\n */\nconst HighlighterRect = (props) => {\n  const { selectedElement = {}, selectHoveredElement, unselectHoveredElement, hoveredElement = {},\n          selectElement, unselectElement, element, scaleRatio, xOffset, elLocation, elSize, dimensions } = props;\n  const { path: hoveredPath } = hoveredElement;\n  const { path: selectedPath } = selectedElement;\n\n  let width, height, left, top, highlighterClasses, key;\n  highlighterClasses = [InspectorCSS['highlighter-box']];\n\n  if (element) {\n    ({width, height, left, top} = dimensions);\n\n    // Add class + special classes to hovered and selected elements\n    if (hoveredPath === element.path) {\n      highlighterClasses.push(InspectorCSS['hovered-element-box']);\n    }\n    if (selectedPath === element.path) {\n      highlighterClasses.push(InspectorCSS['inspected-element-box']);\n    }\n    key = element.path;\n  } else if (elLocation && elSize) {\n    width = elSize.width / scaleRatio;\n    height = elSize.height / scaleRatio;\n    top = elLocation.y / scaleRatio;\n    left = elLocation.x / scaleRatio + xOffset;\n    // Unique keys are assigned to elements by their x & y coordinates\n    key = `searchedForElement{x: ${elLocation.x}, y: ${elLocation.y}}`;\n    highlighterClasses.push(InspectorCSS['inspected-element-box']);\n  }\n\n  return <div className={highlighterClasses.join(' ').trim()}\n    onMouseOver={() => selectHoveredElement(key)}\n    onMouseOut={unselectHoveredElement}\n    onClick={() => key === selectedPath ? unselectElement() : selectElement(key)}\n    key={key}\n    style={{left: (left || 0), top: (top || 0), width: (width || 0), height: (height || 0)}}>\n    <div></div>\n  </div>;\n};\n\nexport default HighlighterRect;\n","import React from 'react';\nimport InspectorCSS from './Inspector.css';\nimport { RENDER_CENTROID_AS } from './shared';\n\nconst { CENTROID, OVERLAP, EXPAND } = RENDER_CENTROID_AS;\nconst CENTROID_STYLES = {\n  VISIBLE: 'visible',\n  HIDDEN: 'hidden',\n  CONTAINER: '50%',\n  NON_CONTAINER: '0%',\n};\n\n// Generate new coordinates along a circlular trajectory\n// for overlapping elements only\nconst getCentroidPos = (type, angle, coord) => {\n  if (type === OVERLAP) {\n    return `calc((${angle} * 2.6vh) + ${coord}px)`;\n  }\n  return coord;\n};\n\n/**\n * Shows all element centroids\n */\nconst HighlighterCentroid = (props) => {\n  const { selectedElementPath, hoveredElement = {}, element, elementProperties,\n          centroidType, hoveredCentroid, selectedCentroid } = props;\n  const { centerX, centerY, angleX, angleY, keyCode, path, container } = elementProperties;\n\n  const onMouseEnter = (path) => {\n    const { selectHoveredElement, selectHoveredCentroid } = props;\n    if (centroidType === EXPAND) {\n      selectHoveredCentroid(path);\n    } else {\n      selectHoveredElement(path);\n    }\n  };\n\n  const onMouseLeave = () => {\n    const { unselectHoveredElement, unselectHoveredCentroid } = props;\n    if (centroidType === EXPAND) {\n      unselectHoveredCentroid();\n    } else {\n      unselectHoveredElement();\n    }\n  };\n\n  const onClickCentroid = (path) => {\n    const { selectElement, unselectElement, selectCentroid, unselectCentroid } = props;\n    if (centroidType === EXPAND) {\n      if (path === selectedCentroid) {\n        unselectCentroid();\n      } else {\n        selectCentroid(path);\n      }\n    } else {\n      if (path === selectedElementPath) {\n        unselectElement();\n      } else {\n        selectElement(path);\n      }\n    }\n  };\n\n  const centroidClasses = [InspectorCSS['centroid-box']];\n  centroidClasses.push(InspectorCSS[centroidType]);\n\n  // Highlight centroids that represent elements\n  if (centroidType !== EXPAND) {\n    if (hoveredElement.path === path) {\n      centroidClasses.push(InspectorCSS['hovered-element-box']);\n    }\n    if (selectedElementPath === path) {\n      centroidClasses.push(InspectorCSS['inspected-element-box']);\n    }\n  }\n\n  // Highlight +/- centroids\n  if (centroidType !== CENTROID) {\n    if (hoveredCentroid === keyCode) {\n      centroidClasses.push(InspectorCSS['hovered-element-box']);\n    }\n    if (selectedCentroid === keyCode && !element) {\n      centroidClasses.push(InspectorCSS['inspected-element-box']);\n    }\n  }\n\n  const overlapDivStyle = {\n    visibility:\n      keyCode === selectedCentroid ?\n        CENTROID_STYLES.VISIBLE : CENTROID_STYLES.HIDDEN,\n  };\n\n  const centroidDivStyle = {\n    left: getCentroidPos(centroidType, angleX, centerX),\n    top: getCentroidPos(centroidType, angleY, centerY),\n    borderRadius:\n      element && !container ?\n        CENTROID_STYLES.NON_CONTAINER : CENTROID_STYLES.CONTAINER,\n    ...(centroidType === OVERLAP ? overlapDivStyle : {})\n  };\n\n  const placeHolder = centroidType === EXPAND ?\n    <div className={InspectorCSS['plus-minus']}>\n      {keyCode === selectedCentroid ? '-' : '+'}\n    </div>\n    :\n    <div></div>;\n\n  return <div\n    className={centroidClasses.join(' ').trim()}\n    onMouseOver={() => onMouseEnter(path)}\n    onMouseOut={() => onMouseLeave()}\n    onClick={() => onClickCentroid(path)}\n    key={path}\n    style={centroidDivStyle}>\n    {placeHolder}\n  </div>;\n};\n\nexport default HighlighterCentroid;\n","import React from 'react';\nimport HighlighterRect from './HighlighterRect';\nimport HighlighterCentroid from './HighlighterCentroid';\nimport { parseCoordinates, RENDER_CENTROID_AS } from './shared';\n\nconst { CENTROID, OVERLAP, EXPAND } = RENDER_CENTROID_AS;\n\n/**\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\n */\nconst HighlighterRects = (props) => {\n  console.log(\"🚀 ~ file: HighlighterRects.js:12 ~ HighlighterRects ~ props:\", props)\n  const { source, containerEl, searchedForElementBounds, scaleRatio, showCentroids,\n          isLocatorTestModalVisible, isSiriCommandModalVisible } = props;\n\n  const highlighterRects = [];\n  const highlighterCentroids = [];\n  let highlighterXOffset = 0;\n  let screenshotEl = null;\n\n  const getElements = (source) => {\n    const elementsByOverlap = buildElementsWithProps(source, null, [], {});\n    let elements = [];\n\n    // Adjust overlapping elements\n    for (const key of Object.keys(elementsByOverlap)) {\n      if (elementsByOverlap[key].length > 1) {\n        const {centerX, centerY} = elementsByOverlap[key][0].properties;\n\n        // Create new element obj which will be a +/- centroid\n\n        const element = {\n          type: EXPAND,\n          element: null,\n          parent: null,\n          properties: {\n            left: null,\n            top: null,\n            width: null,\n            height: null,\n            centerX,\n            centerY,\n            angleX: null,\n            angleY: null,\n            path: key,\n            keyCode: key,\n            container: null,\n            accessible: null\n          }\n        };\n        elements = [...elements, element,\n          ...updateOverlapsAngles(elementsByOverlap[key], key)];\n      } else {\n        elements.push(elementsByOverlap[key][0]);\n      }\n    }\n\n    return elements;\n  };\n\n  // This func creates a new object for each element and determines its properties\n  // 'elements' is an array that stores all prev elements\n  // 'overlaps' is an object which organzies elements by their positions\n  const buildElementsWithProps = (source, prevElement, elements, overlaps) => {\n    if (!source) { return {}; }\n    const { x1, y1, x2, y2 } = parseCoordinates(source);\n    const xOffset = highlighterXOffset || 0;\n    const centerPoint = (v1, v2) => Math.round(v1 + ((v2 - v1) / 2)) / scaleRatio;\n    const obj = {\n      type: CENTROID,\n      element: source,\n      parent: prevElement,\n      properties: {\n        left: x1 / scaleRatio + xOffset,\n        top: y1 / scaleRatio,\n        width: (x2 - x1) / scaleRatio,\n        height: (y2 - y1) / scaleRatio,\n        centerX: centerPoint(x1, x2) + xOffset,\n        centerY: centerPoint(y1, y2),\n        angleX: null,\n        angleY: null,\n        path: source.path,\n        keyCode: null,\n        container: false,\n        accessible: source.attributes ? source.attributes.accessible : null\n      }\n    };\n    const coordinates = `${obj.properties.centerX}.${obj.properties.centerY}`;\n    obj.properties.container = isElementContainer(obj, elements);\n\n    elements.push(obj);\n\n    if (source.path) {\n      if (overlaps[coordinates]) {\n        overlaps[coordinates].push(obj);\n      } else {\n        overlaps[coordinates] = [obj];\n      }\n    }\n\n    if (source.children) {\n      for (const childEl of source.children) {\n        buildElementsWithProps(childEl, source, elements, overlaps);\n      }\n    }\n\n    return overlaps;\n  };\n\n  const isElementContainer = (element1, elements) => {\n    for (const element2 of elements) {\n      if (element2.element !== element1.element\n        && isElementOverElement(element1.properties, element2.properties)\n        && !isAncestor(element1.parent, element2.element, elements)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const isElementOverElement = (element1, element2) =>\n    element1.left <= element2.left\n      && element1.width >= element2.width\n      && element1.top >= element2.top\n      && element1.height >= element2.height;\n\n  // Traverse through parent elements until we reach maybeAncestor\n  const isAncestor = (curElement, maybeAncestor, elements) => {\n    if (elements.length > 0) {\n      while (curElement !== null) {\n        if (curElement === maybeAncestor) { return true; }\n\n        for (const elem of elements) {\n          if (elem.element === curElement) { curElement = elem.parent; }\n        }\n      }\n    }\n    return false;\n  };\n\n  // Generate angles for circular positioning for overlaping elements\n  const updateOverlapsAngles = (elements, key) => {\n    const steps = elements.length;\n    for (let step = 0; step < steps; step++) {\n      const [el, elProps] = [elements[step], elements[step].properties];\n      el.type = OVERLAP;\n      elProps.keyCode = key;\n      elProps.angleX = Math.cos(2 * Math.PI * (step / steps));\n      elProps.angleY = Math.sin(2 * Math.PI * (step / steps));\n    }\n    return elements;\n  };\n\n  // Displays element rectangles only\n  const renderElements = (source) => {\n    for (const elem of source) {\n      highlighterRects.push(\n        <HighlighterRect {...props}\n          dimensions={elem.properties}\n          element={elem.element}\n          scaleRatio={scaleRatio}\n          key={elem.properties.path}\n          xOffset={highlighterXOffset} />\n      );\n    }\n  };\n\n  // Displays centroids only\n  const renderCentroids = (centroids) => {\n    for (const elem of centroids) {\n      highlighterCentroids.push(\n        <HighlighterCentroid {...props}\n          centroidType={elem.type}\n          elementProperties={elem.properties}\n          element={elem.element}\n          key={elem.properties.path} />\n      );\n    }\n  };\n\n  // Array of all element objects with properties to draw rectangles and/or centroids\n  const elements = getElements(source);\n\n  if (containerEl) {\n    screenshotEl = containerEl.querySelector('img');\n    highlighterXOffset = screenshotEl.getBoundingClientRect().left -\n    containerEl.getBoundingClientRect().left;\n  }\n\n  // If the user selected an element that they searched for, highlight that element\n  if (searchedForElementBounds && isLocatorTestModalVisible) {\n    const {location: elLocation, size} = searchedForElementBounds;\n    highlighterRects.push(\n      <HighlighterRect\n        elSize={size}\n        elLocation={elLocation}\n        scaleRatio={scaleRatio}\n        xOffset={highlighterXOffset} />\n    );\n  }\n\n  // Don't show highlighter rects when Search Elements modal is open\n  if (!isLocatorTestModalVisible && !isSiriCommandModalVisible) {\n    renderElements(elements);\n    if (showCentroids) {\n      renderCentroids(elements);\n    }\n  }\n\n  return (\n    <div>\n      {highlighterRects}\n      {highlighterCentroids}\n    </div>\n  );\n};\n\nexport default HighlighterRects;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable space-before-blocks */\n/* eslint-disable space-in-parens */\n/* eslint-disable no-console */\n/* eslint-disable quotes */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-unused-vars */\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport HighlighterRects from './HighlighterRects';\nimport { Spin, Tooltip, Button } from 'antd';\nimport B from 'bluebird';\nimport styles from './Inspector.css';\nimport {\n  SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE, POINTER_TYPES,\n  DEFAULT_TAP, DEFAULT_SWIPE, DEFAULT_LONGPRESS, DEFAULT_DRAG_AND_DROP, DEFAULT_ZOOM\n} from './shared';\nimport { IoChevronBackOutline } from 'react-icons/io5';\nimport { BiSquare, BiCircle } from 'react-icons/bi';\nconst { POINTER_UP, POINTER_DOWN, PAUSE, POINTER_MOVE } = POINTER_TYPES;\nconst { TAP, SELECT, SLIDE, SWIPE, LONGPRESS, DRAG_AND_DROP, DOUBLE_TAP, SLIDE_SWIPE, ZOOMIN, SELECT_LONG, SELECT_DOUBLE, FILE_UPLOAD, SELECT_FILE, EXPECTED_VALUE, TAKE_SCREENSHOT, SCRATCH , ROTATE } = SCREENSHOT_INTERACTION_MODE;\nconst TYPES = { FILLED: 'filled', NEW_DASHED: 'newDashed', WHOLE: 'whole', DASHED: 'dashed', DRAG: 'drag' };\n\n\n\n/**\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\n */\nconst Screenshot = (props) => {\n  const { screenshot, mjpegScreenshotUrl, methodCallInProgress, driver, selectScreenshotInteractionMode, screenshotInteractionMode,step_object, swipeStart, swipeEnd1, swipeStart1, swipeEnd, scaleRatio, selectedTick, selectedInteractionMode, applyClientMethod, t, hoveredElement,locatorTestElement } = props;\n  const [xLongPress, setXLongPress] = useState(null);\n  const [yLongPress, setYLongPress] = useState(null);\n  const [element, setElement] = useState({});\n  const [coordinates, setCoordinates] = useState([]);\n  const [scratch, setScratch] = useState(false);\n\n\n\n  useEffect(() => {\n    if (hoveredElement && hoveredElement.attributes && hoveredElement.attributes.bounds) {\n      const coordinatesString = hoveredElement.attributes.bounds;\n      console.log(\"coordinatestring\", coordinatesString)\n      const coordinatesArray = coordinatesString.match(/\\d+/g);\n      if (coordinatesArray.length >= 4) {\n        const x1 = parseInt(coordinatesArray[0], 10);\n        const y1 = parseInt(coordinatesArray[1], 10);\n        const x2 = parseInt(coordinatesArray[2], 10);\n        const y2 = parseInt(coordinatesArray[3], 10);\n\n        const centerX = Math.round(x2);\n        const centerY = Math.round(y2);\n        setXLongPress(centerX);\n        setYLongPress(centerY);\n      }\n\n    }\n  }, [hoveredElement]);\n\n  if (hoveredElement) {\n    // console.log(\"hoveredElement.attributes.bounds:\", hoveredElement.attributes.bounds);\n  }\n\n\n  const containerEl = useRef();\n  const [x, setX] = useState();\n  const [y, setY] = useState();\n  const [isLongPress, setIsLongPress] = useState(false);\n\n  const [coords, setCoords] = useState({});\n\n  let [crop, setCrop] = useState({ x: 0, y: 0, scale: 1 });\n  let imageElement = containerEl.current;\n  let imageRef = useRef();\n  // eslint-disable-next-line no-console\n  // console.log('🚀 ~ file: Screenshot.js:41 ~ Screenshot ~ imageRef:', imageRef);\n  // // let imageElement = imageRef.querySelector('img');\n  // let image = imageRef && imageRef.getElementById('#screenshot');\n  // // eslint-disable-next-line no-console\n  // console.log('🚀 ~ file: Screenshot.js:45 ~ Screenshot ~ imageElement:', imageElement);\n  // if (screenshotInteractionMode === ZOOMIN) {\n  //   useGesture(\n  //   {\n  //     onDrag: ({ offset: [dx, dy] }) => {\n  //       setCrop((crop) => ({ ...crop, x: dx, y: dy }));\n  //     },\n  //     onPinch: ({ offset: [d] }) => {\n  //       setCrop((crop) => ({ ...crop, scale: 1 + d / 50 }));\n  //     },\n  //   },\n  //   {\n  //     domTarget: containerEl.current,\n  //     eventOptions: { passive: false },\n  //   }\n  //   );\n  // }\n\n  const handleScreenshotClick = async (e) => {\n    const { setSwipeStart, setSwipeEnd, tapTickCoordinates, setSwipeStart1, setSwipeEnd1 } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON } = DEFAULT_TAP;\n\n\n    if (screenshotInteractionMode === TAP) {\n      applyClientMethod({\n        methodName: TAP,\n        args: [\n          {\n            [POINTER_NAME]: [\n              { type: POINTER_MOVE, duration: DURATION_1, x, y },\n              { type: POINTER_DOWN, button: BUTTON },\n              { type: PAUSE, duration: DURATION_2 },\n              { type: POINTER_UP, button: BUTTON }\n            ],\n          }\n        ],\n      });\n    } else if (screenshotInteractionMode === LONGPRESS) {\n      console.log(\"inside the condition of the longpress!!\");\n      setTimeout(() => {\n        selectScreenshotInteractionMode(SELECT_LONG);\n      }, 2000);\n    } else if (screenshotInteractionMode === SELECT_LONG) {\n      await useLongPress();\n    } else if (screenshotInteractionMode === DOUBLE_TAP) {\n      console.log(\"inside the double tap function!!!\");\n      setTimeout(() => {\n        selectScreenshotInteractionMode(SELECT_DOUBLE);\n      }, 1000);\n    } else if (screenshotInteractionMode === SELECT_DOUBLE) { \n      await useDoubleTap();\n    } else if (screenshotInteractionMode === DRAG_AND_DROP) {\n      console.log(\"inside the drage and drop condition value!!!!!!\");\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        if (isLongPress) {\n          // await B.delay(500);\n          // await applyClientMethod({ methodName: SWIPE, args: { /* ... */ } });\n          // await handleDoDragAndDrop({ x, y });\n        }\n        handleDoDragAndDrop({ x, y });\n      }\n    } else if (selectedTick) {\n      tapTickCoordinates(x, y);\n    } else if (screenshotInteractionMode === SWIPE) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500);\n        await handleDoSwipe({ x, y });\n      }\n    } else if (screenshotInteractionMode === ZOOMIN) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500);\n        setCoords({ x, y });\n        // setTimeout(() => {\n        //  handleDoZoom({x, y});\n        // }, 2000);\n      } else if (!swipeStart1) {\n        setSwipeStart1(x, y);\n      } else if (!swipeEnd1) {\n        setSwipeEnd1(x, y);\n        await B.delay(500);\n        await handleDoZoom({ x, y }, coords);\n      }\n    } else if (screenshotInteractionMode === SLIDE) {\n      setTimeout(() => {\n        selectScreenshotInteractionMode(SLIDE_SWIPE);\n      }, 1000);\n      if (props.selectedElement) {\n        setElement(props.selectedElement);\n      }\n    } else if (screenshotInteractionMode === SLIDE_SWIPE) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500);\n        await handleDoSwipeSlide({ x, y });\n      }\n    } else if (screenshotInteractionMode === FILE_UPLOAD) {\n      console.log(\"inside the file upload condition!!!!!!!!!\");\n      setTimeout(() => {\n        selectScreenshotInteractionMode(SELECT_FILE);\n      }, 1000);\n    } else if (screenshotInteractionMode === SELECT_FILE) {\n      console.log(\"inside the select file condition!!!!!!!!!\");\n      await useFileUpload();\n    } else if (screenshotInteractionMode === EXPECTED_VALUE) {\n      let expected_value = '';\n      let data = {};\n      if (props.selectedElement){\n        expected_value = props.selectedElement.attributes.text;\n        data = {\n          expected_value : expected_value,\n          xpath: props.selectedElement.xpath\n        };\n      }\n      await fetchExpectedValue(data);\n    } else if (screenshotInteractionMode === TAKE_SCREENSHOT) {\n      const image = await driver.client.takeScreenshot();\n    //   console.log(\"🚀 ~ file: Screenshot.js:203 ~ handleScreenshotClick ~ image:\", image);\n    //   let sendData = {\n    //     \"session_id\": driver.sessionId,\n    //     \"step-name\": \"take_screenshot\",\n    //   };\n    //   await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\"\n    //     },\n    //     body: JSON.stringify(sendData),\n    //   })\n    //   .then((response) => {*\n    //     console.log(\"API response:\", response);\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"API error:\", error);\n    //   });\n    } else if (screenshotInteractionMode === SCRATCH){\n      console.log(\"🚀 ~ file: Screenshot.js:201 ~ handleScreenshotClick ~ e:\", e)\n      if(!swipeStart){\n        setScratch(true)\n        setCoordinates([]);\n        await scratchCard(e)\n        setSwipeStart(x,y)\n      }\n    }\n  };\n\n\n  const handleLongPress = () => {\n    setIsLongPress(true);\n  };\n\n  const useFileUpload = () => {\n    console.log(\"inside the use file upload function!!!!!!\");\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON } = DEFAULT_TAP;\n    const { clearSwipeAction } = props;\n    applyClientMethod({\n      methodName: TAP,\n      args: [\n        {\n          [POINTER_NAME]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x, y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: PAUSE, duration: DURATION_2 },\n            { type: POINTER_UP, button: BUTTON }\n          ],\n        }\n      ],\n    });\n    clearSwipeAction();\n    selectScreenshotInteractionMode(FILE_UPLOAD);\n\n  };\n\n  const useLongPress = async () => {\n    const { LONGPRESS_POINTER_NAME, LONGPRESS_DURATION_1, LONGPRESS_DURATION_2, LONGPRESS_BUTTON } = DEFAULT_LONGPRESS;\n    let longdata = {\n      methodName: TAP,\n      args: {\n        [LONGPRESS_POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: LONGPRESS_DURATION_1, x, y },\n          { type: POINTER_DOWN, button: LONGPRESS_BUTTON },\n          { type: PAUSE, duration: LONGPRESS_DURATION_2 },\n          { type: POINTER_UP, button: LONGPRESS_BUTTON }\n        ],\n      }\n    };\n    await applyClientMethod(longdata);\n    selectScreenshotInteractionMode(LONGPRESS);\n  };\n\n  const useDoubleTap = () => {\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON } = DEFAULT_TAP;\n    applyClientMethod({\n      methodName: TAP,\n      args: [\n        {\n          [POINTER_NAME]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x, y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: PAUSE, duration: DURATION_2 },\n            { type: POINTER_UP, button: BUTTON }\n          ],\n        }\n      ],\n    });\n    const delay = 50;\n    setTimeout(() => {\n      applyClientMethod({\n        methodName: TAP,\n        args: [\n          {\n            [POINTER_NAME]: [\n              { type: POINTER_MOVE, duration: DURATION_1, x, y },\n              { type: POINTER_DOWN, button: BUTTON },\n              { type: PAUSE, duration: DURATION_2 },\n              { type: POINTER_UP, button: BUTTON },\n\n            ],\n          }\n        ],\n      });\n    }, delay);\n    selectScreenshotInteractionMode(DOUBLE_TAP);\n  };\n\n  const scratchCard = async (e) => {\n    console.log(\"🚀 ~ file: Screenshot.js:293 ~ scratchCard ~ e:\", e)\n    console.log('scratching');\n    if(scratch === true){\n      await handleMouseMove(e)\n    }\n  }\n\n\n  const handleDoSwipe = async (swipeEndLocal) => {\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_SWIPE;\n    await applyClientMethod({\n      methodName: SWIPE,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n          { type: POINTER_UP, button: BUTTON }\n        ]\n      },\n    });\n    clearSwipeAction();\n    if(step_object){\n      console.log(\"🚀 ~ file: Screenshot.js:97 ~ Screenshot ~ step_object:\", step_object)\n    }\n  };\n\n\n  const handleDoSwipeSlide = async (swipeEndLocal) => {\n    console.log(\"🚀 ~ file: Screenshot.js:332 ~ handleDoSwipeSlide ~ props:\", props)\n    let xpath = props.selectedElement.xpath\n    console.log(\"🚀 ~ file: Screenshot.js:304 ~ handleDoSwipeSlide ~ xpath:\", xpath)\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_SWIPE;\n    let data = {\n      methodName: SWIPE,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n          { type: POINTER_UP, button: BUTTON }\n        ]\n      },\n    };\n    if (xpath) {\n      data.xpath = xpath;\n    }\n    await applyClientMethod(data);\n    selectScreenshotInteractionMode(SLIDE);\n    clearSwipeAction();\n  };\n\n  const handleDoDragAndDrop = async (swipeEndLocal) => {\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_DRAG_AND_DROP;\n    await applyClientMethod({\n      methodName: TAP,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, origin: ORIGIN, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: PAUSE, duration: DURATION_2 },\n          { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n          { type: POINTER_UP, button: BUTTON }\n        ]\n      },\n    });\n    clearSwipeAction();\n  };\n\n  const handleDoZoom = async (swipeEndLocal, swipeEndLocal1) => {\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME1, POINTER_NAME2, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_ZOOM;\n    console.log(`swipeStart.x : ${swipeStart.x}, swipeStart.y : : ${swipeStart.y} , swipeEndLocal1.x : ${swipeEndLocal1.x} , swipeEndLocal1.y : ${swipeEndLocal1.y} , swipeStart1.x : ${swipeStart1.x} , swipeStart1.y : ${swipeStart1.y}, swipeEndLocal.x : ${swipeEndLocal.x} , swipeEndLocal.y : ${swipeEndLocal.y}`);\n    if (swipeEndLocal && swipeEndLocal1) {\n      await applyClientMethod({\n        methodName: SWIPE,\n        args: {\n          [POINTER_NAME1]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart.x, y: swipeStart.y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal1.x, y: swipeEndLocal1.y },\n            { type: POINTER_UP, button: BUTTON }\n          ],\n          [POINTER_NAME2]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart1.x, y: swipeStart1.y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n            { type: POINTER_UP, button: BUTTON }\n          ]\n        },\n      });\n      clearSwipeAction();\n    }\n  };\n\n  const fetchExpectedValue = async (value) => {\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_SWIPE;\n    let data = {\n      methodName: TAP,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, origin: ORIGIN, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: PAUSE, duration: DURATION_2 }\n        ]\n      },\n      xpath: value.xpath,\n      expected_value: value.expected_value\n    };\n    await applyClientMethod(data);\n  };\n\n\n  const handleMouseMove = (e) => {\n    const { clearSwipeAction } = props\n    const { POINTER_NAME1, POINTER_NAME2, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_ZOOM;\n    if (screenshotInteractionMode !== SELECT) {\n      const offsetX = e.nativeEvent.offsetX;\n      const offsetY = e.nativeEvent.offsetY;\n      const newX = offsetX * scaleRatio;\n      const newY = offsetY * scaleRatio;\n      setX(Math.round(newX));\n      setY(Math.round(newY));\n  \n      if (screenshotInteractionMode === SCRATCH) {\n      // console.log(\"🚀 ~ file: Screenshot.js:299 ~ scratchCard ~ coordinates.length:\", coordinates.length)\n        setCoordinates((prevCoordinates) => [\n          ...prevCoordinates,\n          { x: Math.round(newX), y: Math.round(newY) },\n        ]);\n\n        if(coordinates.length > 250){\n          console.log(\"🚀 ~ file: Screenshot.js:440 ~ handleMouseMove ~ coordinates.length:\", coordinates)\n          // setTimeout(() => {\n            let data = {\n              methodName: SWIPE,\n              args: {\n                [POINTER_NAME1]: [\n                  { type: POINTER_MOVE, duration: DURATION_1, x: coordinates[0].x, y: coordinates[0].y },\n                  { type: POINTER_DOWN, button: BUTTON },\n                  { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: coordinates[80].x, y: coordinates[80].y },\n                  { type: POINTER_UP, button: BUTTON }\n                ],\n                [POINTER_NAME2]: [\n                  { type: POINTER_MOVE, duration: DURATION_1, x: coordinates[80].x, y: coordinates[80].y },\n                  { type: POINTER_DOWN, button: BUTTON },\n                  { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: coordinates[160].x, y: coordinates[160].y },\n                  { type: POINTER_UP, button: BUTTON }\n                ]\n              },\n            }\n            applyClientMethod(data);\n          // }, 500);\n          clearSwipeAction();\n          setCoordinates([])\n          // selectScreenshotInteractionMode(SELECT);\n          setScratch(false)\n        }\n        \n      }\n    }\n    console.log(\"🚀 ~ file: Screenshot.js:406 ~ handleMouseMove ~ e:\", e);\n  };\n  \n\n\n  const handleMouseOut = () => {\n    // setCoordinates([])\n    setX(null);\n    setY(null);\n  };\n  const handleDragStart = (startPoint) => {\n    console.log('Drag start:', startPoint);\n\n  };\n\n  const handleDrop = (event) => {\n    // event.preventDefault();\n    const { offsetX, offsetY } = event.nativeEvent;\n    const dropX = offsetX * scaleRatio;\n    const dropY = offsetY * scaleRatio;\n    const roundedDropX = Math.round(dropX);\n    const roundedDropY = Math.round(dropY);\n    console.log('Drop position:', { x: roundedDropX, y: roundedDropY });\n    setX(roundedDropX);\n    setY(roundedDropY);\n    setCoordinates([])\n    setScratch(false)\n    setTimeout(async () => {\n      await handleDoDragAndDrop({ x: roundedDropX, y: roundedDropY });\n    }, 1000);\n\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n\n  // retrieve and format gesture for svg drawings\n  const getGestureCoordinates = () => {\n    const { showGesture } = props;\n    const { FILLED, NEW_DASHED, WHOLE, DASHED } = TYPES;\n    const defaultTypes = { pointerDown: WHOLE, pointerUp: DASHED };\n\n    if (!showGesture) { return null; }\n    return showGesture.map((pointer) => {\n      let type = DASHED;\n      const temp = [];\n      for (const tick of pointer.ticks) {\n        if (tick.type === PAUSE) { continue; }\n        const len = temp.length;\n        type = tick.type !== POINTER_MOVE ? defaultTypes[tick.type] : type;\n        if (tick.type === POINTER_MOVE && tick.x !== undefined && tick.y !== undefined) {\n          temp.push({ id: tick.id, type, x: tick.x, y: tick.y, color: pointer.color });\n        }\n        if (len === 0) {\n          if (tick.type === POINTER_DOWN) {\n            temp.push({ id: tick.id, type: FILLED, x: 0, y: 0, color: pointer.color });\n          }\n        } else {\n          if (tick.type === POINTER_DOWN && temp[len - 1].type === DASHED) {\n            temp[len - 1].type = FILLED;\n          }\n          if (tick.type === POINTER_UP && temp[len - 1].type === WHOLE) {\n            temp[len - 1].type = NEW_DASHED;\n          }\n        }\n      }\n      return temp;\n    });\n  };\n\n  // If we're tapping or swiping, show the 'crosshair' cursor style\n  const screenshotStyle = {};\n  if ([TAP, SWIPE].includes(screenshotInteractionMode) || selectedTick) {\n    screenshotStyle.cursor = 'crosshair';\n  } else if ([DRAG_AND_DROP].includes(screenshotInteractionMode) || selectedTick) {\n    screenshotStyle.cursor = 'move';\n  } else {\n    screenshotStyle.cursor = 'pointer';\n  }\n  if ([ZOOMIN, SLIDE_SWIPE].includes(screenshotInteractionMode) || selectedTick) {\n    screenshotStyle.cursor = 'crosshair';\n  }\n\n\n  let swipeInstructions = null;\n  if (screenshotInteractionMode === SWIPE && (!swipeStart || !swipeEnd)) {\n    if (!swipeStart) {\n      swipeInstructions = t('Click swipe start point');\n    } else if (!swipeEnd) {\n      swipeInstructions = t('Click swipe end point');\n    }\n  }\n\n  const screenSrc = mjpegScreenshotUrl || `data:image/gif;base64,${screenshot}`;\n  const screenImg = <img src={screenSrc} id=\"screenshot\" className={styles.screenimage} />;\n  const points = getGestureCoordinates();\n  \n\n  // const screenshotStyle1 = {\n  //   transform: `scale(${2})`, // Apply the zoom level to the transform style\n  // };\n  // Show the screenshot and highlighter rects.\n  // Show loading indicator if a method call is in progress, unless using MJPEG mode.\n  return (\n    <Spin size='large' spinning={!!methodCallInProgress && !mjpegScreenshotUrl} style={{display:\"flex!important\"}}>\n      <div className={styles.innerScreenshotContainer}>\n        <div ref={containerEl}\n          style={screenshotStyle}\n          onMouseDown={handleScreenshotClick}\n          onMouseMove={handleMouseMove}\n          onMouseOut={handleMouseOut}\n          onDragOver={handleDragOver}\n          onDrop={handleDrop}\n          className={styles.screenshotBox}>\n          {screenshotInteractionMode !== SELECT && <div className={styles.coordinatesContainer}>\n            <p>{t('xCoordinate', { x })}</p>\n            <p>{t('yCoordinate', { y })}</p>\n          </div>}\n          {swipeInstructions && <Tooltip open={true} title={swipeInstructions} placement=\"topLeft\">{screenImg}</Tooltip>}\n          {!swipeInstructions && screenImg}\n          {screenshotInteractionMode === SELECT && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === SLIDE && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === DOUBLE_TAP && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === LONGPRESS && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === EXPECTED_VALUE && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === FILE_UPLOAD && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n\n          }\n          {screenshotInteractionMode === SWIPE &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n            </svg>\n          }\n          {screenshotInteractionMode === SCRATCH && (\n            <svg className={styles.swipeSvg}>\n              {swipeStart && scratch && coordinates.map((coord, index) => (\n                <circle key={index} cx={coord.x / scaleRatio} cy={coord.y / scaleRatio} />\n              ))}\n            </svg>\n          )}\n\n\n          {screenshotInteractionMode === SLIDE_SWIPE &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n            </svg>\n          }\n\n          {screenshotInteractionMode === DRAG_AND_DROP &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n            </svg>\n          }\n\n          {screenshotInteractionMode === ZOOMIN &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n              {swipeStart1 && !swipeEnd1 && <circle\n                cx={swipeStart1.x / scaleRatio}\n                cy={swipeStart1.y / scaleRatio}\n              />}\n              {swipeStart1 && swipeEnd1 && <line\n                x1={swipeStart1.x / scaleRatio}\n                y1={swipeStart1.y / scaleRatio}\n                x2={swipeEnd1.x / scaleRatio}\n                y2={swipeEnd1.y / scaleRatio}\n              />}\n            </svg>\n          }\n          {screenshotInteractionMode === TAP &&\n            <div className={styles.tapDiv}></div>\n          }\n          {selectedInteractionMode === INTERACTION_MODE.GESTURES && points &&\n            <svg key='gestureSVG' className={styles.gestureSvg}>\n              {points.map((pointer) =>\n                pointer.map((tick, index) =>\n                  <React.Fragment key={tick.id}>\n                    {index > 0 && <line\n                      className={styles[tick.type]}\n                      key={`${tick.id}.line`}\n                      x1={pointer[index - 1].x / scaleRatio}\n                      y1={pointer[index - 1].y / scaleRatio}\n                      x2={tick.x / scaleRatio}\n                      y2={tick.y / scaleRatio}\n                      style={{ stroke: tick.color }} />\n                    }\n                    <circle\n                      className={styles[`circle-${tick.type}`]}\n                      key={`${tick.id}.circle`}\n                      cx={tick.x / scaleRatio}\n                      cy={tick.y / scaleRatio}\n                      style={tick.type === TYPES.FILLED ? { fill: tick.color } : { stroke: tick.color }} />\n                  </React.Fragment>\n                )\n              )}\n            </svg>\n          }\n        </div>\n      </div>\n      {driver && driver.client.isAndroid && <div className={styles['whole-btn']}>\n        <Tooltip title={t('Press Back Button')}>\n          <Button id='btnPressHomeButton' className={styles['phone-btn1']}\n            icon={<IoChevronBackOutline className={styles['custom-button-icon']}/>}\n            onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [4]})} />\n        </Tooltip>\n        <Tooltip title={t('Press Home Button')}>\n          <Button id='btnPressHomeButton' className={styles['phone-btn2']}\n            icon={<BiCircle className={styles['custom-button-icon']}/>}\n            onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [3]})} />\n        </Tooltip>\n        <Tooltip title={t('Press App Switch Button')}>\n          <Button id='btnPressHomeButton' className={styles['phone-btn3']}\n            icon={<BiSquare className={styles['custom-button-icon']}/>}\n            onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [187]})} />\n        </Tooltip>\n      </div>}\n    </Spin>\n  );\n};\n\nexport default Screenshot;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Button, Tooltip, Space } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport { HiOutlineMicrophone, HiOutlineHome } from 'react-icons/hi';\nimport { BiSquare, BiCircle } from 'react-icons/bi';\nimport { IoChevronBackOutline } from 'react-icons/io5';\nimport { APP_MODE } from './shared';\nimport { BUTTON } from '../AntdTypes';\nimport {\n  ReloadOutlined,\n  PlayCircleOutlined,\n  PauseCircleOutlined,\n  EyeOutlined,\n  PauseOutlined,\n  SearchOutlined,\n  CloseOutlined,\n  AppstoreOutlined,\n  GlobalOutlined\n} from '@ant-design/icons';\nimport  logo  from '../../../../assets/images/testinglogo.png';\nimport menuButton from '../../../../assets/images/hamburger.jpg';\nconst HeaderButtons = (props) => {\n  const { selectAppMode, appMode, mjpegScreenshotUrl, isSourceRefreshOn, toggleRefreshingState,\n    isRecording, startRecording, pauseRecording, showLocatorTestModal, showSiriCommandModal,\n    applyClientMethod, quitSession, driver, t } = props;\n\n  const headerLogo =\n    <div className={InspectorStyles['logoContainer']}>\n      <div>\n        <img src={menuButton} alt=\"toggleButton\" style={{height:\"45px\"}}></img>\n      </div>\n      <div>\n        <img src={logo} alt=\"testingLogo\" style={{height:\"45px\"}}></img>\n      </div>\n    </div>\n  const deviceControls = <Button.Group>\n    {driver && driver.client.isIOS && <>\n      <Tooltip title={t('Press Home Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<HiOutlineHome className={InspectorStyles['custom-button-icon']} />}\n          onClick={() =>\n            applyClientMethod({ methodName: 'executeScript', args: ['mobile:pressButton', [{ name: 'home' }]] })\n          } />\n      </Tooltip>\n      <Tooltip title={t('Execute Siri Command')}>\n        <Button id='siriCommand'\n          icon={<HiOutlineMicrophone className={InspectorStyles['custom-button-icon']} />}\n          onClick={showSiriCommandModal} />\n      </Tooltip>\n    </>}\n    {/* {driver && driver.client.isAndroid && <>\n      <Tooltip title={t('Press Back Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<IoChevronBackOutline className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [4]})} />\n      </Tooltip>\n      <Tooltip title={t('Press Home Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<BiCircle className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [3]})} />\n      </Tooltip>\n      <Tooltip title={t('Press App Switch Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<BiSquare className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [187]})} />\n      </Tooltip>\n    </>} */}\n  </Button.Group>;\n\n  const appModeControls = <Button.Group value={appMode} style={{ display: \"flex\", gap: \"10px\" }}>\n    {/* <Tooltip title={t('Native App Mode')}> */}\n    <Button className={InspectorStyles['actionButton']} icon={<AppstoreOutlined />} onClick={() => { selectAppMode(APP_MODE.NATIVE); }}\n    // type={appMode === APP_MODE.NATIVE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n    >Native Mode</Button>\n    {/* </Tooltip> */}\n    {/* <Tooltip title={t('Web/Hybrid App Mode')}> */}\n    <Button className={InspectorStyles['actionButton']} icon={<GlobalOutlined />} onClick={() => { selectAppMode(APP_MODE.WEB_HYBRID); }}\n    // type={appMode === APP_MODE.WEB_HYBRID ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n    >Hybrid Mode</Button>\n    {/* </Tooltip> */}\n  </Button.Group>;\n\n  const generalControls = <Button.Group style={{ display: \"flex\", gap: \"10px\" }}>\n    {mjpegScreenshotUrl && !isSourceRefreshOn &&\n      <Tooltip title={t('Start Refreshing Source')}>\n        <Button className={InspectorStyles['actionButton']} id='btnStartRefreshing' icon={<PlayCircleOutlined />} onClick={toggleRefreshingState} />\n      </Tooltip>\n    }\n    {mjpegScreenshotUrl && isSourceRefreshOn &&\n      <Tooltip title={t('Pause Refreshing Source')}>\n        <Button className={InspectorStyles['actionButton']} id='btnPauseRefreshing' icon={<PauseCircleOutlined />} onClick={toggleRefreshingState}>Pause Recording</Button>\n      </Tooltip>\n    }\n    {/* <Tooltip title={t('refreshSource')}> */}\n    <Button className={InspectorStyles['actionButton']} id='btnReload' icon={<ReloadOutlined />} onClick={() => applyClientMethod({ methodName: 'getPageSource' })}>Refresh</Button>\n    {/* </Tooltip> */}\n    {/* <Tooltip title={t('Search for element')}> */}\n    <Button className={InspectorStyles['actionButton']} id='searchForElement' icon={<SearchOutlined />} onClick={showLocatorTestModal}>Search</Button>\n    {/* </Tooltip> */}\n    {!isRecording &&\n      // <Tooltip title={t('Start Recording')}>\n        <Button className={InspectorStyles['actionButton']} id='btnStartRecording' icon={<EyeOutlined />} onClick={startRecording}>Start Recording</Button>\n      // </Tooltip>\n    }\n    {isRecording &&\n      // <Tooltip title={t('Pause Recording')}>\n      <Button className={InspectorStyles['actionButton']} id='btnPause' icon={<PauseOutlined />} type={BUTTON.DANGER} onClick={pauseRecording}>Pause Recording</Button>\n      // </Tooltip>\n    }\n  </Button.Group>;\n\n  const quitSessionButton =\n    // <Tooltip title={t('Close')}>\n    <Button style={{ borderRadius: \"50%\" }} className={InspectorStyles['actionButton']} id='btnClose' icon={<CloseOutlined />} onClick={() => quitSession()} />\n  // </Tooltip>;\n\n  return <div className={InspectorStyles['inspector-toolbar']}>\n    <Space className={InspectorStyles['button_wrapper']}>\n      <div style={{ display: \"flex\", gap: \"10px\", alignItems:\"center\" }}>\n        {headerLogo}\n        {deviceControls}\n        {appModeControls}\n        {generalControls}\n      </div>\n      <div>\n        {quitSessionButton}\n      </div>\n    </Space>\n  </div>;\n};\n\nexport default HeaderButtons;\n","/* eslint-disable no-console */\n/* eslint-disable quotes */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-unused-vars */\n\nimport React, { useRef } from 'react';\nimport _ from 'lodash';\nimport { getLocators } from './shared';\nimport styles from './Inspector.css';\nimport { Button, Row, Col, Input, Table, Alert, Tooltip, Select, Spin } from 'antd';\nimport { clipboard, shell } from '../../polyfills';\nimport { LoadingOutlined, CopyOutlined, AimOutlined, SendOutlined,\n         ClearOutlined, HourglassOutlined } from '@ant-design/icons';\nimport { ROW, ALERT } from '../AntdTypes';\n\nconst NATIVE_APP = 'NATIVE_APP';\nconst CLASS_CHAIN_DOCS_URL = 'https://github.com/facebookarchive/WebDriverAgent/wiki/Class-Chain-Queries-Construction-Rules';\nconst PREDICATE_DOCS_URL = 'https://github.com/facebookarchive/WebDriverAgent/wiki/Predicate-Queries-Construction-Rules';\n\nconst selectedElementTableCell = (text, copyToClipBoard) => {\n  if (copyToClipBoard) {\n    return <div className={styles['selected-element-table-cells']}>\n      <Tooltip title='Copied!' trigger=\"click\">\n        <span className={styles['element-cell-copy']} onClick = {() => clipboard.writeText(text)}>\n          {text}\n        </span>\n      </Tooltip>\n    </div>;\n  } else {\n    return <div className={styles['selected-element-table-cells']}>{text}</div>;\n  }\n};\n\n/**\n * Shows details of the currently selected element and shows methods that can\n * be called on the elements (tap, sendKeys)\n */\nconst SelectedElement = (props) => {\n  console.log('props inside the selected Element!!', props);\n  console.log('props.hoveredElement$$$$$$$4!!', props.hoveredElement);\n  const { applyClientMethod, contexts, currentContext, getFindElementsTimes, findElementsExecutionTimes,\n          isFindingElementsTimes, selectedElement, selectedElementId, sourceXML,\n          elementInteractionsNotAvailable, selectedElementSearchInProgress, t } = props; \n\n  console.log('selectedElementId inside the selected Element!!', selectedElementId);\n\n  const sendKeys = useRef();\n\n  const contextSelect = () => {\n    const { setContext } = props;\n    return (\n      <Tooltip title={t('contextSwitcher')}>\n        <Select value={currentContext} onChange={(value) => {\n          setContext(value);\n          applyClientMethod({methodName: 'switchContext', args: [value]});\n        }}\n        className={styles['context-selector']}>\n          {contexts.map(({id, title}) =>\n            <Select.Option key={id} value={id}>{title ? `${title} (${id})` : id}</Select.Option>\n          )}\n        </Select>\n      </Tooltip>\n    );\n  };\n\n  const { attributes, classChain, predicateString, xpath } = selectedElement;\n  const isDisabled = selectedElementSearchInProgress || isFindingElementsTimes;\n\n  // Get the columns for the attributes table\n  let attributeColumns = [{\n    title: t('Attribute'),\n    dataIndex: 'name',\n    key: 'name',\n    width: 100,\n    render: (text) => selectedElementTableCell(text, false),\n  }, {\n    title: t('Value'),\n    dataIndex: 'value',\n    key: 'value',\n    render: (text) => selectedElementTableCell(text, true),\n  }];\n\n  // Get the data for the attributes table\n  let attrArray = _.toPairs(attributes).filter(([key]) => key !== 'path');\n  let dataSource = attrArray.map(([key, value]) => ({\n    key,\n    value,\n    name: key,\n  }));\n  dataSource.unshift({key: 'elementId', value: selectedElementId, name: 'elementId'});\n  // console.log('dataSource in the dataSource', dataSource);\n\n  // Get the columns for the strategies table\n  let findColumns = [{\n    title: t('Find By'),\n    dataIndex: 'find',\n    key: 'find',\n    width: 100,\n    render: (text) => selectedElementTableCell(text, false),\n  }, {\n    title: t('Selector'),\n    dataIndex: 'selector',\n    key: 'selector',\n    render: (text) => selectedElementTableCell(text, true),\n  }];\n\n  if (findElementsExecutionTimes.length > 0) {\n    findColumns.push({\n      title: t('Time'),\n      dataIndex: 'time',\n      key: 'time',\n      align: 'right',\n      width: 100,\n      render: (text) => selectedElementTableCell(text, false),\n    });\n  }\n\n  // Get the data for the strategies table\n  let findDataSource = _.toPairs(getLocators(attributes, sourceXML)).map(([key, selector]) => ({\n    key,\n    selector,\n    find: key,\n  }));\n\n  // If XPath is the only provided data source, warn the user about it's brittleness\n  let showXpathWarning = false;\n  if (findDataSource.length === 0) {\n    showXpathWarning = true;\n  }\n\n  // Add class chain to the data source as well\n  if (classChain && currentContext === NATIVE_APP) {\n    const classChainText = <span>\n      -ios class chain\n      <strong>\n        <a onClick={(e) => e.preventDefault() || shell.openExternal(CLASS_CHAIN_DOCS_URL)}>&nbsp;(docs)</a>\n      </strong>\n    </span>;\n\n    findDataSource.push({\n      key: '-ios class chain',\n      find: classChainText,\n      selector: classChain,\n    });\n  }\n\n  // Add predicate string to the data source as well\n  if (predicateString && currentContext === NATIVE_APP) {\n    const predicateStringText = <span>\n      -ios predicate string\n      <strong>\n        <a onClick={(e) => e.preventDefault() || shell.openExternal(PREDICATE_DOCS_URL)}>&nbsp;(docs)</a>\n      </strong>\n    </span>;\n\n    findDataSource.push({\n      key: '-ios predicate string',\n      find: predicateStringText,\n      selector: predicateString,\n    });\n  }\n\n  // Add XPath to the data source as well\n  if (xpath) {\n    findDataSource.push({\n      key: 'xpath',\n      find: 'xpath',\n      selector: xpath,\n    });\n    // console.log('findDataSource in the Xpath condition####', findDataSource);\n    //add the datasource to the findDataSource\n    let sendData = findDataSource.concat(dataSource);\n    console.log(\"🚀 ~ file: SelectedElement.js:169 ~ SelectedElement ~ sendData:\", sendData);\n  }\n\n  // Replace table data with table data that has the times\n  if (findElementsExecutionTimes.length > 0) {\n    findDataSource = findElementsExecutionTimes;\n  }\n\n  let tapIcon = <AimOutlined/>;\n  if (!(elementInteractionsNotAvailable || selectedElementId) || selectedElementSearchInProgress) {\n    tapIcon = <LoadingOutlined/>;\n  }\n\n  return <div>\n    {elementInteractionsNotAvailable &&\n      <Row type={ROW.FLEX} gutter={10} className={styles.selectedElemNotInteractableAlertRow}>\n        <Col>\n          <Alert type={ALERT.INFO} message={t('interactionsNotAvailable')} showIcon />\n        </Col>\n      </Row>\n    }\n    <Row justify=\"center\" type={ROW.FLEX} align=\"middle\" className={styles.elementActions}>\n      <Tooltip title={t('Tap')}>\n        <Button\n          disabled={isDisabled}\n          icon={tapIcon}\n          id='btnTapElement'\n          onClick={() => applyClientMethod({methodName: 'click', elementId: selectedElementId})} />\n      </Tooltip>\n      <Button.Group className={styles.elementKeyInputActions}>\n        <Input className={styles.elementKeyInput}\n          disabled={isDisabled}\n          placeholder={t('Enter Keys to Send')}\n          allowClear={true}\n          onChange={(e) => sendKeys.current = e.target.value} />\n        <Tooltip title={t('Send Keys')}>\n          <Button\n            disabled={isDisabled}\n            id='btnSendKeysToElement'\n            icon={<SendOutlined/>}\n            onClick={() => applyClientMethod({methodName: 'sendKeys', elementId: selectedElementId, args: [sendKeys.current || '']})} />\n        </Tooltip>\n        <Tooltip title={t('Clear')}>\n          <Button\n            disabled={isDisabled}\n            id='btnClearElement'\n            icon={<ClearOutlined/>}\n            onClick={() => applyClientMethod({methodName: 'clear', elementId: selectedElementId})} />\n        </Tooltip>\n      </Button.Group>\n      <Button.Group>\n        <Tooltip title={t('Copy Attributes to Clipboard')}>\n          <Button\n            disabled={isDisabled}\n            id='btnCopyAttributes'\n            icon={<CopyOutlined/>}\n            onClick={() => clipboard.writeText(JSON.stringify(dataSource))} />\n        </Tooltip>\n        <Tooltip title={t('Get Timing')}>\n          <Button\n            disabled={isDisabled}\n            id='btnGetTiming'\n            icon={<HourglassOutlined/>}\n            onClick={() => getFindElementsTimes(findDataSource)} />\n        </Tooltip>\n      </Button.Group>\n    </Row>\n    {findDataSource.length > 0 &&\n      <Row>\n        <Spin spinning={isFindingElementsTimes}>\n          <Table\n            columns={findColumns}\n            dataSource={findDataSource}\n            size=\"small\"\n            tableLayout='fixed'\n            pagination={false} />\n        </Spin>\n      </Row>\n    }\n    <br />\n    {currentContext === NATIVE_APP && showXpathWarning &&\n      <div>\n        <Alert\n          message={t('usingXPathNotRecommended')}\n          type={ALERT.WARNING}\n          showIcon />\n        <br />\n      </div>\n    }\n    {currentContext === NATIVE_APP && contexts && contexts.length > 1 &&\n      <div>\n        <Alert\n          message={t('usingSwitchContextRecommended')}\n          type={ALERT.WARNING}\n          showIcon />\n        <br />\n      </div>\n    }\n    {currentContext !== NATIVE_APP &&\n      <div>\n        <Alert\n          message={t('usingWebviewContext')}\n          type={ALERT.WARNING}\n          showIcon />\n        <br />\n      </div>\n    }\n    {contexts && contexts.length > 1 &&\n      <div>\n        {contextSelect()}\n        <br /><br />\n      </div>\n    }\n    {dataSource.length > 0 &&\n      <Row>\n        <Table\n          columns={attributeColumns}\n          dataSource={dataSource}\n          size=\"small\"\n          pagination={false} />\n      </Row>\n    }\n  </div>;\n};\n\nexport default SelectedElement;\n","import React, { useRef } from 'react';\nimport { Alert, Input, Row, Button, Badge, List, Space, Spin, Tooltip } from 'antd';\nimport { AimOutlined, ClearOutlined, SendOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport { ALERT } from '../AntdTypes';\nimport InspectorStyles from './Inspector.css';\n\nconst LocatedElements = (props) => {\n  const { locatedElements, locatedElementsExecutionTime, applyClientMethod, setLocatorTestElement, locatorTestElement,\n          isFindingLocatedElementInSource, searchedForElementBounds, selectLocatedElement, source, driver, t } = props;\n\n  const sendKeys = useRef(null);\n\n  if(locatorTestElement){\n    console.log(\"🚀 ~ file: LocatedElements.js:14 ~ LocatedElements ~ locatorTestElement:\", locatorTestElement)\n  }\n  const showIdAutocompleteInfo = () => {\n    const { locatorTestStrategy, locatorTestValue } = props;\n    const automationName = driver.client.capabilities.automationName;\n    const idLocatorAutocompletionDisabled = driver.client.capabilities.disableIdLocatorAutocompletion;\n    if (automationName && automationName.toLowerCase() === 'uiautomator2' &&\n      locatorTestStrategy === 'id' && !locatorTestValue.includes(':id/') && !idLocatorAutocompletionDisabled) {\n      return <Row><Alert message={t('idAutocompletionCanBeDisabled')} type={ALERT.INFO} showIcon/></Row>;\n    }\n  };\n\n  return <>\n    {locatedElements.length === 0 && <Space className={InspectorStyles.spaceContainer} direction='vertical' size='small'>\n      <Row><i>{t('couldNotFindAnyElements')}</i></Row>\n      {showIdAutocompleteInfo()}\n    </Space>}\n    {locatedElements.length > 0 && <Spin spinning={isFindingLocatedElementInSource}>\n      <Space className={InspectorStyles.spaceContainer} direction='vertical' size='small'>\n        <Row justify='space-between'>\n          <span>{t('elementsCount')} <Badge count={locatedElements.length} offset={[0, -2]}/></span>\n          <>{t('Time')}: {locatedElementsExecutionTime}</>\n        </Row>\n        <Row>\n          <List className={InspectorStyles.searchResultsList}\n            size='small'\n            dataSource={locatedElements}\n            renderItem={(elementId) =>\n              <List.Item type='text'\n                {...(locatorTestElement === elementId ? { className: InspectorStyles.searchResultsSelectedItem } : {})}\n                {...(locatorTestElement !== elementId ? { onClick: () => {setLocatorTestElement(elementId);} } : {})}\n              >\n                {elementId}\n              </List.Item>\n            }\n          />\n        </Row>\n        <Row justify='center'>\n          <Space direction='horizontal' size='small'>\n            <Tooltip title={t('Find and Select in Source')} placement='bottom'>\n              <Button\n                disabled={!locatorTestElement}\n                icon={<MenuUnfoldOutlined/>}\n                onClick={() => selectLocatedElement(source, searchedForElementBounds, locatorTestElement)}\n              />\n            </Tooltip>\n            <Tooltip title={t('Tap')} placement='bottom'>\n              <Button\n                disabled={!locatorTestElement}\n                icon={<AimOutlined/>}\n                onClick={() => applyClientMethod({methodName: 'click', elementId: locatorTestElement})}\n              />\n            </Tooltip>\n            <Button.Group className={InspectorStyles.searchResultsActions}>\n              <Input className={InspectorStyles.searchResultsKeyInput}\n                disabled={!locatorTestElement}\n                placeholder={t('Enter Keys to Send')}\n                allowClear={true}\n                onChange={(e) => sendKeys.current = e.target.value}/>\n              <Tooltip title={t('Send Keys')} placement='bottom'>\n                <Button\n                  disabled={!locatorTestElement}\n                  icon={<SendOutlined/>}\n                  onClick={() => applyClientMethod({methodName: 'sendKeys', elementId: locatorTestElement, args: [sendKeys.current || '']})}\n                />\n              </Tooltip>\n              <Tooltip title={t('Clear')} placement='bottom'>\n                <Button\n                  disabled={!locatorTestElement}\n                  id='btnClearElement'\n                  icon={<ClearOutlined/>}\n                  onClick={() => applyClientMethod({methodName: 'clear', elementId: locatorTestElement})}\n                />\n              </Tooltip>\n            </Button.Group>\n          </Space>\n        </Row>\n      </Space>\n    </Spin>}\n  </>;\n};\n\nexport default LocatedElements;\n","import React from 'react';\nimport { Alert, Input, Space, Radio, Row } from 'antd';\nimport { ALERT } from '../AntdTypes';\nimport InspectorStyles from './Inspector.css';\n\nconst STRAT_ID = ['id', 'Id'];\nconst STRAT_XPATH = ['xpath', 'XPath'];\nconst STRAT_NAME = ['name', 'Name'];\nconst STRAT_CLASS_NAME = ['class name', 'Class Name'];\nconst STRAT_ACCESSIBILITY_ID = ['accessibility id', 'Accessibility ID'];\nconst STRAT_PREDICATE = ['-ios predicate string', 'Predicate String'];\nconst STRAT_CLASS_CHAIN = ['-ios class chain', 'Class Chain'];\nconst STRAT_UIAUTOMATOR = ['-android uiautomator', 'UIAutomator'];\nconst STRAT_DATAMATCHER = ['-android datamatcher', 'DataMatcher'];\nconst STRAT_VIEWTAG = ['-android viewtag', 'View Tag'];\n\nconst locatorStrategies = (driver) => {\n  const automationName = driver.client.capabilities.automationName;\n  let strategies = [STRAT_ID, STRAT_XPATH, STRAT_NAME, STRAT_CLASS_NAME, STRAT_ACCESSIBILITY_ID];\n  if (!automationName) { return strategies; }\n  switch (automationName.toLowerCase()) {\n    case 'xcuitest':\n    case 'mac2':\n      strategies.push(STRAT_PREDICATE, STRAT_CLASS_CHAIN);\n      break;\n    case 'espresso':\n      strategies.push(STRAT_DATAMATCHER, STRAT_VIEWTAG);\n      break;\n    case 'uiautomator2':\n      strategies.push(STRAT_UIAUTOMATOR);\n      break;\n  }\n  return strategies;\n};\n\nconst showMissingAutomationNameInfo = (driver, t) => {\n  if (!driver.client.capabilities.automationName) {\n    return <Alert message={t('missingAutomationNameForStrategies')} type={ALERT.INFO} showIcon/>;\n  }\n};\n\nconst ElementLocator = (props) => {\n  const { setLocatorTestValue, locatorTestValue, setLocatorTestStrategy, locatorTestStrategy, driver, t } = props;\n\n  return (\n    <Space className={InspectorStyles.spaceContainer} direction='vertical' size='small'>\n      {t('locatorStrategy')}\n      <Row justify=\"center\">\n        <Radio.Group buttonStyle=\"solid\"\n          onChange={(e) => setLocatorTestStrategy(e.target.value)}\n          defaultValue={locatorTestStrategy}\n        >\n          <Row justify=\"center\">\n            {locatorStrategies(driver).map(([strategyValue, strategyName]) => (\n              <Radio.Button\n                className={InspectorStyles.locatorStrategyBtn}\n                value={strategyValue}\n                key={strategyValue}\n              >\n                {strategyName}\n              </Radio.Button>\n            ))}\n          </Row>\n        </Radio.Group>\n      </Row>\n      {showMissingAutomationNameInfo(driver, t)}\n      {t('selector')}\n      <Input.TextArea\n        className={InspectorStyles.locatorSelectorTextArea}\n        onChange={(e) => setLocatorTestValue(e.target.value)}\n        value={locatorTestValue}\n        allowClear={true}\n        rows={3} />\n    </Space>\n  );\n};\n\nexport default ElementLocator;\n","import React from 'react';\nimport { Modal, Button } from 'antd';\nimport LocatedElements from './LocatedElements';\nimport ElementLocator from './ElementLocator';\n\nconst LocatorTestModal = (props) => {\n  const { isLocatorTestModalVisible, isSearchingForElements, clearSearchResults, locatedElements, t } = props;\n\n  const onCancel = () => {\n    const { hideLocatorTestModal } = props;\n    hideLocatorTestModal();\n    clearSearchResults();\n  };\n\n  const onSubmit = () => {\n    const { locatorTestStrategy, locatorTestValue, searchForElement } = props;\n    if (locatedElements) {\n      onCancel();\n    } else {\n      searchForElement(locatorTestStrategy, locatorTestValue);\n    }\n  };\n\n  // Footer displays all the buttons at the bottom of the Modal\n  return <Modal open={isLocatorTestModalVisible}\n    title={t('Search for element')}\n    onCancel={onCancel}\n    footer=\n      {<>\n        {locatedElements &&\n        <Button onClick={(e) => e.preventDefault() || clearSearchResults()}>\n          {t('Back')}\n        </Button>}\n        <Button loading={isSearchingForElements} onClick={onSubmit} type=\"primary\">\n          {locatedElements ? t('Done') : t('Search')}\n        </Button>\n      </>}>\n    {!locatedElements && <ElementLocator {...props} />}\n    {locatedElements && <LocatedElements {...props} />}\n  </Modal>;\n};\n\nexport default LocatorTestModal;\n","import React from 'react';\nimport { Modal, Button, Input, Row } from 'antd';\n\nconst SiriCommandModal = (props) => {\n  const { siriCommandValue, setSiriCommandValue, isSiriCommandModalVisible, t } = props;\n\n  const onSubmit = () => {\n    const { applyClientMethod } = props;\n    applyClientMethod({ methodName: 'executeScript', args: ['mobile:siriCommand', [{text: siriCommandValue}]]});\n    onCancel();\n  };\n\n  const onCancel = () => {\n    const { hideSiriCommandModal } = props;\n    hideSiriCommandModal();\n  };\n\n  // Footer displays all the buttons at the bottom of the Modal\n  return <Modal open={isSiriCommandModalVisible}\n    title={t('Execute Siri Command')}\n    onCancel={onCancel}\n    footer={<Button onClick={onSubmit} type=\"primary\">{t('Execute Command')}</Button>}>\n    <Row>\n      {t('Command')}\n      <Input.TextArea onChange={(e) => setSiriCommandValue(e.target.value)} value={siriCommandValue} />\n    </Row>\n  </Modal>;\n};\n\nexport default SiriCommandModal;\n","import React from 'react';\nimport { Tree, Spin } from 'antd';\nimport LocatorTestModal from './LocatorTestModal';\nimport InspectorStyles from './Inspector.css';\nimport SiriCommandModal from './SiriCommandModal';\n\nconst IMPORTANT_ATTRS = [\n  'name',\n  'content-desc',\n  'resource-id',\n  'AXDescription',\n  'AXIdentifier',\n];\n\n/**\n * Shows the 'source' of the app as a Tree\n */\nconst Source = (props) => {\n  const { source, sourceError, setExpandedPaths, expandedPaths, selectedElement = {}, showSourceAttrs,\n          methodCallInProgress, mjpegScreenshotUrl, isSourceRefreshOn, t } = props;\n\n  const getFormattedTag = (el, showAllAttrs) => {\n    const { tagName, attributes } = el;\n    let attrs = [];\n\n    for (let attr of Object.keys(attributes)) {\n      if (IMPORTANT_ATTRS.includes(attr) || showAllAttrs) {\n        attrs.push(<span key={attr}>&nbsp;\n          <i\n            className={InspectorStyles.sourceAttrName}\n          >{attr}</i>=<span\n            className={InspectorStyles.sourceAttrValue}\n          >&quot;{attributes[attr]}&quot;</span>\n        </span>);\n      }\n    }\n    return <span>\n      &lt;<b className={InspectorStyles.sourceTag}>{tagName}</b>{attrs}&gt;\n    </span>;\n  };\n\n  /**\n   * Binds to antd Tree onSelect. If an item is being unselected, path is undefined\n   * otherwise 'path' refers to the element's path.\n   */\n  const handleSelectElement = (path) => {\n    const { selectElement, unselectElement } = props;\n\n    if (!path) {\n      unselectElement();\n    } else {\n      selectElement(path);\n    }\n  };\n\n  // Recursives through the source and renders a TreeNode for an element\n  const recursive = (elemObj) => {\n    if (!((elemObj || {}).children || []).length) { return null; }\n\n    return elemObj.children.map((el) => ({\n      title: getFormattedTag(el, showSourceAttrs),\n      key: el.path,\n      children: recursive(el),\n    }));\n  };\n\n  const treeData = source && recursive(source);\n\n  return <div id='sourceContainer' className={InspectorStyles['tree-container']} tabIndex=\"0\">\n    {!source && !sourceError && <i>{t('Gathering initial app source…')}</i>}\n    {sourceError && t('couldNotObtainSource', {errorMsg: JSON.stringify(sourceError)})}\n    {/* Show loading indicator in MJPEG mode if a method call is in progress and source refresh is on */}\n    <Spin size='large' spinning={!!methodCallInProgress && mjpegScreenshotUrl && isSourceRefreshOn}>\n      {/* Must switch to a new antd Tree component when there's changes to treeData  */}\n      {treeData ?\n        <Tree\n          defaultExpandAll={true}\n          onExpand={setExpandedPaths}\n          expandedKeys={expandedPaths}\n          onSelect={(selectedPaths) => handleSelectElement(selectedPaths[0])}\n          selectedKeys={[selectedElement.path]}\n          treeData={treeData} />\n        :\n        <Tree\n          treeData={[]} />\n      }\n    </Spin>\n    <LocatorTestModal {...props} />\n    <SiriCommandModal {...props} />\n  </div>;\n};\n\nexport default Source;\n","import { clipboard } from '../../polyfills';\nimport React from 'react';\nimport { Card, Select, Tooltip, Button } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport frameworks from '../../lib/client-frameworks';\nimport { highlight } from 'highlight.js';\nimport { ExportOutlined, CopyOutlined, DeleteOutlined, CloseOutlined, CodeOutlined } from '@ant-design/icons';\nimport { BUTTON } from '../AntdTypes';\n\nconst RecordedActions = (props) => {\n  const { showBoilerplate, recordedActions, actionFramework, t } = props;\n\n  const code = (raw = true) => {\n    const { host, port, path, https, desiredCapabilities } = props.sessionDetails;\n\n    let framework = new frameworks[actionFramework](host, port, path, https, desiredCapabilities);\n    framework.actions = recordedActions;\n    const rawCode = framework.getCodeString(showBoilerplate);\n    if (raw) {\n      return rawCode;\n    }\n    return highlight(framework.language, rawCode, true).value;\n  };\n\n  const actionBar = () => {\n    const { setActionFramework, toggleShowBoilerplate, clearRecording, closeRecorder, isRecording } = props;\n\n    return <div>\n      {!!recordedActions.length &&\n        <Select defaultValue={actionFramework} onChange={setActionFramework}\n          className={InspectorStyles['framework-dropdown']} size=\"small\">\n          {Object.keys(frameworks).map((f) =>\n            <Select.Option value={f} key={f}>{frameworks[f].readableName}</Select.Option>\n          )}\n        </Select>\n      }\n      {(!!recordedActions.length || !isRecording) &&\n        <Button.Group size=\"small\">\n          {!!recordedActions.length &&\n          <Tooltip title={t('Show/Hide Boilerplate Code')}>\n            <Button\n              onClick={toggleShowBoilerplate}\n              icon={<ExportOutlined/>}\n              type={showBoilerplate ? BUTTON.PRIMARY : BUTTON.DEFAULT} />\n          </Tooltip>\n          }\n          {!!recordedActions.length &&\n          <Tooltip title={t('Copy code to clipboard')}>\n            <Button\n              icon={<CopyOutlined/>}\n              onClick={() => clipboard.writeText(code())} />\n          </Tooltip>\n          }\n          {!!recordedActions.length &&\n          <Tooltip title={t('Clear Actions')}>\n            <Button\n              icon={<DeleteOutlined/>}\n              onClick={clearRecording} />\n          </Tooltip>\n          }\n          {!isRecording &&\n          <Tooltip title={t('Close Recorder')}>\n            <Button\n              icon={<CloseOutlined/>}\n              onClick={closeRecorder} />\n          </Tooltip>\n          }\n        </Button.Group>\n      }\n    </div>;\n  };\n\n  const highlightedCode = code(false);\n\n  return (\n    <Card title={<span><CodeOutlined /> {t('Recorder')}</span>}\n      className={InspectorStyles['recorded-actions']}\n      extra={actionBar()}>\n      {!recordedActions.length &&\n        <div className={InspectorStyles['no-recorded-actions']}>\n          {t('Perform some actions to see code show up here')}\n        </div>\n      }\n      {!!recordedActions.length &&\n        <div className={InspectorStyles['recorded-code']}\n          dangerouslySetInnerHTML={{__html: highlightedCode}} />\n      }\n    </Card>\n  );\n};\n\nexport default RecordedActions;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Row, Col, Button, Select, Modal, Input, Switch, notification, } from 'antd';\nimport { COMMAND_DEFINITIONS, COMMAND_ARG_TYPES } from './shared';\nimport InspectorStyles from './Inspector.css';\nimport { INPUT } from '../AntdTypes';\n\nconst Commands = (props) => {\n  const { selectCommandGroup, selectCommandSubGroup, selectedCommandGroup, selectedCommandSubGroup,\n          pendingCommand, cancelPendingCommand, setCommandArg, applyClientMethod, t } = props;\n\n  const startPerformingCommand = (commandName, command) => {\n    const { startEnteringCommandArgs } = props;\n    if (_.isEmpty(command.args)) {\n      applyClientMethod({methodName: command.methodName, args: [], skipRefresh: !command.refresh, ignoreResult: false});\n    } else {\n      startEnteringCommandArgs(commandName, command);\n    }\n  };\n\n  const executeCommand = () => {\n    let { args, command } = pendingCommand;\n\n    // Special case for 'rotateDevice'\n    if (command.methodName === 'rotateDevice') {\n      args = {x: args[0], y: args[1], duration: args[2], radius: args[3], rotation: args[4], touchCount: args[5]};\n    }\n\n    // Special case for 'setGeoLocation'\n    if (command.methodName === 'setGeoLocation') {\n      args = {latitude: args[0], longitude: args[1], altitude: args[2]};\n    }\n\n    // Special case for 'execute'\n    if (command.methodName === 'executeScript') {\n      if (!_.isEmpty(args[1])) {\n        try {\n          args[1] = JSON.parse(args[1]);\n        } catch (e) {\n          notification.error({\n            message: t('invalidJson', {json: args[1]}),\n            duration: 5,\n          });\n        }\n      }\n    }\n\n    // Special case for 'updateSettings'\n    if (command.methodName === 'updateSettings') {\n      if (_.isString(args[0])) {\n        try {\n          args[0] = JSON.parse(args[0]);\n        } catch (e) {\n          notification.error({\n            message: t('invalidJson', {json: args[0]}),\n            duration: 5,\n          });\n        }\n      }\n    }\n\n    applyClientMethod({methodName: command.methodName, args, skipRefresh: !command.refresh, ignoreResult: false});\n    cancelPendingCommand();\n  };\n\n  return <div className={InspectorStyles['commands-container']}>\n    <Row gutter={16} className={InspectorStyles['arg-row']}>\n      <Col span={24}>\n        <Select onChange={(commandGroupName) => selectCommandGroup(commandGroupName)} placeholder={t('Select Command Group')}>\n          { _.keys(COMMAND_DEFINITIONS).map((commandGroup) => <Select.Option key={commandGroup}>{t(commandGroup)}</Select.Option>) }\n        </Select>\n      </Col>\n    </Row>\n    {selectedCommandGroup && <Row>\n      <Col span={24}>\n        <Select onChange={(commandGroupName) => selectCommandSubGroup(commandGroupName)} placeholder={t('Select Sub Group')}>\n          { _.keys(COMMAND_DEFINITIONS[selectedCommandGroup]).map((commandGroup) => <Select.Option key={commandGroup}>{t(commandGroup)}</Select.Option>) }\n        </Select>\n      </Col>\n    </Row>}\n    <Row>\n      {selectedCommandSubGroup && _.toPairs(COMMAND_DEFINITIONS[selectedCommandGroup][selectedCommandSubGroup]).map(([commandName, command], index) => <Col key={index} span={8}>\n        <div className={InspectorStyles['btn-container']}>\n          <Button onClick={() => startPerformingCommand(commandName, command)}>{t(commandName)}</Button>\n        </div>\n      </Col>)}\n    </Row>\n    {!!pendingCommand && <Modal\n      title={t(pendingCommand.commandName)}\n      okText={t('Execute Command')}\n      cancelText={t('Cancel')}\n      open={!!pendingCommand}\n      onOk={() => executeCommand()}\n      onCancel={() => cancelPendingCommand()}>\n      {\n        !_.isEmpty(pendingCommand.command.args) && _.map(pendingCommand.command.args, ([argName, argType], index) => <Row key={index} gutter={16}>\n          <Col span={24} className={InspectorStyles['arg-container']}>\n            {\n              argType === COMMAND_ARG_TYPES.NUMBER && <Input\n                type={INPUT.NUMBER}\n                value={pendingCommand.args[index]}\n                addonBefore={t(argName)}\n                onChange={(e) => setCommandArg(index, _.toNumber(e.target.value))}\n              />\n            }\n            {argType === COMMAND_ARG_TYPES.BOOLEAN && <div>{t(argName)} <Switch checked={pendingCommand.args[index]} onChange={(v) => setCommandArg(index, v)} /></div>}\n            {argType === COMMAND_ARG_TYPES.STRING && <Input addonBefore={t(argName)} onChange={(e) => setCommandArg(index, e.target.value)}/>}\n          </Col>\n        </Row>)\n      }\n    </Modal>}\n  </div>;\n};\n\nexport default Commands;\n","import React, { useEffect, useRef } from 'react';\nimport { Table, Button, Space, Tooltip } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport { EditOutlined, DeleteOutlined, PlusOutlined, PlayCircleOutlined } from '@ant-design/icons';\nimport { SCREENSHOT_INTERACTION_MODE, POINTER_TYPES, percentageToPixels } from './shared';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nconst SAVED_ACTIONS_OBJ = {NAME: 'Name', DESCRIPTION: 'Description', CREATED: 'Created', ACTIONS: 'Actions'};\n\nconst SavedGestures = (props) => {\n  const { savedGestures, showGestureEditor, removeGestureDisplay, t } = props;\n\n  const drawnGestureRef = useRef(null);\n\n  const onRowClick = (rowKey) => {\n    const gesture = getGestureByID(rowKey);\n    if (gesture.id === drawnGestureRef.current) {\n      removeGestureDisplay();\n      drawnGestureRef.current = null;\n    } else {\n      onDraw(gesture);\n      drawnGestureRef.current = gesture.id;\n    }\n  };\n\n  const loadSavedGesture = (gesture) => {\n    const { setLoadedGesture } = props;\n    removeGestureDisplay();\n    setLoadedGesture(gesture);\n    showGestureEditor();\n  };\n\n  const handleDelete = (id) => {\n    const { deleteSavedGesture } = props;\n    if (window.confirm('Are you sure?')) {\n      deleteSavedGesture(id);\n    }\n  };\n\n  const getGestureByID = (id) => {\n    for (const gesture of savedGestures) {\n      if (gesture.id === id) {\n        return gesture;\n      }\n    }\n    throw new Error(`Couldn't find session with id ${id}`);\n  };\n\n  const onDraw = (gesture) => {\n    const { displayGesture } = props;\n    const pointers = convertCoordinates(gesture.actions);\n    displayGesture(pointers);\n  };\n\n  const onPlay = (gesture) => {\n    const { applyClientMethod } = props;\n    const pointers = convertCoordinates(gesture.actions);\n    const actions = formatGesture(pointers);\n    applyClientMethod({methodName: SCREENSHOT_INTERACTION_MODE.GESTURE, args: [actions]});\n  };\n\n  const formatGesture = (pointers) => {\n    const actions = {};\n    for (const pointer of pointers) {\n      actions[pointer.name] = pointer.ticks.map((tick) => _.omit(tick, 'id'));\n    }\n    return actions;\n  };\n\n  const convertCoordinates = (pointers) => {\n    const { windowSize } = props;\n    const newPointers = JSON.parse(JSON.stringify(pointers));\n    for (const pointer of newPointers) {\n      for (const tick of pointer.ticks) {\n        if (tick.type === POINTER_TYPES.POINTER_MOVE) {\n          tick.x = percentageToPixels(tick.x, windowSize.width);\n          tick.y = percentageToPixels(tick.y, windowSize.height);\n        }\n      }\n    }\n    return newPointers;\n  };\n\n  const dataSource = () => {\n    if (!savedGestures) { return []; }\n    return savedGestures.map((gesture) => ({\n      key: gesture.id,\n      Name: (gesture.name || '(Unnamed)'),\n      Created: moment(gesture.date).format('YYYY-MM-DD'),\n      Description: gesture.description || 'No Description',\n    }));\n  };\n\n  const columns = (Object.keys(SAVED_ACTIONS_OBJ)).map((key) => {\n    if (SAVED_ACTIONS_OBJ[key] === SAVED_ACTIONS_OBJ.ACTIONS) {\n      return {title: SAVED_ACTIONS_OBJ[key], key: SAVED_ACTIONS_OBJ[key], render: (_, record) => {\n        const gesture = getGestureByID(record.key);\n        return (\n          <Button.Group>\n            <Tooltip title={t('Play')}>\n              <Button key='play' type='primary' icon={<PlayCircleOutlined />} onClick={() => onPlay(gesture)}/>\n            </Tooltip>\n            <Button icon={<EditOutlined/>} onClick={() => loadSavedGesture(gesture)}/>\n            <Button icon={<DeleteOutlined/>} onClick={() => handleDelete(gesture.id)}/>\n          </Button.Group>\n        );\n      }};\n    } else {\n      return {title: SAVED_ACTIONS_OBJ[key], dataIndex: SAVED_ACTIONS_OBJ[key], key: SAVED_ACTIONS_OBJ[key]};\n    }\n  });\n\n  useEffect(() => {\n    const { getSavedGestures } = props;\n    getSavedGestures();\n    return () => drawnGestureRef.current = null;\n  }, []);\n\n  return (\n    <Space className={InspectorStyles.spaceContainer} direction='vertical' size='middle'>\n      {t('gesturesDescription')}\n      <Table\n        onRow={(row) => ({onClick: () => onRowClick(row.key)})}\n        pagination={false}\n        dataSource={dataSource()}\n        columns={columns}\n        footer={() => <Button\n          onClick={showGestureEditor}\n          icon={<PlusOutlined/>}\n        />}\n      />\n    </Space>\n  );\n};\n\nexport default SavedGestures;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { Tabs, Input, Button, Card, Select, Row, Col, notification,\n         PageHeader, Space, Steps, Divider, Tooltip, Popover } from 'antd';\nimport { QuestionCircleOutlined, PlayCircleOutlined, PlusCircleOutlined,\n         CloseOutlined, AimOutlined, RightCircleOutlined,\n         DownCircleOutlined, UpCircleOutlined, PauseCircleOutlined } from '@ant-design/icons';\nimport { SCREENSHOT_INTERACTION_MODE, POINTER_TYPES,\n         percentageToPixels, pixelsToPercentage } from './shared';\nimport InspectorCSS from './Inspector.css';\n\nconst { POINTER_UP, POINTER_DOWN, PAUSE, POINTER_MOVE } = POINTER_TYPES;\n\nconst DEFAULT_DURATION_TIME = 2500;\nconst COLORS = ['#FF3333', '#FF8F00', '#B65FF4', '#6CFF00', '#00FFDC'];\nconst BUTTONS = {LEFT: 0, RIGHT: 1};\nconst ACTION_TYPES = {ADD: 'add', REMOVE: 'remove'};\nconst MSG_TYPES = {ERROR: 'error', SUCCESS: 'success'};\nconst COORD_TYPE = {PERCENTAGES: 'percentages', PIXELS: 'pixels'};\nconst TICK_PROPS = {POINTER_TYPE: 'pointerType', DURATION: 'duration', BUTTON: 'button', X: 'x', Y: 'y'};\nconst CURSOR = {POINTER: 'pointer', TEXT: 'text'};\nconst STATUS = {WAIT: 'wait', FINISH: 'finish', COLOR: '#FFFFFF', FILLER: 'filler'};\nconst DISPLAY = {[POINTER_UP]: 'Pointer Up', [POINTER_DOWN]: 'Pointer Down',\n                 [PAUSE]: 'Pause', [POINTER_MOVE]: 'Move'};\n\nconst DEFAULT_POINTERS = () => [{\n  name: 'pointer1',\n  ticks: [{id: '1.1'}],\n  color: COLORS[0],\n  id: '1',\n}];\n\n/**\n * Shows the gesture editor interface\n */\nconst GestureEditor = (props) => {\n  const { loadedGesture, saveGesture, tickCoordinates, selectedTick, selectTick, unselectTick, windowSize, t } = props;\n\n  const [pointers, setPointers] = useState(loadedGesture ? loadedGesture.actions : DEFAULT_POINTERS());\n  const [name, setName] = useState(loadedGesture ? loadedGesture.name : t('Untitled Gesture'));\n  const [description, setDescription] = useState(loadedGesture ? loadedGesture.description : t('Add Description'));\n  const [coordType, setCoordType] = useState(COORD_TYPE.PERCENTAGES);\n  const [activePointerId, setActivePointerId] = useState('1');\n\n  // Draw gesture whenever pointers change\n  useEffect(() => {\n    const { displayGesture } = props;\n    const convertedPointers = getConvertedPointers(COORD_TYPE.PIXELS);\n    displayGesture(convertedPointers);\n  }, [pointers]);\n\n  // Retrieve coordinates when user taps screenshot\n  useEffect(() => {\n    if (tickCoordinates) {\n      updateCoordinates(selectedTick, tickCoordinates.x, tickCoordinates.y);\n    }\n  }, [selectedTick, tickCoordinates]);\n\n  const onSave = () => {\n    const { id, date } = loadedGesture;\n    if (duplicatePointerNames(pointers)) { return null; }\n    const gesture = {name, description, id, date, actions: getConvertedPointers(COORD_TYPE.PERCENTAGES)};\n    saveGesture(gesture);\n    displayNotificationMsg(MSG_TYPES.SUCCESS, t('Gesture saved'));\n  };\n\n  const onSaveAs = () => {\n    if (duplicatePointerNames(pointers)) { return null; }\n    const gesture = {name, description, actions: getConvertedPointers(COORD_TYPE.PERCENTAGES)};\n    saveGesture(gesture);\n    displayNotificationMsg(MSG_TYPES.SUCCESS, t('Gesture saved as', {gestureName: name}));\n    onBack();\n  };\n\n  const onPlay = () => {\n    const { applyClientMethod } = props;\n    if (duplicatePointerNames(pointers)) { return null; }\n    const formattedPointers = getW3CPointers();\n    applyClientMethod({methodName: SCREENSHOT_INTERACTION_MODE.GESTURE, args: [formattedPointers]});\n  };\n\n  const onBack = () => {\n    const { hideGestureEditor, removeLoadedGesture, removeGestureDisplay } = props;\n    unselectTick();\n    removeGestureDisplay();\n    removeLoadedGesture();\n    hideGestureEditor();\n  };\n\n  // Check if pointer names are duplicates before saving/playing\n  const duplicatePointerNames = (localPointers) => {\n    const duplicates = {};\n    for (const pointer of localPointers) {\n      if (duplicates[pointer.name]) {\n        displayNotificationMsg(MSG_TYPES.ERROR, t('Duplicate pointer names are not allowed'));\n        return true;\n      } else {\n        duplicates[pointer.name] = pointer;\n      }\n    }\n    return false;\n  };\n\n  const displayNotificationMsg = (type, msg) => {\n    notification[type]({\n      message: msg,\n      duration: 5,\n    });\n  };\n\n  // Change gesture datastructure to fit Webdriver spec\n  const getW3CPointers = () => {\n    const newPointers = {};\n    const currentPointers = getConvertedPointers(COORD_TYPE.PIXELS);\n    for (const pointer of currentPointers) {\n      newPointers[pointer.name] = pointer.ticks.map((tick) => _.omit(tick, 'id'));\n    }\n    return newPointers;\n  };\n\n  // This converts all the coordinates in the gesture to px/%\n  const getConvertedPointers = (type) => {\n    const { width, height } = windowSize;\n    if (type === coordType) { return pointers; }\n    const newPointers = _.cloneDeep(pointers);\n    for (const pointer of newPointers) {\n      for (const tick of pointer.ticks) {\n        if (tick.type === POINTER_TYPES.POINTER_MOVE) {\n          if (type === COORD_TYPE.PIXELS) {\n            tick.x = percentageToPixels(tick.x, width);\n            tick.y = percentageToPixels(tick.y, height);\n          } else {\n            tick.x = pixelsToPercentage(tick.x, width);\n            tick.y = pixelsToPercentage(tick.y, height);\n          }\n        }\n      }\n    }\n    return newPointers;\n  };\n\n  const getDefaultMoveDuration = (ticks, tickId, x2, y2, coordFromTap) => {\n    const { width, height } = windowSize;\n    const ticksExceptCurrent = ticks.filter((tick) => tick.id !== tickId);\n    const prevPointerMoves = [];\n    for (const tick of ticksExceptCurrent) {\n      if (tick.type === POINTER_MOVE && tick.x !== undefined && tick.y !== undefined) {\n        prevPointerMoves.push({x: tick.x, y: tick.y});\n      }\n    }\n    const len = prevPointerMoves.length;\n    if (len === 0) {\n      return 0;\n    }\n    const obj = {x1: prevPointerMoves[len - 1].x, y1: prevPointerMoves[len - 1].y, x2, y2};\n    if (coordType === COORD_TYPE.PERCENTAGES) {\n      obj.x1 = percentageToPixels(obj.x1, width);\n      obj.y1 = percentageToPixels(obj.y1, height);\n      // No need to convert coordinates from tap since they are in px\n      if (!coordFromTap) {\n        obj.x2 = percentageToPixels(obj.x2, width);\n        obj.y2 = percentageToPixels(obj.y2, height);\n      }\n    }\n    const calcLength = (v1, v2) => Math.sqrt((v1 ** 2) + (v2 ** 2));\n    const calcDiff = (v1, v2) => Math.abs(v2) - Math.abs(v1);\n    const xDiff = calcDiff(obj.x1, obj.x2);\n    const yDiff = calcDiff(obj.y1, obj.y2);\n    const maxScreenLength = calcLength(width, height);\n    const lineLength = calcLength(xDiff, yDiff);\n    const lineLengthPct = lineLength / maxScreenLength;\n    return Math.round(lineLengthPct * DEFAULT_DURATION_TIME);\n  };\n\n  // Update tapped coordinates within local state\n  const updateCoordinates = (tickKey, updateX, updateY) => {\n    if (!updateX || !updateY) { return null; }\n    const { width, height } = windowSize;\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((pointer) => pointer.id === tickKey[0]);\n    const currentTick = currentPointer.ticks.find((tick) => tick.id === tickKey);\n    const x = parseFloat(updateX, 10);\n    const y = parseFloat(updateY, 10);\n    if (coordType === COORD_TYPE.PERCENTAGES) {\n      currentTick.x = pixelsToPercentage(x, width);\n      currentTick.y = pixelsToPercentage(y, height);\n    } else {\n      currentTick.x = x;\n      currentTick.y = y;\n    }\n\n    if (currentTick.duration === undefined) {\n      currentTick.duration = getDefaultMoveDuration(currentPointer.ticks, currentTick.id, x, y, true);\n    }\n    setPointers(copiedPointers);\n  };\n\n  const addPointer = () => {\n    const key = pointers.length + 1;\n    const pointerId = String(key);\n    const copiedPointers = _.cloneDeep(pointers);\n    copiedPointers.push({\n      name: `pointer${key}`,\n      ticks: [{id: `${key}.1`}],\n      id: pointerId,\n      color: COLORS[key - 1]\n    });\n    setPointers(copiedPointers);\n    setActivePointerId(pointerId);\n  };\n\n  const deletePointer = (targetKey) => {\n    // 'newActivePointerId' variable keeps track of the previous pointer before deleting the current one\n    // its default is the first pointer\n    let newActivePointerId = '1';\n    const pointersExceptCurrent = pointers.filter((pointer) => pointer.id !== targetKey);\n    const newPointers = pointersExceptCurrent.map((pointer, index) => {\n      const id = String(index + 1);\n      if (id !== pointer.id) {\n        pointer.id = id;\n        pointer.color = COLORS[index];\n        pointer.ticks = pointer.ticks.map((tick) => {\n          tick.id = `${id}.${tick.id[2]}`;\n          return tick;\n        });\n      } else {\n        newActivePointerId = pointer.id;\n      }\n      return pointer;\n    });\n    unselectTick();\n    setPointers(newPointers);\n    setActivePointerId(newActivePointerId);\n  };\n\n  const addTick = (pointerKey) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((pointer) => pointer.id === pointerKey);\n    const id = `${pointerKey}.${(currentPointer.ticks).length + 1}`;\n    currentPointer.ticks.push({id});\n    setPointers(copiedPointers);\n  };\n\n  const deleteTick = (pointerKey, tickKey) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((pointer) => pointer.id === pointerKey);\n    const ticksToKeep = currentPointer.ticks.filter((tick) => tick.id !== tickKey);\n    const newTicks = ticksToKeep.map((tick, index) => {\n      const id = String(index + 1);\n      if (tick.id !== id) {\n        tick.id = `${tick.id[0]}.${id}`;\n      }\n      return tick;\n    });\n    currentPointer.ticks = newTicks;\n    unselectTick();\n    setPointers(copiedPointers);\n  };\n\n  // Updates the current tick within local state\n  const updateTick = (tick, msg, value) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((p) => p.id === tick.id[0]);\n    const targetTickIdx = currentPointer.ticks.findIndex((t) => t.id === tick.id);\n    // currentTick can be assigned a new tick object if made changes to pointer types\n    let currentTick = currentPointer.ticks[targetTickIdx];\n\n    // We create an entire new tick for changes in pointer types to ensure previous properties are removed\n    if (msg === TICK_PROPS.POINTER_TYPE) {\n      if (value === POINTER_MOVE) {\n        selectTick(tick.id);\n      }\n      currentTick = {id: tick.id, type: value,\n                     ...([POINTER_DOWN, POINTER_UP].includes(value) && {button: BUTTONS.LEFT}),\n                     ...(value === PAUSE && {duration: 0})};\n    } else {\n      // We just modify the existing tick values\n      currentTick[msg] = parseFloat(value, 10);\n\n      // set default duration for if not set already\n      if (currentTick.x !== undefined && currentTick.y !== undefined && currentTick.duration === undefined) {\n        currentTick.duration = getDefaultMoveDuration(currentPointer.ticks, tick.id, currentTick.x, currentTick.y, false);\n      }\n    }\n\n    currentPointer.ticks[targetTickIdx] = currentTick;\n    setPointers(copiedPointers);\n  };\n\n  // Reformats the gesture only for the timeline by populating the 'filler' ticks for each pointer\n  // to match same length to keep timeline lengths consistent and accurate\n  const updateGestureForTimeline = () => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const allTickLengths = copiedPointers.map((pointer) => pointer.ticks.length);\n    const maxTickLength = Math.max(...allTickLengths);\n    return copiedPointers.map((pointer) => {\n      const currentLength = pointer.ticks.length;\n      if (currentLength > 0) {\n        pointer.ticks[currentLength - 1].customStep = STATUS.WAIT;\n        if (currentLength < maxTickLength) {\n          const fillers = Array.from({length: maxTickLength - currentLength},\n            () => ({type: STATUS.FILLER, color: STATUS.COLOR}));\n          pointer.ticks.push(...fillers);\n        }\n      }\n      return pointer;\n    });\n  };\n\n  const updatePointerName = (pointerName, pointerIndex) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    copiedPointers[pointerIndex].name = pointerName;\n    setPointers(copiedPointers);\n  };\n\n  const headerTitle =\n    <Tooltip title={t('Edit')}>\n      <Input\n        defaultValue={name}\n        className={InspectorCSS['gesture-header-title']}\n        onChange={(e) => setName(e.target.value)}\n        size='small' />\n    </Tooltip>;\n\n  const headerButtons = <>\n    <Button.Group>\n      <Button\n        className={InspectorCSS['gesture-header-coord-btn']}\n        type={coordType === COORD_TYPE.PERCENTAGES ? 'primary' : 'default'}\n        onClick={() => { setPointers(getConvertedPointers(COORD_TYPE.PERCENTAGES)); setCoordType(COORD_TYPE.PERCENTAGES); }}\n        size='small'>%</Button>\n      <Button\n        className={InspectorCSS['gesture-header-coord-btn']}\n        type={coordType === COORD_TYPE.PIXELS ? 'primary' : 'default'}\n        onClick={() => { setPointers(getConvertedPointers(COORD_TYPE.PIXELS)); setCoordType(COORD_TYPE.PIXELS); }}\n        size='small'>px</Button>\n    </Button.Group>\n    <Tooltip title={t('Play')}>\n      <Button type='primary' icon={<PlayCircleOutlined/>} onClick={() => onPlay()} />\n    </Tooltip>\n    <Button onClick={() => onSaveAs()}>{t('saveAs')}</Button>\n    <Button onClick={() => onSave()} disabled={!loadedGesture}>{t('Save')}</Button>\n  </>;\n\n  const headerDescription =\n    <Tooltip title={t('Edit')}>\n      <Input\n        defaultValue={description}\n        className={InspectorCSS['gesture-header-description']}\n        onChange={(e) => setDescription(e.target.value)}\n        size='small' />\n    </Tooltip>;\n\n  const regularTimelineIcon = (pointer, tick) => {\n    const { type, duration, button, x, y } = tick;\n    const iconStyle = {color: pointer.color};\n    return (\n      <Popover placement='bottom'\n        title={<center>{t(DISPLAY[type])}</center>}\n        content={\n          <div className={InspectorCSS['timeline-tick-title']}>\n            {duration !== undefined && <p>{t('Duration')}: {duration}ms</p>}\n            {button !== undefined && <p>{t('Button')}: {button === BUTTONS.LEFT ? t('Left') : t('Right')}</p>}\n            {x !== undefined && <p>X: {x}{coordType === COORD_TYPE.PIXELS ? 'px' : '%'}</p>}\n            {y !== undefined && <p>Y: {y}{coordType === COORD_TYPE.PIXELS ? 'px' : '%'}</p>}\n            {type === undefined && <p>{t('Action Type Not Defined')}</p>}\n          </div>\n        }>\n        {type === POINTER_MOVE && <RightCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === POINTER_DOWN && <DownCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === POINTER_UP && <UpCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === PAUSE && <PauseCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === undefined && <QuestionCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n      </Popover>\n    );\n  };\n\n  const timeline = updateGestureForTimeline().map((pointer) =>\n    <center key={pointer.id}>\n      <Steps className={InspectorCSS['gesture-header-timeline']}\n        style={{'--timelineColor': pointer.color}}\n        items={pointer.ticks.map((tick) => {\n          if (tick.type !== STATUS.FILLER) {\n            return {key: 'timeline-steps', status: tick.customStep || STATUS.FINISH, icon: regularTimelineIcon(pointer, tick)};\n          } else {\n            return {key: 'transparent-steps', status: STATUS.WAIT, icon:\n              <RightCircleOutlined className={InspectorCSS['gesture-header-icon']} style={{color: tick.color}}/>\n            };\n          }\n        })} />\n    </center>);\n\n  const tickButton = (tick) =>\n    <center>\n      <Button.Group className={InspectorCSS['tick-button-group']}>\n        <Button\n          type={tick.button === BUTTONS.LEFT ? 'primary' : 'default'}\n          className={InspectorCSS['tick-button-input']}\n          onClick={() => updateTick(tick, TICK_PROPS.BUTTON, BUTTONS.LEFT)}>\n          {t('Left')}\n        </Button>\n        <Button\n          type={tick.button === BUTTONS.RIGHT ? 'primary' : 'default'}\n          className={InspectorCSS['tick-button-input']}\n          onClick={() => updateTick(tick, TICK_PROPS.BUTTON, BUTTONS.RIGHT)}>\n          {t('Right')}\n        </Button>\n      </Button.Group>\n    </center>;\n\n  const tickDuration = (tick) =>\n    <center>\n      <Input\n        className={InspectorCSS['tick-input-box']}\n        value={!isNaN(tick.duration) ? tick.duration : null}\n        placeholder={t('Duration')}\n        defaultValue={tick.duration}\n        onChange={(e) => updateTick(tick, TICK_PROPS.DURATION, e.target.value)}\n        addonAfter='ms' />\n    </center>;\n\n  const tickCoords = (tick) =>\n    <center>\n      <div className={InspectorCSS['tick-input-box']}>\n        <Input\n          className={InspectorCSS['tick-coord-box']}\n          value={!isNaN(tick.x) ? tick.x : ''}\n          placeholder='X'\n          defaultValue={tick.x}\n          onChange={(e) => updateTick(tick, TICK_PROPS.X, e.target.value)} />\n        <Input\n          className={InspectorCSS['tick-coord-box']}\n          value={!isNaN(tick.y) ? tick.y : ''}\n          placeholder='Y'\n          defaultValue={tick.y}\n          onChange={(e) => updateTick(tick, TICK_PROPS.Y, e.target.value)} />\n      </div>\n    </center>;\n\n  const tickType = (tick) =>\n    <center>\n      <Select\n        className={InspectorCSS['tick-pointer-input']}\n        placeholder={t('Action Type')}\n        value={tick.type}\n        defaultValue={tick.type}\n        size='middle'\n        dropdownMatchSelectWidth={false}\n        onChange={(e) => updateTick(tick, TICK_PROPS.POINTER_TYPE, e)}>\n        <Select.Option className={InspectorCSS['option-inpt']} value={POINTER_MOVE}>\n          {t(DISPLAY.pointerMove)}\n        </Select.Option>\n        <Select.Option className={InspectorCSS['option-inpt']} value={POINTER_DOWN}>\n          {t(DISPLAY.pointerDown)}\n        </Select.Option>\n        <Select.Option className={InspectorCSS['option-inpt']} value={POINTER_UP}>\n          {t(DISPLAY.pointerUp)}\n        </Select.Option>\n        <Select.Option className={InspectorCSS['option-inpt']} value={PAUSE}>\n          {t(DISPLAY.pause)}\n        </Select.Option>\n      </Select>\n    </center>;\n\n  const tapCoordinatesBtn = (tickId) =>\n    <Tooltip title={selectedTick === tickId ? t('Click to Set Coordinates') : t('Set Coordinates Via Field')}>\n      <Button\n        size='small'\n        type={selectedTick === tickId ? 'primary' : 'text'}\n        icon={<AimOutlined/>}\n        onClick={() => selectedTick === tickId ? unselectTick() : selectTick(tickId)} />\n    </Tooltip>;\n\n  const tickCard = (tick) =>\n    <Card\n      hoverable={true}\n      className={InspectorCSS['tick-card']}\n      extra={\n        <>\n          {tick.type === POINTER_MOVE && tapCoordinatesBtn(tick.id)}\n          <Button size='small' type='text' icon={<CloseOutlined/>}\n            onClick={() => deleteTick(tick.id[0], tick.id)} />\n        </>\n      }>\n      <Space className={InspectorCSS.spaceContainer} direction='vertical' size='middle'>\n        {tickType(tick)}\n        {(tick.type === POINTER_MOVE || tick.type === PAUSE) && tickDuration(tick)}\n        {(tick.type === POINTER_DOWN || tick.type === POINTER_UP) && tickButton(tick)}\n        {tick.type === POINTER_MOVE && tickCoords(tick)}\n      </Space>\n    </Card>;\n\n  const pointerTicksGrid = (pointer) =>\n    <Row gutter={[24, 24]}>\n      {pointer.ticks.map((tick) =>\n        <Col xs={12} sm={12} md={12} lg={8} xl={6} xxl={4} key={tick.id}>\n          {tickCard(tick)}\n        </Col>\n      )}\n      <Col xs={12} sm={12} md={12} lg={8} xl={6} xxl={4}>\n        <Card className={InspectorCSS['tick-plus-card']} bordered={false}>\n          <center>\n            <Button className={InspectorCSS['tick-plus-btn']} icon={<PlusCircleOutlined/>}\n              onClick={() => addTick(pointer.id)} />\n          </center>\n        </Card>\n      </Col>\n    </Row>;\n\n  const pointerTabs = pointers.map((pointer, index) =>\n    ({\n      label: <Tooltip title={t('Edit')}>\n        <Input\n          className={InspectorCSS['pointer-title']}\n          style={{ cursor: activePointerId === pointer.id ? CURSOR.TEXT : CURSOR.POINTER, textDecorationColor: pointer.color}}\n          value={pointer.name}\n          defaultValue={pointer.name}\n          bordered={false}\n          maxLength={10}\n          onChange={(e) => updatePointerName(e.target.value, index)} />\n      </Tooltip>,\n      key: pointer.id,\n      children: pointerTicksGrid(pointer)\n    })\n  );\n\n  return (\n    <>\n      <PageHeader\n        className={InspectorCSS['gesture-header']}\n        onBack={() => onBack()}\n        title={headerTitle}\n        extra={headerButtons}\n        footer={\n          <>\n            {headerDescription}\n            <Divider/>\n            {timeline}\n          </>\n        } />\n      <Tabs\n        type='editable-card'\n        onChange={(pointerId) => setActivePointerId(pointerId)}\n        activeKey={activePointerId}\n        onEdit={(targetKey, action) => action === ACTION_TYPES.ADD ? addPointer() : deletePointer(targetKey)}\n        hideAdd={pointers.length === 5}\n        centered={true}\n        tabBarGutter={10}\n        items={pointerTabs} />\n    </>\n  );\n};\n\nexport default GestureEditor;\n","import React from 'react';\nimport { Card, Tooltip, Button, Select } from 'antd';\nimport { CopyOutlined, CodeOutlined } from '@ant-design/icons';\nimport InspectorStyles from './Inspector.css';\nimport frameworks from '../../lib/client-frameworks';\nimport { highlight } from 'highlight.js';\nimport { clipboard } from '../../polyfills';\n\nconst SessionCodeBox = ({ actionFramework, setActionFramework, sessionDetails, t }) => {\n\n  const code = () => {\n    const { host, port, path, https, desiredCapabilities } = sessionDetails;\n    const framework = new frameworks[actionFramework](host, port, path, https, desiredCapabilities);\n    const rawCode = framework.getCodeString(true);\n\n    return highlight(framework.language, rawCode, true).value;\n  };\n\n  const actionBar = () => <div>\n    <Select defaultValue={actionFramework} onChange={setActionFramework}\n      className={InspectorStyles['framework-dropdown']} size='small'>\n      {Object.keys(frameworks).map((f) =>\n        <Select.Option value={f} key={f}>{frameworks[f].readableName}</Select.Option>\n      )}\n    </Select>\n    <Tooltip title={t('Copy Code to Clipboard')}>\n      <Button\n        icon={<CopyOutlined/>}\n        onClick={() => clipboard.writeText(code())}\n        type='text' />\n    </Tooltip>\n  </div>;\n\n  return (\n    <Card title={<span><CodeOutlined /> {t('Start this Kind of Session with Code')}</span>}\n      className={InspectorStyles['recorded-actions']}\n      extra={actionBar()}>\n      <div className={InspectorStyles['recorded-code']} dangerouslySetInnerHTML={{__html: code()}} />\n    </Card>\n  );\n};\n\nexport default SessionCodeBox;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Table, Row, Col } from 'antd';\nimport SessionCodeBox from './SessionCodeBox';\nimport InspectorStyles from './Inspector.css';\nimport formatJSON from 'format-json';\n\nconst SESSION_OBJ = {\n  session_id: 'Session ID', session_url: 'Session URL',\n  server_details: 'Server Details', session_length: 'Session Length',\n  session_details: 'Session Details', active_appId: 'Currently Active App ID'\n};\n\nconst OUTER_TABLE_KEY = 'sessionInfo';\nconst SESSION_TABLE_KEY = 'sessionDetails';\nconst SERVER_TABLE_KEY = 'serverDetails';\n\nconst SCROLL_DISTANCE_Y = 104;\nconst COLUMN_WIDTH = 200;\nlet SESSION_DETAILS;\n\nconst SessionInfo = (props) => {\n  const { driver } = props;\n\n  const sessionArray = Object.keys(SESSION_OBJ).map((key) =>\n    [key, String(SESSION_OBJ[key])]\n  );\n\n  const generateSessionTime = () => {\n    const { sessionStartTime } = props;\n    const currentTime = Date.now();\n    const timeDiff = currentTime - sessionStartTime;\n\n    const hours = timeDiff / 3600000;\n    const minutes = (hours - Math.floor(hours)) * 60;\n    const seconds = (minutes - Math.floor(minutes)) * 60;\n\n    const showTime = (time) => String(Math.floor(time)).padStart(2, '0');\n\n    return `${showTime(hours)}:${showTime(minutes)}:${showTime(seconds)}`;\n  };\n\n  const interval = useRef();\n  const [time, setTime] = useState(generateSessionTime());\n\n  const getTable = (tableValues, keyName, outerTable) => {\n    const keyValue = `${keyName}_value`;\n    const dataSource = tableValues.map(([name, value]) =>\n      ({key: name, [keyName]: outerTable ? value : name, [keyValue]: value })\n    );\n\n    const columns = [{\n      dataIndex: keyName,\n      key: keyName,\n      ...(outerTable && { width: COLUMN_WIDTH })\n    }, {\n      dataIndex: keyValue,\n      key: keyValue,\n      render: outerTable ?\n        (text) => generateSessionInfo(text)\n        :\n        (text) => typeof text === 'object' ?\n          <pre>{formatJSON.plain(text)}</pre>\n          :\n          String(text)\n    }];\n\n    return outerTable ?\n      <div className={InspectorStyles['session-info-table']}>\n        <Row>\n          <Col span={24}>\n            <Table\n              columns={columns}\n              dataSource={dataSource}\n              pagination={false}\n              showHeader={false}\n              bordered={true}\n              size=\"small\" />\n          </Col>\n        </Row>\n        <div className={InspectorStyles['session-code-box']}>\n          <Row>\n            <SessionCodeBox {...props} />\n          </Row>\n        </div>\n      </div>\n      :\n      <Table\n        className={InspectorStyles['session-inner-table']}\n        columns={columns}\n        dataSource={dataSource}\n        pagination={false}\n        showHeader={false}\n        size=\"small\"\n        scroll={{ y: SCROLL_DISTANCE_Y }} />;\n  };\n\n  const generateSessionInfo = (name) => {\n    const { sessionDetails, appId, status } = props;\n    const { host, path, port } = sessionDetails;\n    const { sessionId, connectedUrl } = driver || '';\n\n    const serverDetailsArray = [['host', host], ['path', path], ['port', port]];\n    const sessionArray = SESSION_DETAILS != null ?\n      Object.keys(SESSION_DETAILS).map((key) =>\n        [key, (SESSION_DETAILS[key])]\n      )\n      :\n      [];\n    const serverStatusArray = status != null ?\n      Object.keys(status).map((key) =>\n        [key, String(status[key])]\n      )\n      :\n      [];\n\n    // TODO: Fetch URL from Cloud Providers\n    const sessionUrl = sessionId && connectedUrl ?\n      `${connectedUrl}session/${sessionId}`\n      :\n      'Error Fetching Session Url';\n\n    switch (name) {\n      case 'Session ID': return sessionId;\n      case 'Session URL': return sessionUrl;\n      case 'Server Details': return getTable([...serverDetailsArray, ...serverStatusArray],\n        SERVER_TABLE_KEY, false);\n      case 'Session Length': return time;\n      case 'Session Details': return getTable(sessionArray, SESSION_TABLE_KEY, false);\n      case 'Currently Active App ID': return appId;\n      default: return name;\n    }\n  };\n\n  useEffect(() => {\n    const { getActiveAppId, getServerStatus, applyClientMethod } = props;\n    const { isIOS, isAndroid } = driver.client;\n\n    getActiveAppId(isIOS, isAndroid);\n    getServerStatus();\n\n    (async () => SESSION_DETAILS = await applyClientMethod({methodName: 'getSession'}))();\n    interval.current = setInterval(() => {\n      setTime(generateSessionTime());\n    }, 1000);\n\n    return () => clearInterval(interval.current);\n  }, []);\n\n  return getTable(sessionArray, OUTER_TABLE_KEY, true);\n};\n\nexport default SessionInfo;\n","/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable dot-notation */\n/* eslint-disable indent */\n/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { debounce } from 'lodash';\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE } from './shared';\nimport { Card, Button, Spin, Tooltip, Modal, Tabs, Space,Input, Switch, Menu } from 'antd';\nimport Screenshot from './Screenshot';\nimport HeaderButtons from './HeaderButtons';\nimport SelectedElement from './SelectedElement';\nimport Source from './Source';\nimport InspectorStyles from './Inspector.css';\nimport RecordedActions from './RecordedActions';\nimport Commands from './Commands';\nimport SavedGestures from './SavedGestures';\nimport GestureEditor from './GestureEditor';\nimport SessionInfo from './SessionInfo';\nimport { clipboard } from '../../polyfills';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport {\n  SelectOutlined,\n  ScanOutlined,\n  SwapRightOutlined,\n  EditOutlined,\n  HeatMapOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  BarsOutlined,\n  AppstoreOutlined,\n  MailOutlined,\n  SettingOutlined,\n  CopyOutlined,\n  DownloadOutlined,\n  FileTextOutlined,\n  RotateRightOutlined,\n  NotificationOutlined,\n  AimOutlined,\n  SwitcherOutlined,\n  TagOutlined,\n  SlidersOutlined,\n  InfoCircleOutlined,\n  ThunderboltOutlined,\n  HighlightOutlined,\n  CodeOutlined,\n  ShrinkOutlined,\n  DollarOutlined,\n  DragOutlined,\n  InfoOutlined,\n  UpCircleOutlined,\n  FileAddOutlined,\n  FundProjectionScreenOutlined,\n  CaretDownOutlined,\n  FieldTimeOutlined,\n  PaperClipOutlined,\n} from '@ant-design/icons';\nimport { BUTTON } from '../AntdTypes';\n\nconst { SELECT, SWIPE, TAP, LONGPRESS, DRAG_AND_DROP, DOUBLE_TAP, ZOOMIN, SLIDE, FILE_UPLOAD, EXPECTED_VALUE,ROTATE, TAKE_SCREENSHOT, SCRATCH, HIDE_KEYBOARD, GET_DEVICE_TIME, GET_CLIPBOARD } = SCREENSHOT_INTERACTION_MODE;\n\nconst ButtonGroup = Button.Group;\n\nconst MIN_WIDTH = 870;\nconst MIN_HEIGHT = 610;\nconst MAX_SCREENSHOT_WIDTH = 500;\n\nconst MJPEG_STREAM_CHECK_INTERVAL = 1000;\n\nfunction downloadXML(sourceXML) {\n  let element = document.createElement('a');\n  element.setAttribute('href', 'data:application/xml;charset=utf-8,' + encodeURIComponent(sourceXML));\n  element.setAttribute('download', 'source.xml');\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport default class Inspector extends Component {\n\n  constructor() {\n    super();\n    this.didInitialResize = false;\n    this.state = {\n      scaleRatio: 1,\n      activeIndex: 0,\n      showPanel: false,\n      currentSelection: null,\n    step_array:[],\n    total_array:[]\n    };\n    this.screenAndSourceEl = null;\n    this.lastScreenshot = null;\n    this.screenshotEl = null;\n    this.updateSourceTreeWidth = debounce(this.updateSourceTreeWidth.bind(this), 50);\n    this.updateScaleRatio = debounce(this.updateScaleRatio.bind(this), 500);\n    this.mjpegStreamCheckInterval = null;\n  }\n  /**\n   * Calculates the ratio that the image is being scaled by\n   */\n  updateScaleRatio() {\n    const screenshotImg = this.screenshotEl.querySelector('img');\n\n    // now update scale ratio\n    this.setState({\n      scaleRatio: (this.props.windowSize.width / screenshotImg.offsetWidth)\n    });\n  }\n\n  updateSourceTreeWidth() {\n    // the idea here is to keep track of the screenshot image width. if it has\n    // too much space to the right or bottom, adjust the max-width of the\n    // screenshot container so the source tree flex adjusts to always fill the\n    // remaining space. This keeps everything looking tight.\n    if (!this.screenAndSourceEl) {\n      return;\n    }\n\n    const screenshotBox = this.screenAndSourceEl.querySelector('#screenshotContainer');\n    const img = this.screenAndSourceEl.querySelector('#screenshotContainer img#screenshot');\n\n    if (!img) {\n      return;\n    }\n    const imgRect = img.getBoundingClientRect();\n    const screenshotRect = screenshotBox.getBoundingClientRect();\n    screenshotBox.style.flexBasis = `${imgRect.width}px`;\n    if (imgRect.height < screenshotRect.height) {\n      // get what the img width would be if it fills screenshot box height\n      const attemptedWidth = (screenshotRect.height / imgRect.height) * imgRect.width;\n      screenshotBox.style.maxWidth = attemptedWidth > MAX_SCREENSHOT_WIDTH ?\n        `${MAX_SCREENSHOT_WIDTH}px` :\n        `${attemptedWidth}px`;\n    } else if (imgRect.width < screenshotRect.width) {\n      screenshotBox.style.maxWidth = `${imgRect.width}px`;\n    }\n\n    this.updateScaleRatio();\n  }\n\n  componentDidMount() {\n    const curHeight = window.innerHeight;\n    const curWidth = window.innerWidth;\n    const needsResize = (curHeight < MIN_HEIGHT) || (curWidth < MIN_WIDTH);\n    if (!this.didInitialResize && needsResize) {\n      const newWidth = curWidth < MIN_WIDTH ? MIN_WIDTH : curWidth;\n      const newHeight = curHeight < MIN_HEIGHT ? MIN_HEIGHT : curHeight;\n      // resize width to something sensible for using the inspector on first run\n      window.resizeTo(newWidth, newHeight);\n    }\n    this.didInitialResize = true;\n    // setInterval(() => {\n    //   this.props.applyClientMethod({methodName: 'getPageSource', ignoreResult: true});\n    // }, 8000);\n    console.log('props in the inspector', this.props);\n    this.props.applyClientMethod({ methodName: 'getPageSource', ignoreResult: true });\n    this.props.getSavedActionFramework();\n    this.props.runKeepAliveLoop();\n    window.addEventListener('resize', this.updateSourceTreeWidth);\n    this.props.setSessionTime(Date.now());\n\n    if (this.props.mjpegScreenshotUrl) {\n      this.mjpegStreamCheckInterval = setInterval(this.checkMjpegStream.bind(this),\n        MJPEG_STREAM_CHECK_INTERVAL);\n    }\n  }\n\n  async checkMjpegStream() {\n    const { mjpegScreenshotUrl, isAwaitingMjpegStream, setAwaitingMjpegStream } = this.props;\n    const img = new Image();\n    img.src = mjpegScreenshotUrl;\n    let imgReady = false;\n    try {\n      await img.decode();\n      imgReady = true;\n    } catch (ign) { }\n    if (imgReady && isAwaitingMjpegStream) {\n      setAwaitingMjpegStream(false);\n      this.updateSourceTreeWidth();\n    } else if (!imgReady && !isAwaitingMjpegStream) {\n      setAwaitingMjpegStream(true);\n    }\n  }\n\n  componentDidUpdate() {\n    const { screenshot } = this.props;\n    // only update when the screenshot changed, not for any other kind of\n    // update\n    if (screenshot !== this.lastScreenshot) {\n      this.updateSourceTreeWidth();\n      this.lastScreenshot = screenshot;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.mjpegStreamCheckInterval) {\n      clearInterval(this.mjpegStreamCheckInterval);\n      this.mjpegStreamCheckInterval = null;\n    }\n  }\n\n  handlePanel(val) {\n    this.setState({ showPanel: !this.state.showPanel });\n  }\n  screenshotInteractionChange(mode, option) {\n    const { selectScreenshotInteractionMode, clearSwipeAction } = this.props;\n    clearSwipeAction(); // When the action changes, reset the swipe action\n    selectScreenshotInteractionMode(mode);\n    this.setState({currentSelection: option});\n  }\n\n  setActiveIndex(val) {\n    this.setState({ activeIndex: val });\n  }\n  async hideKeyboard() {\n    const { driver, screenshotInteractionMode } = this.props;\n    driver.client.hideKeyboard();\n    console.log('hide keyboard^^^^^^^^^^^^^^^^');\n    this.props.applyClientMethod({methodName: 'getPageSource', ignoreResult: true});\n\n    let postdata = {\n      'session_id': driver.sessionId,\n      'step-name': 'hideKeyboard',\n    };\n    console.log('🚀 ~ file: Inspector.js:219 ~ Inspector ~ hideKeyboard ~ postdata:', postdata);\n\n    await fetch('https://apprecord.testing24x7.ai/appAction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(postdata),\n    })\n      .then((response) => {\n        console.log('API response:', response);\n        postdata.response = response;\n      })\n      .catch((error) => {\n        console.error('API error:', error);\n      });\n  }\n  async getDeviceTime() {\n    const { driver } = this.props;\n    const time = await driver.client.getDeviceTime();\n    console.log('get device timeeeeeeeeeeeeeeeeee', time);\n    const deviceTime = moment.utc(time).utcOffset('+05:30');\n    const formattedTime = deviceTime.format('YYYY-MM-DD HH:mm:ss');\n    let postdata = {\n      'session_id': driver.sessionId,\n      'step-name': 'getDeviceTime',\n    };\n    console.log('🚀 ~ file: Inspector.js:219 ~ Inspector ~ getDeviceTime ~ postdata:', postdata);\n\n    await fetch('https://apprecord.testing24x7.ai/appAction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(postdata),\n    })\n      .then((response) => {\n        console.log('API response:', response);\n        postdata.response = response;\n      })\n      .catch((error) => {\n        console.error('API error:', error);\n      });\n    alert(formattedTime);\n  }\n  // async getDeviceclipBoard() {\n  //   const { driver } = this.props;\n  //   const clipboard = await driver.getClipboard();\n  //   console.log('🚀 ~ file: Inspector.js:228 ~ Inspector ~ getDeviceclipBoard ~ clipboard:', clipboard);\n  //   alert(clipboard);\n  // }\n\n  render() {\n    const { screenshot, screenshotError, selectedElement = {},\n      quitSession, showRecord,\n      screenshotInteractionMode, visibleCommandMethod,\n      selectedInteractionMode, selectInteractionMode, setVisibleCommandResult,\n      showKeepAlivePrompt, keepSessionAlive, sourceXML, t, visibleCommandResult,\n      mjpegScreenshotUrl, isAwaitingMjpegStream, toggleShowCentroids, showCentroids,\n      isGestureEditorVisible, toggleShowAttributes, isSourceRefreshOn,applyClientMethod\n    } = this.props;\n    const { path } = selectedElement;\n    const { driver } = this.props;\n    const { flow_steps } = this.props;\n    if (flow_steps) {\n    console.log('🚀 ~ file: Inspector.js:210 ~ Inspector ~ render ~ flow_steps:', flow_steps);\n    this.state.total_array = flow_steps.steps.steps\n    }\n    console.log('driver for iddddddd', driver.sessionId);\n\n    const showScreenshot = ((screenshot && !screenshotError) ||\n      (mjpegScreenshotUrl && (!isSourceRefreshOn || !isAwaitingMjpegStream)));\n\n    let screenShotControls = <div className={InspectorStyles['screenshot-controls']}>\n      <Tooltip title={t(showCentroids ? 'Hide Element Handles' : 'Show Element Handles')} placement=\"topRight\">\n        <Switch\n          checkedChildren={<CheckCircleOutlined />}\n          unCheckedChildren={<CloseCircleOutlined />}\n          defaultChecked={false}\n          onChange={() => toggleShowCentroids()}\n          disabled={isGestureEditorVisible}\n          style={{ width: '40px' }}\n        />\n      </Tooltip>\n      <Button icon={<BarsOutlined />} onClick={() => this.handlePanel(this.state.showPanel)}></Button>\n\n      {showScreenshot && <div>\n        <div onMouseOver={() => this.setActiveIndex(1)} onMouseOut={() => this.setActiveIndex(0)}\n          style={{ textAlign: 'center', padding: '5px', borderBottom: '1px solid grey', position: 'relative', cursor: 'pointer' }}>\n          <HeatMapOutlined style={{ fontSize: '20px' }} />\n          <div>Actions</div>\n          {this.state.activeIndex === 1 && <div style={{ display: 'flex', flexDirection: 'column', position: 'absolute', zIndex: '999', left: '100%', top: '10%' }}>\n            <Button icon={<SelectOutlined />} onClick={() => { this.screenshotInteractionChange(SELECT, 'Select Elements'); }}\n              type={screenshotInteractionMode === SELECT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Select Elements</span></Button>\n            <Button icon={<SwapRightOutlined />} onClick={() => { this.screenshotInteractionChange(SWIPE, 'Swipe by coordinates'); }}\n              type={screenshotInteractionMode === SWIPE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Swipe By Coordinates</span></Button>\n            <Button icon={<ScanOutlined />} onClick={() => { this.screenshotInteractionChange(TAP, 'Tap by coordinates'); }}\n              type={screenshotInteractionMode === TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Tap By Coordinates</span></Button>\n            <Button icon={<InfoOutlined />} onClick={() => { this.screenshotInteractionChange(LONGPRESS, 'Longpress'); }}\n              type={screenshotInteractionMode === LONGPRESS ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>LongPress</span></Button>\n            <Button icon={<DragOutlined />} onClick={() => { this.screenshotInteractionChange(DRAG_AND_DROP, 'Drag & Drop'); }}\n              type={screenshotInteractionMode === DRAG_AND_DROP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Drag & Drop</span></Button>\n            <Button icon={<UpCircleOutlined />} onClick={() => { this.screenshotInteractionChange(DOUBLE_TAP, 'Double tap'); }}\n              type={screenshotInteractionMode === DOUBLE_TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              className={InspectorStyles['user_actions']}\n            ><span>Double Tap</span></Button>\n            <Button icon={<ShrinkOutlined />} onClick={() => { this.screenshotInteractionChange(ZOOMIN, 'Zoom'); }}\n              type={screenshotInteractionMode === ZOOMIN ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Zoom</span></Button>\n            <Button icon={<SlidersOutlined />} onClick={() => { this.screenshotInteractionChange(SLIDE, 'Slider'); }}\n              type={screenshotInteractionMode === SLIDE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Slider</span></Button>\n          </div>}\n        </div>\n        <div onMouseOver={() => this.setActiveIndex(2)} onMouseOut={() => this.setActiveIndex(0)}\n          style={{ textAlign: 'center', padding: '5px', borderBottom: '1px solid grey', position: 'relative', cursor: 'pointer' }}>\n          <EditOutlined style={{ fontSize: '20px' }} />\n          <div>Assertions</div>\n          {this.state.activeIndex === 2 && <div style={{ display: 'flex', flexDirection: 'column', position: 'absolute', zIndex: '999', left: '100%', top: '10%' }}>\n            <Button className={InspectorStyles['user_actions']} icon={<FileAddOutlined />} onClick={async () => {\n              if (screenshotInteractionMode === FILE_UPLOAD) {\n                this.screenshotInteractionChange(null, null);\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'select_file',\n                  'status': 'done',\n                };\n                await fetch('https://apprecord.testing24x7.ai/appAction', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify(data),\n                })\n                  .then((response) => {\n                    console.log('API response:', response);\n                  })\n                  .catch((error) => {\n                    console.error('API error:', error);\n                  });\n              } else {\n                this.screenshotInteractionChange(FILE_UPLOAD, 'File Upload');\n              }\n            }}\n              type={screenshotInteractionMode === FILE_UPLOAD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible}><span>File Upload</span></Button>\n            <Button icon={<DollarOutlined />} onClick={() => { this.screenshotInteractionChange(EXPECTED_VALUE, 'Expected Value'); }}\n              type={screenshotInteractionMode === EXPECTED_VALUE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Expected value</span></Button>\n            <Button icon={<FundProjectionScreenOutlined />} onClick={() => { this.screenshotInteractionChange(TAKE_SCREENSHOT, 'Take screenshot'); }}\n              type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Take Screenshot</span></Button>\n            <Button icon={<DollarOutlined />} onClick={() => { this.screenshotInteractionChange(SCRATCH, 'Scratch'); }}\n              type={screenshotInteractionMode === SCRATCH ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Scratch</span></Button>\n            <Button icon={<CaretDownOutlined />} onClick={async() => { \n              this.screenshotInteractionChange(HIDE_KEYBOARD, 'Hide keyword');\n               this.hideKeyboard();\n               let data1 = {\n                  \"session_id\": driver.sessionId,\n                  'step-name': 'steps'\n                };\n\n                await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(data1),\n              })\n              .then((res) => {\n                // Convert the response to JSON\n                return res.json();\n              })\n              .then((res) => {\n                console.log(\"Response data:\", res);\n                this.setState({total_array: res.steps.steps})\n              })\n              .catch((error) => {\n                console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n              });\n              await applyClientMethod({ methodName: 'getPageSource' })\n\n                }}\n              type={screenshotInteractionMode === HIDE_KEYBOARD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Hide Keyboard</span></Button>\n              <Button icon={<FieldTimeOutlined />} onClick={async() => { \n                this.screenshotInteractionChange(GET_DEVICE_TIME, 'Get Device Time');\n                 this.getDeviceTime();\n                 let data1 = {\n                  \"session_id\": driver.sessionId,\n                  'step-name': 'steps'\n                };\n              \n                await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(data1),\n              })\n              .then((res) => {\n                // Convert the response to JSON\n                return res.json();\n              })\n              .then((res) => {\n                console.log(\"Response data:\", res);\n                this.setState({total_array: res.steps.steps})\n              })\n              .catch((error) => {\n                console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n              });\n              await applyClientMethod({ methodName: 'getPageSource' })\n              }}\n              type={screenshotInteractionMode === GET_DEVICE_TIME ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Get Device Time</span></Button>\n            <Button icon={<PaperClipOutlined />} onClick={async() => {\n               this.screenshotInteractionChange(GET_CLIPBOARD, 'Get clipboard'); \n               await applyClientMethod({ methodName: 'getPageSource' })\n               }}\n              type={screenshotInteractionMode === GET_CLIPBOARD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Get clipboard</span></Button>\n            <Button icon={<RotateRightOutlined />} onClick={async() => { await driver.client.setOrientation('LANDSCAPE') }}\n            type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Rotate</span></Button>\n            <Button icon={<NotificationOutlined />}\n           onClick={async() => { \n            await driver.client.openNotifications()\n            let data = {\n                'session_id': driver.sessionId,\n                'step-name': 'notification',\n              };\n              await fetch('https://apprecord.testing24x7.ai/appAction', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n              })\n                .then((response) => {\n                  console.log('API response:', response);\n                })\n                .catch((error) => {\n                  console.error('API error:', error);\n                });\n\n                let data1 = {\n                  \"session_id\": driver.sessionId,\n                  'step-name': 'steps'\n                };\n                console.log(\"🚀 ~ file: Inspector.js:440 ~ Inspector ~ onClick={async ~ driver.sessionId:\", driver.sessionId)\n                await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(data1),\n              })\n              .then((res) => {\n                // Convert the response to JSON\n                return res.json();\n              })\n              .then((res) => {\n                console.log(\"Response data:\", res);\n                this.setState({total_array: res.steps.steps})\n              })\n              .catch((error) => {\n                console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n              });\n            await applyClientMethod({ methodName: 'getPageSource' })\n           }}\n            type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          ><span>Open Notifications</span></Button>\n          { !this.state.isInput ? (<Button icon={<SwitcherOutlined />} onClick={() =>  this.setState({ isInput: true })}\n            type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          ><span>Switch App</span></Button>) : (\n            <div>\n              <Input\n                placeholder=\"enter bundle id\"\n                onChange={(event) => this.setState({ inputBundleId: event.target.value })}\n              />\n              <Button\n                onClick={async () => {\n                  await driver.client.activateApp(this.state.inputBundleId);\n                  \n                  let data = {\n                'session_id': driver.sessionId,\n                'step-name': 'switch_app',\n                'bundle_id': this.state.inputBundleId\n              };\n              await fetch('https://apprecord.testing24x7.ai/appAction', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n              })\n                .then((response) => {\n                  console.log('API response:', response);\n                })\n                .catch((error) => {\n                  console.error('API error:', error);\n                });\n\n                let data1 = {\n                  \"session_id\": driver.sessionId,\n                  'step-name': 'steps'\n                };\n                await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(data1),\n              })\n              .then((res) => {\n                // Convert the response to JSON\n                return res.json();\n              })\n              .then((res) => {\n                console.log(\"Response data:\", res);\n                this.setState({total_array: res.steps.steps})\n              })\n              .catch((error) => {\n                console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n              });\n\n                await applyClientMethod({ methodName: 'getPageSource' })\n                  this.setState({ isInput: false, inputBundleId: '' });\n                }}\n                style={{ backgroundColor:'blue'}}\n              >\n                Activate App\n              </Button>\n              <Button icon={<AimOutlined />} onClick={async() => { await driver.client.resetApp() }}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          > <span>Reset App</span></Button>\n            </div>\n          )}\n          </div>}\n        </div>\n      </div>}\n\n\n      {/* <ButtonGroup value={screenshotInteractionMode} style={{ display: 'flex', flexDirection: 'column', position:\"absolute\", top:\"150px\", zIndex:\"99\" }}>\n\n        <Button onMouseOver={()=>this.setActiveIndex(1)} onMouseOut={()=>this.setActiveIndex(0)} icon={<SelectOutlined />} onClick={() => { this.screenshotInteractionChange(SELECT); }}\n          type={screenshotInteractionMode === SELECT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===1 && <span>Select Elements</span>}</Button>\n\n\n        <Button onMouseOver={()=>this.setActiveIndex(2)} onMouseOut={()=>this.setActiveIndex(0)} icon={<SwapRightOutlined />} onClick={() => { this.screenshotInteractionChange(SWIPE); }}\n          type={screenshotInteractionMode === SWIPE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===2 && <span>Swipe By Coordinates</span>}</Button>\n\n\n        <Button onMouseOver={()=>this.setActiveIndex(3)} onMouseOut={()=>this.setActiveIndex(0)} icon={<ScanOutlined />} onClick={() => { this.screenshotInteractionChange(TAP); }}\n          type={screenshotInteractionMode === TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===3 && <span>Tap By Coordinates</span>}</Button>\n\n\n        <Button onMouseOver={()=>this.setActiveIndex(4)} onMouseOut={()=>this.setActiveIndex(0)} icon={<InfoOutlined />} onClick={() => { this.screenshotInteractionChange(LONGPRESS); }}\n          type={screenshotInteractionMode === LONGPRESS ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===4 && <span>LongPress</span>}</Button>\n\n\n        <Button onMouseOver={()=>this.setActiveIndex(5)} onMouseOut={()=>this.setActiveIndex(0)} icon={<DragOutlined />} onClick={() => { this.screenshotInteractionChange(DRAG_AND_DROP); }}\n          type={screenshotInteractionMode === DRAG_AND_DROP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===5 && <span>Drag & Drop</span>}</Button>\n\n          <Button onMouseOver={()=>this.setActiveIndex(6)} onMouseOut={()=>this.setActiveIndex(0)} icon={<UpCircleOutlined />} onClick={() => { this.screenshotInteractionChange(DOUBLE_TAP); }}\n            type={screenshotInteractionMode === DOUBLE_TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===6 && <span>Double Tap</span>}</Button>\n\n          <Button onMouseOver={()=>this.setActiveIndex(7)} onMouseOut={()=>this.setActiveIndex(0)} icon={<ShrinkOutlined />} onClick={() => { this.screenshotInteractionChange(ZOOMIN); }}\n            type={screenshotInteractionMode === ZOOMIN ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===7 && <span>Zoom</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(8)} onMouseOut={()=>this.setActiveIndex(0)} icon={<SlidersOutlined />} onClick={() => { this.screenshotInteractionChange(SLIDE); }}\n            type={screenshotInteractionMode === SLIDE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===8 && <span>Slider</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(9)} onMouseOut={()=>this.setActiveIndex(0)} className={InspectorStyles['user_actions']} icon={<FileAddOutlined />} onClick={async () => {\n            if (screenshotInteractionMode === FILE_UPLOAD) {\n              this.screenshotInteractionChange(null);\n              let data = {\n                'session_id': driver.sessionId,\n                'step-name': 'select_file',\n                'status': 'done',\n              };\n              await fetch('https://apprecord.testing24x7.ai/appAction', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n              })\n                .then((response) => {\n                  console.log('API response:', response);\n                })\n                .catch((error) => {\n                  console.error('API error:', error);\n                });\n            } else {\n              this.screenshotInteractionChange(FILE_UPLOAD);\n            }\n          }}\n            type={screenshotInteractionMode === FILE_UPLOAD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible}>{this.state.activeIndex===9 && <span>File Upload</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(10)} onMouseOut={()=>this.setActiveIndex(0)} icon={<DollarOutlined />} onClick={() => { this.screenshotInteractionChange(EXPECTED_VALUE); }}\n            type={screenshotInteractionMode === EXPECTED_VALUE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===10 && <span>Expected value</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(11)} onMouseOut={()=>this.setActiveIndex(0)} icon={<FundProjectionScreenOutlined />} onClick={() => { this.screenshotInteractionChange(TAKE_SCREENSHOT); }}\n            type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===11 && <span>Take Screenshot</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(12)} onMouseOut={()=>this.setActiveIndex(0)} icon={<DollarOutlined />} onClick={() => { this.screenshotInteractionChange(SCRATCH); }}\n            type={screenshotInteractionMode === SCRATCH ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===12 && <span>Scratch</span>}</Button>\n      </ButtonGroup> */}\n\n    </div>;\n    let main = <div className={InspectorStyles['inspector-main']} ref={(el) => { this.screenAndSourceEl = el; }}>\n      <div id='screenshotContainer' className={InspectorStyles['screenshot-container']} ref={(el) => { this.screenshotEl = el; }}>\n        {screenShotControls}\n        {showScreenshot &&\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n          {this.state.currentSelection !== null && <div style={{textAlign: 'center'}}>Current Selection : {this.state.currentSelection}</div>}\n          <Screenshot {...this.props} scaleRatio={this.state.scaleRatio} />\n        </div>}\n        {screenshotError && t('couldNotObtainScreenshot', { screenshotError })}\n        {!showScreenshot &&\n          <Spin size=\"large\" spinning={true}>\n            <div className={InspectorStyles.screenshotBox} />\n          </Spin>\n        }\n      </div>\n      <div id='sourceTreeContainer' className={InspectorStyles['interaction-tab-container']} >\n        {showRecord &&\n          <RecordedActions {...this.props} />\n        }\n        <Tabs activeKey={selectedInteractionMode}\n          size=\"small\"\n          onChange={(tab) => selectInteractionMode(tab)}\n          items={[{\n            label: t('Source'), key: INTERACTION_MODE.SOURCE, children:\n              <div className='action-row'>\n                {/* <div className='action-col'>\n                <Card title={<span><FileTextOutlined /> {t('App Source')} </span>}\n                  extra={\n                    <span>\n                      <Tooltip title={t('Toggle Attributes')}>\n                        <Button type='text' id='btnToggleAttrs' icon={<CodeOutlined/>} onClick={toggleShowAttributes} />\n                      </Tooltip>\n                      <Tooltip title={t('Copy XML Source to Clipboard')}>\n                        <Button type='text' id='btnSourceXML' icon={<CopyOutlined/>} onClick={() => clipboard.writeText(sourceXML)} />\n                      </Tooltip>\n                      <Tooltip title={t('Download Source as .XML File')}>\n                        <Button type='text' id='btnDownloadSourceXML' icon={<DownloadOutlined/>} onClick={() => downloadXML(sourceXML)}/>\n                      </Tooltip>\n                    </span>\n                  }>\n                  <Source {...this.props} />\n                </Card>\n              </div> */}\n              <div style={{fontWeight: 'bold', width:\"9%\"}}>\n              FLOW TABLE:\n              </div>\n              <div style={{width:\"100%\", overflowX:\"auto\", overflowY:\"auto\"}}>\n              <table>\n                  <tr>\n                    <th>S No.</th>\n                    <th>Step</th>\n                    <th>Step Name</th>\n                    <th>Search By</th>\n                    <th>Search By Value</th>\n                  </tr>\n              {this.state.total_array && this.state.total_array.map((item, key) => (\n                  <tr key={key}>\n                    <td>{key + 1}</td>\n                    <td>{item['step']}</td>\n                    <td>{item['step_name']}</td>\n                    <td>{item['search_by']}</td>\n                    <td>{item['search_by_value']}</td>\n                    {/* {item.response.status === 200 ?\n                     <td><span style={{color:'green'}}>Success</span></td> :\n                    <td><span style={{color:'red'}}>Failed</span></td>\n                    } */}\n                  </tr>\n              ))}\n                </table>\n              </div>\n                <div id='selectedElementContainer'\n                  className={`${InspectorStyles['interaction-tab-container']} ${InspectorStyles['element-detail-container']} action-col`}>\n                  <Card title={<span><TagOutlined /> {t('selectedElement')}</span>}\n                    className={InspectorStyles['selected-element-card']}>\n                    {path && <SelectedElement {...this.props} />}\n                    {!path && <i>{t('selectElementInSource')}</i>}\n                  </Card>\n                </div>\n              </div>\n          }, {\n            label: t('Commands'), key: INTERACTION_MODE.COMMANDS, children:\n              <Card\n                title={<span><ThunderboltOutlined /> {t('Execute Commands')}</span>}\n                className={InspectorStyles['interaction-tab-card']}>\n                <Commands {...this.props} />\n              </Card>\n          }, {\n            label: t('Gestures'), key: INTERACTION_MODE.GESTURES, children:\n              isGestureEditorVisible ?\n                <Card\n                  title={<span><HighlightOutlined /> {t('Gesture Builder')}</span>}\n                  className={InspectorStyles['interaction-tab-card']}>\n                  <GestureEditor {...this.props} />\n                </Card>\n                :\n                <Card\n                  title={<span><HighlightOutlined /> {t('Saved Gestures')}</span>}\n                  className={InspectorStyles['interaction-tab-card']}>\n                  <SavedGestures {...this.props} />\n                </Card>\n          }, {\n            label: t('Session Information'), key: INTERACTION_MODE.SESSION_INFO, children:\n              <Card\n                title={<span><InfoCircleOutlined /> {t('Session Information')}</span>}\n                className={InspectorStyles['interaction-tab-card']}>\n                <SessionInfo {...this.props} />\n              </Card>\n          }]}\n        />\n      </div>\n    </div>;\n\n    return (<div className={InspectorStyles['inspector-container']}>\n      <HeaderButtons {...this.props} />\n      {main}\n      <Modal\n        title={t('Session Inactive')}\n        open={showKeepAlivePrompt}\n        onOk={() => keepSessionAlive()}\n        onCancel={() => quitSession()}\n        okText={t('Keep Session Running')}\n        cancelText={t('Quit Session')}\n      >\n        <p>{t('Your session is about to expire')}</p>\n      </Modal>\n      <Modal\n        title={t('methodCallResult', { methodName: visibleCommandMethod })}\n        open={!!visibleCommandResult}\n        onOk={() => setVisibleCommandResult(null)}\n        onCancel={() => setVisibleCommandResult(null)}\n      >\n        <pre><code>{visibleCommandResult}</code></pre>\n      </Modal>\n    </div>);\n  }\n}\n","import { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as InspectorActions from '../actions/Inspector';\nimport InspectorPage from '../components/Inspector/Inspector';\n\nfunction mapStateToProps (state) {\n  return state.inspector;\n}\n\nexport default withTranslation(InspectorPage, connect(mapStateToProps, InspectorActions));\n","import React from 'react';\nimport styles from './Spinner.css';\n\nconst Spinner = () => (\n  <div className={styles.container}>\n    <div className={styles.loader}/>\n  </div>\n);\n\nexport default Spinner;\n","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport App from './containers/App';\nimport SessionPage from './containers/SessionPage';\nimport InspectorPage from './containers/InspectorPage';\nimport Spinner from './components/Spinner/Spinner';\nimport { ipcRenderer } from './polyfills';\nimport i18n from '../configs/i18next.config.renderer';\n\nipcRenderer.on('appium-language-changed', (event, message) => {\n  if (i18n.language !== message.language) {\n    i18n.changeLanguage(message.language);\n  }\n});\n\nexport default () => (\n  <Suspense fallback={<Spinner />}>\n    <App>\n      <Switch>\n        <Route exact path=\"/\">\n          <SessionPage />\n        </Route>\n        <Route path=\"/session\">\n          <SessionPage />\n        </Route>\n        <Route path=\"/inspector\">\n          <InspectorPage />\n        </Route>\n      </Switch>\n    </App>\n  </Suspense>\n);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport Routes from '../routes';\n\nexport default class Root extends Component {\n  render () {\n    const { store, history } = this.props;\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Routes />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import React from 'react';\nimport { Alert, Button, Tooltip } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport styles from './ErrorMessage.css';\nimport { ALERT } from '../AntdTypes';\nimport { withTranslation } from '../../util';\nimport { shell } from '../../polyfills';\n\nconst CREATE_ISSUE_URL = 'https://github.com/appium/appium-inspector/issues/new/choose';\n\nconst ErrorMessage = ({ error, copyTrace, t }) => (\n  <div className={styles.errorMessage}>\n    <Alert\n      message={<>{t('Unexpected Error:')} <code children={error.message} /></>}\n      type={ALERT.ERROR}\n      showIcon\n      description={\n        <>\n          {t('Please report this issue at:')}&nbsp;\n          <a onClick={(e) => e.preventDefault() || shell.openExternal(CREATE_ISSUE_URL)} children={CREATE_ISSUE_URL} />\n          <br />\n          {t('Full error trace:')}\n          <Tooltip title={t('Copy Error Trace')}>\n            <Button size='small'\n              className={styles.copyTraceBtn}\n              onClick={copyTrace(error.stack)}\n              icon={<CopyOutlined/>} />\n          </Tooltip>\n          <pre children={error.stack} />\n        </>\n      }\n    />\n  </div>\n);\n\nexport default withTranslation(ErrorMessage);\n","import React from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { clipboard } from '../../polyfills';\n\nconst copyTrace = (trace) => {\n  clipboard.writeText(trace);\n};\n\nexport default class ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError (error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  render () {\n    const { error } = this.state;\n    if (error) {\n      return <ErrorMessage error={error} copyTrace={copyTrace}/>;\n    }\n    return this.props.children;\n  }\n}\n","export const SET_UPDATE_STATE = 'SET_UPDATE_STATE';\n\nexport function setUpdateState (updateState) {\n  return (dispatch) => {\n    dispatch({type: SET_UPDATE_STATE, updateState});\n  };\n}\n","import * as inspectorActions from './Inspector';\nimport * as sessionActions from './Session';\nimport * as updaterActions from './Updater';\n\nexport default {\n  ...inspectorActions,\n  ...sessionActions,\n  ...updaterActions,\n};\n","import _, {omit} from 'lodash';\nimport formatJSON from 'format-json';\n\nimport { NEW_SESSION_REQUESTED, NEW_SESSION_LOADING, NEW_SESSION_DONE,\n         SAVE_SESSION_REQUESTED, SAVE_SESSION_DONE,\n         GET_SAVED_SESSIONS_REQUESTED, GET_SAVED_SESSIONS_DONE,\n         SET_CAPABILITY_PARAM, ADD_CAPABILITY, REMOVE_CAPABILITY, SET_CAPS_AND_SERVER,\n         SWITCHED_TABS, SAVE_AS_MODAL_REQUESTED, HIDE_SAVE_AS_MODAL_REQUESTED, SET_SAVE_AS_TEXT,\n         DELETE_SAVED_SESSION_REQUESTED, DELETE_SAVED_SESSION_DONE,\n         CHANGE_SERVER_TYPE, SET_SERVER_PARAM, SET_SERVER, SET_ATTACH_SESS_ID,\n         GET_SESSIONS_REQUESTED, GET_SESSIONS_DONE,\n         ENABLE_DESIRED_CAPS_NAME_EDITOR, ABORT_DESIRED_CAPS_NAME_EDITOR, SAVE_DESIRED_CAPS_NAME, SET_DESIRED_CAPS_NAME,\n         ENABLE_DESIRED_CAPS_EDITOR, ABORT_DESIRED_CAPS_EDITOR, SAVE_RAW_DESIRED_CAPS, SET_RAW_DESIRED_CAPS, SHOW_DESIRED_CAPS_JSON_ERROR,\n         IS_ADDING_CLOUD_PROVIDER, SET_PROVIDERS, SET_ADD_VENDOR_PREFIXES, SET_STATE_FROM_URL, SET_STATE_FROM_SAVED,\n         ServerTypes } from '../actions/Session';\nimport { notification } from 'antd';\n\nconst visibleProviders = []; // Pull this from \"electron-settings\"\nconst server = {\n  local: {},\n  remote: {},\n  advanced: {},\n};\n\nfor (const serverName of _.keys(ServerTypes)) {\n  server[serverName] = {};\n}\n\n// Make sure there's always at least one cap\nconst INITIAL_STATE = {\n  savedSessions: [],\n  tabKey: 'new',\n  serverType: ServerTypes.remote,\n  visibleProviders,\n  server: {\n    local: {},\n    remote: {},\n    sauce: {\n      dataCenter: 'us-west-1',\n    },\n    headspin: {},\n    browserstack: {},\n    lambdatest: {},\n    advanced: {},\n    bitbar: {},\n    kobiton: {},\n    perfecto: {},\n    pcloudy: {},\n    testingbot: {},\n    experitest: {},\n    roboticmobi: {},\n    remotetestkit: {},\n  },\n  attachSessId: null,\n\n  // Make sure there's always at least one cap\n  caps: [{\n    type: 'text',\n  }],\n\n  isCapsDirty: true,\n  gettingSessions: false,\n  runningAppiumSessions: [],\n  isEditingDesiredCapsName: false,\n  isEditingDesiredCaps: false,\n  isValidCapsJson: true,\n  isValidatingCapsJson: false,\n  isAddingCloudProvider: false,\n  addVendorPrefixes: true,\n};\n\nlet nextState;\n\n// returns false if the attachSessId is not present in the runningSessions list\nconst isAttachSessIdValid = (runningSessions, attachSessId) => {\n  if (!attachSessId || !runningSessions) {\n    return false;\n  }\n  for (const session of runningSessions) {\n    if (session.id === attachSessId) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default function session (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case NEW_SESSION_REQUESTED:\n      return {\n        ...state,\n        newSessionRequested: true,\n      };\n\n    case NEW_SESSION_LOADING:\n      nextState = {\n        ...state,\n        newSessionLoading: true,\n      };\n      return omit(nextState, 'newSessionRequested');\n\n    case NEW_SESSION_DONE:\n      return omit(state, 'newSessionLoading');\n\n\n    case ADD_CAPABILITY:\n      return {\n        ...state,\n        caps: [\n          ...state.caps,\n          {type: 'text'},\n        ],\n      };\n\n    case REMOVE_CAPABILITY:\n      return {\n        ...state,\n        caps: state.caps.filter((cap, index) => index !== action.index),\n        isCapsDirty: true,\n      };\n\n    case SET_CAPABILITY_PARAM:\n      return {\n        ...state,\n        isCapsDirty: true,\n        caps: state.caps.map((cap, index) => index !== action.index ? cap : {\n          ...cap,\n          [action.name]: action.value\n        }),\n      };\n\n    case SET_CAPS_AND_SERVER:\n      nextState = {\n        ...state,\n        server: action.server,\n        serverType: action.serverType,\n        caps: action.caps,\n        capsUUID: action.uuid,\n        capsName: action.name,\n      };\n      return omit(nextState, 'isCapsDirty');\n\n    case SAVE_SESSION_REQUESTED:\n      nextState = {\n        ...state,\n        saveSessionRequested: true,\n      };\n      return omit(nextState, 'showSaveAsModal');\n\n    case SAVE_SESSION_DONE:\n      return omit(state, ['saveSessionRequested', 'saveAsText']);\n\n    case GET_SAVED_SESSIONS_REQUESTED:\n      return {\n        ...state,\n        getSavedSessionsRequested: true,\n      };\n\n    case GET_SAVED_SESSIONS_DONE:\n      nextState = {\n        ...state,\n        savedSessions: action.savedSessions || [],\n      };\n      return omit(nextState, 'getSavedSessionsRequested');\n\n    case DELETE_SAVED_SESSION_REQUESTED:\n      return {\n        ...state,\n        deletingSession: true,\n      };\n\n    case DELETE_SAVED_SESSION_DONE:\n      return {\n        ...state,\n        deletingSession: false,\n        capsUUID: null,\n        capsName: null,\n      };\n\n    case SWITCHED_TABS:\n      return {\n        ...state,\n        tabKey: action.key,\n      };\n\n    case SAVE_AS_MODAL_REQUESTED:\n      return {\n        ...state,\n        'showSaveAsModal': true,\n      };\n\n    case HIDE_SAVE_AS_MODAL_REQUESTED:\n      return omit(state, ['saveAsText', 'showSaveAsModal']);\n\n    case SET_SAVE_AS_TEXT:\n      return {\n        ...state,\n        saveAsText: action.saveAsText,\n      };\n\n    case CHANGE_SERVER_TYPE:\n      return {\n        ...state,\n        serverType: action.serverType,\n      };\n\n    case SET_SERVER_PARAM:\n      return {\n        ...state,\n        server: {\n          ...state.server,\n          [action.serverType]: {\n            ...state.server[action.serverType],\n            [action.name]: action.value,\n          }\n        },\n      };\n\n    case SET_SERVER:\n      return {\n        ...state,\n        server: {\n          ...(function extendCurrentServerStateWithNewServerState (currentServerState, newServerState) {\n            // Copy current server state and extend it with new server state\n            const nextServerState = _.cloneDeep(currentServerState || {});\n\n            // Extend each server (sauce, remote, kobiton, etc...)\n            for (let serverName of _.keys(nextServerState)) {\n              nextServerState[serverName] = {\n                ...(nextServerState[serverName] || {}),\n                ...(newServerState[serverName] || {}),\n              };\n            }\n            return nextServerState;\n          })(state.server, action.server),\n        },\n        serverType: action.serverType || ServerTypes.local,\n      };\n\n    case SET_ATTACH_SESS_ID:\n      return {\n        ...state,\n        attachSessId: action.attachSessId\n      };\n\n    case GET_SESSIONS_REQUESTED:\n      return {\n        ...state,\n        gettingSessions: true,\n      };\n\n    case GET_SESSIONS_DONE: {\n      const attachSessId = isAttachSessIdValid(action.sessions, state.attachSessId) ? state.attachSessId : null;\n      return {\n        ...state,\n        gettingSessions: false,\n        attachSessId: (action.sessions && action.sessions.length > 0 && !attachSessId) ? action.sessions[0].id : attachSessId,\n        runningAppiumSessions: action.sessions || [],\n      };\n    }\n\n    case ENABLE_DESIRED_CAPS_NAME_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCapsName: true,\n        desiredCapsName: state.capsName,\n      };\n\n    case ABORT_DESIRED_CAPS_NAME_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCapsName: false,\n        desiredCapsName: null,\n      };\n\n    case SAVE_DESIRED_CAPS_NAME:\n      return {\n        ...state,\n        isEditingDesiredCapsName: false,\n        capsName: action.name,\n      };\n\n    case SET_DESIRED_CAPS_NAME:\n      return {\n        ...state,\n        desiredCapsName: action.desiredCapsName,\n      };\n\n    case ENABLE_DESIRED_CAPS_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCaps: true,\n        rawDesiredCaps: formatJSON.plain(\n          // Translate the caps definition to a proper capabilities JS Object\n          _.reduce(\n            state.caps,\n            (result, obj) => ({\n              ...result,\n              [obj.name]: obj.value,\n            }),\n            {}\n          )\n        ),\n        isValidCapsJson: true,\n        isValidatingCapsJson: false, // Don't start validating JSON until the user has attempted to save the JSON\n      };\n\n    case ABORT_DESIRED_CAPS_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCaps: false,\n        rawDesiredCaps: null,\n      };\n\n    case SAVE_RAW_DESIRED_CAPS:\n      return {\n        ...state,\n        isEditingDesiredCaps: false,\n        caps: action.caps,\n        isCapsDirty: true,\n      };\n\n    case SHOW_DESIRED_CAPS_JSON_ERROR:\n      return {\n        ...state,\n        invalidCapsJsonReason: action.message,\n        isValidCapsJson: false,\n        isValidatingCapsJson: true,\n      };\n\n    case SET_RAW_DESIRED_CAPS:\n      return {\n        ...state,\n        rawDesiredCaps: action.rawDesiredCaps,\n        isValidCapsJson: action.isValidCapsJson,\n        invalidCapsJsonReason: action.invalidCapsJsonReason,\n      };\n\n    case IS_ADDING_CLOUD_PROVIDER:\n      return {\n        ...state,\n        isAddingCloudProvider: action.isAddingProvider,\n      };\n\n    case SET_PROVIDERS:\n      return {\n        ...state,\n        visibleProviders: action.providers || []\n      };\n\n    case SET_ADD_VENDOR_PREFIXES:\n      return {\n        ...state,\n        addVendorPrefixes: action.addVendorPrefixes,\n      };\n\n    case SET_STATE_FROM_URL:\n      return {\n        ...state,\n        server: {\n          ...state.server,\n          ...(action.state.server || {})\n        },\n        ...omit(action.state, ['server']),\n      };\n\n    case SET_STATE_FROM_SAVED:\n      if (!Object.keys(ServerTypes).includes(action.state.serverType)) {\n        notification.error({\n          message: `Failed to load session: ${action.state.serverType} is not a valid server type`,\n        });\n        return state;\n      }\n      if (![...state.visibleProviders, ServerTypes.local, ServerTypes.remote].includes(action.state.serverType)) {\n        state.visibleProviders.push(action.state.serverType);\n      }\n      return {\n        ...state,\n        ...action.state,\n        filePath: action.filePath,\n      };\n\n    default:\n      return {...state};\n  }\n}\n","import { omit } from 'lodash';\nimport { SET_SOURCE_AND_SCREENSHOT, QUIT_SESSION_REQUESTED, QUIT_SESSION_DONE,\n         SESSION_DONE, SELECT_ELEMENT, UNSELECT_ELEMENT, SELECT_HOVERED_ELEMENT, SET_SELECTED_ELEMENT_ID, SET_INTERACTIONS_NOT_AVAILABLE,\n         UNSELECT_HOVERED_ELEMENT, METHOD_CALL_REQUESTED, METHOD_CALL_DONE,\n         SET_EXPANDED_PATHS, START_RECORDING, PAUSE_RECORDING, CLEAR_RECORDING,STEPS_ARRAY,\n         SET_ACTION_FRAMEWORK, RECORD_ACTION, CLOSE_RECORDER, SET_SHOW_BOILERPLATE, SET_SESSION_DETAILS,\n         SHOW_LOCATOR_TEST_MODAL, HIDE_LOCATOR_TEST_MODAL, SHOW_SIRI_COMMAND_MODAL, HIDE_SIRI_COMMAND_MODAL, SET_LOCATOR_TEST_STRATEGY, SET_LOCATOR_TEST_VALUE,\n         SEARCHING_FOR_ELEMENTS, SEARCHING_FOR_ELEMENTS_COMPLETED, SET_LOCATOR_TEST_ELEMENT, CLEAR_SEARCH_RESULTS,\n         FINDING_ELEMENT_IN_SOURCE, FINDING_ELEMENT_IN_SOURCE_COMPLETED, ADD_ASSIGNED_VAR_CACHE, CLEAR_ASSIGNED_VAR_CACHE, SET_SCREENSHOT_INTERACTION_MODE,\n         SET_SWIPE_START, SET_SWIPE_START1, SET_SWIPE_END, SET_SWIPE_END1, CLEAR_SWIPE_ACTION, SET_SEARCHED_FOR_ELEMENT_BOUNDS, CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS,\n         PROMPT_KEEP_ALIVE, HIDE_PROMPT_KEEP_ALIVE, GET_FIND_ELEMENTS_TIMES, GET_FIND_ELEMENTS_TIMES_COMPLETED,\n         SELECT_COMMAND_GROUP, SELECT_COMMAND_SUB_GROUP, SET_APP_MODE,\n         SELECT_INTERACTION_MODE, ENTERING_COMMAND_ARGS, SET_COMMAND_ARG, CANCEL_PENDING_COMMAND, SET_CONTEXT,\n         SET_KEEP_ALIVE_INTERVAL, SET_USER_WAIT_TIMEOUT, SET_LAST_ACTIVE_MOMENT, SET_VISIBLE_COMMAND_RESULT,\n         SET_AWAITING_MJPEG_STREAM, SET_APP_ID, SET_SERVER_STATUS, SET_SESSION_TIME, SHOW_GESTURE_EDITOR, HIDE_GESTURE_EDITOR,\n         GET_SAVED_GESTURES_REQUESTED, GET_SAVED_GESTURES_DONE, SET_LOADED_GESTURE, REMOVE_LOADED_GESTURE, SHOW_GESTURE_ACTION, HIDE_GESTURE_ACTION,\n         SELECT_TICK_ELEMENT, UNSELECT_TICK_ELEMENT, SET_GESTURE_TAP_COORDS_MODE, CLEAR_TAP_COORDINATES, DELETE_SAVED_GESTURES_REQUESTED, DELETE_SAVED_GESTURES_DONE,\n         SELECT_HOVERED_CENTROID, UNSELECT_HOVERED_CENTROID, SELECT_CENTROID, UNSELECT_CENTROID,\n         SET_SHOW_CENTROIDS, TOGGLE_SHOW_ATTRIBUTES, TOGGLE_REFRESHING_STATE, SET_SIRI_COMMAND_VALUE\n} from '../actions/Inspector';\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE, APP_MODE } from '../components/Inspector/shared';\n\nconst DEFAULT_FRAMEWORK = 'java';\nconst NATIVE_APP = 'NATIVE_APP';\n\nconst INITIAL_STATE = {\n  savedGestures: [],\n  driver: null,\n  keepAliveInterval: null,\n  showKeepAlivePrompt: false,\n  userWaitTimeout: null,\n  lastActiveMoment: null,\n  expandedPaths: ['0'],\n  isRecording: false,\n  isSourceRefreshOn: true,\n  showRecord: false,\n  showBoilerplate: false,\n  recordedActions: [],\n  actionFramework: DEFAULT_FRAMEWORK,\n  sessionDetails: {},\n  isGestureEditorVisible: false,\n  isLocatorTestModalVisible: false,\n  isSiriCommandModalVisible: false,\n  siriCommandValue: '',\n  showCentroids: false,\n  locatorTestStrategy: 'id',\n  locatorTestValue: '',\n  isSearchingForElements: false,\n  assignedVarCache: {},\n  screenshotInteractionMode: SCREENSHOT_INTERACTION_MODE.SELECT,\n  searchedForElementBounds: null,\n  selectedCommandGroup: null,\n  selectedCommandSubGroup: null,\n  selectedInteractionMode: INTERACTION_MODE.SOURCE,\n  appMode: APP_MODE.NATIVE,\n  mjpegScreenshotUrl: null,\n  pendingCommand: null,\n  findElementsExecutionTimes: [],\n  isFindingElementsTimes: false,\n  isFindingLocatedElementInSource: false,\n  visibleCommandResult: null,\n  visibleCommandMethod: null,\n  isAwaitingMjpegStream: true,\n  showSourceAttrs: false,\n};\n\nlet nextState;\n\n/**\n * Look up an element in the source with the provided path\n */\nfunction findElementByPath (path, source) {\n  let selectedElement = source;\n  for (let index of path.split('.')) {\n    selectedElement = selectedElement.children[index];\n  }\n  return {...selectedElement};\n}\n\nexport default function inspector (state = INITIAL_STATE, action) {\n  console.log(\"🚀 ~ file: Inspector.js:81 ~ inspector ~ action:\", action)\n  switch (action.type) {\n    case SET_SOURCE_AND_SCREENSHOT:\n      return {\n        ...state,\n        contexts: action.contexts,\n        contextsError: action.contextsError,\n        currentContext: action.currentContext || NATIVE_APP,\n        currentContextError: action.currentContextError,\n        source: action.source,\n        sourceXML: action.sourceXML,\n        sourceError: action.sourceError,\n        screenshot: action.screenshot,\n        screenshotError: action.screenshotError,\n        windowSize: action.windowSize,\n        windowSizeError: action.windowSizeError,\n        findElementsExecutionTimes: [],\n      };\n\n    case QUIT_SESSION_REQUESTED:\n      return {\n        ...state,\n        methodCallInProgress: true,\n        isQuittingSession: true,\n      };\n\n    case QUIT_SESSION_DONE:\n      return {\n        ...INITIAL_STATE\n      };\n\n    case SESSION_DONE:\n      return {\n        ...state,\n        isSessionDone: true,\n        methodCallInProgress: false,\n      };\n\n    case SELECT_ELEMENT:\n      return {\n        ...state,\n        selectedElement: findElementByPath(action.path, state.source),\n        selectedElementPath: action.path,\n        selectedElementSearchInProgress: true,\n        elementInteractionsNotAvailable: false,\n        findElementsExecutionTimes: [],\n      };\n\n    case UNSELECT_ELEMENT:\n      return {\n        ...state,\n        selectedElement: undefined,\n        selectedElementPath: null,\n        selectedElementId: null,\n        selectedElementVariableName: null,\n        selectedElementVariableType: null,\n        selectedElementSearchInProgress: false,\n      };\n\n    case SELECT_CENTROID:\n      return {\n        ...state,\n        selectedCentroid: action.path,\n      };\n\n    case UNSELECT_CENTROID:\n      return omit(state, 'selectedCentroid');\n\n    case SET_SELECTED_ELEMENT_ID:\n      return {\n        ...state,\n        selectedElementId: action.elementId,\n        selectedElementVariableName: action.variableName,\n        selectedElementVariableType: action.variableType,\n        selectedElementSearchInProgress: false,\n        findElementsExecutionTimes: [],\n      };\n\n    case SET_INTERACTIONS_NOT_AVAILABLE:\n      return {\n        ...state,\n        elementInteractionsNotAvailable: true,\n        selectedElementSearchInProgress: false,\n      };\n\n    case SELECT_HOVERED_ELEMENT:\n      return {\n        ...state,\n        hoveredElement: findElementByPath(action.path, state.source),\n      };\n\n    case UNSELECT_HOVERED_ELEMENT:\n      return omit(state, 'hoveredElement');\n\n    case SELECT_HOVERED_CENTROID:\n      return {\n        ...state,\n        hoveredCentroid: action.path,\n      };\n\n    case UNSELECT_HOVERED_CENTROID:\n      return omit(state, 'hoveredCentroid');\n\n    case METHOD_CALL_REQUESTED:\n      return {\n        ...state,\n        methodCallInProgress: true,\n      };\n\n    case METHOD_CALL_DONE:\n      return {\n        ...state,\n        methodCallInProgress: false,\n      };\n\n    case SET_EXPANDED_PATHS:\n      return {\n        ...state,\n        expandedPaths: action.paths,\n        findElementsExecutionTimes: [],\n      };\n\n    case START_RECORDING:\n      return {\n        ...state,\n        isRecording: true,\n        showRecord: true\n      };\n\n    case PAUSE_RECORDING:\n      return {\n        ...state,\n        isRecording: false,\n        showRecord: state.recordedActions.length > 0\n      };\n\n    case CLEAR_RECORDING:\n      return {\n        ...state,\n        recordedActions: []\n      };\n\n    case SET_ACTION_FRAMEWORK:\n      return {\n        ...state,\n        actionFramework: action.framework || DEFAULT_FRAMEWORK\n      };\n\n    case RECORD_ACTION:\n      return {\n        ...state,\n        recordedActions: [\n          ...state.recordedActions,\n          {action: action.action, params: action.params}\n        ]\n      };\n\n    case STEPS_ARRAY:\n        return {\n          ...state,\n          flow_steps:action.res\n      };  \n\n    case ADD_ASSIGNED_VAR_CACHE:\n      return {\n        ...state,\n        assignedVarCache: {\n          ...state.assignedVarCache,\n          [action.varName]: true,\n        }\n      };\n\n    case CLEAR_ASSIGNED_VAR_CACHE:\n      return {\n        ...state,\n        assignedVarCache: [],\n      };\n\n    case CLOSE_RECORDER:\n      return {\n        ...state,\n        showRecord: false\n      };\n\n    case SET_SHOW_BOILERPLATE:\n      return {...state, showBoilerplate: action.show};\n\n    case SET_SESSION_DETAILS:\n      return {\n        ...state,\n        sessionDetails: action.sessionDetails,\n        driver: action.driver,\n        appMode: action.mode,\n        mjpegScreenshotUrl: action.mjpegScreenshotUrl\n      };\n\n    case SHOW_LOCATOR_TEST_MODAL:\n      return {\n        ...state,\n        isLocatorTestModalVisible: true,\n      };\n\n    case HIDE_LOCATOR_TEST_MODAL:\n      return {\n        ...state,\n        isLocatorTestModalVisible: false,\n      };\n\n    case SHOW_SIRI_COMMAND_MODAL:\n      return {\n        ...state,\n        isSiriCommandModalVisible: true,\n      };\n\n    case HIDE_SIRI_COMMAND_MODAL:\n      return {\n        ...state,\n        isSiriCommandModalVisible: false,\n      };\n\n    case SET_SIRI_COMMAND_VALUE:\n      return {\n        ...state,\n        siriCommandValue: action.siriCommandValue\n      };\n\n    case SET_LOCATOR_TEST_STRATEGY:\n      return {\n        ...state,\n        locatorTestStrategy: action.locatorTestStrategy\n      };\n\n    case SET_LOCATOR_TEST_VALUE:\n      return {\n        ...state,\n        locatorTestValue: action.locatorTestValue\n      };\n\n    case SEARCHING_FOR_ELEMENTS:\n      return {\n        ...state,\n        locatedElements: null,\n        locatedElementsExecutionTime: null,\n        locatorTestElement: null,\n        isSearchingForElements: true,\n      };\n\n    case SEARCHING_FOR_ELEMENTS_COMPLETED:\n      return {\n        ...state,\n        locatedElements: action.elements,\n        locatedElementsExecutionTime: action.executionTime,\n        isSearchingForElements: false,\n      };\n\n    case GET_FIND_ELEMENTS_TIMES:\n      return {\n        ...state,\n        isFindingElementsTimes: true,\n      };\n\n    case GET_FIND_ELEMENTS_TIMES_COMPLETED:\n      return {\n        ...state,\n        findElementsExecutionTimes: action.findElementsExecutionTimes,\n        isFindingElementsTimes: false,\n      };\n\n    case SET_LOCATOR_TEST_ELEMENT:\n      return {\n        ...state,\n        locatorTestElement: action.elementId,\n      };\n\n    case FINDING_ELEMENT_IN_SOURCE:\n      return {\n        ...state,\n        isFindingLocatedElementInSource: true,\n      };\n\n    case FINDING_ELEMENT_IN_SOURCE_COMPLETED:\n      return {\n        ...state,\n        isFindingLocatedElementInSource: false,\n      };\n\n    case CLEAR_SEARCH_RESULTS:\n      return {\n        ...state,\n        locatedElements: null,\n        isFindingLocatedElementInSource: false,\n      };\n\n    case SET_SCREENSHOT_INTERACTION_MODE:\n      return {\n        ...state,\n        screenshotInteractionMode: action.screenshotInteractionMode,\n      };\n\n    case SET_SWIPE_START:\n      return {\n        ...state,\n        swipeStart: {\n          x: action.swipeStartX,\n          y: action.swipeStartY,\n        },\n      };\n\n    case SET_SWIPE_END:\n      return {\n        ...state,\n        swipeEnd: {\n          x: action.swipeEndX,\n          y: action.swipeEndY,\n        },\n      };\n\n    case SET_SWIPE_START1:\n      return {\n        ...state,\n        swipeStart1: {\n          x: action.swipeStartX,\n          y: action.swipeStartY,\n        },\n      };\n\n    case SET_SWIPE_END1:\n      return {\n        ...state,\n        swipeEnd1: {\n          x: action.swipeEndX,\n          y: action.swipeEndY,\n        },\n      };\n\n\n\n    case CLEAR_SWIPE_ACTION:\n      return {\n        ...state,\n        swipeStart: null,\n        swipeEnd: null,\n        swipeStart1: null,\n        swipeEnd1: null\n      };\n\n    case SET_SEARCHED_FOR_ELEMENT_BOUNDS:\n      return {\n        ...state,\n        searchedForElementBounds: {\n          location: action.location,\n          size: action.size,\n        }\n      };\n\n    case CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS:\n      return {\n        ...state,\n        searchedForElementBounds: null,\n      };\n\n    case PROMPT_KEEP_ALIVE:\n      return {\n        ...state,\n        showKeepAlivePrompt: true,\n      };\n\n    case HIDE_PROMPT_KEEP_ALIVE:\n      return {\n        ...state,\n        showKeepAlivePrompt: false,\n      };\n\n    case SELECT_COMMAND_GROUP:\n      return {\n        ...state,\n        selectedCommandGroup: action.group\n      };\n\n    case SELECT_COMMAND_SUB_GROUP:\n      return {\n        ...state,\n        selectedCommandSubGroup: action.group,\n      };\n\n    case SELECT_INTERACTION_MODE:\n      return {\n        ...state,\n        selectedInteractionMode: action.interaction,\n      };\n\n    case SET_APP_MODE:\n      return {\n        ...state,\n        appMode: action.mode,\n      };\n\n    case SET_SHOW_CENTROIDS:\n      return {\n        ...state,\n        showCentroids: action.show,\n      };\n\n    case ENTERING_COMMAND_ARGS:\n      return {\n        ...state,\n        pendingCommand: {\n          commandName: action.commandName,\n          command: action.command,\n          args: [],\n        }\n      };\n\n    case SET_COMMAND_ARG:\n      return {\n        ...state,\n        pendingCommand: {\n          ...state.pendingCommand,\n          args: Object.assign([], state.pendingCommand.args, {[action.index]: action.value}), // Replace 'value' at 'index'\n        },\n      };\n\n    case CANCEL_PENDING_COMMAND:\n      return {\n        ...state,\n        pendingCommand: null,\n      };\n\n    case SET_CONTEXT:\n      return {\n        ...state,\n        currentContext: action.context\n      };\n\n    case SET_KEEP_ALIVE_INTERVAL:\n      return {\n        ...state,\n        keepAliveInterval: action.keepAliveInterval,\n      };\n\n    case SET_USER_WAIT_TIMEOUT:\n      return {\n        ...state,\n        userWaitTimeout: null,\n      };\n\n    case SET_LAST_ACTIVE_MOMENT:\n      return {\n        ...state,\n        lastActiveMoment: action.lastActiveMoment,\n      };\n\n    case SET_VISIBLE_COMMAND_RESULT:\n      return {\n        ...state,\n        visibleCommandResult: action.result,\n        visibleCommandMethod: action.methodName,\n      };\n\n    case SET_SESSION_TIME:\n      return {\n        ...state,\n        sessionStartTime: action.sessionStartTime,\n      };\n\n    case SET_APP_ID:\n      return {\n        ...state,\n        appId: action.appId,\n      };\n\n    case SET_SERVER_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n\n    case SET_AWAITING_MJPEG_STREAM:\n      return {...state, isAwaitingMjpegStream: action.isAwaiting};\n\n    case SHOW_GESTURE_EDITOR:\n      return {\n        ...state,\n        isGestureEditorVisible: true,\n      };\n\n    case HIDE_GESTURE_EDITOR:\n      return {\n        ...state,\n        isGestureEditorVisible: false,\n      };\n\n    case GET_SAVED_GESTURES_REQUESTED:\n      return {\n        ...state,\n        getSavedGesturesRequested: true,\n      };\n\n    case GET_SAVED_GESTURES_DONE:\n      nextState = {\n        ...state,\n        savedGestures: action.savedGestures || [],\n      };\n      return omit(nextState, 'getSavedGesturesRequested');\n\n    case DELETE_SAVED_GESTURES_REQUESTED:\n      return {\n        ...state,\n        deleteGesture: action.deleteGesture,\n      };\n\n    case DELETE_SAVED_GESTURES_DONE:\n      return omit(state, 'deleteGesture');\n\n    case SET_LOADED_GESTURE:\n      return {\n        ...state,\n        loadedGesture: action.loadedGesture,\n      };\n\n    case REMOVE_LOADED_GESTURE:\n      return omit(state, 'loadedGesture');\n\n    case SHOW_GESTURE_ACTION:\n      return {\n        ...state,\n        showGesture: action.showGesture,\n      };\n\n    case HIDE_GESTURE_ACTION:\n      return omit(state, 'showGesture');\n\n    case SELECT_TICK_ELEMENT:\n      return {\n        ...state,\n        selectedTick: action.selectedTick,\n      };\n\n    case UNSELECT_TICK_ELEMENT:\n      return omit(state, 'selectedTick');\n\n    case SET_GESTURE_TAP_COORDS_MODE:\n      return {\n        ...state,\n        tickCoordinates: {\n          x: action.x,\n          y: action.y,\n        },\n      };\n\n    case CLEAR_TAP_COORDINATES:\n      return omit(state, 'tickCoordinates');\n\n    case TOGGLE_SHOW_ATTRIBUTES:\n      return {...state, showSourceAttrs: !state.showSourceAttrs};\n\n    case TOGGLE_REFRESHING_STATE:\n      return {...state, isSourceRefreshOn: !state.isSourceRefreshOn};\n\n    default:\n      return {...state};\n  }\n}\n","import { SET_UPDATE_STATE } from '../actions/Updater';\n\nconst INITIAL_STATE = {};\n\nexport default function session (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_UPDATE_STATE:\n      return {...action.updateState};\n    default:\n      return {...state};\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport session from './Session';\nimport inspector from './Inspector';\nimport updater from './Updater';\n\n// create our root reducer\nexport default function createRootReducer (routerReducer) {\n  return combineReducers({\n    router: routerReducer,\n    session,\n    inspector,\n    updater,\n  });\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createHashHistory } from 'history';\nimport { createReduxHistoryContext, push } from 'redux-first-history';\nimport actions from './actions';\nimport createRootReducer from './reducers';\n\nconst { createReduxHistory, routerMiddleware, routerReducer } = createReduxHistoryContext({\n  history: createHashHistory()\n});\n\nconst rootReducer = createRootReducer(routerReducer);\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => {\n    const middleware = getDefaultMiddleware({\n      serializableCheck: false\n    });\n\n    // Additional development tools\n    if (process.env.NODE_ENV === 'development') {\n      // Logging Middleware\n      const { createLogger } = require('redux-logger');\n      const logger = createLogger({\n        level: 'info',\n        collapsed: true\n      });\n      middleware.push(logger);\n    }\n\n    // Router Middleware\n    middleware.push(routerMiddleware);\n\n    return middleware;\n  },\n  devTools: process.env.NODE_ENV !== 'development' ? false : {\n    actionCreators: {...actions, push}\n  }\n});\n\nexport const history = createReduxHistory(store);\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Root from './containers/Root';\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\nimport { store, history } from './store';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <ErrorBoundary>\n    <Root store={store} history={history} />\n  </ErrorBoundary>\n);\n\nif (module.hot) {\n  module.hot.accept('./containers/Root', () => {\n    const NextRoot = require('./containers/Root').default;\n    root.render(\n      <AppContainer>\n        <NextRoot store={store} history={history} />\n      </AppContainer>\n    );\n  });\n}\n"]}