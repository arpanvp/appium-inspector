{"version":3,"sources":["polyfills/browser.js","polyfills/electron.js","polyfills/index.js","../shared/settings.js","../configs/app.config.js","util.js","containers/App.js","components/Inspector/shared.js","lib/client-frameworks/framework.js","lib/client-frameworks/js-wd.js","lib/client-frameworks/js-wdio.js","lib/client-frameworks/js-oxygen.js","lib/client-frameworks/java.js","lib/client-frameworks/python.js","lib/client-frameworks/ruby.js","lib/client-frameworks/robot.js","lib/client-frameworks/index.js","../configs/i18next.config.renderer.js","lib/webview-helpers.js","lib/appium-client.js","components/AntdTypes.js","components/Inspector/LocatedElements.js","actions/Inspector.js","components/Session/ServerTabHeadspin.js","components/Session/ServerTabBrowserstack.js","components/Session/ServerTabLambdatest.js","components/Session/ServerTabBitbar.js","components/Session/ServerTabKobiton.js","components/Session/ServerTabPerfecto.js","components/Session/ServerTabPcloudy.js","components/Session/ServerTabSauce.js","components/Session/ServerTabTestingbot.js","components/Session/ServerTabExperitest.js","components/Session/ServerTabRobotQA.js","components/Session/ServerTabRemoteTestKit.js","components/Session/CloudProviders.js","../main/helpers.js","actions/Session.js","components/Session/FormattedCaps.js","components/Session/CapabilityControl.js","components/Session/CapabilityEditor.js","components/Session/SavedSessions.js","components/Session/AttachToSession.js","components/Session/ServerTabCustom.js","components/Session/AdvancedServerParams.js","components/Session/CloudProviderSelector.js","components/Session/Session.js","containers/SessionPage.js","components/Inspector/HighlighterRect.js","components/Inspector/HighlighterCentroid.js","components/Inspector/HighlighterRects.js","components/Inspector/SelectedElement.js","components/Inspector/Screenshot.js","slices/panelSlice.js","components/Inspector/HeaderButtons.js","components/Inspector/ElementLocator.js","components/Inspector/LocatorTestModal.js","components/Inspector/SiriCommandModal.js","components/Inspector/Source.js","components/Inspector/RecordedActions.js","components/Inspector/Commands.js","components/Inspector/SavedGestures.js","components/Inspector/GestureEditor.js","components/Inspector/SessionCodeBox.js","components/Inspector/SessionInfo.js","components/Inspector/Inspector.js","containers/InspectorPage.js","components/Spinner/Spinner.js","routes.js","containers/Root.js","components/ErrorBoundary/ErrorMessage.js","components/ErrorBoundary/ErrorBoundary.js","actions/Updater.js","actions/index.js","reducers/Session.js","reducers/Inspector.js","reducers/Updater.js","reducers/index.js","store.js","index.js"],"names":["browser","clipboard","writeText","text","navigator","shell","openExternal","url","window","open","remote","getCurrentWindow","getSize","innerWidth","innerHeight","ipcRenderer","on","evt","console","warn","fs","util","BrowserSettings","has","key","get","set","val","localStorage","setItem","JSON","stringify","parse","getItem","getSync","log","exports","settings","i18NextBackend","require","default","i18NextBackendOptions","backends","backendOptions","loadPath","_path","_interopRequireDefault","_electron","_electronLog","_electronSettings","_i18nextFsBackend","_fs","_util","obj","__esModule","path","join","__dirname","addPath","jsonIndent","buildForBrowser","process","env","BUILD_BROWSER","test","userAgent","_polyfills","SAVED_SESSIONS","SET_SAVED_GESTURES","SERVER_ARGS","SESSION_SERVER_PARAMS","SESSION_SERVER_TYPE","SAVED_FRAMEWORK","DEFAULT_SETTINGS","getSetting","setting","setSetting","value","_default","_settings","config","platform","languages","fallbackLng","namespace","getI18NextOptions","backend","interpolation","escapeValue","lng","whitelist","_xpath","_reactI18next","_lodash","_app","_xmldom","VALID_W3C_CAPS","UNIQUE_XPATH_ATTRIBUTES","UNIQUE_CLASS_CHAIN_ATTRIBUTES","UNIQUE_PREDICATE_ATTRIBUTES","xmlToJSON","source","childNodesOf","xmlNode","hasChildNodes","result","childIdx","childNodes","length","childNode","item","nodeType","push","translateRecursively","parentPath","index","attributes","attrIdx","attr","name","_","isNil","classChainSelector","isIOS","getOptimalClassChain","xmlDoc","predicateStringSelector","getOptimalPredicateString","children","map","childIndex","tagName","xpath","getOptimalXPath","classChain","predicateString","includes","DOMParser","parseFromString","firstChild","documentElement","doc","domNode","uniqueAttributes","attrName","attrValue","getAttribute","othersWithAttr","XPath","select","ign","indexOf","parentNode","Array","prototype","slice","call","filter","error","xpathAttributes","isString","withTranslation","componentCls","hocs","flow","wt","addVendorPrefixes","caps","cap","_react","_propTypes","App","React","Component","render","props","createElement","Fragment","propTypes","PropTypes","element","isRequired","pixelsToPercentage","px","maxPixels","isNaN","parseFloat","toFixed","percentageToPixels","pct","Math","round","parseCoordinates","bounds","x","y","width","height","boundsArray","split","str","x1","parseInt","x2","y1","y2","isUnique","sourceXML","replace","STRATEGY_MAPPINGS","getLocators","res","strategyAlias","strategy","POINTER_TYPES","POINTER_UP","POINTER_DOWN","PAUSE","POINTER_MOVE","DEFAULT_SWIPE","POINTER_NAME","DURATION_1","DURATION_2","BUTTON","ORIGIN","DEFAULT_ZOOM","POINTER_NAME1","POINTER_NAME2","POINTER_NAME3","POINTER_NAME4","DEFAULT_TAP","DEFAULT_LONGPRESS","LONGPRESS_POINTER_NAME","LONGPRESS_DURATION_1","LONGPRESS_DURATION_2","LONGPRESS_BUTTON","DEFAULT_DRAG_AND_DROP","RENDER_CENTROID_AS","CENTROID","EXPAND","OVERLAP","SCREENSHOT_INTERACTION_MODE","SELECT","SWIPE","TAP","LONGPRESS","DRAG_AND_DROP","DOUBLE_TAP","GESTURE","ZOOMIN","SLIDE","SLIDE_SWIPE","SELECT_LONG","SELECT_DOUBLE","FILE_UPLOAD","SELECT_FILE","EXPECTED_VALUE","TAKE_SCREENSHOT","SCRATCH","HIDE_KEYBOARD","GET_DEVICE_TIME","GET_CLIPBOARD","ROTATE","LOCK","UNLOCK","SHAKE","OTP","APP_MODE","NATIVE","WEB_HYBRID","COMMAND_ARG_TYPES","STRING","NUMBER","BOOLEAN","COMMAND_DEFINITIONS","methodName","args","refresh","INTERACTION_MODE","SOURCE","COMMANDS","GESTURES","SESSION_INFO","_shared","Framework","constructor","host","port","https","scheme","actions","localVarCount","localVarCache","lastAssignedVar","getTapCoordinatesFromPointerActions","pointerActions","pointerMoveAction","getSwipeCoordinatesFromPointerActions","pointerMoveActionStart","pointerMoveActionEnd","Error","addAction","action","params","wrapWithBoilerplate","indent","spaces","lines","spaceStr","i","l","trim","getCodeString","includeBoilerplate","genCodeFn","code","getNewLocalVar","getVarForFind","locator","wasNew","getVarName","varName","varIndex","codeFor_findAndAssign","codeFor_findElement","localVar","codeFor_tap","codeFor_swipe","_framework","JsWdFramework","serverUrl","codeFor_executeScript","isArray","suffixMap","codeFor_click","codeFor_clear","codeFor_sendKeys","codeFor_back","varNameIgnore","varIndexIgnore","codeFor_getCurrentActivity","codeFor_getCurrentPackage","codeFor_installApp","app","codeFor_isAppInstalled","codeFor_launchApp","codeFor_background","timeout","codeFor_closeApp","codeFor_reset","codeFor_removeApp","codeFor_getStrings","language","stringFile","codeFor_getClipboard","codeFor_setClipboard","clipboardText","codeFor_pressKeyCode","keyCode","metaState","flags","codeFor_longPressKeyCode","codeFor_hideKeyboard","codeFor_isKeyboardShown","codeFor_pushFile","pathToInstallTo","fileContentString","codeFor_pullFile","pathToPullFrom","codeFor_pullFolder","folderToPullFrom","codeFor_toggleAirplaneMode","codeFor_toggleData","codeFor_toggleWiFi","codeFor_toggleLocationServices","codeFor_sendSMS","phoneNumber","codeFor_gsmCall","codeFor_gsmSignal","signalStrength","codeFor_gsmVoice","state","codeFor_shake","codeFor_lock","seconds","codeFor_unlock","codeFor_isLocked","codeFor_rotateDevice","radius","rotation","touchCount","duration","codeFor_getPerformanceData","packageName","dataType","dataReadTimeout","codeFor_getPerformanceDataTypes","codeFor_touchId","match","codeFor_toggleEnrollTouchId","enroll","codeFor_openNotifications","codeFor_getDeviceTime","codeFor_fingerprint","fingerprintId","codeFor_getSession","codeFor_setTimeouts","codeFor_getOrientation","codeFor_setOrientation","orientation","codeFor_getGeoLocation","codeFor_setGeoLocation","latitude","longitude","altitude","codeFor_getLogTypes","codeFor_getLogs","logType","codeFor_updateSettings","settingsJson","codeFor_getSettings","codeFor_navigateTo","codeFor_getUrl","codeFor_forward","codeFor_refresh","codeFor_getContext","codeFor_getContexts","codeFor_switchContext","readableName","JsWdIoFramework","chainifyCode","proto","contentType","codeFor_setCommandTimeout","JsOxygenFramework","platformName","toLowerCase","browserName","type","JavaFramework","pkg","cls","Object","keys","k","codeFor_startActivity","settingName","settingValue","toPairs","e","PythonFramework","getPythonVal","jsonVal","RubyFramework","lowerCase","RobotFramework","getCapsVariables","getApplicationInitialization","lastID","_jsWd","_jsWdio","_jsOxygen","_java","_python","_ruby","_robot","frameworks","jsWd","jsWdIo","jsOxygen","java","python","ruby","robot","_i18next","i18nextOptions","i18n","isInitialized","use","initReactI18next","init","_cheerio","_htmlparser","getWebviewStatusAddressBarHeight","statBarHeight","isAndroid","dpr","devicePixelRatio","osAddressBarDefaultHeight","addressToolBarHeight","screen","setHtmlElementAttributes","webviewStatusAddressBarHeight","htmlElements","document","body","getElementsByTagName","from","forEach","el","rect","getBoundingClientRect","setAttribute","left","top","parseSource","dom","parseDocument","$","load","remove","removeAttr","each","$el","rectAttr","xml","_bluebird","_webviewHelpers","NATIVE_APP","_instance","AppiumClient","driver","elementCache","elVarCount","elArrayVarCount","selector","fetchArray","elementId","skipRefresh","skipScreenshot","appMode","quit","screenshot","windowSize","executeMethod","fetchElements","fetchElement","cachedEl","isUndefined","variableName","apply","id","parameters","pointerType","performActions","contextUpdate","sourceUpdate","screenshotUpdate","windowSizeUpdate","Bluebird","delay","getScreenshotUpdate","getWindowUpdate","getContextUpdate","getSourceUpdate","commandRes","start","Date","now","els","findElements","executionTime","elements","elementList","variableIndex","variableType","findElement","err","elementData","windowSizeError","client","capabilities","deviceScreenSize","automationName","toLower","getWindowRect","contexts","contextsError","currentContext","currentContextError","pixelRatio","viewportRect","webViewPosition","hasContextsCommand","getContext","switchContext","getSession","executeScript","parseAndroidContexts","getRect","getPageSource","sourceError","takeScreenshot","screenshotError","getContexts","parsedWebviews","webview","info","pages","webviewName","page","description","descriptionJSON","attached","title","handle","Boolean","instance","DEFAULT","PRIMARY","DISABLED","DANGER","ALERT","ERROR","WARNING","INFO","INPUT","TEXT","TEXTAREA","PASSWORD","SUBMIT","ROW","FLEX","_interopRequireWildcard","_antd","_icons","_AntdTypes","_Inspector","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","hasOwnProperty","desc","_extends","assign","bind","target","arguments","LocatedElements","locatedElements","locatedElementsExecutionTime","applyClientMethod","setLocatorTestElement","locatorTestElement","isFindingLocatedElementInSource","searchedForElementBounds","selectLocatedElement","t","sendKeys","useRef","Space","className","InspectorStyles","spaceContainer","direction","size","Row","showIdAutocompleteInfo","locatorTestStrategy","locatorTestValue","idLocatorAutocompletionDisabled","disableIdLocatorAutocompletion","Alert","message","showIcon","Spin","spinning","justify","Badge","count","offset","List","searchResultsList","dataSource","renderItem","Item","searchResultsSelectedItem","onClick","Tooltip","placement","ButtonapplyClientMethod","disabled","icon","MenuUnfoldOutlined","Button","AimOutlined","Group","searchResultsActions","Input","searchResultsKeyInput","placeholder","allowClear","onChange","current","SendOutlined","ClearOutlined","_reduxFirstHistory","_Session","_uuid","_clientFrameworks","_i18nextConfig","_appiumClient","_LocatedElements","SET_SESSION_DETAILS","SET_SOURCE_AND_SCREENSHOT","SESSION_DONE","SELECT_ELEMENT","UNSELECT_ELEMENT","SET_SELECTED_ELEMENT_ID","SET_INTERACTIONS_NOT_AVAILABLE","METHOD_CALL_REQUESTED","METHOD_CALL_DONE","SET_EXPANDED_PATHS","SELECT_HOVERED_ELEMENT","UNSELECT_HOVERED_ELEMENT","SELECT_HOVERED_CENTROID","UNSELECT_HOVERED_CENTROID","SELECT_CENTROID","UNSELECT_CENTROID","SET_SHOW_CENTROIDS","QUIT_SESSION_REQUESTED","QUIT_SESSION_DONE","SET_SESSION_TIME","START_RECORDING","ELEMENT_KEYS","PAUSE_RECORDING","CLEAR_RECORDING","CLOSE_RECORDER","SET_ACTION_FRAMEWORK","RECORD_ACTION","STEPS_ARRAY","SET_SHOW_BOILERPLATE","SHOW_LOCATOR_TEST_MODAL","HIDE_LOCATOR_TEST_MODAL","SHOW_SIRI_COMMAND_MODAL","HIDE_SIRI_COMMAND_MODAL","SET_SIRI_COMMAND_VALUE","SET_LOCATOR_TEST_STRATEGY","SET_LOCATOR_TEST_VALUE","SEARCHING_FOR_ELEMENTS","SEARCHING_FOR_ELEMENTS_COMPLETED","GET_FIND_ELEMENTS_TIMES","GET_FIND_ELEMENTS_TIMES_COMPLETED","SET_LOCATOR_TEST_ELEMENT","FINDING_ELEMENT_IN_SOURCE","FINDING_ELEMENT_IN_SOURCE_COMPLETED","CLEAR_SEARCH_RESULTS","ADD_ASSIGNED_VAR_CACHE","CLEAR_ASSIGNED_VAR_CACHE","SET_SCREENSHOT_INTERACTION_MODE","SET_APP_MODE","SET_SEARCHED_FOR_ELEMENT_BOUNDS","CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS","SET_SWIPE_START","SET_SWIPE_END","SET_SWIPE_START1","SET_SWIPE_END1","CLEAR_SWIPE_ACTION","PROMPT_KEEP_ALIVE","HIDE_PROMPT_KEEP_ALIVE","SELECT_INTERACTION_MODE","SELECT_COMMAND_GROUP","SELECT_COMMAND_SUB_GROUP","ENTERING_COMMAND_ARGS","CANCEL_PENDING_COMMAND","SET_COMMAND_ARG","SET_CONTEXT","SET_APP_ID","SET_SERVER_STATUS","SET_KEEP_ALIVE_INTERVAL","SET_USER_WAIT_TIMEOUT","SET_LAST_ACTIVE_MOMENT","SET_VISIBLE_COMMAND_RESULT","SET_AWAITING_MJPEG_STREAM","SHOW_GESTURE_EDITOR","HIDE_GESTURE_EDITOR","GET_SAVED_GESTURES_REQUESTED","GET_SAVED_GESTURES_DONE","DELETE_SAVED_GESTURES_REQUESTED","DELETE_SAVED_GESTURES_DONE","SET_LOADED_GESTURE","REMOVE_LOADED_GESTURE","SHOW_GESTURE_ACTION","HIDE_GESTURE_ACTION","SELECT_TICK_ELEMENT","UNSELECT_TICK_ELEMENT","SET_GESTURE_TAP_COORDS_MODE","CLEAR_TAP_COORDINATES","TOGGLE_SHOW_ATTRIBUTES","TOGGLE_REFRESHING_STATE","KEEP_ALIVE_PING_INTERVAL","NO_NEW_COMMAND_LIMIT","WAIT_FOR_USER_KEEP_ALIVE","debounce","strategyMap","dispatch","getState","callClientMethod","inspector","selectedElementPath","selectElement","selectedElement","expandedPaths","copiedExpandedPaths","pathArr","splice","paths","unselectElement","selectCentroid","unselectCentroid","selectHoveredCentroid","unselectHoveredCentroid","selectHoveredElement","unselectHoveredElement","elemArr","digitsArray","isRecording","digit","toString","clonedParams","callAction","findAndAssign","findAction","concat","dispatchEvent","Event","showError","addAssignedVarCache","setExpandedPaths","quitSession","reason","killedByUser","killKeepAliveLoop","killAction","applyAction","notification","startRecording","pauseRecording","clearRecording","getSavedActionFramework","framework","setActionFramework","recordAction","closeRecorder","toggleShowBoilerplate","show","showBoilerplate","setSessionDetails","sessionDetails","mode","mjpegScreenshotUrl","showLocatorTestModal","hideLocatorTestModal","showSiriCommandModal","hideSiriCommandModal","setSiriCommandValue","siriCommandValue","setLocatorTestValue","setLocatorTestStrategy","setContext","context","searchForElement","getFindElementsTimes","findDataSource","findElementsExecutionTimes","find","time","sortBy","assignedVarCache","skipRecord","ignoreResult","location","UPPER_FILTER_LIMIT","findPathsMatchingBounds","endX","endY","coords","findPathsFromCoords","trees","collectedPaths","tree","combinedBounds","String","findPathsFromBounds","filterFoundPaths","foundPaths","findElementWithMatchingId","foundPath","clearSearchResults","selectScreenshotInteractionMode","screenshotInteractionMode","toggleRefreshingState","selectAppMode","toggleShowCentroids","showCentroids","getActiveAppId","bundleId","appId","appPackage","getServerStatus","status","build","setSessionTime","sessionStartTime","setSwipeStart","swipeStartX","swipeStartY","setSwipeStart1","setSwipeEnd","swipeEndX","swipeEndY","setSwipeEnd1","clearSwipeAction","promptKeepAlive","hideKeepAlivePrompt","selectCommandGroup","group","selectCommandSubGroup","selectInteractionMode","interaction","startEnteringCommandArgs","commandName","command","cancelPendingCommand","setCommandArg","runKeepAliveLoop","lastActiveMoment","keepAliveInterval","setInterval","getTimeouts","userWaitTimeout","setTimeout","clearInterval","clearTimeout","keepSessionAlive","fetchSteps","data","fetch","method","headers","isSourceRefreshOn","sessionId","run","postdata","data1","then","response","catch","json","expected_value","sendData","isObject","isEmpty","truncatedResult","truncate","setVisibleCommandResult","setAwaitingMjpegStream","isAwaiting","saveGesture","savedGestures","gesture","UUID","date","getSavedGestures","deleteSavedGesture","deleteGesture","newGestures","showGestureEditor","hideGestureEditor","setLoadedGesture","loadedGesture","removeLoadedGesture","displayGesture","showGesture","removeGestureDisplay","selectTick","tick","tickCoordinates","undefined","selectedTick","unselectTick","tapTickCoordinates","toggleShowAttributes","headspinUrl","ServerTabHeadspin","server","setServerParam","Form","gutter","Col","span","SessionStyles","customServerInputLeft","addonBefore","headspin","webDriverUrl","localDesc","browserstackUsernamePlaceholder","BROWSERSTACK_USERNAME","environmentVariable","browserstackAccessKeyPlaceholder","BROWSERSTACK_ACCESS_KEY","ServerTabBrowserstack","browserstack","username","accessKey","lambdatestUsernamePlaceholder","LAMBDATEST_USERNAME","lambdatestAccessKeyPlaceholder","LAMBDATEST_ACCESS_KEY","ServerTabLambdatest","lambdatest","bitbarApiKeyPlaceholder","BITBAR_API_KEY","ServerTabBitbar","bitbar","apiKey","kobitonUsernamePlaceholder","KOBITON_USERNAME","kobitonAccessKeyPlaceholder","KOBITON_ACCESS_KEY","ServerTabKobiton","kobiton","cloudPerfectoUrl","portPlaceholder","perfecto","ssl","perfectoTokenPlaceholder","PERFECTO_TOKEN","ServerTabPerfecto","hostname","token","Checkbox","checked","pcloudyUsernamePlaceholder","pcloudyHostPlaceholder","pcloudyAccessKeyExample","ServerTabPcloudy","pcloudy","sauceUsernamePlaceholder","SAUCE_USERNAME","sauceAccessKeyPlaceholder","SAUCE_ACCESS_KEY","ServerTabSauce","sauce","addonDataCenter","Radio","inputDataCenter","addonDataCenterRadioContainer","buttonStyle","defaultValue","dataCenter","align","useSCProxy","scHost","scPort","testingbotKeyPlaceholder","TB_KEY","testingbotSecretPlaceholder","TB_SECRET","ServerTabTestingbot","testingbot","secret","accessKeyPlaceholder","placeholderUrl","ServerTabExperitest","experitest","robotQATokenPlaceholder","ROBOTQA_TOKEN","ServerTabRobotQA","roboticmobi","ServerTabRemoteTestkit","remotetestkit","_ServerTabHeadspin","_ServerTabBrowserstack","_ServerTabLambdatest","_ServerTabBitbar","_ServerTabKobiton","_ServerTabPerfecto","_ServerTabPcloudy","_ServerTabSauce","_ServerTabTestingbot","_ServerTabExperitest","_ServerTabRobotQA","_ServerTabRemoteTestKit","_sauce_logo","_headspin_logo","_browserstack_logo","_lambdatest_logo","_bitbar_logo","_kobiton_logo","_perfecto_logo","_pcloudy_logo","_testingbot_logo","_experitest_logo","_robotqa_logo","_remotetestkit_logo","CloudProviders","tabhead","tabText","src","SauceLogo","tab","logo","HeadSpinLogo","BrowserStackLogo","LambdaTestLogo","BitBarLogo","KobitonLogo","PerfectoLogo","PcloudyLogo","TestingBotLogo","ExperitestLogo","RobotQALogo","RemoteTestKitLogo","APPIUM_SESSION_FILE_VERSION","getAppiumSessionFilePath","argv","isPackaged","isDev","getSaveableState","reduxState","version","serverType","visibleProviders","APPIUM_SESSION_EXTENSION","_CloudProviders","_web2driver","_umd","_moment","_helpers","NEW_SESSION_REQUESTED","NEW_SESSION_LOADING","NEW_SESSION_DONE","CHANGE_CAPABILITY","SAVE_SESSION_REQUESTED","SAVE_SESSION_DONE","GET_SAVED_SESSIONS_REQUESTED","GET_SAVED_SESSIONS_DONE","SET_CAPABILITY_PARAM","ADD_CAPABILITY","REMOVE_CAPABILITY","SWITCHED_TABS","SET_CAPS_AND_SERVER","SAVE_AS_MODAL_REQUESTED","HIDE_SAVE_AS_MODAL_REQUESTED","SET_SAVE_AS_TEXT","DELETE_SAVED_SESSION_REQUESTED","DELETE_SAVED_SESSION_DONE","CHANGE_SERVER_TYPE","SET_SERVER_PARAM","SET_SERVER","VISIBLE_PROVIDERS","SET_ATTACH_SESS_ID","GET_SESSIONS_REQUESTED","GET_SESSIONS_DONE","ENABLE_DESIRED_CAPS_NAME_EDITOR","ABORT_DESIRED_CAPS_NAME_EDITOR","SAVE_DESIRED_CAPS_NAME","SET_DESIRED_CAPS_NAME","ENABLE_DESIRED_CAPS_EDITOR","ABORT_DESIRED_CAPS_EDITOR","SAVE_RAW_DESIRED_CAPS","SET_RAW_DESIRED_CAPS","SHOW_DESIRED_CAPS_JSON_ERROR","IS_ADDING_CLOUD_PROVIDER","SET_PROVIDERS","SET_ADD_VENDOR_PREFIXES","SET_STATE_FROM_URL","SET_STATE_FROM_SAVED","CAPS_NEW_COMMAND","CAPS_CONNECT_HARDWARE_KEYBOARD","CAPS_NATIVE_WEB_SCREENSHOT","CAPS_ENSURE_WEBVIEW_HAVE_PAGES","CAPS_INCLUDE_SAFARI_IN_WEBVIEWS","FILE_PATH_STORAGE_KEY","AUTO_START_URL_PARAM","MJPEG_CAP","MJPEG_PORT_CAP","CONN_RETRIES","CONN_TIMEOUT","HEADERS_CONTENT","NEW_COMMAND_TIMEOUT_SEC","isFirstRun","serverTypes","local","ServerTypes","DEFAULT_SERVER_PATH","DEFAULT_SERVER_HOST","DEFAULT_SERVER_PORT","SAUCE_OPTIONS_CAP","JSON_TYPES","getCapsObject","secs","errMessage","setCapsAndServer","uuid","changeCapability","addCapability","setCapabilityParam","removeCapability","_addVendorPrefixes","capsUUID","capsName","session","prefixedCaps","newSession","attachSessId","desiredCapabilities","addCustomCaps","isPlainObject","dateTime","moment","format","URL","pathname","protocol","securityToken","BROWSERSTACK_HOST","BROWSERSTACK_PORT","LAMBDATEST_HOST","LAMBDATEST_PORT","isRealMobile","advanced","useProxy","proxyUrl","proxy","BITBAR_HOST","KOBITON_HOST","pCloudy_Username","PCLOUDY_USERNAME","pCloudy_ApiKey","PCLOUDY_ACCESS_KEY","TB_HOST","experitestUrl","robotqa_token","accessToken","serverOpts","connectionRetryCount","connectionRetryTimeout","user","logLevel","NODE_ENV","attachedSessionCaps","runningAppiumSessions","isMobile","Web2Driver","attachToSession","_isAttachedSession","navigateTo","mjpegScreenshotPort","saveSession","savedSessions","newSavedSession","getSavedSessions","switchTabs","requestSaveAsModal","hideSaveAsModal","setSaveAsText","saveAsText","deleteSavedSession","newSessions","setAttachSessId","changeServerType","getRunningSessions","debounceGetRunningSessions","setLocalServerParams","serverArgs","setSavedServerParams","currentProviders","setStateFromAppiumFile","newFilepath","filePath","lastArg","startsWith","sessionStorage","appiumJson","promisify","readFile","stack","saveFile","filepath","appiumFileInfo","writeFile","send","serverInfo","adjPath","endsWith","ky","btoa","sessions","startDesiredCapsNameEditor","abortDesiredCapsNameEditor","saveDesiredCapsName","desiredCapsName","setDesiredCapsName","startDesiredCapsEditor","abortDesiredCapsEditor","saveRawDesiredCaps","rawDesiredCaps","capsArray","newCaps","newCapsArray","setRawDesiredCaps","invalidCapsJsonReason","isValidCapsJson","isValidatingCapsJson","addCloudProvider","isAddingProvider","stopAddCloudProvider","addVisibleProvider","provider","providers","union","removeVisibleProvider","without","setVisibleProviders","androidCustomCaps","iosCustomCaps","bindWindowClose","addEventListener","returnValue","setAddVendorPrefixes","initFromQueryString","href","initialState","searchParams","autoStartSession","_formatJson","_Session2","FormattedCaps","isEditingDesiredCapsName","isEditingDesiredCaps","Card","formattedCaps","setCapsTitle","capsEditorTitle","extra","setCapsTitleButtons","CloseOutlined","capsNameEditorButton","SaveOutlined","EditOutlined","capsEditorControls","capsEditorButton","capsEditor","capsEditorBody","capsEditorBodyFull","capsEditorBodyResized","formattedCapsBody","formatJSON","plain","getLocalFilePath","canceled","filePaths","dialog","showOpenDialog","properties","CapabilityControl","onSetCapabilityParam","onPressEnter","capsBoxFont","Switch","checkedChildren","unCheckedChildren","rows","fileControlWrapper","addonAfter","FileOutlined","_FormattedCaps","_CapabilityControl","whitespaces","whitespaceMsg","leadingSpace","trailingSpace","handleSetType","translatedValue","CapabilityEditor","showSaveAsModal","onSaveAsOk","latestCapField","useEffect","input","__didFocus","focus","capsFormRow","order","capsFormCol","newSessionForm","ref","Select","Option","btnDeleteCap","DeleteOutlined","PlusOutlined","capsFormattedCol","Modal","okText","cancelText","onCancel","onOk","DATE_COLUMN_WIDTH","ACTIONS_COLUMN_WIDTH","sessionFromUUID","SavedSessions","handleCapsAndServer","columns","dataIndex","record","editSession","confirm","handleDelete","Table","pagination","sticky","onRow","row","rowClassName","selected","formatCaps","importantCaps","deviceName","formatCapsBrowserstack","sessionName","formatCapsLambdaTest","desired","platformVersion","getSessionInfo","AttachToSession","showSearch","notFoundContent","btnReload","ReloadOutlined","ServerTabCustom","AdvancedServerParams","styles","advancedSettingsContainerCol","advancedSettingsContainer","Collapse","bordered","Panel","header","allowUnauthorized","CloudProviderSelector","isAddingCloudProvider","footer","providersGrid","chunk","cloudProviderModal","providerName","style","borderColor","role","toggleVisibleProvider","_CapabilityEditor","_SavedSessions","_AttachToSession","_ServerTabCustom","_AdvancedServerParams","_CloudProviderSelector","ADD_CLOUD_PROVIDER","CAPS_DOCS_LINK","Session","tabKey","isCapsDirty","newSessionLoading","isAttaching","sessionContainer","serverTab","Tabs","activeKey","handleSelectServerTab","serverTabs","items","label","scrollingTabCont","scrollingTab","sessionFooter","desiredCapsLink","preventDefault","LinkOutlined","_reactRedux","SessionActions","mapStateToProps","connect","HighlighterRect","hoveredElement","scaleRatio","xOffset","elLocation","elSize","dimensions","hoveredPath","selectedPath","highlighterClasses","InspectorCSS","onMouseOver","onMouseOut","CENTROID_STYLES","VISIBLE","HIDDEN","CONTAINER","NON_CONTAINER","getCentroidPos","angle","coord","HighlighterCentroid","elementProperties","centroidType","hoveredCentroid","selectedCentroid","centerX","centerY","angleX","angleY","container","centroidClasses","overlapDivStyle","visibility","centroidDivStyle","borderRadius","placeHolder","onMouseEnter","onMouseLeave","onClickCentroid","_HighlighterRect","_HighlighterCentroid","HighlighterRects","containerEl","isLocatorTestModalVisible","isSiriCommandModalVisible","highlighterRects","highlighterCentroids","highlighterXOffset","screenshotEl","buildElementsWithProps","prevElement","overlaps","centerPoint","v1","v2","parent","accessible","coordinates","isElementContainer","childEl","element1","element2","isElementOverElement","isAncestor","curElement","maybeAncestor","elem","updateOverlapsAngles","steps","step","elProps","cos","PI","sin","elementsByOverlap","getElements","querySelector","renderElements","centroids","renderCentroids","CLASS_CHAIN_DOCS_URL","PREDICATE_DOCS_URL","selectedElementTableCell","copyToClipBoard","trigger","SelectedElement","isFindingElementsTimes","selectedElementId","elementInteractionsNotAvailable","selectedElementSearchInProgress","isDisabled","unshift","findColumns","classChainText","predicateStringText","tapIcon","LoadingOutlined","elementActions","elementKeyInputActions","elementKeyInput","contextSelect","_HighlighterRects","_SelectedElement","_io","_bi","TYPES","FILLED","NEW_DASHED","WHOLE","DASHED","DRAG","Screenshot","methodCallInProgress","step_object","swipeStart","swipeEnd1","swipeStart1","swipeEnd","selectedInteractionMode","xLongPress","setXLongPress","useState","yLongPress","setYLongPress","setElement","setCoordinates","scratch","setScratch","coordinatesString","coordinatesArray","setX","setY","isLongPress","setIsLongPress","setCoords","crop","setCrop","scale","useFileUpload","button","useLongPress","longdata","useDoubleTap","scratchCard","handleMouseMove","handleDoSwipe","origin","swipeEndLocal","handleDoSwipeSlide","handleDoDragAndDrop","handleDoZoom","swipeEndLocal1","fetchExpectedValue","offsetX","nativeEvent","offsetY","newX","newY","prevCoordinates","screenshotStyle","cursor","swipeInstructions","screenSrc","screenImg","screenimage","points","getGestureCoordinates","defaultTypes","pointerDown","pointerUp","pointer","temp","ticks","len","color","display","handleTap","innerScreenshotContainer","onMouseDown","B","expectedValue","onMouseMove","handleMouseOut","onDragOver","event","onDrop","dropX","dropY","roundedDropX","roundedDropY","screenshotBox","coordinatesContainer","swipeSvg","cx","cy","tapDiv","gestureSvg","stroke","fill","IoChevronBackOutline","BiCircle","BiSquare","_toolkit","panelSlice","createSlice","showPanel","reducers","setShowPanel","reducer","_hi","_panelSlice","_testinglogo","_hamburger","HeaderButtons","handlePanel","headerLogo","logoContainer","menuButton","alt","deviceControls","HiOutlineHome","HiOutlineMicrophone","appModeControls","gap","actionButton","AppstoreOutlined","GlobalOutlined","generalControls","PlayCircleOutlined","PauseCircleOutlined","SearchOutlined","EyeOutlined","PauseOutlined","sessionIdShow","alignItems","marginRight","fontSize","fontFamily","margin","quitSessionButton","button_wrapper","STRAT_ID","STRAT_XPATH","STRAT_NAME","STRAT_CLASS_NAME","STRAT_ACCESSIBILITY_ID","STRAT_PREDICATE","STRAT_CLASS_CHAIN","STRAT_UIAUTOMATOR","STRAT_DATAMATCHER","STRAT_VIEWTAG","locatorStrategies","strategies","showMissingAutomationNameInfo","ElementLocator","strategyValue","strategyName","locatorStrategyBtn","TextArea","locatorSelectorTextArea","_ElementLocator","LocatorTestModal","isSearchingForElements","loading","onSubmit","SiriCommandModal","_LocatorTestModal","_SiriCommandModal","IMPORTANT_ATTRS","Source","showSourceAttrs","getFormattedTag","showAllAttrs","attrs","sourceAttrName","sourceAttrValue","sourceTag","recursive","elemObj","treeData","tabIndex","errorMsg","Tree","defaultExpandAll","onExpand","expandedKeys","onSelect","selectedPaths","handleSelectElement","selectedKeys","_highlight","RecordedActions","recordedActions","actionFramework","raw","rawCode","highlight","highlightedCode","CodeOutlined","actionBar","f","ExportOutlined","CopyOutlined","dangerouslySetInnerHTML","__html","Commands","selectedCommandGroup","selectedCommandSubGroup","pendingCommand","commandGroupName","commandGroup","startPerformingCommand","executeCommand","argName","argType","toNumber","v","SAVED_ACTIONS_OBJ","NAME","DESCRIPTION","CREATED","ACTIONS","SavedGestures","drawnGestureRef","getGestureByID","onDraw","convertCoordinates","formatGesture","pointers","omit","newPointers","onPlay","loadSavedGesture","rowKey","onRowClick","Name","Created","Description","DEFAULT_DURATION_TIME","COLORS","BUTTONS","LEFT","RIGHT","ACTION_TYPES","ADD","REMOVE","MSG_TYPES","SUCCESS","COORD_TYPE","PERCENTAGES","PIXELS","TICK_PROPS","POINTER_TYPE","DURATION","X","Y","CURSOR","POINTER","STATUS","WAIT","FINISH","COLOR","FILLER","DISPLAY","DEFAULT_POINTERS","GestureEditor","setPointers","setName","setDescription","coordType","setCoordType","activePointerId","setActivePointerId","getConvertedPointers","updateCoordinates","onBack","duplicatePointerNames","localPointers","duplicates","displayNotificationMsg","msg","getW3CPointers","currentPointers","cloneDeep","getDefaultMoveDuration","tickId","coordFromTap","ticksExceptCurrent","prevPointerMoves","calcLength","sqrt","calcDiff","abs","xDiff","yDiff","maxScreenLength","lineLengthPct","tickKey","updateX","updateY","copiedPointers","currentPointer","currentTick","updateTick","p","targetTickIdx","findIndex","headerTitle","headerButtons","formattedPointers","onSaveAs","gestureName","onSave","headerDescription","regularTimelineIcon","iconStyle","Popover","content","RightCircleOutlined","DownCircleOutlined","UpCircleOutlined","QuestionCircleOutlined","timeline","updateGestureForTimeline","allTickLengths","maxTickLength","max","currentLength","customStep","fillers","Steps","tapCoordinatesBtn","tickCard","hoverable","deleteTick","pointerKey","newTicks","dropdownMatchSelectWidth","pointerMove","pause","tickType","tickDuration","tickButton","tickCoords","pointerTicksGrid","xs","sm","md","lg","xl","xxl","PlusCircleOutlined","addTick","pointerTabs","textDecorationColor","maxLength","updatePointerName","pointerName","pointerIndex","PageHeader","Divider","pointerId","onEdit","targetKey","addPointer","newActivePointerId","deletePointer","hideAdd","centered","tabBarGutter","SessionCodeBox","_SessionCodeBox","SESSION_OBJ","session_id","session_url","server_details","session_length","session_details","active_appId","OUTER_TABLE_KEY","SESSION_TABLE_KEY","SERVER_TABLE_KEY","SCROLL_DISTANCE_Y","COLUMN_WIDTH","SESSION_DETAILS","SessionInfo","sessionArray","generateSessionTime","hours","minutes","floor","showTime","padStart","interval","setTime","getTable","tableValues","keyName","outerTable","keyValue","generateSessionInfo","showHeader","scroll","connectedUrl","serverDetailsArray","serverStatusArray","sessionUrl","_Screenshot","_HeaderButtons","_Source","_RecordedActions","_Commands","_SavedGestures","_GestureEditor","_SessionInfo","ButtonGroup","MIN_WIDTH","MIN_HEIGHT","MAX_SCREENSHOT_WIDTH","MJPEG_STREAM_CHECK_INTERVAL","downloadXML","encodeURIComponent","appendChild","click","removeChild","Inspector","didInitialResize","activeIndex","activeCategory","nestedDropIndex","showPane","currentSelection","step_array","total_array","mode_orientation","screenAndSourceEl","lastScreenshot","updateSourceTreeWidth","updateScaleRatio","mjpegStreamCheckInterval","screenshotImg","setState","offsetWidth","img","imgRect","screenshotRect","flexBasis","attemptedWidth","maxWidth","componentDidMount","curHeight","curWidth","needsResize","newWidth","newHeight","resizeTo","checkMjpegStream","isAwaitingMjpegStream","Image","imgReady","decode","componentDidUpdate","componentWillUnmount","screenshotInteractionChange","option","setActiveIndex","hideKeyboard","getDeviceTime","formattedTime","utc","utcOffset","alert","islocked","pressKeyCode","callParticularSteps","fetchAllSteps","isShake","shake","showRecord","visibleCommandMethod","showKeepAlivePrompt","visibleCommandResult","isGestureEditorVisible","flow_steps","options","showScreenshot","screenShotControls","CheckCircleOutlined","CloseCircleOutlined","defaultChecked","flexDirection","SelectOutlined","textAlign","padding","position","LikeOutlined","zIndex","SwapRightOutlined","ScanOutlined","InfoOutlined","DragOutlined","ShrinkOutlined","SlidersOutlined","DollarOutlined","ShakeOutlined","shakeBooty","HeatMapOutlined","FundProjectionScreenOutlined","handleActions","FileAddOutlined","CaretDownOutlined","FieldTimeOutlined","PaperClipOutlined","RotateRightOutlined","setOrientation","getOrientation","NotificationOutlined","openNotifications","AppstoreAddOutlined","isInput","inputBundleId","activateApp","backgroundColor","SwitcherOutlined","resetApp","sideMenu","marginTop","minWidth","main","fontWeight","background","marginLeft","wordWrap","ThunderboltOutlined","HighlightOutlined","InfoCircleOutlined","InspectorActions","_Inspector2","InspectorPage","_Spinner","Spinner","loader","_reactRouterDom","_App","_SessionPage","_InspectorPage","changeLanguage","Suspense","fallback","Route","exact","_routes","Root","store","history","Provider","Router","_ErrorMessage","CREATE_ISSUE_URL","ErrorMessage","copyTrace","errorMessage","copyTraceBtn","trace","ErrorBoundary","SET_UPDATE_STATE","setUpdateState","updateState","inspectorActions","sessionActions","updaterActions","serverName","INITIAL_STATE","gettingSessions","nextState","isAttachSessIdValid","runningSessions","newSessionRequested","saveSessionRequested","getSavedSessionsRequested","deletingSession","currentServerState","newServerState","nextServerState","reduce","DEFAULT_FRAMEWORK","findElementByPath","isQuittingSession","isSessionDone","selectedElementVariableName","selectedElementVariableType","getSavedGesturesRequested","_Updater","createRootReducer","routerReducer","combineReducers","router","updater","_history","_actions","_reducers","createReduxHistory","routerMiddleware","createReduxHistoryContext","createHashHistory","rootReducer","configureStore","middleware","getDefaultMiddleware","serializableCheck","createLogger","logger","level","collapsed","devTools","actionCreators","_client","_Root","_ErrorBoundary","_store","getElementById","root","createRoot","module","hot","accept","NextRoot","AppContainer"],"mappings":"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","file":"renderer.e31bb0bc.js","sourceRoot":"../app/renderer","sourcesContent":["const browser = {\n  clipboard: {\n    writeText: (text) => navigator.clipboard.writeText(text)\n  },\n  shell: {\n    openExternal: (url) => window.open(url, '')\n  },\n  remote: {\n    getCurrentWindow: () => ({\n      getSize: () => [window.innerWidth, window.innerHeight]\n    })\n  },\n  ipcRenderer: {\n    on: (evt) => {\n      console.warn(`Cannot listen for IPC event ${evt} in browser context`); // eslint-disable-line no-console\n    }\n  },\n  fs: null,\n  util: null,\n};\n\nclass BrowserSettings {\n  has (key) {\n    return this.get(key) !== null;\n  }\n\n  set (key, val) {\n    return localStorage.setItem(key, JSON.stringify(val));\n  }\n\n  get (key) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  getSync (key) {\n    return this.get(key);\n  }\n}\n\nconst log = console;\nconst settings = new BrowserSettings();\nconst {clipboard, shell, remote, ipcRenderer} = browser;\nconst i18NextBackend = require('i18next-chained-backend').default;\nconst i18NextBackendOptions = {\n  backends: [\n    require('i18next-localstorage-backend').default,\n    require('i18next-http-backend').default,\n  ], backendOptions: [{\n  }, {\n    loadPath: './locales/{{lng}}/{{ns}}.json'\n  }]\n};\n\nexport {\n  log,\n  settings,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  i18NextBackend,\n  i18NextBackendOptions,\n};\n","import path from 'path';\nimport { clipboard, shell, remote, ipcRenderer } from 'electron';\nimport log from 'electron-log';\nimport settings from 'electron-settings';\nimport i18NextBackend from 'i18next-fs-backend';\nimport fs from 'fs';\nimport util from 'util';\nconst i18NextBackendOptions = {\n  loadPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n  addPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n  jsonIndent: 2,\n};\n\nexport {\n  log,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  settings,\n  i18NextBackend,\n  i18NextBackendOptions,\n  fs,\n  util,\n};\n","let log, settings, clipboard, shell, remote, ipcRenderer,\n    i18NextBackend, i18NextBackendOptions, fs, util;\n\nfunction buildForBrowser () {\n  if (process.env.BUILD_BROWSER) {\n    return true;\n  }\n\n  if (typeof navigator !== 'undefined' && !/electron/i.test(navigator.userAgent)) {\n    return true;\n  }\n\n  return false;\n}\n\nif (buildForBrowser()) {\n  ({log, settings, clipboard, shell, remote,\n    ipcRenderer, i18NextBackend,\n    i18NextBackendOptions, fs, util} = require('./browser'));\n} else {\n  ({log, settings, clipboard, shell, remote,\n    ipcRenderer, i18NextBackend,\n    i18NextBackendOptions, fs, util} = require('./electron'));\n}\n\nexport {\n  log,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  settings,\n  i18NextBackend,\n  i18NextBackendOptions,\n  fs,\n  util,\n};\n","import { settings } from '../renderer/polyfills';\n\nexport const SAVED_SESSIONS = 'SAVED_SESSIONS';\nexport const SET_SAVED_GESTURES = 'SET_SAVED_GESTURES';\nexport const SERVER_ARGS = 'SERVER_ARGS';\nexport const SESSION_SERVER_PARAMS = 'SESSION_SERVER_PARAMS';\nexport const SESSION_SERVER_TYPE = 'SESSION_SERVER_TYPE';\nexport const SAVED_FRAMEWORK = 'SAVED_FRAMEWORK';\n\nconst DEFAULT_SETTINGS = {\n  [SAVED_SESSIONS]: [],\n  [SET_SAVED_GESTURES]: [],\n  [SERVER_ARGS]: null,\n  [SESSION_SERVER_PARAMS]: null,\n  [SESSION_SERVER_TYPE]: null,\n  [SAVED_FRAMEWORK]: 'java',\n};\n\nexport async function getSetting (setting) {\n  if (await settings.has(setting)) {\n    return await settings.get(setting);\n  }\n  return DEFAULT_SETTINGS[setting];\n}\n\nexport async function setSetting (setting, value) {\n  await settings.set(setting, value);\n}\n\nexport default settings;\n","import settings from '../shared/settings';\n\nconst config = {\n  platform: process.platform,\n  languages: [\n    'de', 'en', 'es-ES', 'fa', 'hi', 'it', 'ja', 'ko', 'kn',\n    'ml-IN', 'pa-IN', 'pl', 'pt-BR', 'pt-PT', 'ru', 'te', 'uk', 'zh-CN'\n  ],\n  fallbackLng: 'en',\n  namespace: 'translation',\n};\n\nfunction getI18NextOptions (backend) {\n  return {\n    backend,\n    // debug: true,\n    // saveMissing: true,\n    interpolation: {\n      escapeValue: false\n    },\n    lng: settings && settings.getSync('PREFERRED_LANGUAGE') || 'en',\n    fallbackLng: config.fallbackLng,\n    whitelist: config.languages\n  };\n}\n\n\nexport default config;\nexport { getI18NextOptions };\n","import XPath from 'xpath';\nimport { withTranslation as wt } from 'react-i18next';\nimport _ from 'lodash';\nimport { log } from './polyfills';\nimport config from '../configs/app.config';\nimport { DOMParser } from '@xmldom/xmldom';\n\nconst VALID_W3C_CAPS = ['platformName', 'browserName', 'browserVersion', 'acceptInsecureCerts',\n  'pageLoadStrategy', 'proxy', 'setWindowRect', 'timeouts', 'unhandledPromptBehavior'];\n\n\n// Attributes on nodes that we know are unique to the node\nconst UNIQUE_XPATH_ATTRIBUTES = [\n  'name',\n  'content-desc',\n  'id',\n  'accessibility-id',\n];\nconst UNIQUE_CLASS_CHAIN_ATTRIBUTES = [\n  'label',\n  'name',\n  'value',\n];\nconst UNIQUE_PREDICATE_ATTRIBUTES = [\n  'label',\n  'name',\n  'value',\n  'type',\n];\n\n/**\n * Translates sourceXML to JSON\n *\n * @param {string} source\n * @returns {Object}\n */\nexport function xmlToJSON (source) {\n  const childNodesOf = (xmlNode) => {\n    if (!xmlNode || !xmlNode.hasChildNodes()) {\n      return [];\n    }\n\n    const result = [];\n    for (let childIdx = 0; childIdx < xmlNode.childNodes.length; ++childIdx) {\n      const childNode = xmlNode.childNodes.item(childIdx);\n      if (childNode.nodeType === 1) {\n        result.push(childNode);\n      }\n    }\n    return result;\n  };\n  const translateRecursively = (xmlNode, parentPath = '', index = null) => {\n    const attributes = {};\n    for (let attrIdx = 0; attrIdx < xmlNode.attributes.length; ++attrIdx) {\n      const attr = xmlNode.attributes.item(attrIdx);\n      attributes[attr.name] = attr.value;\n    }\n\n    // Dot Separated path of indices\n    const path = _.isNil(index) ? '' : `${!parentPath ? '' : parentPath + '.'}${index}`;\n    const classChainSelector = isIOS ? getOptimalClassChain(xmlDoc, xmlNode, UNIQUE_CLASS_CHAIN_ATTRIBUTES) : '';\n    const predicateStringSelector = isIOS ? getOptimalPredicateString(xmlDoc, xmlNode, UNIQUE_PREDICATE_ATTRIBUTES) : '';\n\n    return {\n      children: childNodesOf(xmlNode)\n        .map((childNode, childIndex) => translateRecursively(childNode, path, childIndex)),\n      tagName: xmlNode.tagName,\n      attributes,\n      xpath: getOptimalXPath(xmlDoc, xmlNode, UNIQUE_XPATH_ATTRIBUTES),\n      ...(isIOS ? {classChain: classChainSelector ? `**${classChainSelector}` : ''} : {}),\n      ...(isIOS ? {predicateString: predicateStringSelector ? predicateStringSelector : ''} : {}),\n      path,\n    };\n  };\n  const isIOS = source.includes('XCUIElement');\n  const xmlDoc = new DOMParser().parseFromString(source);\n  // get the first child element node in the doc. some drivers write their xml differently so we\n  // first try to find an element as a direct descendend of the doc, then look for one in\n  // documentElement\n  const firstChild = childNodesOf(xmlDoc)[0] || childNodesOf(xmlDoc.documentElement)[0];\n\n  return firstChild ? translateRecursively(firstChild) : {};\n}\n\n/**\n * Get an optimal XPath for a DOMNode\n *\n * @param {DOMDocument} doc\n * @param {DOMNode} domNode\n * @param {Array<String>} uniqueAttributes Attributes we know are unique (defaults to just 'id')\n * @returns {string|null}\n */\nexport function getOptimalXPath (doc, domNode, uniqueAttributes = ['id']) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1) {\n      return '';\n    }\n\n    // BASE CASE #2: If this node has a unique attribute, return an absolute XPath with that attribute\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n      if (attrValue) {\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\n        let othersWithAttr;\n\n        // If the XPath does not parse, move to the next unique attribute\n        try {\n          othersWithAttr = XPath.select(xpath, doc);\n        } catch (ign) {\n          continue;\n        }\n\n        // If the attribute isn't actually unique, get it's index too\n        if (othersWithAttr.length > 1) {\n          let index = othersWithAttr.indexOf(domNode);\n          xpath = `(${xpath})[${index + 1}]`;\n        }\n        return xpath;\n      }\n    }\n\n    // Get the relative xpath of this node using tagName\n    let xpath = `/${domNode.tagName}`;\n\n    // If this node has siblings of the same tagName, get the index of this node\n    if (domNode.parentNode) {\n      // Get the siblings\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\n      ));\n\n      // If there's more than one sibling, append the index\n      if (childNodes.length > 1) {\n        let index = childNodes.indexOf(domNode);\n        xpath += `[${index + 1}]`;\n      }\n    }\n\n    // Make a recursive call to this nodes parents and prepend it to this xpath\n    return getOptimalXPath(doc, domNode.parentNode, uniqueAttributes) + xpath;\n  } catch (error) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    log.error(`The most optimal XPATH could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\n\n    return null;\n  }\n}\n\n/**\n * Get an optimal Class Chain for a DOMNode based on the getOptimalXPath method\n *\n * @param {DOMDocument} doc\n * @param {DOMNode} domNode\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\n * @returns {string|null}\n */\nfunction getOptimalClassChain (doc, domNode, uniqueAttributes) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\n    // which is not an official XCUITest element, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\n      return '';\n    }\n\n    // BASE CASE #2: If this node has a unique class chain based on attributes then return it\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n      if (attrValue) {\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\n        let classChain = `/${domNode.tagName || '*'}[\\`${attrName} == \"${attrValue}\"\\`]`;\n        let othersWithAttr;\n\n        // If the XPath does not parse, move to the next unique attribute\n        try {\n          othersWithAttr = XPath.select(xpath, doc);\n        } catch (ign) {\n          continue;\n        }\n\n        // If the attribute isn't actually unique, get it's index too\n        if (othersWithAttr.length > 1) {\n          let index = othersWithAttr.indexOf(domNode);\n          classChain = `${classChain}[${index + 1}]`;\n        }\n        return classChain;\n      }\n    }\n\n    // Get the relative xpath of this node using tagName\n    let classChain = `/${domNode.tagName}`;\n\n    // If this node has siblings of the same tagName, get the index of this node\n    if (domNode.parentNode) {\n      // Get the siblings\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\n      ));\n\n      // If there's more than one sibling, append the index\n      if (childNodes.length > 1) {\n        let index = childNodes.indexOf(domNode);\n        classChain += `[${index + 1}]`;\n      }\n    }\n\n    // Make a recursive call to this nodes parents and prepend it to this xpath\n    return getOptimalClassChain(doc, domNode.parentNode, uniqueAttributes) + classChain;\n  } catch (error) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    log.error(`The most optimal '-ios class chain' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\n\n    return null;\n  }\n}\n\n/**\n * Get an optimal Predicate String for a DOMNode based on the getOptimalXPath method\n * The `ios predicate string` can only search a single element, no parent child scope\n *\n * @param {DOMDocument} doc\n * @param {DOMNode} domNode\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\n * @returns {string|null}\n */\nfunction getOptimalPredicateString (doc, domNode, uniqueAttributes) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\n    // which is not an official XCUITest element, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\n      return '';\n    }\n\n    // BASE CASE #2: Check all attributes and try to find the best way\n    let xpathAttributes = [];\n    let predicateString = [];\n\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n\n      if (_.isNil(attrValue) || _.isString(attrValue) && attrValue.length === 0) {\n        continue;\n      }\n\n      xpathAttributes.push(`@${attrName}=\"${attrValue}\"`);\n      const xpath = `//*[${xpathAttributes.join(' and ')}]`;\n      predicateString.push(`${attrName} == \"${attrValue}\"`);\n      let othersWithAttr;\n\n      // If the XPath does not parse, move to the next unique attribute\n      try {\n        othersWithAttr = XPath.select(xpath, doc);\n      } catch (ign) {\n        continue;\n      }\n\n      // If the attribute isn't actually unique, get it's index too\n      if (othersWithAttr.length === 1) {\n        return predicateString.join(' AND ');\n      }\n    }\n  } catch (error) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    log.error(`The most optimal '-ios predicate string' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\n\n    return null;\n  }\n}\n\nexport function withTranslation (componentCls, ...hocs) {\n  return _.flow(\n    ...hocs,\n    wt(config.namespace),\n  )(componentCls);\n}\n\nexport function addVendorPrefixes (caps) {\n  return caps.map((cap) => {\n    // if we don't have a valid unprefixed cap or a cap with an existing prefix, update it\n    if (!VALID_W3C_CAPS.includes(cap.name) && !_.includes(cap.name, ':')) {\n      cap.name = `appium:${cap.name}`;\n    }\n    return cap;\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from '../util';\n\nclass App extends React.Component {\n  render () {\n    const { children } = this.props;\n    return (\n      <React.Fragment>{children}</React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  children: PropTypes.element.isRequired\n};\n\nexport default withTranslation(App);\n","import { DOMParser } from '@xmldom/xmldom';\nimport xpath from 'xpath';\n\nexport function pixelsToPercentage (px, maxPixels) {\n  if (!isNaN(px)) {\n    return parseFloat(((px / maxPixels) * 100).toFixed(1), 10);\n  }\n}\n\nexport function percentageToPixels (pct, maxPixels) {\n  if (!isNaN(pct)) {\n    return Math.round(maxPixels * (pct / 100));\n  }\n}\n\nexport function parseCoordinates (element) {\n  let {bounds, x, y, width, height} = element.attributes || {};\n\n  if (bounds) {\n    // console.log(\"bounds\", bounds);\n    let boundsArray = bounds.split(/\\[|\\]|,/).filter((str) => str !== '');\n    const x1 = parseInt(boundsArray[0], 10);\n    const x2 = parseInt(boundsArray[2], 10);\n    const y1 = parseInt(boundsArray[1], 10);\n    const y2 = parseInt(boundsArray[3], 10);\n    return { x1, y1, x2, y2 };\n  } else if (x) {\n    x = parseInt(x, 10);\n    y = parseInt(y, 10);\n    width = parseInt(width, 10);\n    height = parseInt(height, 10);\n    return {x1: x, y1: y, x2: x + width, y2: y + height};\n  } else {\n    return {};\n  }\n}\n\nexport function isUnique (attrName, attrValue, sourceXML) {\n  // If no sourceXML provided, assume it's unique\n  if (!sourceXML) {\n    return true;\n  }\n  const doc = new DOMParser().parseFromString(sourceXML);\n  return xpath.select(`//*[@${attrName}=\"${attrValue.replace(/\"/g, '')}\"]`, doc).length < 2;\n}\n\n// Map of the optimal strategies.\nconst STRATEGY_MAPPINGS = [\n  ['name', 'accessibility id'],\n  ['content-desc', 'accessibility id'],\n  ['id', 'id'],\n  ['rntestid', 'id'],\n  ['resource-id', 'id'],\n  ['class', 'class name'],\n  ['type', 'class name'],\n];\n\nexport function getLocators (attributes, sourceXML) {\n  const res = {};\n  for (let [strategyAlias, strategy] of STRATEGY_MAPPINGS) {\n    const value = attributes[strategyAlias];\n    if (value && isUnique(strategyAlias, value, sourceXML)) {\n      res[strategy] = attributes[strategyAlias];\n    }\n  }\n  return res;\n}\n\nexport const POINTER_TYPES = {\n  POINTER_UP: 'pointerUp',\n  POINTER_DOWN: 'pointerDown',\n  PAUSE: 'pause',\n  POINTER_MOVE: 'pointerMove'\n};\n\nexport const DEFAULT_SWIPE = {\n  POINTER_NAME: 'finger1',\n  DURATION_1: 0,\n  DURATION_2: 750,\n  BUTTON: 0,\n  ORIGIN: 'viewport'\n};\n\nexport const DEFAULT_ZOOM = {\n  POINTER_NAME1: 'finger1',\n  POINTER_NAME2: 'finger2',\n  POINTER_NAME3: 'finger2',\n  POINTER_NAME4: 'finger2',\n  DURATION_1: 0,\n  DURATION_2: 750,\n  BUTTON: 0,\n  ORIGIN: 'viewport'\n};\n\n\nexport const DEFAULT_TAP = {\n  POINTER_NAME: 'finger1',\n  DURATION_1: 0,\n  DURATION_2: 100,\n  BUTTON: 0\n};\n\nexport const DEFAULT_LONGPRESS = {\n  LONGPRESS_POINTER_NAME: 'finger1',\n  LONGPRESS_DURATION_1: 0,\n  LONGPRESS_DURATION_2: 1000,\n  LONGPRESS_BUTTON: 0\n};\n\nexport const DEFAULT_DRAG_AND_DROP = {\n  POINTER_NAME: 'finger1',\n  DURATION_1: 0,\n  DURATION_2: 750,\n  BUTTON: 0,\n  ORIGIN: 'viewport'\n};\n\n\n// 3 Types of Centroids:\n// CENTROID is the circle/square displayed on the screen\n// EXPAND is the +/- circle displayed on the screen\n// OVERLAP is the same as CENTROID but is only visible when clicked on +/- circle\nexport const RENDER_CENTROID_AS = {\n  CENTROID: 'centroid',\n  EXPAND: 'expand',\n  OVERLAP: 'overlap'\n};\n\nexport const SCREENSHOT_INTERACTION_MODE = {\n  SELECT: 'select',\n  SWIPE: 'swipe',\n  TAP: 'tap',\n  LONGPRESS: 'longpress',\n  DRAG_AND_DROP: 'drag_and_drop',\n  DOUBLE_TAP: 'double tap',\n  GESTURE: 'gesture',\n  ZOOMIN: 'zoomin',\n  SLIDE: 'slide',\n  SLIDE_SWIPE: 'slide_swipe',\n  SELECT_LONG: 'select_long',\n  SELECT_DOUBLE: 'select_double',\n  FILE_UPLOAD: 'file_upload',\n  SELECT_FILE: 'select_file',\n  EXPECTED_VALUE: 'expected_value',\n  TAKE_SCREENSHOT: 'take_screenshot',\n  SCRATCH: 'scratch',\n  HIDE_KEYBOARD: 'hide_keyboard',\n  GET_DEVICE_TIME: 'get_device_time',\n  GET_CLIPBOARD: 'get_clipboard',\n  ROTATE: 'rotate',\n  LOCK: 'lock',\n  UNLOCK: 'unlock',\n  SHAKE: 'shake',\n  OTP: 'otp',\n};\n\nexport const APP_MODE = {\n  NATIVE: 'native',\n  WEB_HYBRID: 'web_hybrid',\n};\n\nexport const COMMAND_ARG_TYPES = {\n  STRING: 'string',\n  NUMBER: 'number',\n  BOOLEAN: 'boolean',\n};\n\nconst { STRING, NUMBER, BOOLEAN } = COMMAND_ARG_TYPES;\n\n// Note: When adding or removing COMMAND_DEFINITIONS, update `en/translation.json`\nexport const COMMAND_DEFINITIONS = {\n  'Device': {\n    'Execute Script': {\n      'Execute': {methodName: 'executeScript', args: [['executeScriptCommand', STRING], ['jsonArgument', STRING]]}\n    },\n    'Android Activity': {\n      'Start Activity': {methodName: 'startActivity', args: [\n        ['appPackage', STRING], ['appActivity', STRING], ['appWaitPackage', STRING],\n        ['intentAction', STRING], ['intentCategory', STRING], ['intentFlags', STRING],\n        ['optionalIntentArguments', STRING], ['dontStopAppOnReset', STRING],\n      ], refresh: true},\n      'Current Activity': {methodName: 'getCurrentActivity'},\n      'Current Package': {methodName: 'getCurrentPackage'},\n    },\n    'App': {\n      'Install App': {methodName: 'installApp', args: [['appPathOrUrl', STRING]]},\n      'Is App Installed': {methodName: 'isAppInstalled', args: [['appId', STRING]]},\n      'Background App': {methodName: 'background', args: [['timeout', NUMBER]], refresh: true},\n      'Activate App': {methodName: 'activateApp', args: [['appId', STRING]], refresh: true},\n      'Terminate App': {methodName: 'terminateApp', args: [['appId', STRING]], refresh: true},\n      'Remove App': {methodName: 'removeApp', args: [['appId', STRING]]},\n      'Get App Strings': {methodName: 'getStrings', args: [['language', STRING], ['stringFile', STRING]], refresh: true},\n    },\n    'Clipboard': {\n      'Get Clipboard': {methodName: 'getClipboard'},\n      'Set Clipboard': {methodName: 'setClipboard', args: [\n        ['clipboardText', STRING], ['contentType', STRING], ['contentLabel', STRING]\n      ]},\n    },\n    'File': {\n      'Push File': {methodName: 'pushFile', args: [['pathToInstallTo', STRING], ['fileContentString', STRING]]},\n      'Pull File': {methodName: 'pullFile', args: [['pathToPullFrom', STRING]]},\n      'Pull Folder': {methodName: 'pullFolder', args: [['folderToPullFrom', STRING]]},\n    },\n    'Interaction': {\n      'Shake': {methodName: 'shake'},\n      'Lock': {methodName: 'lock', args: [['seconds', NUMBER]], refresh: true},\n      'Unlock': {methodName: 'unlock', refresh: true},\n      'Is Device Locked': {methodName: 'isLocked'},\n      'Rotate Device': {methodName: 'rotateDevice', args: [\n        ['x', NUMBER], ['y', NUMBER], ['radius', NUMBER], ['rotatation', NUMBER], ['touchCount', NUMBER], ['duration', NUMBER]\n      ], refresh: true},\n    },\n    'Keys': {\n      'Press Key': {methodName: 'pressKeyCode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\n      'Long Press Key': {methodName: 'longPressKeyCode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\n      'Hide Keyboard': {methodName: 'hideKeyboard', refresh: true},\n      'Is Keyboard Shown': {methodName: 'isKeyboardShown'},\n    },\n    'Network': {\n      'Toggle Airplane Mode': {methodName: 'toggleAirplaneMode'},\n      'Toggle Data': {methodName: 'toggleData'},\n      'Toggle WiFi': {methodName: 'toggleWiFi'},\n      'Toggle Location Services': {methodName: 'toggleLocationServices'},\n      'Send SMS': {methodName: 'sendSMS', args: [['phoneNumber', STRING], ['text', STRING]]},\n      'GSM Call': {methodName: 'gsmCall', args: [['phoneNumber', STRING], ['action', STRING]]},\n      'GSM Signal': {methodName: 'gsmSignal', args: [['signalStrengh', NUMBER]]},\n      'GSM Voice': {methodName: 'gsmVoice', args: [['state', STRING]]},\n    },\n    'Performance Data': {\n      'Get Data': {methodName: 'getPerformanceData', args: [['packageName', STRING], ['dataType', STRING], ['dataReadTimeout', NUMBER]]},\n      'Get Data Types': {methodName: 'getPerformanceDataTypes'},\n    },\n    'iOS Simulator': {\n      'Perform Touch Id': {methodName: 'touchId', args: [['shouldMatch', BOOLEAN]], refresh: true},\n      'Toggle Touch Id Enrollment': {methodName: 'toggleEnrollTouchId', args: [['shouldEnroll', BOOLEAN]]},\n    },\n    'System': {\n      'Open Notifications': {methodName: 'openNotifications', refresh: true},\n      'Get System Time': {methodName: 'getDeviceTime'},\n      'Fingerprint (Android)': {methodName: 'fingerPrint', args: [['fingerPrintId', NUMBER]], refresh: true}\n    },\n  },\n  'Session': {\n    'Session Capabilities': {\n      'Get Session Capabilities': {methodName: 'getSession'}\n    },\n    'Timeouts': {\n      'Set Timeouts': {methodName: 'setTimeouts', args: [\n        ['implicitTimeout', NUMBER], ['pageLoadTimeout', NUMBER], ['scriptTimeout', NUMBER]\n      ]},\n    },\n    'Orientation': {\n      'Get Orientation': {methodName: 'getOrientation'},\n      'Set Orientation': {methodName: 'setOrientation', args: [['orientation', STRING]], refresh: true},\n    },\n    'Geolocation': {\n      'Get Geolocation': {methodName: 'getGeoLocation'},\n      'Set Geolocation': {methodName: 'setGeoLocation', args: [['latitude', NUMBER], ['longitude', NUMBER], ['altitude', NUMBER]]},\n    },\n    'Logs': {\n      'Get Log Types': {methodName: 'getLogTypes'},\n      'Get Logs': {methodName: 'getLogs', args: [['logType', STRING]]},\n    },\n    'Settings': {\n      'Update Settings': {methodName: 'updateSettings', args: [['settingsJson', STRING]]},\n      'Get Device Settings': {methodName: 'getSettings'},\n    },\n  },\n  'Web': {\n    'Navigation': {\n      'Go to URL': {methodName: 'navigateTo', args: [['url', STRING]], refresh: true},\n      'Get URL': {methodName: 'getUrl'},\n      'Back': {methodName: 'back', refresh: true},\n      'Forward': {methodName: 'forward', refresh: true},\n      'Refresh': {methodName: 'refresh', refresh: true}\n    }\n  },\n  'Context': {\n    'Context': {\n      'Get Current Context': {methodName: 'getContext'},\n      'Get Context List': {methodName: 'getContexts'},\n      'Set Context': {methodName: 'switchContext', args: [['name', STRING]], refresh: true}\n    },\n    'Window (W3C)': {\n      'Get Window Handle': {methodName: 'getWindowHandle'},\n      'Close Window': {methodName: 'closeWindow', refresh: true},\n      'Switch To Window': {methodName: 'switchToWindow', args: [['handle', STRING]], refresh: true},\n      'Get Window Handles': {methodName: 'getWindowHandles'},\n      'New Window': {methodName: 'createWindow', args: [['type', STRING]], refresh: true}\n    }\n  }\n};\n\nexport const INTERACTION_MODE = {\n  SOURCE: 'source',\n  COMMANDS: 'commands',\n  GESTURES: 'gestures',\n  SESSION_INFO: 'sessionInfo',\n};\n","import { DEFAULT_TAP, DEFAULT_SWIPE, DEFAULT_ZOOM, SCREENSHOT_INTERACTION_MODE } from '../../components/Inspector/shared';\n\nexport default class Framework {\n\n  constructor (host, port, path, https, caps) {\n    this.host = host || 'localhost';\n    this.port = port || 4723;\n    this.path = path || '/wd/hub';\n    this.caps = caps || {};\n    this.https = !!https;\n    this.scheme = https ? 'https' : 'http';\n    this.actions = [];\n    this.localVarCount = 0;\n    this.localVarCache = {};\n    this.lastAssignedVar = null;\n  }\n\n  getTapCoordinatesFromPointerActions (pointerActions) {\n    const pointerMoveAction = pointerActions[DEFAULT_TAP.POINTER_NAME][0];\n    return {x: pointerMoveAction.x, y: pointerMoveAction.y};\n  }\n\n  getSwipeCoordinatesFromPointerActions (pointerActions) {\n    let pointerMoveActionStart;\n    let pointerMoveActionEnd;\n    if (SCREENSHOT_INTERACTION_MODE.SWIPE) {\n      pointerMoveActionStart  = pointerActions[DEFAULT_SWIPE.POINTER_NAME][0];\n      pointerMoveActionEnd  = pointerActions[DEFAULT_SWIPE.POINTER_NAME][2];\n    }\n    if (SCREENSHOT_INTERACTION_MODE.ZOOMIN) {\n      pointerMoveActionStart  = pointerActions[DEFAULT_ZOOM.POINTER_NAME1][0];\n      pointerMoveActionEnd  = pointerActions[DEFAULT_ZOOM.POINTER_NAME2][2];\n    }\n\n    return {\n      x1: pointerMoveActionStart.x,\n      y1: pointerMoveActionStart.y,\n      x2: pointerMoveActionEnd.x,\n      y2: pointerMoveActionEnd.y\n    };\n  }\n\n  get serverUrl () {\n    return `${this.scheme}://${this.host}:${this.port}${this.path === '/' ? '' : this.path}`;\n  }\n\n  get name () {\n    throw new Error('Must implement name getter');\n  }\n\n  get language () {\n    throw new Error('Must implement language getter');\n  }\n\n  addAction (action, params) {\n    this.actions.push({action, params});\n  }\n\n  wrapWithBoilerplate () {\n    throw new Error('Must implement wrapWithBoilerplate');\n  }\n\n  indent (str, spaces) {\n    let lines = str.split('\\n');\n    let spaceStr = '';\n    for (let i = 0; i < spaces; i++) {\n      spaceStr += ' ';\n    }\n    return lines\n      .filter((l) => !!l.trim())\n      .map((l) => `${spaceStr}${l}`)\n      .join('\\n');\n  }\n\n  getCodeString (includeBoilerplate = false) {\n    let str = '';\n    for (let {action, params} of this.actions) {\n      const genCodeFn = `codeFor_${action}`;\n      if (!this[genCodeFn]) {\n        throw new Error(`Need to implement '${genCodeFn}()': ${this[genCodeFn]}`);\n      }\n      let code = this[genCodeFn](...params);\n      if (code) {\n        str += `${code}\\n`;\n      }\n    }\n    if (includeBoilerplate) {\n      return this.wrapWithBoilerplate(str);\n    }\n    return str;\n  }\n\n  getNewLocalVar () {\n    this.localVarCount++;\n    return `el${this.localVarCount}`;\n  }\n\n  getVarForFind (strategy, locator) {\n    const key = `${strategy}-${locator}`;\n    let wasNew = false;\n    if (!this.localVarCache[key]) {\n      this.localVarCache[key] = this.getNewLocalVar();\n      wasNew = true;\n    }\n    this.lastAssignedVar = this.localVarCache[key];\n    return [this.localVarCache[key], wasNew];\n  }\n\n  getVarName (varName, varIndex) {\n    if (varIndex || varIndex === 0) {\n      return `${varName}[${varIndex}]`;\n    }\n    return varName;\n  }\n\n  codeFor_findAndAssign () {\n    throw new Error('Need to implement codeFor_findAndAssign');\n  }\n\n  codeFor_findElement (strategy, locator) {\n    let [localVar, wasNew] = this.getVarForFind(strategy, locator);\n    if (!wasNew) {\n      // if we've already found this element, don't print out\n      // finding it again\n      return '';\n    }\n\n    return this.codeFor_findAndAssign(strategy, locator, localVar);\n\n  }\n\n  codeFor_tap () {\n    throw new Error('Need to implement codeFor_tap');\n  }\n\n  codeFor_swipe () {\n    throw new Error('Need to implement codeFor_tap');\n  }\n}\n","import Framework from './framework';\n\nclass JsWdFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  wrapWithBoilerplate (code) {\n    let caps = JSON.stringify(this.caps);\n    return `// Requires the admc/wd client library\n// (npm install wd)\n// Then paste this into a .js file and run with Node 7.6+\n\nconst wd = require('wd');\nconst driver = wd.promiseChainRemote(\"${this.serverUrl}\");\nconst caps = ${caps};\n\nasync function main () {\n  await driver.init(caps);\n  await driver.setImplicitWaitTimeout(5000);\n${this.indent(code, 2)}\n  await driver.quit();\n}\n\nmain().catch(console.log);\n`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `/* TODO implement executeScript */`;\n  }\n\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'XPath',\n      'accessibility id': 'AccessibilityId',\n      'id': 'Id',\n      'name': 'Name',\n      'class name': 'ClassName',\n      '-android uiautomator': 'AndroidUIAutomator',\n      '-android datamatcher': 'AndroidDataMatcher',\n      '-android viewtag': 'unsupported',\n      '-ios predicate string': 'IosUIAutomation',\n      '-ios class chain': 'IosClassChain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `let ${localVar} = await driver.elementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = await driver.elementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.clear();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `await ${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `await driver.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `await (new wd.TouchAction(driver))\n  .tap({x: ${x}, y: ${y}})\n  .perform()\n    `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `await (new wd.TouchAction(driver))\n  .press({x: ${x1}, y: ${y1}})\n  .moveTo({x: ${x2}, y: ${y2}})\n  .release()\n  .perform()\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = await driver.getCurrentActivity()`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = await driver.getCurrentPackage()`;\n  }\n\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = await driver.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `await driver.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `await driver.background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `await driver.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `await driver.reset();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.removeApp('${app}');`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = await driver.getStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `let clipboardText = await driver.getClipboard();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `await driver.setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `await driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `await driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `await driver.pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let fileBase64 = await driver.pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let fileBase64 = await driver.pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `await driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `await driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `await driver.toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `await driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `await driver.sendSms('${phoneNumber}', '${text}');`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `await driver.gsmCall('${phoneNumber}', '${action}');`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `await driver.gsmSignal(${signalStrength});`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `await driver.gsmVoice('${state}');`;\n  }\n\n  codeFor_shake () {\n    return `await driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `await driver.lock(${seconds})`;\n  }\n\n  codeFor_unlock () {\n    return `await driver.unlock()`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = await driver.isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `driver.rotateDevice({x: ${x}, y: ${y}, duration: ${duration}, radius: ${radius}, rotation: ${rotation}, touchCount: ${touchCount}});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = await driver.getPerformanceData('${packageName}', '${dataType}', ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `let supportedPerformanceDataTypes = await driver.getPerformanceDataTypes();`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `await driver.touchId(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `await driver.toggleEnrollTouchId(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `await driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = await driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `await driver.fingerprint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `let caps = await driver.getSession();`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = await driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `await driver.setOrientation('${orientation}');`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = await driver.getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `await driver.setGeoLocation(${latitude}, ${longitude}, ${altitude});`;\n  }\n\n  codeFor_getLogTypes () {\n    return `let getLogTypes = await driver.getLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = await driver.log('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `await driver.updateSettings(${settingsJson});`;\n  }\n\n  codeFor_getSettings () {\n    return `let settings = await driver.settings();`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (url) {\n    return `driver.get('${url}');`;\n  }\n\n  codeFor_getUrl () {\n    return `let current_url = driver.url();`;\n  }\n\n  codeFor_forward () {\n    return `driver.forward();`;\n  }\n\n  codeFor_refresh () {\n    return `driver.refresh();`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.currentContext();`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.contexts();`;\n  }\n\n  codeFor_switchContext (name) {\n    return `driver.context('${name}');`;\n  }\n}\n\nJsWdFramework.readableName = 'JS - WD (Promise)';\n\nexport default JsWdFramework;\n","import Framework from './framework';\n\nclass JsWdIoFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  chainifyCode (code) {\n    return code\n      .replace(/let .+ = /g, '')\n      .replace(/(\\n|^)(driver|el[0-9]+)\\./g, '\\n.')\n      .replace(/;\\n/g, '\\n');\n  }\n\n  wrapWithBoilerplate (code) {\n    let host = JSON.stringify(this.host);\n    let caps = JSON.stringify(this.caps);\n    let proto = JSON.stringify(this.scheme);\n    let path = JSON.stringify(this.path);\n    return `// Requires the webdriverio client library\n// (npm install webdriverio)\n// Then paste this into a .js file and run with Node:\n// node <file>.js\n\nconst wdio = require('webdriverio');\nasync function main () {\n  const caps = ${caps}\n  const driver = await wdio.remote({\n    protocol: ${proto},\n    hostname: ${host},\n    port: ${this.port},\n    path: ${path},\n    capabilities: caps\n  });\n${this.indent(code, 2)}\n  await driver.deleteSession();\n}\n\nmain().catch(console.log);`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `/* TODO implement executeScript */`;\n  }\n\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    // wdio has its own way of indicating the strategy in the locator string\n    switch (strategy) {\n      case 'xpath': break; // xpath does not need to be updated\n      case 'accessibility id': locator = `~${locator}`; break;\n      case 'id': locator = `${locator}`; break;\n      case 'name': locator = `name=${locator}`; break;\n      case 'class name': locator = `${locator}`; break;\n      case '-android uiautomator': locator = `android=${locator}`; break;\n      case '-android datamatcher': locator = `android=${locator}`; break;\n      case '-android viewtag': locator = `android=unsupported`; break;\n      case '-ios predicate string': locator = `ios=${locator}`; break;\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\n      default: throw new Error(`Can't handle strategy ${strategy}`);\n    }\n    if (isArray) {\n      return `let ${localVar} = await driver.$$(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = await driver.$(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.clearValue();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `await ${this.getVarName(varName, varIndex)}.setValue(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `await driver.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `await driver.touchAction({actions: 'tap', x: ${x}, y: ${y}})`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `await driver.touchAction([\n  {action: 'press', x: ${x1}, y: ${y1}},\n  {action: 'moveTo', x: ${x2}, y: ${y2}},\n  'release'\n]);`;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = await driver.getCurrentActivity();`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = await driver.getCurrentPackage();`;\n  }\n\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = await driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `await driver.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `await driver.background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `await driver.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `await driver.reset();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.removeApp('${app}')`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = await driver.getStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard (varNameIgnore, varIndexIgnore, contentType) {\n    return `let clipboardText = await driver.getClipboard(${contentType ? `${contentType}, ` : ''});`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `await driver.setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `await driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `let isKeyboardShown = await driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `await driver.pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let data = await driver.pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let data = await driver.pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `await driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `await driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `await driver.toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `await driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `await driver.sendSms(\"${phoneNumber}\", \"${text}\");`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `await driver.gsmCall(\"${phoneNumber}\", \"${action}\");`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `await driver.gsmSignal(\"${signalStrength}\");`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `await driver.gsmVoice(\"${state}\");`;\n  }\n\n  codeFor_shake () {\n    return `await driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `await driver.lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `await driver.unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = await driver.isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `await driver.rotateDevice(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = driver.getPerformanceData(\"${packageName}\", \"${dataType}\", ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `let performanceDataTypes = await driver.getPerformanceDataTypes()`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `await driver.touchId(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `await driver.toggleEnrollTouchId(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `await driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = await driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `await driver.fingerprint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `let caps = await driver.getSession();`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_setCommandTimeout (/*varNameIgnore, varIndexIgnore, ms*/) {\n    return `// Not supported: setCommandTimeout`;\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = await driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `await driver.setOrientation(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = await driver.getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `await driver.setGeoLocation({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\n  }\n\n  codeFor_getLogTypes () {\n    return `let getLogTypes = await driver.getLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = await driver.getLogs('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `await driver.updateSettings(${settingsJson});`;\n  }\n\n  codeFor_getSettings () {\n    return `let settings = await driver.getSettings();`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `await driver.navigateTo('${url}');`;\n  }\n\n  codeFor_getUrl () {\n    return `let current_url = await driver.getUrl();`;\n  }\n\n  codeFor_forward () {\n    return `await driver.forward();`;\n  }\n\n  codeFor_refresh () {\n    return `await driver.refresh();`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `let context = await driver.getContext();`;\n  }\n\n  codeFor_getContexts () {\n    return `let contexts = await driver.getContexts();`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `await driver.switchContext('${name}');`;\n  }\n}\n\nJsWdIoFramework.readableName = 'JS - Webdriver.io';\n\nexport default JsWdIoFramework;\n","import Framework from './framework';\n\nclass JsOxygenFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  get type () {\n    if (this.caps && this.caps.platformName) {\n      const platformName = this.caps.platformName.toLowerCase();\n      if (platformName === 'windows') {\n        return 'win';\n      }\n      if (['android', 'androiddriver'].includes(platformName)) {\n        return 'mob';\n      }\n      if (['ios', 'iosdriver'].includes(platformName)) {\n        return 'mob';\n      }\n    }\n    return 'mob';\n  }\n\n  wrapWithBoilerplate (code) {\n    if (code && code.includes('mob.open')) {\n      this.caps.browserName = '__chrome_or_safari__';\n    } else {\n      this.caps.app = '__application_path_or_name__';\n    }\n    let caps = JSON.stringify(this.caps, null, 2);\n    let url = JSON.stringify(`${this.scheme}://${this.host}:${this.port}${this.path}`);\n    return `// Requires the Oxygen HQ client library\n// (npm install oxygen-cli -g)\n// Then paste this into a .js file and run with:\n// oxygen <file>.js\nconst capabilities = ${caps};\nconst appiumUrl = ${url};\n${this.type}.init(capabilities, appiumUrl);\n\n${code}\n\n`;\n  }\n\n  codeFor_executeScript (varNameIgnore, varIndexIgnore, args) {\n    return `${this.type}.execute(${args})`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    // wdio has its own way of indicating the strategy in the locator string\n    switch (strategy) {\n      case 'xpath': break; // xpath does not need to be updated\n      case 'accessibility id': locator = `~${locator}`; break;\n      case 'id': locator = `id=${locator}`; break;\n      case 'name': locator = `name=${locator}`; break;\n      case 'class name': locator = `css=${locator}`; break;\n      case '-android uiautomator': locator = `android=${locator}`; break;\n      case '-android datamatcher': locator = `android=${locator}`; break;\n      case '-ios predicate string': locator = `ios=${locator}`; break;\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\n      default: throw new Error(`Can't handle strategy ${strategy}`);\n    }\n    if (isArray) {\n      return `let ${localVar} = mob.findElements(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = mob.findElement(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.type}.click(${this.getVarName(varName, varIndex)});`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.type}.clear(${this.getVarName(varName, varIndex)});`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.type}.type(${this.getVarName(varName, varIndex)}, ${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `${this.type}.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `${this.type}.tap(${x}, ${y});`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `${this.type}.swipeScreen(${x1}, ${y1}, ${x2}, ${y2});`;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = ${this.type}.getCurrentActivity();`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = ${this.type}.getCurrentPackage();`;\n  }\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `${this.type}.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = ${this.type}.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `${this.type}.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `${this.type}.getDriver().background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `${this.type}.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `${this.type}.resetApp();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `${this.type}.removeApp('${app}')`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = ${this.type}.getDriver().getStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `let clipboardText = ${this.type}.getDriver().getClipboard();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `${this.type}.getDriver().setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode) {\n    return `${this.type}.pressKeyCode(${keyCode});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode) {\n    return `${this.type}.longPressKeyCode(${keyCode});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `${this.type}.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `let isKeyboardShown = ${this.type}.getDriver().isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `${this.type}.getDriver().pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let fileBase64 = ${this.type}.getDriver().pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let fileBase64 = ${this.type}.getDriver().pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `${this.type}.getDriver().toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `${this.type}.getDriver().toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `${this.type}.getDriver().toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `${this.type}.getDriver().toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `${this.type}.getDriver().sendSms('${phoneNumber}', '${text}');`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `${this.type}.getDriver().gsmCall('${phoneNumber}', '${action}');`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `${this.type}.getDriver().gsmSignal(${signalStrength});`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `${this.type}.getDriver().gsmVoice('${state}');`;\n  }\n\n  codeFor_shake () {\n    return `${this.type}.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `${this.type}.getDriver().lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `${this.type}.getDriver().unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = ${this.type}.getDriver().isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `${this.type}.getDriver().rotateDevice({x: ${x}, y: ${y}, duration: ${duration}, radius: ${radius}, rotation: ${rotation}, touchCount: ${touchCount}});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = ${this.type}.getDriver().getPerformanceData('${packageName}', '${dataType}', ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `let supportedPerformanceDataTypes = ${this.type}.getDriver().getPerformanceDataTypes();`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `${this.type}.getDriver().touchId(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `${this.type}.getDriver().toggleEnrollTouchId(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `${this.type}.getDriver().openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = ${this.type}.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `${this.type}.getDriver().fingerPrint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `let caps = ${this.type}.getDriver().capabilities;`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_setCommandTimeout () {\n    return `// Not supported: setCommandTimeout`;\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = ${this.type}.getDriver().getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `${this.type}.getDriver().setOrientation(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = ${this.type}.getDriver().getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `${this.type}.getDriver().setGeoLocation({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\n  }\n\n  codeFor_getLogTypes () {\n    return `let getLogTypes = ${this.type}.getDriver().getLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = ${this.type}.getDriver().getLogs('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `${this.type}.getDriver().updateSettings(${settingsJson});`;\n  }\n\n  codeFor_getSettings () {\n    return `let settings = ${this.type}.getDriver().getSettings();`;\n  }\n}\n\nJsOxygenFramework.readableName = 'JS - Oxygen HQ';\n\nexport default JsOxygenFramework;\n","import Framework from './framework';\nimport _ from 'lodash';\n\nclass JavaFramework extends Framework {\n\n  get language () {\n    return 'java';\n  }\n\n  wrapWithBoilerplate (code) {\n    let [pkg, cls] = (() => {\n      if (this.caps.platformName) {\n        switch (this.caps.platformName.toLowerCase()) {\n          case 'ios': return ['ios', 'IOSDriver'];\n          case 'android': return ['android', 'AndroidDriver'];\n          default: return ['unknownPlatform', 'UnknownDriver'];\n        }\n      } else {\n        return ['unknownPlatform', 'UnknownDriver'];\n      }\n    })();\n    let capStr = this.indent(Object.keys(this.caps).map((k) => `desiredCapabilities.setCapability(${JSON.stringify(k)}, ${JSON.stringify(this.caps[k])});`).join('\\n'), 4);\n    return `import io.appium.java_client.MobileElement;\nimport io.appium.java_client.${pkg}.${cls};\nimport junit.framework.TestCase;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport org.openqa.selenium.remote.DesiredCapabilities;\n\npublic class SampleTest {\n\n  private ${cls} driver;\n\n  @Before\n  public void setUp() throws MalformedURLException {\n    DesiredCapabilities desiredCapabilities = new DesiredCapabilities();\n${capStr}\n\n    URL remoteUrl = new URL(\"${this.serverUrl}\");\n\n    driver = new ${cls}(remoteUrl, desiredCapabilities);\n  }\n\n  @Test\n  public void sampleTest() {\n${this.indent(code, 4)}\n  }\n\n  @After\n  public void tearDown() {\n    driver.quit();\n  }\n}\n`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `/* TODO implement executeScript */`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'XPath',\n      'accessibility id': 'AccessibilityId',\n      'id': 'Id',\n      'class name': 'ClassName',\n      'name': 'Name',\n      '-android uiautomator': 'AndroidUIAutomator',\n      '-android datamatcher': 'AndroidDataMatcher',\n      '-android viewtag': 'AndroidViewTag',\n      '-ios predicate string': 'IosNsPredicate',\n      '-ios class chain': 'IosClassChain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `List<MobileElement> ${localVar} = (MobileElement) driver.findElementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    } else {\n      return `MobileElement ${localVar} = (MobileElement) driver.findElementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    }\n  }\n\n  getVarName (varName, varIndex) {\n    if (varIndex || varIndex === 0) {\n      return `${varName}.get(${varIndex})`;\n    }\n    return varName;\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `driver.navigate().back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `(new TouchAction(driver)).tap(${x}, ${y}).perform()`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `(new TouchAction(driver))\n  .press(PointOption.point(${x1}, ${y1}}))\n  .moveTo(PointOption.point(${x2}, ${y2}}))\n  .release()\n  .perform();\n  `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `String activityName = driver.currentActivity()`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `String packageName = driver.currentPackage()`;\n  }\n\n  codeFor_startActivity () {\n    return `driver.`;\n  }\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.installApp(\"${app}\");`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `boolean isAppInstalled = driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launchApp();`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.runAppInBackground(Duration.ofSeconds(${timeout}));`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.closeApp();`;\n  }\n\n  codeFor_reset () {\n    return `driver.reset();`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.removeApp(\"${app}\");`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `Map<String, String> appStrings = driver.getAppStringMap(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `String clipboardText = driver.getClipboardText();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.setClipboardText(\"${clipboardText}\");`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.pressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `boolean isKeyboardShown = driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.pushFile(\"${pathToInstallTo}\", ${fileContentString})`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `byte[] fileBase64 = driver.pullFile(\"${pathToPullFrom}\");`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `byte[] fileBase64 = driver.pullFolder(\"${folderToPullFrom}\");`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggleWifi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `driver.sendSMS(\"${phoneNumber}\", \"${text}\");`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.makeGsmCall(\"${phoneNumber}\", \"${action}\");`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.setGsmSignalStrength(\"${signalStrength}\");`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.setGsmVoice(\"${state}\");`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lockDevice(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlockDevice()`;\n  }\n\n  codeFor_isLocked () {\n    return `boolean isLocked = driver.isDeviceLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `driver.rotate(new DeviceRotation(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration}));`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `List<List<Object>> performanceData = driver.getPerformanceData(\"${packageName}\", \"${dataType}\", ${dataReadTimeout});`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `List<String> performanceTypes = driver.getPerformanceDataTypes();`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.performTouchID(${match});`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggleTouchIDEnrollment(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `String time = driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.fingerPrint(${fingerprintId});`;\n  }\n\n  codeFor_getSession () {\n    return `Map<String, Object> caps = driver.getSessionDetails();`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '/* TODO implement setTimeouts */';\n  }\n\n  codeFor_getOrientation () {\n    return `ScreenOrientation orientation = driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.rotate(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `Location location = driver.location();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.setLocation(new Location(${latitude}, ${longitude}, ${altitude}));`;\n  }\n\n  codeFor_getLogTypes () {\n    return `Set<String> getLogTypes = driver.manage().logs().getAvailableLogTypes();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `LogEntries logEntries = driver.manage().logs().get(\"${logType}\");`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    try {\n      let settings = '';\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\n        settings += `driver.setSetting(\"${settingName}\", \"${settingValue}\");\\n`;\n      }\n      return settings;\n    } catch (e) {\n      return `// Could not parse: ${settingsJson}`;\n    }\n  }\n\n  codeFor_getSettings () {\n    return `Map<String, Object> settings = driver.getSettings();`;\n  }\n\n  /*\n\n  codeFor_ REPLACE_ME (varNameIgnore, varIndexIgnore) {\n    return `REPLACE_ME`;\n  }\n\n  */\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `driver.get(\"${url}\");`;\n  }\n\n  codeFor_getUrl () {\n    return `String current_url = driver.getCurrentUrl();`;\n  }\n\n  codeFor_forward () {\n    return `driver.navigate().forward();`;\n  }\n\n  codeFor_refresh () {\n    return `driver.navigate().refresh();`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.getContext()`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.getContextHandles();`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `driver.context(\"${name}\");`;\n  }\n}\n\nJavaFramework.readableName = 'Java - JUnit';\n\nexport default JavaFramework;\n","import Framework from './framework';\n\nclass PythonFramework extends Framework {\n\n  get language () {\n    return 'python';\n  }\n\n  getPythonVal (jsonVal) {\n    if (typeof jsonVal === 'boolean') {\n      return jsonVal ? 'True' : 'False';\n    }\n    return JSON.stringify(jsonVal);\n  }\n\n  wrapWithBoilerplate (code) {\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${this.getPythonVal(this.caps[k])}`).join('\\n');\n    return `# This sample code uses the Appium python client v2\n# pip install Appium-Python-Client\n# Then you can paste this into a file and simply run with Python\n\nfrom appium import webdriver\nfrom appium.webdriver.common.appiumby import AppiumBy\n\n# For W3C actions\nfrom selenium.webdriver.common.action_chains import ActionChains\nfrom selenium.webdriver.common.actions import interaction\nfrom selenium.webdriver.common.actions.action_builder import ActionBuilder\nfrom selenium.webdriver.common.actions.pointer_input import PointerInput\n\ncaps = {}\n${capStr}\n\ndriver = webdriver.Remote(\"${this.serverUrl}\", caps)\n\n${code}\ndriver.quit()`;\n  }\n\n  codeFor_executeScript (varNameIgnore, varIndexIgnore, args) {\n    return `driver.execute_script('${args}')`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'AppiumBy.XPATH',\n      'accessibility id': 'AppiumBy.ACCESSIBILITY_ID',\n      'id': 'AppiumBy.ID',\n      'name': 'AppiumBy.NAME',\n      'class name': 'AppiumBy.CLASS_NAME',\n      '-android uiautomator': 'AppiumBy.ANDROID_UIAUTOMATOR',\n      '-android datamatcher': 'AppiumBy.ANDROID_DATA_MATCHER',\n      '-android viewtag': 'AppiumBy.ANDROID_VIEWTAG',\n      '-ios predicate string': 'AppiumBy.IOS_PREDICATE',\n      '-ios class chain': 'AppiumBy.IOS_CLASS_CHAIN',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `${localVar} = driver.find_elements(by=${suffixMap[strategy]}, value=${JSON.stringify(locator)})`;\n    } else {\n      return `${localVar} = driver.find_element(by=${suffixMap[strategy]}, value=${JSON.stringify(locator)})`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click()`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear()`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.send_keys(${JSON.stringify(text)})`;\n  }\n\n  codeFor_back () {\n    return `driver.back()`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `actions = ActionChains(driver)\nactions.w3c_actions = ActionBuilder(driver, mouse=PointerInput(interaction.POINTER_TOUCH, \"touch\"))\nactions.w3c_actions.pointer_action.move_to_location(${x}, ${y})\nactions.w3c_actions.pointer_action.pointer_down()\nactions.w3c_actions.pointer_action.pause(0.1)\nactions.w3c_actions.pointer_action.release()\nactions.perform()\n    `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `actions = ActionChains(driver)\nactions.w3c_actions = ActionBuilder(driver, mouse=PointerInput(interaction.POINTER_TOUCH, \"touch\"))\nactions.w3c_actions.pointer_action.move_to_location(${x1}, ${y1})\nactions.w3c_actions.pointer_action.pointer_down()\nactions.w3c_actions.pointer_action.move_to_location(${x2}, ${y2})\nactions.w3c_actions.pointer_action.release()\nactions.perform()\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `activity_name = driver.current_activity`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `package_name = driver.current_package`;\n  }\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.install_app('${app}');`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `is_app_installed = driver.is_app_installed('${app}');`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launch_app()`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.background_app(${timeout})`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.close_app()`;\n  }\n\n  codeFor_reset () {\n    return `driver.reset()`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.remove_app('${app}');`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `appStrings = driver.app_strings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''})`;\n  }\n\n  codeFor_getClipboard () {\n    return `clipboard_text = driver.get_clipboard_text()`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.set_clipboard_text('${clipboardText}')`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.press_keycode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.long_press_keycode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `driver.hide_keyboard()`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `driver.is_keyboard_shown()`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.push_file('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `file_base64 = self.driver.pull_file('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `file_base64 = self.driver.pull_folder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `# Not supported: toggleAirplaneMode`;\n  }\n\n  codeFor_toggleData () {\n    return `# Not supported: toggleData`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggle_wifi()`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggle_location_services();`;\n  }\n\n  codeFor_sendSMS () {\n    return `# Not supported: sendSMS`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.make_gsm_call(${phoneNumber}, ${action})`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.set_gsm_signal(${signalStrength})`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.set_gsm_voice(${state})`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `driver.is_locked()`;\n  }\n\n  codeFor_rotateDevice () {\n    return `# Not supported: rotate device`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `driver.get_performance_data('${packageName}', '${dataType}', ${dataReadTimeout})`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `driver.get_performance_data_types()`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.touch_id(${match})`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggle_touch_id_enrollment(${enroll})`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.open_notifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `time = self.driver.device_time()`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.finger_print(${fingerprintId})`;\n  }\n\n  codeFor_getSession () {\n    return `desired_caps = self.driver.desired_capabilities()`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '# TODO implement setTimeouts';\n  }\n\n  codeFor_getOrientation () {\n    return `orientation = self.driver.orientation()`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.orientation = \"${orientation}\"`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `location = self.driver.location()`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.set_location(${latitude}, ${longitude}, ${altitude})`;\n  }\n\n  codeFor_getLogTypes () {\n    return `log_types = driver.log_types();`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `logs = driver.get_log('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `driver.update_settings(${settingsJson}))`;\n  }\n\n  codeFor_getSettings () {\n    return `settings = driver.get_settings`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `driver.get('${url}')`;\n  }\n\n  codeFor_getUrl () {\n    return `current_url = driver.current_url`;\n  }\n\n  codeFor_forward () {\n    return `driver.forward()`;\n  }\n\n  codeFor_refresh () {\n    return `driver.refresh()`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.current_context`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.contexts()`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `driver.switch_to.context('${name}')`;\n  }\n}\n\nPythonFramework.readableName = 'Python';\n\nexport default PythonFramework;\n","import Framework from './framework';\nimport _ from 'lodash';\n\nclass RubyFramework extends Framework {\n\n  get language () {\n    return 'ruby';\n  }\n\n  wrapWithBoilerplate (code) {\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${JSON.stringify(this.caps[k])}`).join('\\n');\n    return `# This sample code uses the Appium ruby lib core client v5\n# gem install appium_lib_core\n# Then you can paste this into a file and simply run with Ruby\n\nrequire 'appium_lib_core'\n\ncaps = {}\n${capStr}\nopts = {\n    server_url: \"${this.serverUrl}\"\n}\ndriver = Appium::Core.for({caps: caps, appium_lib: opts}).start_driver\n\n${code}\ndriver.quit`;\n  }\n\n  codeFor_executeScript (varNameIgnore, varIndexIgnore, args) {\n    return `driver.execute_script '${args}'`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      'xpath': ':xpath',\n      'accessibility id': ':accessibility_id',\n      'id': ':id',\n      'name': ':name',\n      'class name': ':class_name',\n      '-android uiautomator': ':uiautomation',\n      '-android datamatcher': ':datamatcher',\n      '-android viewtag': ':viewtag',\n      '-ios predicate string': ':predicate',\n      '-ios class chain': ':class_chain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `${localVar} = driver.find_elements ${suffixMap[strategy]}, ${JSON.stringify(locator)}`;\n    } else {\n      return `${localVar} = driver.find_element ${suffixMap[strategy]}, ${JSON.stringify(locator)}`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.send_keys ${JSON.stringify(text)}`;\n  }\n\n  codeFor_back () {\n    return `driver.back`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `driver\n  .action\n  .move_to_location(${x}, ${y})\n  .pointer_down(:left)\n  .release\n  .perform\n  `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `driver\n  .action\n  .move_to_location(${x1}, ${y1})\n  .pointer_down(:left)\n  .move_to_location(${x2}, ${y2})\n  .release\n  .perform\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `current_activity = driver.current_activity`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `current_package = driver.current_package`;\n  }\n\n\n  codeFor_installApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.app_installed? '${app}'`;\n  }\n\n  codeFor_isAppInstalled (varNameIgnore, varIndexIgnore, app) {\n    return `is_app_installed = driver.app_installed? '${app}'`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launch_app`;\n  }\n\n  codeFor_background (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.background_app ${timeout}`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.close_app`;\n  }\n\n  codeFor_reset () {\n    return `driver.reset`;\n  }\n\n  codeFor_removeApp (varNameIgnore, varIndexIgnore, app) {\n    return `driver.remove_app '${app}'`;\n  }\n\n  codeFor_getStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `driver.app_strings ${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''}`;\n  }\n\n  codeFor_getClipboard () {\n    return `clipboard_text = driver.get_clipboard`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.set_clipboard content: '${clipboardText}'`;\n  }\n\n  codeFor_pressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.press_keycode ${keyCode}, ${metaState}, ${flags}`;\n  }\n\n  codeFor_longPressKeyCode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.long_press_keycode ${keyCode}, ${metaState}, ${flags}`;\n  }\n\n  codeFor_hideKeyboard () {\n    return `driver.hide_keyboard`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `is_keyboard_shown = driver.is_keyboard_shown`;\n  }\n\n  codeFor_pushFile (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.push_file '${pathToInstallTo}', '${fileContentString}'`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `driver.pull_file '${pathToPullFrom}'`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `driver.pull_folder '${folderToPullFrom}'`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `driver.toggle_flight_mode`;\n  }\n\n  codeFor_toggleData () {\n    return `driver.toggle_data`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggle_wifi`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggle_location_services`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `driver.send_sms phone_number: '${phoneNumber}', message: '${text}'`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.gsm_call phone_number: '${phoneNumber}', action: :${action}`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.gsm_signal :${signalStrength}`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.gsm_voice :${state}`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lock ${seconds}`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlock`;\n  }\n\n  codeFor_isLocked () {\n    return `is_device_locked = driver.device_locked?`;\n  }\n\n  codeFor_rotateDevice () {\n    return `# Not supported: rotateDevice`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `performance_data = driver.get_performance_data package_name: '${packageName}', data_type: '${dataType}', data_read_timeout: ${dataReadTimeout}`;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return `performance_data = driver.get_performance_data_types`;\n  }\n\n  codeFor_touchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.touch_id ${match}`;\n  }\n\n  codeFor_toggleEnrollTouchId (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggle_touch_id_enrollment ${enroll}`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.open_notifications`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `device_time = driver.device_time`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.finger_print ${fingerprintId}`;\n  }\n\n  codeFor_getSession () {\n    return `session_capabilities = driver.session_capabilities`;\n  }\n\n  codeFor_setTimeouts (/*varNameIgnore, varIndexIgnore, timeoutsJson*/) {\n    return '# TODO implement setTimeouts';\n  }\n\n  codeFor_getOrientation () {\n    return `orientation = driver.orientation`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.rotation = :${_.lowerCase(orientation)}`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `geo_location = driver.location`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.set_location ${latitude}, ${longitude}, ${altitude}`;\n  }\n\n  codeFor_getLogTypes () {\n    return `log_types = driver.logs.available_types`;\n  }\n\n  codeFor_getLogs (varNameIgnore, varIndexIgnore, logType) {\n    return `driver.logs.get '${logType}'`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    try {\n      let settings = '';\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\n        settings += `driver.settings.update ${settingName}: '${settingValue}'\\n`;\n      }\n      return settings;\n    } catch (e) {\n      return `// Could not parse: ${settingsJson}`;\n    }\n  }\n\n  codeFor_getSettings () {\n    return `settings = driver.settings.get`;\n  }\n\n  // Web\n\n  codeFor_navigateTo (varNameIgnore, varIndexIgnore, url) {\n    return `driver.get '${url}'`;\n  }\n\n  codeFor_getUrl () {\n    return `current_url = driver.current_url`;\n  }\n\n  codeFor_forward () {\n    return `driver.navigate().forward`;\n  }\n\n  codeFor_refresh () {\n    return `driver.navigate().refresh`;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return `driver.current_context`;\n  }\n\n  codeFor_getContexts () {\n    return `driver.available_contexts`;\n  }\n\n  codeFor_switchContext (varNameIgnore, varIndexIgnore, name) {\n    return `driver.context = '${name}'`;\n  }\n}\n\nRubyFramework.readableName = 'Ruby';\n\nexport default RubyFramework;\n","/* eslint no-useless-escape: 0 */\n\nimport Framework from './framework';\n\nclass RobotFramework extends Framework {\n\n  get language () {\n    //TODO: Make https://highlightjs.org/ use robot syntax\n    return 'python';\n  }\n\n  get getCapsVariables () {\n    return Object.keys(this.caps).map((k) => `\\$\\{${k}\\}    ${this.getPythonVal(this.caps[k])}`).join('\\n');\n  }\n\n  getPythonVal (jsonVal) {\n    if (typeof jsonVal === 'boolean') {\n      return jsonVal ? 'true' : 'false';\n    }\n    return jsonVal;\n  }\n\n  wrapWithBoilerplate (code) {\n    return `# This sample code uses the Appium robot client\n# pip install robotframework-appiumlibrary\n# Then you can paste this into a file and simply run with robot\n#\n#  more keywords on: http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html\n#\n# if your tests fails saying 'did not match any elements' consider use 'wait activity' or \n# 'wait until page contains element' before a click command \n\n*** Settings ***\nLibrary           AppiumLibrary\nTest Teardown     Quit Application\nSuite Teardown    Close Application\n\n*** Variables ***\n$\\{REMOTE_URL\\}   ${this.serverUrl}\n${this.getCapsVariables}\n\n*** Test Cases ***\nTest case name\n${this.indent(this.getApplicationInitialization(), 4)}\n${this.indent(code, 4)}\n`;\n  }\n\n  codeFor_findAndAssign (strategy, locator/*, localVar, isArray*/) {\n    let suffixMap = {\n      xpath: 'xpath',\n      'accessibility id': 'accessibility_id',\n      'id': 'id',\n      'name': 'name', // TODO: How does Python use name selector\n      'class name': 'class_name',\n      '-android uiautomator': 'unsupported',\n      '-android datamatcher': 'unsupported',\n      '-android viewtag': 'unsupported',\n      '-ios predicate string': 'ios_predicate',\n      '-ios class chain': 'ios_uiautomation', // TODO: Could not find iOS UIAutomation\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    //TODO: in the robot case, we need the ID on the codeFor_ for execution\n    this.lastID = `${strategy}=${locator}`;\n\n    if (this.lastID.includes('accessibility id')) {\n      this.lastID = this.lastID.replace('accessibility id', 'accessibility_id');\n    }\n\n    return `# ${this.lastID}`;\n  }\n\n  getApplicationInitialization () {\n    let varString = Object.keys(this.caps).map((k) => `${k}=\\$\\{${k}\\}`).join('  ');\n    return `    Open Application    \\$\\{REMOTE_URL\\}   ${varString}`;\n  }\n\n  codeFor_executeScript (/*varNameIgnore, varIndexIgnore, args*/) {\n    return `    Execute Script    TODO implement executeScript`;\n  }\n\n\n  codeFor_click (/*varName, varIndex*/) {\n    return `    Click Element    ${this.lastID}`;\n  }\n\n  codeFor_clear (/*varName, varIndex*/) {\n    return `    Clear Text    ${this.lastID}`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `    Input Text    ${this.lastID}    ${text}`;\n  }\n\n  codeFor_back () {\n    return `    Go Back`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x, y} = this.getTapCoordinatesFromPointerActions(pointerActions);\n\n    return `    Tap With Positions    100    \\$\\{${x}, ${y}\\}`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, pointerActions) {\n    const {x1, y1, x2, y2} = this.getSwipeCoordinatesFromPointerActions(pointerActions);\n\n    return `    Swipe    ${x1}    ${y1}    ${x2}    ${y2}`;\n  }\n\n  // TODO: Add these robot framework commands\n  codeFor_getCurrentActivity () {\n    return '';\n  }\n\n  codeFor_getCurrentPackage () {\n    return '';\n  }\n\n  codeFor_installApp () {\n    return ``;\n  }\n\n  codeFor_isAppInstalled () {\n    return ``;\n  }\n\n  codeFor_launchApp () {\n    return ``;\n  }\n\n  codeFor_background () {\n    return ``;\n  }\n\n  codeFor_closeApp () {\n    return ``;\n  }\n\n  codeFor_reset () {\n    return ``;\n  }\n\n  codeFor_removeApp () {\n    return ``;\n  }\n\n  codeFor_getStrings () {\n    return ``;\n  }\n\n  codeFor_getClipboard () {\n    return ``;\n  }\n\n  codeFor_setClipboard () {\n    return ``;\n  }\n\n  codeFor_pressKeyCode () {\n    return ``;\n  }\n\n  codeFor_longPressKeyCode () {\n    return ``;\n  }\n\n  codeFor_hideKeyboard () {\n    return ``;\n  }\n\n  codeFor_isKeyboardShown () {\n    return ``;\n  }\n\n  codeFor_pushFile () {\n    return ``;\n  }\n\n  codeFor_pullFile () {\n    return ``;\n  }\n\n  codeFor_pullFolder () {\n    return ``;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return ``;\n  }\n\n  codeFor_toggleData () {\n    return ``;\n  }\n\n  codeFor_toggleWiFi () {\n    return ``;\n  }\n\n  codeFor_toggleLocationServices () {\n    return ``;\n  }\n\n  codeFor_sendSMS () {\n    return ``;\n  }\n\n  codeFor_gsmCall () {\n    return ``;\n  }\n\n  codeFor_gsmSignal () {\n    return ``;\n  }\n\n  codeFor_gsmVoice () {\n    return ``;\n  }\n\n  codeFor_shake () {\n    return ``;\n  }\n\n  codeFor_lock () {\n    return ``;\n  }\n\n  codeFor_unlock () {\n    return ``;\n  }\n\n  codeFor_isLocked () {\n    return ``;\n  }\n\n  codeFor_rotateDevice () {\n    return ``;\n  }\n\n  codeFor_getPerformanceData () {\n    return ``;\n  }\n\n  codeFor_getPerformanceDataTypes () {\n    return ``;\n  }\n\n  codeFor_touchId () {\n    return ``;\n  }\n\n  codeFor_toggleEnrollTouchId () {\n    return ``;\n  }\n\n  codeFor_openNotifications () {\n    return ``;\n  }\n\n  codeFor_getDeviceTime () {\n    return ``;\n  }\n\n  codeFor_fingerprint () {\n    return ``;\n  }\n\n  codeFor_getSession () {\n    return ``;\n  }\n\n  codeFor_setTimeouts () {\n    return ``;\n  }\n\n  codeFor_getOrientation () {\n    return ``;\n  }\n\n  codeFor_setOrientation () {\n    return ``;\n  }\n\n  codeFor_getGeoLocation () {\n    return ``;\n  }\n\n  codeFor_setGeoLocation () {\n    return ``;\n  }\n\n  codeFor_getLogTypes () {\n    return ``;\n  }\n\n  codeFor_getLogs () {\n    return ``;\n  }\n\n  codeFor_updateSettings () {\n    return ``;\n  }\n\n  codeFor_getSettings () {\n    return ``;\n  }\n\n  // Web\n\n  codeFor_navigateTo () {\n    return ``;\n  }\n\n  codeFor_getUrl () {\n    return ``;\n  }\n\n  codeFor_forward () {\n    return ``;\n  }\n\n  codeFor_refresh () {\n    return ``;\n  }\n\n  // Context\n\n  codeFor_getContext () {\n    return ``;\n  }\n\n  codeFor_getContexts () {\n    return ``;\n  }\n\n  codeFor_switchContext () {\n    return ``;\n  }\n}\n\nRobotFramework.readableName = 'Robot Framework';\n\nexport default RobotFramework;\n","import JsWdFramework from './js-wd';\nimport JsWdIoFramework from './js-wdio';\nimport JsOxygenFramework from './js-oxygen';\nimport JavaFramework from './java';\nimport PythonFramework from './python';\nimport RubyFramework from './ruby';\nimport RobotFramework from './robot';\n\nconst frameworks = {\n  jsWd: JsWdFramework,\n  jsWdIo: JsWdIoFramework,\n  jsOxygen: JsOxygenFramework,\n  java: JavaFramework,\n  python: PythonFramework,\n  ruby: RubyFramework,\n  robot: RobotFramework,\n};\n\nexport default frameworks;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport { getI18NextOptions } from './app.config';\nimport { i18NextBackend, i18NextBackendOptions } from '../renderer/polyfills';\n\nconst i18nextOptions = getI18NextOptions(i18NextBackendOptions);\n\nif (!i18n.isInitialized) {\n  i18n\n    .use(initReactI18next)\n    .use(i18NextBackend)\n    .init(i18nextOptions);\n}\n\nexport default i18n;\n","import {load} from 'cheerio';\nimport {parseDocument} from 'htmlparser2';\n\n/**\n * JS code that is executed in the webview to determine the status+address bar height\n *\n * NOTE:\n * object destructuring the arguments resulted in this error with iOS (not with Android)\n *\n * `Duplicate parameter 'e' not allowed in function with destructuring parameters.`\n *\n * That's why the object destructuring is done in the method itself\n */\nexport function getWebviewStatusAddressBarHeight (obj) {\n  // Calculate the status + address bar height\n  // Address bar height for iOS 11+ is 50, for lower it is 44,\n  // but we take 50 as a default here\n  // For Chrome it is 56 for Android 6 to 10\n  const {platformName, statBarHeight} = obj;\n  const isAndroid = platformName.toLowerCase() === 'android';\n  // iOS uses CSS sizes for elements and screenshots, Android sizes times DRP\n  const dpr = isAndroid ? window.devicePixelRatio : 1;\n  const screenHeight = window.screen.height;\n  const viewportHeight = window.innerHeight;\n  // Need to determine this later for Chrome\n  const osAddressBarDefaultHeight = isAndroid ? 56 : 50;\n  const addressToolBarHeight = screenHeight - viewportHeight - statBarHeight;\n  // When a manual scroll has been executed for iOS and Android\n  // the address bar becomes smaller\n  const addressBarHeight = (addressToolBarHeight >= 0) && (addressToolBarHeight - osAddressBarDefaultHeight) < 0\n    ? addressToolBarHeight : osAddressBarDefaultHeight;\n\n  return statBarHeight + (addressBarHeight * dpr);\n}\n\n/**\n * JS code that is executed in the webview to set the needed attributes on the DOM so the source can be used for the\n * native inspector window.\n *\n * NOTE:\n * object destructuring the arguments resulted in this error with iOS (not with Android)\n *\n * `Duplicate parameter 'e' not allowed in function with destructuring parameters.`\n *\n * That's why the object destructuring is done in the method itself\n */\nexport function setHtmlElementAttributes (obj) {\n  const {platformName, webviewStatusAddressBarHeight} = obj;\n  const htmlElements = document.body.getElementsByTagName('*');\n  const isAndroid = platformName.toLowerCase() === 'android';\n  // iOS uses CSS sizes for elements and screenshots, Android sizes times DRP\n  const dpr = isAndroid ? window.devicePixelRatio : 1;\n\n  Array.from(htmlElements).forEach((el) => {\n    const rect = el.getBoundingClientRect();\n\n    el.setAttribute('data-appium-inspector-width', Math.round(rect.width * dpr));\n    el.setAttribute('data-appium-inspector-height', Math.round(rect.height * dpr));\n    el.setAttribute('data-appium-inspector-x', Math.round(rect.left * dpr));\n    el.setAttribute('data-appium-inspector-y', Math.round(webviewStatusAddressBarHeight + (rect.top * dpr)));\n  });\n}\n\n/**\n * Parse the source if it's HTML:\n * - head and scripts need to be removed to clean the HTML tree\n * - all custom attributes need to be transformed to normal width/height/x/y\n */\nexport function parseSource (source) {\n  // TODO this check is a bit brittle, figure out a better way to check whether we have a web\n  // source vs something else. Just checking for <html in the source doesn't work because fake\n  // driver app sources can include embedded <html elements even though the overall source is not\n  // html. So for now just look for fake-drivery things like <app> or <mock...> and ensure we don't\n  // parse that as html\n  if (!source.includes('<html') || source.includes('<app ') || source.includes('<mock')) {\n    return source;\n  }\n\n  const dom = parseDocument(source);\n  const $ = load(dom);\n\n  // Remove the head and the scripts\n  const head = $('head');\n  head.remove();\n  const scripts = $('script');\n  scripts.remove();\n\n  // Clean the source\n  $('*')\n    // remove all existing width height or x/y attributes\n    .removeAttr('width')\n    .removeAttr('height')\n    .removeAttr('x')\n    .removeAttr('y')\n    // remove all `data-appium-inspector-` prefixes so only the width|height|x|y are there\n    .each(function () {\n      const $el = $(this);\n\n      ['width', 'height', 'x', 'y'].forEach((rectAttr) => {\n        if ($el.attr(`data-appium-inspector-${rectAttr}`)) {\n          $el.attr(rectAttr, $el.attr(`data-appium-inspector-${rectAttr}`));\n\n          /* remove the old attribute */\n          $el.removeAttr(`data-appium-inspector-${rectAttr}`);\n        }\n      });\n    });\n\n  return $.xml();\n}\n","import _ from 'lodash';\nimport Bluebird from 'bluebird';\nimport {getWebviewStatusAddressBarHeight, parseSource, setHtmlElementAttributes} from './webview-helpers';\nimport {SCREENSHOT_INTERACTION_MODE, APP_MODE} from '../components/Inspector/shared';\n\nconst {TAP, SWIPE, GESTURE} = SCREENSHOT_INTERACTION_MODE;\n\nexport const NATIVE_APP = 'NATIVE_APP';\nlet _instance = null;\n\nexport default class AppiumClient {\n  constructor (driver) {\n    this.driver = driver;\n    this.elementCache = {};\n    this.elVarCount = 0;\n    this.elArrayVarCount = 0;\n  }\n\n  async run (params) {\n    const {\n      methodName, // Optional. Name of method being provided\n      strategy, // Optional. Element locator strategy\n      selector, // Optional. Element fetch selector\n      fetchArray = false, // Optional. Are we fetching an array of elements or just one?\n      elementId, // Optional. Element being operated on\n      args = [], // Optional. Arguments passed to method\n      skipRefresh = false, // Optional. Do we want the updated source and screenshot?\n      skipScreenshot = false, // Optional. Do we want to skip getting screenshot alone?\n      appMode = APP_MODE.NATIVE, // Optional. Whether we're in a native or hybrid mode\n    } = params;\n\n    if (methodName === 'quit') {\n      try {\n        await this.driver.quit();\n      } catch (ign) {\n      }\n\n      _instance = null;\n\n      // when we've quit the session, there's no source/screenshot to send\n      // back\n      return {\n        source: null,\n        screenshot: null,\n        windowSize: null,\n        result: null\n      };\n    }\n\n    let res = {};\n    if (methodName) {\n      if (elementId) {\n        console.log(`Handling client method request with method '${methodName}', args ${JSON.stringify(args)} and elementId ${elementId}`); // eslint-disable-line no-console\n        res = await this.executeMethod({elementId, methodName, args, skipRefresh, skipScreenshot, appMode});\n      } else {\n        console.log(`Handling client method request with method '${methodName}' and args ${JSON.stringify(args)}`); // eslint-disable-line no-console\n        res = await this.executeMethod({methodName, args, skipRefresh, skipScreenshot, appMode});\n      }\n    } else if (strategy && selector) {\n      if (fetchArray) {\n        console.log(`Fetching elements with selector '${selector}' and strategy ${strategy}`); // eslint-disable-line no-console\n        res = await this.fetchElements({strategy, selector});\n      } else {\n        console.log(`Fetching an element with selector '${selector}' and strategy ${strategy}`); // eslint-disable-line no-console\n        res = await this.fetchElement({strategy, selector});\n      }\n    }\n\n    return res;\n  }\n\n  async executeMethod ({elementId, methodName, args, skipRefresh, skipScreenshot, appMode}) {\n    let cachedEl;\n    let res = {};\n    if (!_.isArray(args) && !_.isUndefined(args)) {\n      args = [args];\n    }\n\n    if (elementId) {\n      // Give the cached element a variable name (el1, el2, el3,...) the first time it's used\n      cachedEl = this.elementCache[elementId];\n\n      if (!cachedEl.variableName) {\n        // now that we are actually going to use this element, let's assign it a variable name\n        // if it doesn't already have one\n        this.elVarCount += 1;\n        cachedEl.variableName = `el${this.elVarCount}`;\n      }\n\n      // and then execute whatever method we requested on the actual element\n      res = await cachedEl.el[methodName].apply(cachedEl.el, args);\n    } else {\n      // Specially handle the tap and swipe method\n      if ([TAP, SWIPE, GESTURE].includes(methodName)) {\n        const actions = Object.keys(args[0]).map((key) => (\n          {\n            type: 'pointer',\n            id: key,\n            parameters: {pointerType: 'touch'},\n            actions: args[0][key]\n          }));\n        res = await this.driver.performActions(actions);\n      } else if (methodName !== 'getPageSource' && methodName !== 'takeScreenshot') {\n        res = await this.driver[methodName].apply(this.driver, args);\n      }\n    }\n\n\n    let contextUpdate = {}, sourceUpdate = {}, screenshotUpdate = {}, windowSizeUpdate = {};\n    if (!skipRefresh) {\n      // Give the source/screenshot time to change before taking the screenshot\n      await Bluebird.delay(500);\n      if (!skipScreenshot) {\n        screenshotUpdate = await this.getScreenshotUpdate();\n      }\n      windowSizeUpdate = await this.getWindowUpdate();\n      // only do context updates if user has selected web/hybrid mode (takes forever)\n      if (appMode === APP_MODE.WEB_HYBRID) {\n        contextUpdate = await this.getContextUpdate();\n      }\n      sourceUpdate = await this.getSourceUpdate();\n    }\n    return {\n      ...cachedEl,\n      ...contextUpdate,\n      ...sourceUpdate,\n      ...screenshotUpdate,\n      ...windowSizeUpdate,\n      commandRes: res,\n    };\n  }\n\n  async fetchElements ({strategy, selector}) {\n    const start = Date.now();\n    const els = await this.driver.findElements(strategy, selector);\n    const executionTime = Date.now() - start;\n\n    this.elArrayVarCount += 1;\n    const variableName = `els${this.elArrayVarCount}`;\n    const variableType = 'array';\n\n    const elements = {};\n    // Cache the elements that we find\n    const elementList = els.map((el, index) => {\n      const res = {\n        el,\n        variableName,\n        variableIndex: index,\n        variableType: 'string',\n        id: el.elementId,\n        strategy,\n        selector,\n      };\n      elements[el.elementId] = res;\n      return res;\n    });\n\n    this.elementCache = {...this.elementCache, ...elements};\n\n    return {\n      variableName,\n      variableType,\n      strategy,\n      selector,\n      elements: elementList,\n      executionTime,\n    };\n  }\n\n  async fetchElement ({strategy, selector}) {\n    const start = Date.now();\n    let element = null;\n    try {\n      element = await this.driver.findElement(strategy, selector);\n    } catch (err) {\n      return {};\n    }\n\n    const executionTime = Date.now() - start;\n\n    const id = element.elementId;\n\n    // Cache this ID along with its variable name, variable type and strategy/selector\n    const elementData = {\n      el: element,\n      variableType: 'string',\n      strategy,\n      selector,\n      id,\n    };\n\n    this.elementCache[id] = elementData;\n\n    return {\n      ...elementData,\n      executionTime,\n    };\n  }\n\n  async getWindowUpdate () {\n    let windowSize, windowSizeError;\n    const {client: {capabilities: {deviceScreenSize, platformName, automationName}}} = this.driver;\n    try {\n      // The call doesn't need to be made for Android for two reasons\n      // - when appMode is hybrid Chrome driver doesn't know this command\n      // - the data is already on the driver\n      if (_.toLower(platformName) === 'android' && _.toLower(automationName) === 'uiautomator2') {\n        const [width, height] = deviceScreenSize.split('x');\n        windowSize = {width, height, x: 0, y: 0};\n      } else {\n        windowSize = await this.driver.getWindowRect();\n      }\n    } catch (e) {\n      windowSizeError = e;\n    }\n\n    return {windowSize, windowSizeError};\n  }\n\n  async getContextUpdate () {\n    let contexts,\n        contextsError,\n        currentContext,\n        currentContextError,\n        pixelRatio,\n        platformName,\n        statBarHeight,\n        viewportRect,\n        webViewPosition;\n    if (!await this.hasContextsCommand()) {\n      return {currentContext: null, contexts: []};\n    }\n\n    try {\n      currentContext = await this.driver.getContext();\n    } catch (e) {\n      currentContextError = e;\n    }\n\n    // Note: These methods need to be executed in the native context because ChromeDriver behaves differently\n    if (currentContext !== NATIVE_APP) {\n      await this.driver.switchContext(NATIVE_APP);\n    }\n\n    ({platformName, pixelRatio, statBarHeight, viewportRect} = await this.driver.getSession());\n    const isAndroid = _.toLower(platformName) === 'android';\n\n    try {\n      contexts = await this.driver.executeScript('mobile:getContexts', []);\n      contexts = isAndroid ? this.parseAndroidContexts(contexts) : contexts;\n    } catch (e) {\n      contextsError = e;\n    }\n\n\n    if (currentContext !== NATIVE_APP) {\n      try {\n        // Get the webview offset\n        if (viewportRect) {\n          // The viewport rectangles are based on the screen density,\n          // iOS needs CSS pixels\n          webViewPosition = {\n            x: isAndroid ? viewportRect.left : Math.round(viewportRect.left / pixelRatio),\n            y: isAndroid ? viewportRect.top : Math.round(viewportRect.top / pixelRatio),\n          };\n        } else {\n          // Fallback\n          const el = await this.driver.findElement(\n            isAndroid ? 'xpath' : '-ios class chain',\n            isAndroid ? '//android.webkit.WebView' : '**/XCUIElementTypeWebView'\n          );\n          if (el) {\n            webViewPosition = await el.getRect();\n          }\n        }\n      } catch (ign) {\n      }\n      await this.driver.switchContext(currentContext);\n    }\n\n    /**\n     * If its a webview then update the HTML with the element location\n     * so the source can be used in the native inspector\n     */\n    try {\n      if (currentContext !== NATIVE_APP) {\n        // Fallback if the webview position can't be determined,\n        // then do it based on the web context\n        if (!webViewPosition) {\n          webViewPosition = {\n            x: 0,\n            y: await this.driver.executeScript(\n              `return (${getWebviewStatusAddressBarHeight}).apply(null, arguments)`,\n              [{platformName, statBarHeight}],\n            ),\n          };\n        }\n        await this.driver.executeScript(\n          `return (${setHtmlElementAttributes}).apply(null, arguments)`,\n          [{platformName, webviewStatusAddressBarHeight: webViewPosition.y}],\n        );\n      }\n    } catch (ign) {\n    }\n\n    return {contexts, contextsError, currentContext, currentContextError};\n  }\n\n  async getSourceUpdate () {\n    try {\n      const source = parseSource(await this.driver.getPageSource());\n      return {source};\n    } catch (err) {\n      return {sourceError: err};\n    }\n  }\n\n  async getScreenshotUpdate () {\n    try {\n      const screenshot = await this.driver.takeScreenshot();\n      return {screenshot};\n    } catch (err) {\n      return {screenshotError: err};\n    }\n  }\n\n  /**\n   * If the app under test can return contexts command.\n   *\n   * @returns {boolean} True if the app under test supports contexts command.\n   *\n   */\n  async hasContextsCommand () {\n    try {\n      await this.driver.getContexts();\n      return true;\n    } catch (ign) {\n    }\n\n    // If the app under test returns non JSON format response\n    return false;\n  }\n\n  /**\n   * Parse the Android contexts webview data\n   *\n   * Returns\n   * {\n   *   id: string;             // NATIVE_APP or the webview name\n   *   title?: string;         // the name of the page\n   *   url?: string;           // the url\n   *   bundleId?: string;      // for iOS\n   *   packageName?: string;   // for Android\n   *   handle?: string;        // the id of the active page in the webview of Android\n   * }[];\n   */\n  parseAndroidContexts (contexts) {\n    const parsedWebviews = [];\n\n    // Walk over every context and add all webviews into the parsedWebviews array\n    contexts\n      // Filter out all contexts that have a webviewName\n      .filter((webview) => _.has(webview, 'webviewName'))\n      // Now construct a new array with data\n      .map(({info, pages, webviewName}) => {\n        // The context result can have:\n        // - no pages => this might be Chrome running in the background\n        // - pages => this can be:\n        //   - Chrome with one or multiple tabs open\n        //   - A webview with one or multiple webviews\n        if (!pages) {\n          return;\n        }\n\n        pages.filter((page) => {\n          // The description is a string and:\n          // 1. can contain a JSON string for webviews which can contain\n          //    an `attached`-value telling if the webview is active\n          // 2. can be an empty string, this is most of the times for tabs\n          //    in Chrome\n          const description = _.has(page, 'description') ? page.description : '';\n          let descriptionJSON = {attached: false};\n          try {\n            descriptionJSON = JSON.parse(page.description);\n          } catch (ign) {}\n\n          // You can have multiple `type` of pages, like service workers\n          // We need to have pages with or 1. an attached view or 2. with an empty description\n          return page.type === 'page' && (description === '' || descriptionJSON.attached);\n        })\n          .map((page) => {\n            parsedWebviews.push({\n              id: webviewName,\n              ...(page && _.has(page, 'title') ? {title: page.title} : {}),\n              ...(page && _.has(page, 'url') ? {url: page.url} : {}),\n              ...(page && _.has(info, 'Android-Package') ? {packageName: info['Android-Package']} : {}),\n              ...(page && _.has(page, 'id') ? {handle: page.id} : {}),\n            });\n          });\n\n        return parsedWebviews;\n      });\n\n    return [\n      // The Android contexts dont have the `NATIVE_APP` context so add it here\n      {id: 'NATIVE_APP'},\n      // Add the parsedWebviews, but make sure to filter out all undefined webviews\n      ...parsedWebviews.filter(Boolean),\n    ];\n  }\n}\n\nAppiumClient.instance = (driver) => {\n  if (_instance === null) {\n    _instance = new AppiumClient(driver);\n  }\n  return _instance;\n};\n","const BUTTON = {\n  DEFAULT: 'default',\n  PRIMARY: 'primary',\n  DISABLED: 'disabled',\n  DANGER: 'danger'\n};\n\nconst ALERT = {\n  ERROR: 'error',\n  WARNING: 'warning',\n  INFO: 'info'\n};\n\nconst INPUT = {\n  NUMBER: 'number',\n  TEXT: 'text',\n  TEXTAREA: 'textarea',\n  PASSWORD: 'password',\n  SUBMIT: 'submit'\n};\n\nconst ROW = {\n  FLEX: 'flex'\n};\n\n\nexport {\n  BUTTON,\n  ALERT,\n  INPUT,\n  ROW\n};\n","/* eslint-disable no-console */\nimport React, { useRef } from 'react';\nimport { Alert, Input, Row, Button, Badge, List, Space, Spin, Tooltip } from 'antd';\nimport { AimOutlined, ClearOutlined, SendOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport { ALERT } from '../AntdTypes';\nimport InspectorStyles from './Inspector.css';\n\nconst LocatedElements = (props) => {\n  const { locatedElements, locatedElementsExecutionTime, applyClientMethod, setLocatorTestElement, locatorTestElement,\n          isFindingLocatedElementInSource, searchedForElementBounds, selectLocatedElement, source, driver, t ,elements} = props;\n\n  const sendKeys = useRef(null);\n\n  if (locatorTestElement) {\n    console.log('🚀 ~ file: LocatedElements.js:14 ~ LocatedElements ~ locatorTestElement:', locatorTestElement);\n  }\n  const showIdAutocompleteInfo = () => {\n    const { locatorTestStrategy, locatorTestValue } = props;\n    const automationName = driver.client.capabilities.automationName;\n    const idLocatorAutocompletionDisabled = driver.client.capabilities.disableIdLocatorAutocompletion;\n    if (automationName && automationName.toLowerCase() === 'uiautomator2' &&\n      locatorTestStrategy === 'id' && !locatorTestValue.includes(':id/') && !idLocatorAutocompletionDisabled) {\n      return <Row><Alert message={t('idAutocompletionCanBeDisabled')} type={ALERT.INFO} showIcon/></Row>;\n    }\n  };\n\n  return <>\n    {locatedElements.length === 0 && <Space className={InspectorStyles.spaceContainer} direction='vertical' size='small'>\n      <Row><i>{t('couldNotFindAnyElements')}</i></Row>\n      {showIdAutocompleteInfo()}\n    </Space>}\n    {locatedElements.length > 0 && <Spin spinning={isFindingLocatedElementInSource}>\n      <Space className={InspectorStyles.spaceContainer} direction='vertical' size='small'>\n        <Row justify='space-between'>\n          <span>{t('elementsCount')} <Badge count={locatedElements.length} offset={[0, -2]}/></span>\n          <>{t('Time')}: {locatedElementsExecutionTime}</>\n        </Row>\n        <Row>\n          <List className={InspectorStyles.searchResultsList}\n            size='small'\n            dataSource={locatedElements}\n            renderItem={(elementId) =>\n              <List.Item type='text'\n                {...(locatorTestElement === elementId ? { className: InspectorStyles.searchResultsSelectedItem } : {})}\n                {...(locatorTestElement !== elementId ? { onClick: () => {setLocatorTestElement(elementId);} } : {})}\n              >\n                {elementId}\n              </List.Item>\n            }\n          />\n        </Row>\n        <Row justify='center'>\n          <Space direction='horizontal' size='small'>\n            <Tooltip title={t('Find and Select in Source')} placement='bottom'>\n              <ButtonapplyClientMethod\n                disabled={!locatorTestElement}\n                icon={<MenuUnfoldOutlined/>}\n                onClick={() => selectLocatedElement(source, searchedForElementBounds, locatorTestElement)}\n              />\n            </Tooltip>\n            <Tooltip title={t('Tap')} placement='bottom'>\n              <Button\n                disabled={!locatorTestElement}\n                icon={<AimOutlined/>}\n                onClick={() => applyClientMethod({methodName: 'click', elementId: locatorTestElement})}\n              />\n            </Tooltip>\n            <Button.Group className={InspectorStyles.searchResultsActions}>\n              <Input className={InspectorStyles.searchResultsKeyInput}\n                disabled={!locatorTestElement}\n                placeholder={t('Enter Keys to Send')}\n                allowClear={true}\n                onChange={(e) =>\n                 sendKeys.current = e.target.value}/>\n              <Tooltip title={t('Send Keys')} placement='bottom'>\n                <Button\n                  disabled={!locatorTestElement}\n                  icon={<SendOutlined/>}\n                  onClick={() =>{\n                  applyClientMethod({methodName: 'sendKeys', elementId: locatorTestElement, args: [sendKeys.current || '']})\n                  }}\n                />\n              </Tooltip>\n              <Tooltip title={t('Clear')} placement='bottom'>\n                <Button\n                  disabled={!locatorTestElement}\n                  id='btnClearElement'\n                  icon={<ClearOutlined/>}\n                  onClick={() => applyClientMethod({methodName: 'clear', elementId: locatorTestElement})}\n                />\n              </Tooltip>\n            </Button.Group>\n          </Space>\n        </Row>\n      </Space>\n    </Spin>}\n  </>;\n};\n\nexport default LocatedElements;\n","/* eslint-disable promise/prefer-await-to-callbacks */\n/* eslint-disable indent */\n/* eslint-disable space-in-parens */\n/* eslint-disable no-console */\n/* eslint-disable quotes */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-unused-vars */\nimport _, { get } from 'lodash';\nimport { push } from 'redux-first-history';\nimport { getLocators, APP_MODE } from '../components/Inspector/shared';\nimport { showError } from './Session';\nimport { xmlToJSON } from '../util';\nimport { v4 as UUID } from 'uuid';\nimport frameworks from '../lib/client-frameworks';\nimport { getSetting, setSetting, SAVED_FRAMEWORK, SET_SAVED_GESTURES } from '../../shared/settings';\nimport i18n from '../../configs/i18next.config.renderer';\nimport AppiumClient, { NATIVE_APP } from '../lib/appium-client';\nimport { notification } from 'antd';\nimport LocatedElements from '../components/Inspector/LocatedElements';\n// import { useState } from 'react';\n\nexport const SET_SESSION_DETAILS = 'SET_SESSION_DETAILS';\nexport const SET_SOURCE_AND_SCREENSHOT = 'SET_SOURCE_AND_SCREENSHOT';\nexport const SESSION_DONE = 'SESSION_DONE';\nexport const SELECT_ELEMENT = 'SELECT_ELEMENT';\nexport const UNSELECT_ELEMENT = 'UNSELECT_ELEMENT';\nexport const SET_SELECTED_ELEMENT_ID = 'SET_SELECTED_ELEMENT_ID';\nexport const SET_INTERACTIONS_NOT_AVAILABLE = 'SET_INTERACTIONS_NOT_AVAILABLE';\nexport const METHOD_CALL_REQUESTED = 'METHOD_CALL_REQUESTED';\nexport const METHOD_CALL_DONE = 'METHOD_CALL_DONE';\nexport const SET_EXPANDED_PATHS = 'SET_EXPANDED_PATHS';\nexport const SELECT_HOVERED_ELEMENT = 'SELECT_HOVERED_ELEMENT';\nexport const UNSELECT_HOVERED_ELEMENT = 'UNSELECT_HOVERED_ELEMENT';\n\nexport const SELECT_HOVERED_CENTROID = 'SELECT_HOVERED_CENTROID';\nexport const UNSELECT_HOVERED_CENTROID = 'UNSELECT_HOVERED_CENTROID';\nexport const SELECT_CENTROID = 'SELECT_CENTROID';\nexport const UNSELECT_CENTROID = 'UNSELECT_CENTROID';\nexport const SET_SHOW_CENTROIDS = 'SET_SHOW_CENTROIDS';\n\nexport const QUIT_SESSION_REQUESTED = 'QUIT_SESSION_REQUESTED';\nexport const QUIT_SESSION_DONE = 'QUIT_SESSION_DONE';\nexport const SET_SESSION_TIME = 'SET_SESSION_TIME';\n\nexport const START_RECORDING = 'START_RECORDING';\nexport const ELEMENT_KEYS = 'ELEMENT_KEYS'\nexport const PAUSE_RECORDING = 'PAUSE_RECORDING';\nexport const CLEAR_RECORDING = 'CLEAR_RECORDING';\nexport const CLOSE_RECORDER = 'CLOSE_RECORDER';\nexport const SET_ACTION_FRAMEWORK = 'SET_ACTION_FRAMEWORK';\nexport const RECORD_ACTION = 'RECORD_ACTION';\nexport const STEPS_ARRAY = 'STEPS_ARRAY';\nexport const SET_SHOW_BOILERPLATE = 'SET_SHOW_BOILERPLATE';\n\nexport const SHOW_LOCATOR_TEST_MODAL = 'SHOW_LOCATOR_TEST_MODAL';\nexport const HIDE_LOCATOR_TEST_MODAL = 'HIDE_LOCATOR_TEST_MODAL';\nexport const SHOW_SIRI_COMMAND_MODAL = 'SHOW_SIRI_COMMAND_MODAL';\nexport const HIDE_SIRI_COMMAND_MODAL = 'HIDE_SIRI_COMMAND_MODAL';\nexport const SET_SIRI_COMMAND_VALUE = 'SET_SIRI_COMMAND_VALUE';\nexport const SET_LOCATOR_TEST_STRATEGY = 'SET_LOCATOR_TEST_STRATEGY';\nexport const SET_LOCATOR_TEST_VALUE = 'SET_LOCATOR_TEST_VALUE';\nexport const SEARCHING_FOR_ELEMENTS = 'SEARCHING_FOR_ELEMENTS';\nexport const SEARCHING_FOR_ELEMENTS_COMPLETED = 'SEARCHING_FOR_ELEMENTS_COMPLETED';\nexport const GET_FIND_ELEMENTS_TIMES = 'GET_FIND_ELEMENTS_TIMES';\nexport const GET_FIND_ELEMENTS_TIMES_COMPLETED = 'GET_FIND_ELEMENTS_TIMES_COMPLETED';\nexport const SET_LOCATOR_TEST_ELEMENT = 'SET_LOCATOR_TEST_ELEMENT';\nexport const FINDING_ELEMENT_IN_SOURCE = 'FINDING_ELEMENT_IN_SOURCE';\nexport const FINDING_ELEMENT_IN_SOURCE_COMPLETED = 'FINDING_ELEMENT_IN_SOURCE_COMPLETED';\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\nexport const ADD_ASSIGNED_VAR_CACHE = 'ADD_ASSIGNED_VAR_CACHE';\nexport const CLEAR_ASSIGNED_VAR_CACHE = 'CLEAR_ASSIGNED_VAR_CACHE';\nexport const SET_SCREENSHOT_INTERACTION_MODE = 'SET_SCREENSHOT_INTERACTION_MODE';\nexport const SET_APP_MODE = 'SET_APP_MODE';\nexport const SET_SEARCHED_FOR_ELEMENT_BOUNDS = 'SET_SEARCHED_FOR_ELEMENT_BOUNDS';\nexport const CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS = 'CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS';\n\nexport const SET_SWIPE_START = 'SET_SWIPE_START';\nexport const SET_SWIPE_END = 'SET_SWIPE_END';\nexport const SET_SWIPE_START1 = 'SET_SWIPE_START1';\nexport const SET_SWIPE_END1 = 'SET_SWIPE_END1';\nexport const CLEAR_SWIPE_ACTION = 'CLEAR_SWIPE_ACTION';\nexport const PROMPT_KEEP_ALIVE = 'PROMPT_KEEP_ALIVE';\nexport const HIDE_PROMPT_KEEP_ALIVE = 'HIDE_PROMPT_KEEP_ALIVE';\n\nexport const SELECT_INTERACTION_MODE = 'SELECT_INTERACTION_MODE';\n\nexport const SELECT_COMMAND_GROUP = 'SELECT_COMMAND_GROUP';\nexport const SELECT_COMMAND_SUB_GROUP = 'SELECT_COMMAND_SUB_GROUP';\nexport const ENTERING_COMMAND_ARGS = 'ENTERING_COMMAND_ARGS';\nexport const CANCEL_PENDING_COMMAND = 'CANCEL_PENDING_COMMAND';\nexport const SET_COMMAND_ARG = 'SET_COMMAND_ARG';\n\nexport const SET_CONTEXT = 'SET_CONTEXT';\n\nexport const SET_APP_ID = 'SET_APP_ID';\nexport const SET_SERVER_STATUS = 'SET_SERVER_STATUS';\n\nexport const SET_KEEP_ALIVE_INTERVAL = 'SET_KEEP_ALIVE_INTERVAL';\nexport const SET_USER_WAIT_TIMEOUT = 'SET_USER_WAIT_TIMEOUT';\nexport const SET_LAST_ACTIVE_MOMENT = 'SET_LAST_ACTIVE_MOMENT';\n\nexport const SET_VISIBLE_COMMAND_RESULT = 'SET_VISIBLE_COMMAND_RESULT';\n\nexport const SET_AWAITING_MJPEG_STREAM = 'SET_AWAITING_MJPEG_STREAM';\n\nexport const SHOW_GESTURE_EDITOR = 'SHOW_GESTURE_EDITOR';\nexport const HIDE_GESTURE_EDITOR = 'HIDE_GESTURE_EDITOR';\nexport const GET_SAVED_GESTURES_REQUESTED = 'GET_SAVED_GESTURES_REQUESTED';\nexport const GET_SAVED_GESTURES_DONE = 'GET_SAVED_GESTURES_DONE';\nexport const DELETE_SAVED_GESTURES_REQUESTED = 'DELETE_SAVED_GESTURES_REQUESTED';\nexport const DELETE_SAVED_GESTURES_DONE = 'DELETE_SAVED_GESTURES_DONE';\nexport const SET_LOADED_GESTURE = 'SET_LOADED_GESTURE';\nexport const REMOVE_LOADED_GESTURE = 'REMOVE_LOADED_GESTURE';\nexport const SHOW_GESTURE_ACTION = 'SHOW_GESTURE_ACTION';\nexport const HIDE_GESTURE_ACTION = 'HIDE_GESTURE_ACTION';\nexport const SELECT_TICK_ELEMENT = 'SELECT_TICK_ELEMENT';\nexport const UNSELECT_TICK_ELEMENT = 'UNSELECT_TICK_ELEMENT';\nexport const SET_GESTURE_TAP_COORDS_MODE = 'SET_GESTURE_TAP_COORDS_MODE';\nexport const CLEAR_TAP_COORDINATES = 'CLEAR_TAP_COORDINATES';\n\nexport const TOGGLE_SHOW_ATTRIBUTES = 'TOGGLE_SHOW_ATTRIBUTES';\nexport const TOGGLE_REFRESHING_STATE = 'TOGGLE_REFRESHING_STATE';\n\nconst KEEP_ALIVE_PING_INTERVAL = 20 * 1000;\nconst NO_NEW_COMMAND_LIMIT = 24 * 60 * 60 * 1000; // Set timeout to 24 hours\nconst WAIT_FOR_USER_KEEP_ALIVE = 60 * 60 * 1000; // Give user 1 hour to reply\n\n// const [steps,setFlowSteps] = useState({})\n// A debounced function that calls findElement and gets info about the element\nconst findElement = _.debounce(async function (strategyMap, dispatch, getState, path) {\n  for (let [strategy, selector] of strategyMap) {\n    // Get the information about the element\n    const action = callClientMethod({\n      strategy,\n      selector,\n    });\n    let { elementId, variableName, variableType } = await action(dispatch, getState);\n\n    // Set the elementId, variableName and variableType for the selected element\n    // (check first that the selectedElementPath didn't change, to avoid race conditions)\n    if (elementId && getState().inspector.selectedElementPath === path) {\n      return dispatch({ type: SET_SELECTED_ELEMENT_ID, elementId, variableName, variableType });\n    }\n  }\n\n  return dispatch({ type: SET_INTERACTIONS_NOT_AVAILABLE });\n}, 1000);\n\nexport function selectElement(path) {\n  return async (dispatch, getState) => {\n    // Set the selected element in the source tree\n    dispatch({ type: SELECT_ELEMENT, path });\n    const { selectedElement, sourceXML, expandedPaths } = getState().inspector;\n\n    // Expand all of this element's ancestors so that it's visible in the source tree\n    // Make a copy of the array to avoid state mutation\n    const copiedExpandedPaths = [...expandedPaths];\n    let pathArr = path.split('.').slice(0, path.length - 1);\n    while (pathArr.length > 1) {\n      pathArr.splice(pathArr.length - 1);\n      let path = pathArr.join('.');\n      if (!copiedExpandedPaths.includes(path)) {\n        copiedExpandedPaths.push(path);\n      }\n    }\n    dispatch({ type: SET_EXPANDED_PATHS, paths: copiedExpandedPaths });\n\n\n    // Find the optimal selection strategy. If none found, fall back to XPath.\n    const strategyMap = _.toPairs(getLocators(selectedElement.attributes, sourceXML));\n    strategyMap.push(['xpath', selectedElement.xpath]);\n\n    // Debounce find element so that if another element is selected shortly after, cancel the previous search\n    await findElement(strategyMap, dispatch, getState, path);\n  };\n}\n\nexport function unselectElement() {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_ELEMENT });\n  };\n}\n\n\nexport function selectCentroid(path) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_CENTROID, path });\n  };\n}\n\nexport function unselectCentroid() {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_CENTROID });\n  };\n}\n\nexport function selectHoveredCentroid(path) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_HOVERED_CENTROID, path });\n  };\n}\n\nexport function unselectHoveredCentroid() {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_HOVERED_CENTROID });\n  };\n}\n\nexport function selectHoveredElement(path) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_HOVERED_ELEMENT, path });\n  };\n}\n\nexport function unselectHoveredElement(path) {\n  return (dispatch) => {\n    dispatch({ type: UNSELECT_HOVERED_ELEMENT, path });\n  };\n}\n\n/**\n * Requests a method call on appium\n */\nlet elemArr = []\nlet digitsArray = []\nexport function applyClientMethod(params) {\n  console.log(\"🚀 ~ file: Inspector.js:223 ~ applyClientMethod ~ params:\", params)\n \n  return async (dispatch, getState) => {\n    const isRecording = params.methodName !== 'quit' &&\n      params.methodName !== 'getPageSource' &&\n      params.methodName !== 'gesture' &&\n      params.methodName !== 'status' &&\n      getState().inspector.isRecording;\n    try {\n      if (params.methodName === 'click') {\n        elemArr.push(params.elementId);\n        console.log(\"🚀 ~ file: Inspector.js:227 ~ applyClientMethod ~ elemArr:\", elemArr);\n      }\n\n      if (params.methodName === 'sendKeys') {\n        await applyClientMethod({ appMode: 'native', methodName: 'click', elementId: elemArr[0] });\n\n        const digitsArray = params.args[0].split('').map(digit => digit.toString());\n        console.log('Digits Array:', digitsArray);\n\n        if (elemArr.length > 1) {\n          elemArr.forEach(async (elementId, i) => {\n            const clonedParams = { ...params };\n            clonedParams.args = [digitsArray[i]];\n            clonedParams.elementId = elementId;\n            console.log(\"🚀 ~ clonedParams:\", clonedParams); // Verify the cloned params\n            // Call the method for each element\n            await applyClientMethod(clonedParams);\n          });\n          elemArr = [];\n        }\n      }\n      dispatch({ type: METHOD_CALL_REQUESTED });\n      const callAction = callClientMethod(params);\n      const { contexts, contextsError, commandRes, currentContext, currentContextError,\n        source, screenshot, windowSize, sourceError,\n        screenshotError, windowSizeError, variableName,\n        variableIndex, strategy, selector } = await callAction(dispatch, getState);\n\n      // TODO: Implement recorder code for gestures\n      if (isRecording) {\n        // Add 'findAndAssign' line of code. Don't do it for arrays though. Arrays already have 'find' expression\n        if (strategy && selector && !variableIndex && variableIndex !== 0) {\n          const findAction = findAndAssign(strategy, selector, variableName, false);\n          findAction(dispatch, getState);\n        }\n\n        // now record the actual action\n        let args = [variableName, variableIndex];\n        args = args.concat(params.args || []);\n        dispatch({ type: RECORD_ACTION, action: params.methodName, params: args });\n      }\n      dispatch({ type: METHOD_CALL_DONE });\n\n      if (source) {\n        dispatch({\n          type: SET_SOURCE_AND_SCREENSHOT,\n          contexts,\n          currentContext,\n          source: source && xmlToJSON(source),\n          sourceXML: source,\n          screenshot,\n          windowSize,\n          contextsError,\n          currentContextError,\n          sourceError,\n          screenshotError,\n          windowSizeError,\n        });\n      }\n      window.dispatchEvent(new Event('resize'));\n      return commandRes;\n    } catch (error) {\n      console.log(error); // eslint-disable-line no-console\n      let methodName = params.methodName === 'click' ? 'tap' : params.methodName;\n      showError(error, methodName, 10);\n      dispatch({ type: METHOD_CALL_DONE });\n    }\n  };\n}\n\nexport function addAssignedVarCache(varName) {\n  return (dispatch) => {\n    dispatch({ type: ADD_ASSIGNED_VAR_CACHE, varName });\n  };\n}\n\nexport function setExpandedPaths(paths) {\n  return (dispatch) => {\n    dispatch({ type: SET_EXPANDED_PATHS, paths });\n  };\n}\n\n/**\n * Quit the session and go back to the new session window\n */\nexport function quitSession(reason, killedByUser = true) {\n  return async (dispatch, getState) => {\n    const killAction = killKeepAliveLoop();\n    killAction(dispatch, getState);\n    const applyAction = applyClientMethod({ methodName: 'quit' });\n    await applyAction(dispatch, getState);\n    dispatch({ type: QUIT_SESSION_DONE });\n    dispatch(push('/session'));\n    if (!killedByUser) {\n      notification.error({\n        message: 'Error',\n        description: reason || i18n.t('Session has been terminated'),\n        duration: 0\n      });\n    }\n  };\n}\n\nexport function startRecording() {\n  return (dispatch) => {\n    dispatch({ type: START_RECORDING });\n  };\n}\n\nexport function pauseRecording() {\n  return (dispatch) => {\n    dispatch({ type: PAUSE_RECORDING });\n  };\n}\n\nexport function clearRecording() {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_RECORDING });\n    dispatch({ type: CLEAR_ASSIGNED_VAR_CACHE }); // Get rid of the variable cache\n  };\n}\n\nexport function getSavedActionFramework() {\n  return async (dispatch) => {\n    let framework = await getSetting(SAVED_FRAMEWORK);\n    dispatch({ type: SET_ACTION_FRAMEWORK, framework });\n  };\n}\n\nexport function setActionFramework(framework) {\n  return async (dispatch) => {\n    if (!frameworks[framework]) {\n      throw new Error(i18n.t('frameworkNotSupported', { framework }));\n    }\n    await setSetting(SAVED_FRAMEWORK, framework);\n    dispatch({ type: SET_ACTION_FRAMEWORK, framework });\n  };\n}\n\nexport function recordAction(action, params) {\n  return (dispatch) => {\n    dispatch({ type: RECORD_ACTION, action, params });\n  };\n}\n\nexport function closeRecorder() {\n  return (dispatch) => {\n    dispatch({ type: CLOSE_RECORDER });\n  };\n}\n\nexport function toggleShowBoilerplate() {\n  return (dispatch, getState) => {\n    const show = !getState().inspector.showBoilerplate;\n    dispatch({ type: SET_SHOW_BOILERPLATE, show });\n  };\n}\n\nexport function setSessionDetails({ driver, sessionDetails, mode, mjpegScreenshotUrl }) {\n  return (dispatch) => {\n    dispatch({ type: SET_SESSION_DETAILS, driver, sessionDetails, mode, mjpegScreenshotUrl });\n  };\n}\n\nexport function showLocatorTestModal() {\n  return (dispatch) => {\n    dispatch({ type: SHOW_LOCATOR_TEST_MODAL });\n  };\n}\n\nexport function hideLocatorTestModal() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_LOCATOR_TEST_MODAL });\n  };\n}\n\nexport function showSiriCommandModal() {\n  return (dispatch) => {\n    dispatch({ type: SHOW_SIRI_COMMAND_MODAL });\n  };\n}\n\nexport function hideSiriCommandModal() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_SIRI_COMMAND_MODAL });\n  };\n}\n\nexport function setSiriCommandValue(siriCommandValue) {\n  return (dispatch) => {\n    dispatch({ type: SET_SIRI_COMMAND_VALUE, siriCommandValue });\n  };\n}\n\nexport function setLocatorTestValue(locatorTestValue) {\n  return (dispatch) => {\n    dispatch({ type: SET_LOCATOR_TEST_VALUE, locatorTestValue });\n  };\n}\n\nexport function setLocatorTestStrategy(locatorTestStrategy) {\n  return (dispatch) => {\n    dispatch({ type: SET_LOCATOR_TEST_STRATEGY, locatorTestStrategy });\n  };\n}\n\nexport function setContext(context) {\n  return (dispatch) => {\n    dispatch({ type: SET_CONTEXT, context });\n  };\n}\n\nexport function searchForElement(strategy, selector) {\n  return async (dispatch, getState) => {\n    dispatch({ type: SEARCHING_FOR_ELEMENTS });\n    try {\n      const callAction = callClientMethod({ strategy, selector, fetchArray: true });\n      let { elements, variableName, executionTime } = await callAction(dispatch, getState);\n      const findAction = findAndAssign(strategy, selector, variableName, true);\n      findAction(dispatch, getState);\n      elements = elements.map((el) => el.id);\n      dispatch({ type: SEARCHING_FOR_ELEMENTS_COMPLETED, elements, executionTime });\n    } catch (error) {\n      dispatch({ type: SEARCHING_FOR_ELEMENTS_COMPLETED });\n      showError(error, 10);\n    }\n  };\n}\n\n/**\n * Get all the find element times based on the find data source\n */\nexport function getFindElementsTimes(findDataSource) {\n  return async (dispatch, getState) => {\n    dispatch({ type: GET_FIND_ELEMENTS_TIMES });\n    try {\n      const findElementsExecutionTimes = [];\n      for (const element of findDataSource) {\n        const { find, key, selector } = element;\n        const action = callClientMethod({ strategy: key, selector });\n        const { executionTime } = await action(dispatch, getState);\n        findElementsExecutionTimes.push({ find, key, selector, time: executionTime });\n      }\n\n      dispatch({\n        type: GET_FIND_ELEMENTS_TIMES_COMPLETED,\n        findElementsExecutionTimes: _.sortBy(findElementsExecutionTimes, ['time']),\n      });\n    } catch (error) {\n      dispatch({ type: GET_FIND_ELEMENTS_TIMES_COMPLETED });\n      showError(error, 10);\n    }\n  };\n}\n\nexport function findAndAssign(strategy, selector, variableName, isArray) {\n  return (dispatch, getState) => {\n    const { assignedVarCache } = getState().inspector;\n\n    // If this call to 'findAndAssign' for this variable wasn't done already, do it now\n    if (!assignedVarCache[variableName]) {\n      dispatch({ type: RECORD_ACTION, action: 'findAndAssign', params: [strategy, selector, variableName, isArray] });\n      dispatch({ type: ADD_ASSIGNED_VAR_CACHE, varName: variableName });\n    }\n  };\n}\n\nexport function setLocatorTestElement(elementId) {\n  return async (dispatch, getState) => {\n    dispatch({ type: SET_LOCATOR_TEST_ELEMENT, elementId });\n    dispatch({ type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS });\n    if (elementId) {\n      try {\n        const action = callClientMethod({\n          elementId,\n          methodName: 'getRect',\n          skipRefresh: true,\n          skipRecord: true,\n          ignoreResult: true\n        });\n        const { commandRes } = await action(dispatch, getState);\n        dispatch({\n          type: SET_SEARCHED_FOR_ELEMENT_BOUNDS,\n          location: { x: commandRes.x, y: commandRes.y },\n          size: { width: commandRes.width, height: commandRes.height },\n        });\n      } catch (ign) { }\n    }\n  };\n}\n\n/**\n * Given an element ID found through search, and its bounds,\n * attempt to find and select this element in the source tree\n */\nexport function selectLocatedElement(source, bounds, id) {\n  const UPPER_FILTER_LIMIT = 10;\n\n  // Parse the source tree and find all nodes whose bounds match the expected bounds\n  // Return the path + xpath of each node\n  function findPathsMatchingBounds() {\n    if (!bounds || !source.children || !source.children[0].attributes) { return null; }\n    if (source.children[0].attributes.bounds) {\n      const [endX, endY] = [bounds.location.x + bounds.size.width, bounds.location.y + bounds.size.height];\n      const coords = `[${bounds.location.x},${bounds.location.y}][${endX},${endY}]`;\n      return findPathsFromCoords(source.children, coords);\n    } else if (source.children[0].attributes.x) {\n      const combinedBounds = {\n        x: String(bounds.location.x),\n        y: String(bounds.location.y),\n        height: String(bounds.size.height),\n        width: String(bounds.size.width),\n      };\n      return findPathsFromBounds(source.children, combinedBounds);\n    }\n    return null;\n  }\n\n  // Recursive function for parsing source tree when elements have 'bounds' property\n  function findPathsFromCoords(trees, coords) {\n    let collectedPaths = [];\n    for (const tree of trees) {\n      if (tree.attributes.bounds === coords) {\n        collectedPaths.push([tree.path, tree.xpath]);\n      }\n      if (tree.children.length) {\n        collectedPaths.push(...findPathsFromCoords(tree.children, coords));\n      }\n    }\n    return collectedPaths;\n  }\n\n  // Recursive function for parsing source tree when elements have 'x/y/height/width' properties\n  function findPathsFromBounds(trees, bounds) {\n    let collectedPaths = [];\n    for (const tree of trees) {\n      if (tree.attributes.x === bounds.x && tree.attributes.y === bounds.y\n        && tree.attributes.height === bounds.height && tree.attributes.width === bounds.width) {\n        collectedPaths.push([tree.path, tree.xpath]);\n      }\n      if (tree.children.length) {\n        collectedPaths.push(...findPathsFromBounds(tree.children, bounds));\n      }\n    }\n    return collectedPaths;\n  }\n\n  // If findPathsMatchingBounds found multiple items,\n  // use Appium findElement to filter further by element ID\n  async function filterFoundPaths(foundPaths, dispatch, getState) {\n    if (!foundPaths) { return null; }\n    if (foundPaths.length === 1) {\n      return foundPaths[0][0];\n    } else if (foundPaths.length !== 0 && foundPaths.length <= UPPER_FILTER_LIMIT) {\n      return await findElementWithMatchingId(foundPaths, dispatch, getState);\n    }\n    return null;\n  }\n\n  // Calls Appium findElement for each provided xpath, and returns the path\n  // of the element whose ID matches the expected ID\n  async function findElementWithMatchingId(foundPaths, dispatch, getState) {\n    for (const path of foundPaths) {\n      const action = callClientMethod({ strategy: 'xpath', selector: path[1] });\n      const { el } = await action(dispatch, getState);\n      if (el && el.elementId === id) {\n        return path[0];\n      }\n    }\n    return null;\n  }\n\n  return async (dispatch, getState) => {\n    dispatch({ type: FINDING_ELEMENT_IN_SOURCE });\n    const foundPaths = findPathsMatchingBounds();\n    const foundPath = await filterFoundPaths(foundPaths, dispatch, getState);\n    if (foundPath) {\n      const action = selectElement(foundPath);\n      await action(dispatch, getState);\n    } else {\n      notification.error({\n        message: i18n.t('Error'),\n        description: i18n.t('findingElementInSourceFailed'),\n        duration: 8\n      });\n    }\n    dispatch({ type: FINDING_ELEMENT_IN_SOURCE_COMPLETED });\n  };\n}\n\nexport function clearSearchResults() {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_SEARCH_RESULTS });\n    dispatch({ type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS });\n  };\n}\n\nexport function selectScreenshotInteractionMode(screenshotInteractionMode) {\n  return (dispatch) => {\n    dispatch({ type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode });\n  };\n}\n\nexport function toggleRefreshingState() {\n  return (dispatch) => {\n    dispatch({ type: TOGGLE_REFRESHING_STATE });\n  };\n}\n\nexport function selectAppMode(mode) {\n  return async (dispatch, getState) => {\n    const { appMode } = getState().inspector;\n    dispatch({ type: SET_APP_MODE, mode });\n    // if we're transitioning to hybrid mode, do a pre-emptive search for contexts\n    if (appMode !== mode && mode === APP_MODE.WEB_HYBRID) {\n      const action = applyClientMethod({ methodName: 'getPageSource' });\n      await action(dispatch, getState);\n    }\n    if (appMode !== mode && mode === APP_MODE.NATIVE) {\n      const action = applyClientMethod({ methodName: 'switchContext', args: [NATIVE_APP] });\n      await action(dispatch, getState);\n    }\n  };\n}\n\nexport function toggleShowCentroids() {\n  return (dispatch, getState) => {\n    const { showCentroids } = getState().inspector;\n    const show = !showCentroids;\n    dispatch({ type: SET_SHOW_CENTROIDS, show });\n  };\n}\n\nexport function getActiveAppId(isIOS, isAndroid) {\n  return async (dispatch, getState) => {\n    try {\n      if (isIOS) {\n        const action = applyClientMethod({ methodName: 'executeScript', args: ['mobile:activeAppInfo', []] });\n        const { bundleId } = await action(dispatch, getState);\n        dispatch({ type: SET_APP_ID, appId: bundleId });\n      }\n      if (isAndroid) {\n        const action = applyClientMethod({ methodName: 'getCurrentPackage' });\n        const appPackage = await action(dispatch, getState);\n        dispatch({ type: SET_APP_ID, appId: appPackage });\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(`Could not Retrieve Active App ID: ${err}`);\n    }\n  };\n}\n\nexport function getServerStatus() {\n  return async (dispatch, getState) => {\n    const status = applyClientMethod({ methodName: 'status' });\n    const { build } = await status(dispatch, getState);\n    dispatch({ type: SET_SERVER_STATUS, status: build });\n  };\n}\n\n// Start the session timer once session starts\nexport function setSessionTime(time) {\n  return (dispatch) => {\n    dispatch({ type: SET_SESSION_TIME, sessionStartTime: time });\n  };\n}\n\nexport function setSwipeStart(swipeStartX, swipeStartY) {\n  return (dispatch) => {\n    dispatch({ type: SET_SWIPE_START, swipeStartX, swipeStartY });\n  };\n}\n\n\nexport function setSwipeStart1 (swipeStartX, swipeStartY) {\n  return (dispatch) => {\n    dispatch({type: SET_SWIPE_START1, swipeStartX, swipeStartY});\n  };\n}\n\nexport function setSwipeEnd (swipeEndX, swipeEndY) {\n  return (dispatch) => {\n    dispatch({ type: SET_SWIPE_END, swipeEndX, swipeEndY });\n  };\n}\n\nexport function setSwipeEnd1 (swipeEndX, swipeEndY) {\n  return (dispatch) => {\n    dispatch({type: SET_SWIPE_END1, swipeEndX, swipeEndY});\n  };\n}\n\nexport function clearSwipeAction () {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_SWIPE_ACTION });\n  };\n}\n\nexport function promptKeepAlive() {\n  return (dispatch) => {\n    dispatch({ type: PROMPT_KEEP_ALIVE });\n  };\n}\n\nexport function hideKeepAlivePrompt() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_PROMPT_KEEP_ALIVE });\n  };\n}\n\nexport function selectCommandGroup(group) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_COMMAND_GROUP, group });\n  };\n}\n\nexport function selectCommandSubGroup(group) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_COMMAND_SUB_GROUP, group });\n  };\n}\n\nexport function selectInteractionMode(interaction) {\n  return (dispatch) => {\n    dispatch({ type: SELECT_INTERACTION_MODE, interaction });\n  };\n}\n\nexport function startEnteringCommandArgs(commandName, command) {\n  return (dispatch) => {\n    dispatch({ type: ENTERING_COMMAND_ARGS, commandName, command });\n  };\n}\n\nexport function cancelPendingCommand() {\n  return (dispatch) => {\n    dispatch({ type: CANCEL_PENDING_COMMAND });\n  };\n}\n\nexport function setCommandArg(index, value) {\n  return (dispatch) => {\n    dispatch({ type: SET_COMMAND_ARG, index, value });\n  };\n}\n\n/**\n * Ping server every 30 seconds to prevent `newCommandTimeout` from killing session\n */\nexport function runKeepAliveLoop() {\n  return (dispatch, getState) => {\n    dispatch({ type: SET_LAST_ACTIVE_MOMENT, lastActiveMoment: Date.now() });\n    const { driver } = getState().inspector;\n\n    const keepAliveInterval = setInterval(async () => {\n      const { lastActiveMoment } = getState().inspector;\n      console.log('Pinging Appium server to keep session active'); // eslint-disable-line no-console\n      try {\n        await driver.getTimeouts(); // Pings the Appium server to keep it alive\n      } catch (ign) { }\n      const now = Date.now();\n\n      // If the new command limit has been surpassed, prompt user if they want to keep session going\n      // Give them WAIT_FOR_USER_KEEP_ALIVE ms to respond\n      if (now - lastActiveMoment > NO_NEW_COMMAND_LIMIT) {\n        const action = promptKeepAlive();\n        action(dispatch);\n\n        // After the time limit kill the session (this timeout will be killed if they keep it alive)\n        const userWaitTimeout = setTimeout(() => {\n          const action = quitSession(i18n.t('Session closed due to inactivity'), false);\n          action(dispatch, getState);\n        }, WAIT_FOR_USER_KEEP_ALIVE);\n        dispatch({ type: SET_USER_WAIT_TIMEOUT, userWaitTimeout });\n      }\n    }, KEEP_ALIVE_PING_INTERVAL);\n    dispatch({ type: SET_KEEP_ALIVE_INTERVAL, keepAliveInterval });\n  };\n}\n\n/**\n * Get rid of the intervals to keep the session alive\n */\nexport function killKeepAliveLoop() {\n  return (dispatch, getState) => {\n    const { keepAliveInterval, userWaitTimeout } = getState().inspector;\n    clearInterval(keepAliveInterval);\n    if (userWaitTimeout) {\n      clearTimeout(userWaitTimeout);\n    }\n    dispatch({ type: SET_KEEP_ALIVE_INTERVAL, keepAliveInterval: null });\n    dispatch({ type: SET_USER_WAIT_TIMEOUT, userWaitTimeout: null });\n  };\n}\n\n/**\n * Reset the new command clock and kill the wait for user timeout\n */\nexport function keepSessionAlive() {\n  return (dispatch, getState) => {\n    const { userWaitTimeout } = getState().inspector;\n    const action = hideKeepAlivePrompt();\n    action(dispatch);\n    dispatch({ type: SET_LAST_ACTIVE_MOMENT, lastActiveMoment: +(new Date()) });\n    if (userWaitTimeout) {\n      clearTimeout(userWaitTimeout);\n      dispatch({ type: SET_USER_WAIT_TIMEOUT, userWaitTimeout: null });\n    }\n  };\n}\n\nconst fetchSteps = (data) => fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\nlet data = [];\nexport function callClientMethod(params) {\n  return async (dispatch, getState) => {\n    console.log(\"🚀 ~ file: Inspector.js:803 ~ return ~ params:\", params);\n    console.log(\"🚀 ~ file: Inspector.js:804 ~ return ~ getState\", getState());\n    const { driver, appMode, mjpegScreenshotUrl, isSourceRefreshOn, selectedElement, screenshotInteractionMode } = getState().inspector;\n    console.log(\"🚀 ~ file: Inspector.js:811 ~ return ~ selectedElement:\", selectedElement);\n    const { methodName, ignoreResult = true } = params;\n    params.appMode = appMode;\n\n    // don't retrieve screenshot if we're already using the mjpeg stream\n    if (mjpegScreenshotUrl) {\n      params.skipScreenshot = true;\n    }\n\n    if (!isSourceRefreshOn) {\n      params.skipRefresh = true;\n    }\n\n    console.log('Calling client method with params:', params);\n    const action = keepSessionAlive();\n    action(dispatch, getState);\n    console.log(\"driver session id\", driver.sessionId);\n    const client = AppiumClient.instance(driver);\n    const res = await client.run(params);\n    let { commandRes } = res;\n    let postdata = {\n      \"session_id\": driver.sessionId,\n      params,\n      selectedElement,\n      'step-name': screenshotInteractionMode\n    };\n    let data1 = {\n      \"session_id\": driver.sessionId,\n      'step-name': 'steps'\n    };\n    console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n    if (postdata.params.methodName === \"click\") {\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response:\", response);\n          postdata.response = response;\n          // data.push(...[postdata]);\n          // dispatch({ type: STEPS_ARRAY, data });\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n        // fetchSteps(data1).then((res) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n        //   let data = res.steps;\n        //   dispatch({ type: STEPS_ARRAY, data });\n        // }).catch((error) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n        // });\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(data1),\n        })\n        .then((res) => {\n          // Convert the response to JSON\n          return res.json();\n        })\n        .then((res) => {\n          console.log(\"Response data:\", res);\n          dispatch({ type: STEPS_ARRAY, res });\n        })\n        .catch((error) => {\n          console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n        });\n    } else if (postdata.params.methodName === \"swipe\") {\n      // Exclude selectedElement from postdata\n      delete postdata.selectedElement;\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response:\", response);\n          // console.log(\"🚀 ~ file: Inspector.js:884 ~ .then ~ totalData:\", totalData)\n          postdata.response = response;\n          // if(postdata['step-name'] != 'scratch'){\n          //   data.push(...[postdata])\n          // }\n          console.log(\"🚀 ~ file: Inspector.js:882 ~ .then ~ data:\", data);\n          // dispatch({ type: STEPS_ARRAY, data })\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n        // if(postdata['step-name'] === 'scratch'){\n        //   data.push(...[postdata])\n        // }\n        // fetchSteps(data1).then((res) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n        //   let data = res.steps;\n        //   dispatch({ type: STEPS_ARRAY, data });\n        // }).catch((error) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n        // });\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data1),\n      })\n      .then((res) => {\n        // Convert the response to JSON\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"Response data:\", res);\n        dispatch({ type: STEPS_ARRAY, res });\n      })\n      .catch((error) => {\n        console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n      });\n        //check the if the tap then it would be longpress , double tap, tap and drag and drop\n    } else if (postdata.params.methodName === \"tap\") {\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(postdata),\n        })\n          .then((response) => {\n            console.log(\"API response:\", response);\n          //   postdata['response'] = response\n          // data.push(...[postdata])\n          // dispatch({ type: STEPS_ARRAY, data })\n          })\n          .catch((error) => {\n            console.error(\"API error:\", error);\n          });\n          // fetchSteps(data1).then((res) => {\n          //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n          //   let data = res.steps;\n          //   dispatch({ type: STEPS_ARRAY, data });\n          // }).catch((error) => {\n          //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n          // });\n\n          await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data1),\n          })\n          .then((res) => {\n            // Convert the response to JSON\n            return res.json();\n          })\n          .then((res) => {\n            console.log(\"Response data:\", res);\n            dispatch({ type: STEPS_ARRAY, res });\n          })\n          .catch((error) => {\n            console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n          });\n    } else if (postdata.params.methodName === \"sendKeys\") {\n      console.log(\"🚀 ~ file: Inspector.js:825 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response:\", response);\n          postdata.response = response;\n          data.push(...[postdata]);\n          // dispatch({ type: STEPS_ARRAY, data })\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n        // fetchSteps(data1).then((res) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n        //   let data = res.steps;\n        //   dispatch({ type: STEPS_ARRAY, data });\n        // }).catch((error) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n        // });\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(data1),\n        })\n        .then((res) => {\n          // Convert the response to JSON\n          return res.json();\n        })\n        .then((res) => {\n          console.log(\"Response data:\", res);\n          dispatch({ type: STEPS_ARRAY, res });\n        })\n        .catch((error) => {\n          console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n        });\n    } else if (postdata['step-name'] === 'expected_value') {\n      postdata.params.xpath = postdata.selectedElement.xpath;\n      postdata.params.expected_value = postdata.selectedElement.attributes.text;\n      console.log(\"🚀 ~ file: Inspector.js:916 ~ return ~ postdata:\", postdata);\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(postdata),\n      })\n        .then((response) => {\n          console.log(\"API response for expected_value:\", response);\n          postdata.response = response;\n          data.push(...[postdata]);\n          // dispatch({ type: STEPS_ARRAY, data })\n        })\n        .catch((error) => {\n          console.error(\"API error:\", error);\n        });\n        // fetchSteps(data1).then((res) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n        //   let data = res.steps;\n        //   dispatch({ type: STEPS_ARRAY, data });\n        // }).catch((error) => {\n        //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n        // });\n        await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data1),\n      })\n      .then((res) => {\n        // Convert the response to JSON\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"Response data:\", res);\n        dispatch({ type: STEPS_ARRAY, res });\n      })\n      .catch((error) => {\n        console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n      });\n    } else if (params.methodName === \"quit\") {\n      console.log(\"🚀 inside the quit function!!\");\n      let sendData = {\n        \"session_id\": driver.sessionId,\n        \"step-name\": \"quit\",        \n      };\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(sendData),\n      })\n      .then((response) => {\n        console.log(\"API response:\", response);\n        // window.close();\n      })\n      .catch((error) => {\n        console.error(\"API error:\", error);\n      });\n      // fetchSteps(data1).then((res) => {\n      //   console.log(\"🚀 ~ file: Inspector.js:886 ~ fetchSteps ~ res:\", res);\n      //   let data = res.steps;\n      //   dispatch({ type: STEPS_ARRAY, data });\n      // }).catch((error) => {\n      //   console.log(\"🚀 ~ file: Inspector.js:890 ~ fetchSteps ~ error:\", error);   \n      // });\n      await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data1),\n      })\n      .then((res) => {\n        // Convert the response to JSON\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"Response data:\", res);\n        dispatch({ type: STEPS_ARRAY, res });\n      })\n      .catch((error) => {\n        console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);    \n      });\n    } else {\n      console.log(\"no api will call becopuse of the no action happend@@@@@@@@@@@\");\n    }\n\n\n\n\n    // Ignore empty objects\n    if (_.isObject(res) && _.isEmpty(res)) {\n      commandRes = null;\n    }\n\n    if (!ignoreResult) {\n      // if the user is running actions manually, we want to show the full response with the\n      // ability to scroll etc...\n      const result = JSON.stringify(commandRes, null, '  ');\n      const truncatedResult = _.truncate(result, { length: 2000 });\n      console.log(`Got result from client method: ${truncatedResult}`);\n      setVisibleCommandResult(result, methodName)(dispatch);\n    }\n    res.elementId = res.id;\n    return res;\n  };\n}\n\nexport function setVisibleCommandResult(result, methodName) {\n  return (dispatch) => {\n    dispatch({ type: SET_VISIBLE_COMMAND_RESULT, result, methodName });\n  };\n}\n\nexport function setAwaitingMjpegStream(isAwaiting) {\n  return (dispatch) => {\n    dispatch({ type: SET_AWAITING_MJPEG_STREAM, isAwaiting });\n  };\n}\n\nexport function saveGesture(params) {\n  return async (dispatch) => {\n    let savedGestures = await getSetting(SET_SAVED_GESTURES) || [];\n    if (!params.id) {\n      params.id = UUID();\n      params.date = Date.now();\n      savedGestures.push(params);\n    } else {\n      for (const gesture of savedGestures) {\n        if (gesture.id === params.id) {\n          gesture.name = params.name;\n          gesture.description = params.description;\n          gesture.actions = params.actions;\n        }\n      }\n    }\n    await setSetting(SET_SAVED_GESTURES, savedGestures);\n    const action = getSavedGestures();\n    await action(dispatch);\n  };\n}\n\nexport function getSavedGestures() {\n  return async (dispatch) => {\n    dispatch({ type: GET_SAVED_GESTURES_REQUESTED });\n    const savedGestures = await getSetting(SET_SAVED_GESTURES);\n    dispatch({ type: GET_SAVED_GESTURES_DONE, savedGestures });\n  };\n}\n\nexport function deleteSavedGesture(id) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_SAVED_GESTURES_REQUESTED, deleteGesture: id });\n    const gestures = await getSetting(SET_SAVED_GESTURES);\n    const newGestures = gestures.filter((gesture) => gesture.id !== id);\n    await setSetting(SET_SAVED_GESTURES, newGestures);\n    dispatch({ type: DELETE_SAVED_GESTURES_DONE });\n    dispatch({ type: GET_SAVED_GESTURES_DONE, savedGestures: newGestures });\n  };\n}\n\nexport function showGestureEditor() {\n  return (dispatch) => {\n    dispatch({ type: SHOW_GESTURE_EDITOR });\n    dispatch({ type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode: 'gesture' });\n  };\n}\n\nexport function hideGestureEditor() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_GESTURE_EDITOR });\n    dispatch({ type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode: 'select' });\n  };\n}\n\nexport function setLoadedGesture(loadedGesture) {\n  return (dispatch) => {\n    dispatch({ type: SET_LOADED_GESTURE, loadedGesture });\n  };\n}\n\nexport function removeLoadedGesture() {\n  return (dispatch) => {\n    dispatch({ type: REMOVE_LOADED_GESTURE });\n  };\n}\n\nexport function displayGesture(showGesture) {\n  return (dispatch) => {\n    dispatch({ type: SHOW_GESTURE_ACTION, showGesture });\n  };\n}\n\nexport function removeGestureDisplay() {\n  return (dispatch) => {\n    dispatch({ type: HIDE_GESTURE_ACTION });\n  };\n}\n\nexport function selectTick(tick) {\n  return (dispatch, getState) => {\n    const { tickCoordinates } = getState().inspector;\n\n    if (tickCoordinates) {\n      dispatch({ type: SET_GESTURE_TAP_COORDS_MODE, x: undefined, y: undefined });\n    }\n\n    dispatch({ type: SELECT_TICK_ELEMENT, selectedTick: tick });\n  };\n}\n\nexport function unselectTick() {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_TAP_COORDINATES });\n    dispatch({ type: UNSELECT_TICK_ELEMENT });\n  };\n}\n\nexport function tapTickCoordinates(x, y) {\n  return (dispatch) => {\n    dispatch({ type: SET_GESTURE_TAP_COORDS_MODE, x, y });\n  };\n}\n\nexport function toggleShowAttributes() {\n  return (dispatch) => {\n    dispatch({ type: TOGGLE_SHOW_ATTRIBUTES });\n  };\n}\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst headspinUrl = 'https://xxxx.headspin.io:4723/v0/your-api-token/wd/hub';\n\nconst ServerTabHeadspin = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='headspinServerHost' placeholder={headspinUrl} addonBefore={t('serverTabHeasdpinWebDriverURL')}\n            value={server.headspin.webDriverUrl} onChange={(e) => setServerParam('webDriverUrl', e.target.value)} />\n          <p className={SessionStyles.localDesc}>{t('sessionHeadspinWebDriverURLDescription')}</p>\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabHeadspin;\n\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst browserstackUsernamePlaceholder = (t) => {\n  if (process.env.BROWSERSTACK_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst browserstackAccessKeyPlaceholder = (t) => {\n  if (process.env.BROWSERSTACK_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabBrowserstack = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='browserstackUsername' placeholder={browserstackUsernamePlaceholder(t)} addonBefore={t('BrowserStack Username')} value={server.browserstack.username}\n            onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='browserstackPassword' type={INPUT.PASSWORD} placeholder={browserstackAccessKeyPlaceholder(t)} addonBefore={t('BrowserStack Access Key')}\n            value={server.browserstack.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabBrowserstack;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst lambdatestUsernamePlaceholder = (t) => {\n  if (process.env.LAMBDATEST_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'LAMBDATEST_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst lambdatestAccessKeyPlaceholder = (t) => {\n  if (process.env.LAMBDATEST_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'LAMBDATEST_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabLambdatest = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='lambdatestUsername' placeholder={lambdatestUsernamePlaceholder(t)} addonBefore={t('LambdaTest Username')} value={server.lambdatest.username}\n            onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='lambdatestPassword' type={INPUT.PASSWORD} placeholder={lambdatestAccessKeyPlaceholder(t)} addonBefore={t('LambdaTest Access Key')}\n            value={server.lambdatest.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabLambdatest;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst bitbarApiKeyPlaceholder = (t) => {\n  if (process.env.BITBAR_API_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'BITBAR_API_KEY'});\n  }\n  return t('yourApiKey');\n};\n\nconst ServerTabBitbar = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input id='bitbarApiKey' type={INPUT.PASSWORD} placeholder={bitbarApiKeyPlaceholder(t)} addonBefore={t('Bitbar API Key')}\n            value={server.bitbar.apiKey} onChange={(e) => setServerParam('apiKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabBitbar;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst kobitonUsernamePlaceholder = (t) => {\n  if (process.env.KOBITON_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'KOBITON_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst kobitonAccessKeyPlaceholder = (t) => {\n  if (process.env.KOBITON_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'KOBITON_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabKobiton = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='kobitonUsername' placeholder={kobitonUsernamePlaceholder(t)} addonBefore={t('Your Kobiton Username')} value={server.kobiton.username}\n            onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='kobitonAccessKey' type={INPUT.PASSWORD} placeholder={kobitonAccessKeyPlaceholder(t)} addonBefore={t('Kobiton Access Key')} value={server.kobiton.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabKobiton;\n","import React from 'react';\nimport { Form, Row, Col, Input, Checkbox } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst cloudPerfectoUrl = 'cloud.Perfectomobile.com';\n\nconst portPlaceholder = (server) => server.perfecto.ssl ? '443' : '80';\n\nconst perfectoTokenPlaceholder = (t) => {\n  if (process.env.PERFECTO_TOKEN) {\n    return t('usingDataFoundIn', {environmentVariable: 'PERFECTO_TOKEN'});\n  }\n  return t('Add your token');\n};\n\nconst ServerTabPerfecto = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={9}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='PerfectoServerHost' placeholder={cloudPerfectoUrl} addonBefore={t('Perfecto Host')}\n            value={server.perfecto.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={4}>\n        <Form.Item>\n          <Input id='PerfectoPort' placeholder={portPlaceholder(server)} addonBefore={t('Perfecto Port')} value={server.perfecto.port}\n            onChange={(e) => setServerParam('port', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={9}>\n        <Form.Item>\n          <Input id='token' placeholder={perfectoTokenPlaceholder(t)} addonBefore={t('Perfecto Token')} value={server.perfecto.token}\n            onChange={(e) => setServerParam('token', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={2}>\n        <Form.Item>\n          <Checkbox checked={!!server.perfecto.ssl} onChange={(e) => setServerParam('ssl', e.target.checked)}> {'SSL'}</Checkbox>\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabPerfecto;\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\nimport { INPUT } from '../AntdTypes';\n\nconst pcloudyUsernamePlaceholder = 'username@pcloudy.com';\nconst pcloudyHostPlaceholder = 'cloud.pcloudy.com';\nconst pcloudyAccessKeyExample = 'kjdgtdwn65fdasd78uy6y';\n\nconst ServerTabPcloudy = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={8}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='PcloudyServerHost' placeholder={pcloudyHostPlaceholder} addonBefore={t('Pcloudy Host')}\n            value={server.pcloudy.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={8}>\n        <Form.Item>\n          <Input id='username' type={INPUT.TEXT} placeholder={pcloudyUsernamePlaceholder} addonBefore={t('Pcloudy User Name')}\n            value={server.pcloudy.username} onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={8}>\n        <Form.Item>\n          <Input id='accessKey' type={INPUT.PASSWORD} placeholder={pcloudyAccessKeyExample} addonBefore={t('Pcloudy API Key')}\n            value={server.pcloudy.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabPcloudy;\n","import React from 'react';\nimport { Form, Row, Col, Input, Checkbox, Radio, Tooltip } from 'antd';\nimport SessionStyles from './Session.css';\nimport { INPUT } from '../AntdTypes';\n\nconst sauceUsernamePlaceholder = (t) => {\n  if (process.env.SAUCE_USERNAME) {\n    return t('usingDataFoundIn', {environmentVariable: 'SAUCE_USERNAME'});\n  }\n  return t('yourUsername');\n};\n\nconst sauceAccessKeyPlaceholder = (t) => {\n  if (process.env.SAUCE_ACCESS_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'SAUCE_ACCESS_KEY'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabSauce = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='sauceUsername' placeholder={sauceUsernamePlaceholder(t)} addonBefore={t('Sauce Username')}\n            value={server.sauce.username} onChange={(e) => setServerParam('username', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='saucePassword' type={INPUT.PASSWORD} placeholder={sauceAccessKeyPlaceholder(t)} addonBefore={t('Sauce Access Key')}\n            value={server.sauce.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n    <Row gutter={8}>\n      <Col span={8}>\n        <Form.Item>\n          <div className={['ant-input-group-addon', SessionStyles.addonDataCenter].join(' ') }>{t('SauceLabs Data Center')}</div>\n          <Radio.Group className={[SessionStyles.inputDataCenter, SessionStyles.addonDataCenterRadioContainer].join(' ')}\n            buttonStyle=\"solid\" defaultValue='us-west-1' id='sauceObjectDataCenter' value={server.sauce.dataCenter} onChange={(e) => setServerParam('dataCenter', e.target.value)}>\n            <Tooltip placement=\"top\" title={t('UP')}>\n              <Radio value='us-west-1'>{t('US')}</Radio>\n            </Tooltip>\n            <Radio value='eu-central-1'>{t('EU')}</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Col>\n      <Col span={8} align=\"right\">\n        <Form.Item>\n          <Checkbox checked={!!server.sauce.useSCProxy} onChange={(e) => setServerParam('useSCProxy', e.target.checked)}> {t('proxyThroughSC')}</Checkbox>\n        </Form.Item>\n      </Col>\n      <Col span={5}>\n        <Form.Item>\n          <Input addonBefore={t('Host')} placeholder={t('localhost')} disabled={!server.sauce.useSCProxy}\n            value={server.sauce.scHost} onChange={(e) => setServerParam('scHost', e.target.value)}/>\n        </Form.Item>\n      </Col>\n      <Col span={3}>\n        <Form.Item>\n          <Input addonBefore={t('Port')} placeholder={4445} disabled={!server.sauce.useSCProxy}\n            value={server.sauce.scPort} onChange={(e) => setServerParam('scPort', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabSauce;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst testingbotKeyPlaceholder = (t) => {\n  if (process.env.TB_KEY) {\n    return t('usingDataFoundIn', {environmentVariable: 'TB_KEY'});\n  }\n  return t('yourUsername');\n};\n\nconst testingbotSecretPlaceholder = (t) => {\n  if (process.env.TB_SECRET) {\n    return t('usingDataFoundIn', {environmentVariable: 'TB_SECRET'});\n  }\n  return t('yourAccessKey');\n};\n\nconst ServerTabTestingbot = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='testingbotKey' placeholder={testingbotKeyPlaceholder(t)} addonBefore={t('TestingBot Key')}\n            value={server.testingbot.key} onChange={(e) => setServerParam('key', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input id='testingbotSecret' type={INPUT.PASSWORD} placeholder={testingbotSecretPlaceholder(t)} addonBefore={t('TestingBot Secret')}\n            value={server.testingbot.secret} onChange={(e) => setServerParam('secret', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabTestingbot;\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst accessKeyPlaceholder = 'accessKey';\nconst placeholderUrl = 'https://example.experitest.com';\n\nconst ServerTabExperitest = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={12}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerUrl' placeholder={placeholderUrl}\n            addonBefore={t('experitestUrl')} value={server.experitest.url}\n            onChange={(evt) => setServerParam('url', evt.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={12}>\n        <Form.Item>\n          <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerAccessKey' placeholder={accessKeyPlaceholder}\n            addonBefore={t('experitestAccessKey')} value={server.experitest.accessKey}\n            onChange={(evt) => setServerParam('accessKey', evt.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabExperitest;\n","import React from 'react';\nimport { Form, Input, Row, Col } from 'antd';\n\nconst robotQATokenPlaceholder = (t) => {\n  if (process.env.ROBOTQA_TOKEN) {\n    return t('usingDataFoundIn', {environmentVariable: 'ROBOTQA_TOKEN'});\n  }\n  return t('Add your token');\n};\n\nconst ServerTabRobotQA = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input id='robotQAToken' placeholder={robotQATokenPlaceholder(t)} addonBefore={t('RobotQA Token')}\n            value={server.roboticmobi.token} onChange={(e) => setServerParam('token', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabRobotQA;\n","import React from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport { INPUT } from '../AntdTypes';\n\nconst ServerTabRemoteTestkit = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={24}>\n        <Form.Item>\n          <Input id='remoteTestKitAccessToken' type={INPUT.PASSWORD} addonBefore={t('RemoteTestKit AccessToken')} value={server.remotetestkit.token}\n            onChange={(e) => setServerParam('token', e.target.value)} />\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabRemoteTestkit;\n","import React from 'react';\nimport ServerTabHeadspin from './ServerTabHeadspin';\nimport ServerTabBrowserstack from './ServerTabBrowserstack';\nimport ServerTabLambdatest from './ServerTabLambdatest';\nimport ServerTabBitbar from './ServerTabBitbar';\nimport ServerTabKobiton from './ServerTabKobiton';\nimport ServerTabPerfecto from './ServerTabPerfecto';\nimport ServerTabPcloudy from './ServerTabPcloudy';\nimport ServerTabSauce from './ServerTabSauce';\nimport ServerTabTestingbot from './ServerTabTestingbot';\nimport ServerTabExperitest from './ServerTabExperitest';\nimport ServerTabRobotQA from './ServerTabRobotQA';\nimport ServerTabRemoteTestKit from './ServerTabRemoteTestKit';\n\nimport SessionStyles from './Session.css';\n\n// ParcelJS handles image loading by exporting a path to the image\nimport SauceLogo from '../../images/sauce_logo.svg';\nimport HeadSpinLogo from '../../images/headspin_logo.svg';\nimport BrowserStackLogo from '../../images/browserstack_logo.svg';\nimport LambdaTestLogo from '../../images/lambdatest_logo.svg';\nimport BitBarLogo from '../../images/bitbar_logo.svg';\nimport KobitonLogo from '../../images/kobiton_logo.svg';\nimport PerfectoLogo from '../../images/perfecto_logo.svg';\nimport PcloudyLogo from '../../images/pcloudy_logo.svg';\nimport TestingBotLogo from '../../images/testingbot_logo.svg';\nimport ExperitestLogo from '../../images/experitest_logo.svg';\nimport RobotQALogo from '../../images/robotqa_logo.svg';\nimport RemoteTestKitLogo from '../../images/remotetestkit_logo.svg';\n\nconst CloudProviders = {\n  sauce: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={SauceLogo} /></span>,\n    tab: (props) => <ServerTabSauce {...props} />,\n    logo: SauceLogo,\n  },\n  headspin: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={HeadSpinLogo} /></span>,\n    tab: (props) => <ServerTabHeadspin {...props} />,\n    logo: HeadSpinLogo,\n  },\n  browserstack: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BrowserStackLogo} /></span>,\n    tab: (props) => <ServerTabBrowserstack {...props} />,\n    logo: BrowserStackLogo,\n  },\n  lambdatest: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={LambdaTestLogo} /></span>,\n    tab: (props) => <ServerTabLambdatest {...props} />,\n    logo: LambdaTestLogo,\n  },\n  bitbar: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BitBarLogo} /></span>,\n    tab: (props) => <ServerTabBitbar {...props} />,\n    logo: BitBarLogo,\n  },\n  kobiton: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={KobitonLogo} /></span>,\n    tab: (props) => <ServerTabKobiton {...props} />,\n    logo: KobitonLogo,\n  },\n  perfecto: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PerfectoLogo} /></span>,\n    tab: (props) => <ServerTabPerfecto {...props} />,\n    logo: PerfectoLogo,\n  },\n  pcloudy: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PcloudyLogo} /></span>,\n    tab: (props) => <ServerTabPcloudy {...props} />,\n    logo: PcloudyLogo,\n  },\n  testingbot: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={TestingBotLogo} /></span>,\n    tab: (props) => <ServerTabTestingbot {...props} />,\n    logo: TestingBotLogo,\n  },\n  experitest: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={ExperitestLogo} /></span>,\n    tab: (props) => <ServerTabExperitest {...props} />,\n    logo: ExperitestLogo,\n  },\n  roboticmobi: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={RobotQALogo} /></span>,\n    tab: (props) => <ServerTabRobotQA {...props} />,\n    logo: RobotQALogo,\n  },\n  remotetestkit: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={RemoteTestKitLogo} /></span>,\n    tab: (props) => <ServerTabRemoteTestKit {...props} />,\n    logo: RemoteTestKitLogo,\n  }\n};\n\nexport default CloudProviders;","const APPIUM_SESSION_FILE_VERSION = '1.0';\n\nexport function getAppiumSessionFilePath (argv, isPackaged, isDev) {\n  if (isDev) {\n    // do not use file launcher in dev mode because argv is different\n    // then it is in production\n    return false;\n  }\n  if (process.platform === 'darwin' && !isDev) {\n    // packaged macOS apps do not receive args from process.argv, they\n    // receive the filepath argument from the `electron.app.on('open-file', cb)` event\n    return false;\n  }\n  const argvIndex = isPackaged ? 1 : 2;\n  return argv[argvIndex];\n}\n\n// get the slice of the redux state that's needed for the .appiumsession files\nexport function getSaveableState (reduxState) {\n  return {\n    version: APPIUM_SESSION_FILE_VERSION,\n    caps: reduxState.caps,\n    server: reduxState.server,\n    serverType: reduxState.serverType,\n    visibleProviders: reduxState.visibleProviders,\n  };\n}\n\nexport const APPIUM_SESSION_EXTENSION = 'appiumsession';\n","import { getSetting, setSetting, SAVED_SESSIONS, SERVER_ARGS, SESSION_SERVER_TYPE,\n         SESSION_SERVER_PARAMS } from '../../shared/settings';\nimport { v4 as UUID } from 'uuid';\nimport { push } from 'redux-first-history';\nimport { notification } from 'antd';\nimport { includes, debounce, toPairs, union, without, keys, isUndefined, isPlainObject } from 'lodash';\nimport { setSessionDetails, quitSession } from './Inspector';\nimport i18n from '../../configs/i18next.config.renderer';\nimport CloudProviders from '../components/Session/CloudProviders';\nimport { Web2Driver } from 'web2driver';\nimport { addVendorPrefixes } from '../util';\nimport ky from 'ky/umd';\nimport moment from 'moment';\nimport { APP_MODE } from '../components/Inspector/shared';\nimport { ipcRenderer, fs, util } from '../polyfills';\nimport { getSaveableState } from '../../main/helpers';\n\nexport const NEW_SESSION_REQUESTED = 'NEW_SESSION_REQUESTED';\nexport const NEW_SESSION_LOADING = 'NEW_SESSION_LOADING';\nexport const NEW_SESSION_DONE = 'NEW_SESSION_DONE';\nexport const CHANGE_CAPABILITY = 'CHANGE_CAPABILITY';\nexport const SAVE_SESSION_REQUESTED = 'SAVE_SESSION_REQUESTED';\nexport const SAVE_SESSION_DONE = 'SAVE_SESSION_DONE';\nexport const GET_SAVED_SESSIONS_REQUESTED = 'GET_SAVED_SESSIONS_REQUESTED';\nexport const GET_SAVED_SESSIONS_DONE = 'GET_SAVED_SESSIONS_DONE';\nexport const SET_CAPABILITY_PARAM = 'SET_CAPABILITY_PARAM';\nexport const ADD_CAPABILITY = 'ADD_CAPABILITY';\nexport const REMOVE_CAPABILITY = 'REMOVE_CAPABILITY';\nexport const SWITCHED_TABS = 'SWITCHED_TABS';\nexport const SET_CAPS_AND_SERVER = 'SET_CAPS_AND_SERVER';\nexport const SAVE_AS_MODAL_REQUESTED = 'SAVE_AS_MODAL_REQUESTED';\nexport const HIDE_SAVE_AS_MODAL_REQUESTED = 'HIDE_SAVE_AS_MODAL_REQUESTED';\nexport const SET_SAVE_AS_TEXT = 'SET_SAVE_AS_TEXT';\nexport const DELETE_SAVED_SESSION_REQUESTED = 'DELETE_SAVED_SESSION_REQUESTED';\nexport const DELETE_SAVED_SESSION_DONE = 'DELETE_SAVED_SESSION_DONE';\nexport const CHANGE_SERVER_TYPE = 'CHANGE_SERVER_TYPE';\nexport const SET_SERVER_PARAM = 'SET_SERVER_PARAM';\nexport const SET_SERVER = 'SET_SERVER';\n\nexport const VISIBLE_PROVIDERS = 'VISIBLE_PROVIDERS';\n\nexport const SET_ATTACH_SESS_ID = 'SET_ATTACH_SESS_ID';\n\nexport const GET_SESSIONS_REQUESTED = 'GET_SESSIONS_REQUESTED';\nexport const GET_SESSIONS_DONE = 'GET_SESSIONS_DONE';\n\nexport const ENABLE_DESIRED_CAPS_NAME_EDITOR = 'ENABLE_DESIRED_CAPS_NAME_EDITOR';\nexport const ABORT_DESIRED_CAPS_NAME_EDITOR = 'ABORT_DESIRED_CAPS_NAME_EDITOR';\nexport const SAVE_DESIRED_CAPS_NAME = 'SAVE_DESIRED_CAPS_NAME';\nexport const SET_DESIRED_CAPS_NAME = 'SET_DESIRED_CAPS_NAME';\n\nexport const ENABLE_DESIRED_CAPS_EDITOR = 'ENABLE_DESIRED_CAPS_EDITOR';\nexport const ABORT_DESIRED_CAPS_EDITOR = 'ABORT_DESIRED_CAPS_EDITOR';\nexport const SAVE_RAW_DESIRED_CAPS = 'SAVE_RAW_DESIRED_CAPS';\nexport const SET_RAW_DESIRED_CAPS = 'SET_RAW_DESIRED_CAPS';\nexport const SHOW_DESIRED_CAPS_JSON_ERROR = 'SHOW_DESIRED_CAPS_JSON_ERROR';\n\nexport const IS_ADDING_CLOUD_PROVIDER = 'IS_ADDING_CLOUD_PROVIDER';\n\nexport const SET_PROVIDERS = 'SET_PROVIDERS';\n\nexport const SET_ADD_VENDOR_PREFIXES = 'SET_ADD_VENDOR_PREFIXES';\n\nexport const SET_STATE_FROM_URL = 'SET_STATE_FROM_URL';\nexport const SET_STATE_FROM_SAVED = 'SET_STATE_FROM_SAVED';\n\n\nconst CAPS_NEW_COMMAND = 'appium:newCommandTimeout';\nconst CAPS_CONNECT_HARDWARE_KEYBOARD = 'appium:connectHardwareKeyboard';\nconst CAPS_NATIVE_WEB_SCREENSHOT = 'appium:nativeWebScreenshot';\nconst CAPS_ENSURE_WEBVIEW_HAVE_PAGES = 'appium:ensureWebviewsHavePages';\nconst CAPS_INCLUDE_SAFARI_IN_WEBVIEWS = 'appium:includeSafariInWebviews';\n\nconst FILE_PATH_STORAGE_KEY = 'last_opened_file';\n\nconst AUTO_START_URL_PARAM = '1'; // what should be passed in to ?autoStart= to turn it on\n\nconst MJPEG_CAP = 'mjpegScreenshotUrl';\nconst MJPEG_PORT_CAP = 'mjpegServerPort';\n\n// Multiple requests sometimes send a new session request\n// after establishing a session.\n// This situation could happen easier on cloud vendors,\n// so let's set zero so far.\n// TODO: increase this retry when we get issues\nexport const CONN_RETRIES = 0;\nconst CONN_TIMEOUT = 5 * 60 * 1000;\nconst HEADERS_CONTENT = 'application/json; charset=utf-8';\n\n// 1 hour default newCommandTimeout\nconst NEW_COMMAND_TIMEOUT_SEC = 3600;\n\nlet isFirstRun = true; // we only want to auto start a session on a first run\n\nconst serverTypes = {};\nfor (const key of keys(CloudProviders)) {\n  serverTypes[key] = key;\n}\nserverTypes.local = 'local';\nserverTypes.remote = 'remote';\n\nexport const ServerTypes = serverTypes;\n\nexport const DEFAULT_SERVER_PATH = '/';\nexport const DEFAULT_SERVER_HOST = '127.0.0.1';\nexport const DEFAULT_SERVER_PORT = 4723;\n\nconst SAUCE_OPTIONS_CAP = 'sauce:options';\n\nconst JSON_TYPES = ['object', 'number', 'boolean'];\n\nexport function getCapsObject (caps) {\n  return Object.assign({}, ...(caps.map((cap) => {\n    if (JSON_TYPES.indexOf(cap.type) !== -1) {\n      try {\n        let obj = JSON.parse(cap.value);\n        return {[cap.name]: obj};\n      } catch (ign) {}\n    }\n    return {[cap.name]: cap.value};\n  })));\n}\n\nexport function showError (e, methodName, secs = 5) {\n  let errMessage;\n  if (e['jsonwire-error'] && e['jsonwire-error'].status === 7) {\n    // FIXME: we probably should set 'findElement' as the method name\n    // if it is also number.\n    if (methodName === 10) {\n      methodName = 'findElements';\n    }\n    errMessage = i18n.t('findElementFailure', {methodName});\n    if (e.message) {\n      errMessage += ` Original error: '${e.message}'`;\n    }\n  } else if (e.data) {\n    try {\n      e.data = JSON.parse(e.data);\n    } catch (ign) {}\n    if (e.data.value && e.data.value.message) {\n      errMessage = e.data.value.message;\n    } else {\n      errMessage = e.data;\n    }\n  } else if (e.message) {\n    errMessage = e.message;\n  } else if (e.code) {\n    errMessage = e.code;\n  } else {\n    errMessage = i18n.t('Could not start session');\n  }\n  if (errMessage === 'ECONNREFUSED' || includes(errMessage, 'Failed to fetch')) {\n    errMessage = i18n.t('couldNotConnect');\n  }\n\n  notification.error({\n    message: methodName ? i18n.t('callToMethodFailed', {methodName}) : i18n.t('Error'),\n    description: errMessage,\n    duration: secs\n  });\n\n}\n\n/**\n * Change the caps object, along with the server details and then go back to the new session tab\n */\nexport function setCapsAndServer (server, serverType, caps, uuid, name) {\n  return (dispatch) => {\n    dispatch({type: SET_CAPS_AND_SERVER, server, serverType, caps, uuid, name});\n  };\n}\n\n/**\n * Change a single desired capability\n */\nexport function changeCapability (key, value) {\n  return (dispatch) => {\n    dispatch({type: CHANGE_CAPABILITY, key, value});\n  };\n}\n\n/**\n * Push a capability to the list\n */\nexport function addCapability () {\n  return (dispatch) => {\n    dispatch({type: ADD_CAPABILITY});\n  };\n}\n\n/**\n * Update value of a capability parameter\n */\nexport function setCapabilityParam (index, name, value) {\n  return (dispatch) => {\n    dispatch({type: SET_CAPABILITY_PARAM, index, name, value});\n  };\n}\n\n/**\n * Delete a capability from the list\n */\nexport function removeCapability (index) {\n  return (dispatch) => {\n    dispatch({type: REMOVE_CAPABILITY, index});\n  };\n}\n\nfunction _addVendorPrefixes (caps, dispatch, getState) {\n  const {server, serverType, capsUUID, capsName} = getState().session;\n  const prefixedCaps = addVendorPrefixes(caps);\n  setCapsAndServer(server, serverType, prefixedCaps, capsUUID, capsName)(dispatch);\n  return prefixedCaps;\n}\n\n/**\n * Start a new appium session with the given caps\n */\nexport function newSession (caps, attachSessId = null) {\n  return async (dispatch, getState) => {\n    let session = getState().session;\n\n    // first add vendor prefixes to caps if requested\n    if (!attachSessId && session.addVendorPrefixes) {\n      caps = _addVendorPrefixes(caps, dispatch, getState);\n    }\n\n    dispatch({type: NEW_SESSION_REQUESTED, caps});\n\n    let desiredCapabilities = caps ? getCapsObject(caps) : {};\n    let host, port, username, accessKey, https, path, token;\n    desiredCapabilities = addCustomCaps(desiredCapabilities);\n\n    switch (session.serverType) {\n      case ServerTypes.local:\n        host = session.server.local.hostname;\n        if (host === '0.0.0.0') {\n          // if we're on windows, we won't be able to connect directly to '0.0.0.0'\n          // so just connect to localhost; if we're listening on all interfaces,\n          // that will of course include 127.0.0.1 on all platforms\n          host = 'localhost';\n        }\n        port = session.server.local.port;\n        break;\n      case ServerTypes.remote:\n        host = session.server.remote.hostname;\n        port = session.server.remote.port;\n        path = session.server.remote.path;\n        https = session.server.remote.ssl;\n        break;\n      case ServerTypes.sauce:\n        path = '/wd/hub';\n        host = `ondemand.${session.server.sauce.dataCenter}.saucelabs.com`;\n        port = 80;\n        if (session.server.sauce.useSCProxy) {\n          host = session.server.sauce.scHost || 'localhost';\n          port = parseInt(session.server.sauce.scPort, 10) || 4445;\n        }\n        username = session.server.sauce.username || process.env.SAUCE_USERNAME;\n        accessKey = session.server.sauce.accessKey || process.env.SAUCE_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('sauceCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = false;\n        if (!isPlainObject(desiredCapabilities[SAUCE_OPTIONS_CAP])) {\n          desiredCapabilities[SAUCE_OPTIONS_CAP] = {};\n        }\n        if (!desiredCapabilities[SAUCE_OPTIONS_CAP].name) {\n          const dateTime = moment().format('lll');\n          desiredCapabilities[SAUCE_OPTIONS_CAP].name = `Appium Desktop Session -- ${dateTime}`;\n        }\n        break;\n      case ServerTypes.headspin: {\n        let headspinUrl;\n        try {\n          headspinUrl = new URL(session.server.headspin.webDriverUrl);\n        } catch (ign) {\n          showError(new Error(`${session.server.headspin.webDriverUrl} is invalid url`), null, 0);\n          return;\n        }\n        host = session.server.headspin.hostname = headspinUrl.hostname;\n        path = session.server.headspin.path = headspinUrl.pathname;\n        https = session.server.headspin.ssl = headspinUrl.protocol === 'https:';\n        // new URL() does not have the port of 443 when `https` and 80 when `http`\n        port = session.server.headspin.port = headspinUrl.port === '' ? (https ? 443 : 80) : headspinUrl.port;\n        break;\n      }\n      case ServerTypes.perfecto:\n        host = session.server.perfecto.hostname;\n        port = session.server.perfecto.port || (session.server.perfecto.ssl ? 443 : 80);\n        token = session.server.perfecto.token || process.env.PERFECTO_TOKEN;\n        path = session.server.perfecto.path = '/nexperience/perfectomobile/wd/hub';\n        if (!token) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('Perfecto SecurityToken is required'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities['perfecto:options'] = {securityToken: token};\n        https = session.server.perfecto.ssl;\n        break;\n      case ServerTypes.browserstack:\n        host = session.server.browserstack.hostname = process.env.BROWSERSTACK_HOST || 'hub-cloud.browserstack.com';\n        port = session.server.browserstack.port = process.env.BROWSERSTACK_PORT || 443;\n        path = session.server.browserstack.path = '/wd/hub';\n        username = session.server.browserstack.username || process.env.BROWSERSTACK_USERNAME;\n        if (!desiredCapabilities['bstack:options']) {\n          desiredCapabilities['bstack:options'] = {};\n        }\n        desiredCapabilities['bstack:options'].source = 'appiumdesktop';\n        accessKey = session.server.browserstack.accessKey || process.env.BROWSERSTACK_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('browserstackCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.browserstack.ssl = (parseInt(port, 10) === 443);\n        break;\n      case ServerTypes.lambdatest:\n        host = session.server.lambdatest.hostname = process.env.LAMBDATEST_HOST || 'mobile-hub.lambdatest.com';\n        port = session.server.lambdatest.port = process.env.LAMBDATEST_PORT || 443;\n        path = session.server.lambdatest.path = '/wd/hub';\n        username = session.server.lambdatest.username || process.env.LAMBDATEST_USERNAME;\n        if (desiredCapabilities.hasOwnProperty.call(desiredCapabilities, 'lt:options')) {\n          desiredCapabilities['lt:options'].source = 'appiumdesktop';\n          desiredCapabilities['lt:options'].isRealMobile = true;\n          if (session.server.advanced.useProxy) {\n            desiredCapabilities['lt:options'].proxyUrl = isUndefined(session.server.advanced.proxy) ? '' : session.server.advanced.proxy;\n          }\n        } else {\n          desiredCapabilities['lambdatest:source'] = 'appiumdesktop';\n          desiredCapabilities['lambdatest:isRealMobile'] = true;\n          if (session.server.advanced.useProxy) {\n            desiredCapabilities['lambdatest:proxyUrl'] = isUndefined(session.server.advanced.proxy) ? '' : session.server.advanced.proxy;\n          }\n        }\n        accessKey = session.server.lambdatest.accessKey || process.env.LAMBDATEST_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('lambdatestCredentialsRequired'),\n            duration: 4,\n          });\n          return;\n        }\n        https = session.server.lambdatest.ssl = parseInt(port, 10) === 443;\n        break;\n      case ServerTypes.bitbar:\n        host = process.env.BITBAR_HOST || 'appium.bitbar.com';\n        port = session.server.bitbar.port = 443;\n        path = session.server.bitbar.path = '/wd/hub';\n        accessKey = session.server.bitbar.apiKey || process.env.BITBAR_API_KEY;\n        if (!accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('bitbarCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities['bitbar:options'] = {\n          source: 'appiumdesktop',\n          apiKey: accessKey,\n        };\n        https = session.server.bitbar.ssl = true;\n        break;\n      case ServerTypes.kobiton:\n        host = process.env.KOBITON_HOST || 'api.kobiton.com';\n        port = session.server.kobiton.port = 443;\n        path = session.server.kobiton.path = '/wd/hub';\n        username = session.server.kobiton.username || process.env.KOBITON_USERNAME;\n        accessKey = session.server.kobiton.accessKey || process.env.KOBITON_ACCESS_KEY;\n        desiredCapabilities['kobiton:options'] = {};\n        desiredCapabilities['kobiton:options'].source = 'appiumdesktop';\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('kobitonCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.kobiton.ssl = true;\n        break;\n      case ServerTypes.pcloudy:\n        host = session.server.pcloudy.hostname;\n        port = session.server.pcloudy.port = 443;\n        path = session.server.pcloudy.path = '/objectspy/wd/hub';\n        desiredCapabilities.pCloudy_Username = session.server.pcloudy.username || process.env.PCLOUDY_USERNAME;\n        desiredCapabilities.pCloudy_ApiKey = session.server.pcloudy.accessKey || process.env.PCLOUDY_ACCESS_KEY;\n        if (!(session.server.pcloudy.username || process.env.PCLOUDY_USERNAME) ||\n              !(session.server.pcloudy.accessKey || process.env.PCLOUDY_ACCESS_KEY)) {\n          notification.error({\n            message: 'Error',\n            description: 'PCLOUDY username and api key are required!',\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.pcloudy.ssl = true;\n        break;\n      case ServerTypes.testingbot:\n        host = session.server.testingbot.hostname = process.env.TB_HOST || 'hub.testingbot.com';\n        port = session.server.testingbot.port = 443;\n        path = session.server.testingbot.path = '/wd/hub';\n        if (!desiredCapabilities['tb:options']) {\n          desiredCapabilities['tb:options'] = {};\n        }\n        desiredCapabilities['tb:options'].key = session.server.testingbot.key || process.env.TB_KEY;\n        desiredCapabilities['tb:options'].secret = session.server.testingbot.secret || process.env.TB_SECRET;\n        if (!(session.server.testingbot.key || process.env.TB_KEY) ||\n              !(session.server.testingbot.secret || process.env.TB_SECRET)) {\n          notification.error({\n            message: 'Error',\n            description: i18n.t('testingbotCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.testingbot.ssl = true;\n        break;\n      case ServerTypes.experitest: {\n        if (!session.server.experitest.url || !session.server.experitest.accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('experitestAccessKeyURLRequired'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities['experitest:accessKey'] = session.server.experitest.accessKey;\n\n        let experitestUrl;\n        try {\n          experitestUrl = new URL(session.server.experitest.url);\n        } catch (ign) {\n          showError(new Error(`${session.server.experitest.url} is invalid url`), null, 0);\n          return;\n        }\n\n        host = session.server.experitest.hostname = experitestUrl.hostname;\n        path = session.server.experitest.path = '/wd/hub';\n        https = session.server.experitest.ssl = experitestUrl.protocol === 'https:';\n        port = session.server.experitest.port = experitestUrl.port === '' ? (https ? 443 : 80) : experitestUrl.port;\n        break;\n      } case ServerTypes.roboticmobi: {\n        host = 'remote.robotqa.com';\n        path = '/wd/hub';\n        port = 443;\n        https = session.server.roboticmobi.ssl = true;\n        if (caps) {\n          desiredCapabilities['robotqa:options'] = {};\n          desiredCapabilities['robotqa:options'].robotqa_token = session.server.roboticmobi.token || process.env.ROBOTQA_TOKEN;\n        }\n        break;\n      } case ServerTypes.remotetestkit: {\n        host = 'gwjp.appkitbox.com';\n        path = '/wd/hub';\n        port = 443;\n        https = true;\n        desiredCapabilities['remotetestkit:options'] = {};\n        desiredCapabilities['remotetestkit:options'].accessToken = session.server.remotetestkit.token;\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    // if the server path is '' (or any other kind of falsy) set it to default\n    path = path || DEFAULT_SERVER_PATH;\n    host = host || DEFAULT_SERVER_HOST;\n    port = port || DEFAULT_SERVER_PORT;\n\n    // TODO W2D handle proxy and rejectUnauthorized cases\n    //let rejectUnauthorized = !session.server.advanced.allowUnauthorized;\n    //let proxy;\n    //if (session.server.advanced.useProxy && session.server.advanced.proxy) {\n    //  proxy = session.server.advanced.proxy;\n    //}\n\n    dispatch({type: NEW_SESSION_LOADING});\n\n\n    const serverOpts = {\n      hostname: host,\n      port: parseInt(port, 10),\n      protocol: https ? 'https' : 'http',\n      path,\n      connectionRetryCount: CONN_RETRIES,\n      connectionRetryTimeout: CONN_TIMEOUT\n    };\n\n    if (username && accessKey) {\n      serverOpts.user = username;\n      serverOpts.key = accessKey;\n    }\n\n    // If a newCommandTimeout wasn't provided, set it to 60 * 60 so that sessions don't close on users in short term.\n    // I saw sometimes infinit session timeout was not so good for cloud providers.\n    // So, let me define this value as NEW_COMMAND_TIMEOUT_SEC by default.\n    if (isUndefined(desiredCapabilities[CAPS_NEW_COMMAND])) {\n      desiredCapabilities[CAPS_NEW_COMMAND] = NEW_COMMAND_TIMEOUT_SEC;\n    }\n\n    // If someone didn't specify connectHardwareKeyboard, set it to true by\n    // default\n    if (isUndefined(desiredCapabilities[CAPS_CONNECT_HARDWARE_KEYBOARD])) {\n      desiredCapabilities[CAPS_CONNECT_HARDWARE_KEYBOARD] = true;\n    }\n\n    serverOpts.logLevel = process.env.NODE_ENV === 'development' ? 'info' : 'warn';\n\n    let driver = null;\n    try {\n      if (attachSessId) {\n        // When attaching to a session id, webdriver does not fully populate\n        // client information, so we should supplement by attaching session\n        // capabilities that we are attaching to.\n        const attachedSessionCaps = session.runningAppiumSessions.find((session) => session.id === attachSessId).capabilities;\n        serverOpts.isMobile = true;\n        serverOpts.isIOS = Boolean(attachedSessionCaps.platformName.match(/iOS/i));\n        serverOpts.isAndroid = Boolean(attachedSessionCaps.platformName.match(/Android/i));\n        driver = await Web2Driver.attachToSession(attachSessId, serverOpts, attachedSessionCaps);\n        driver._isAttachedSession = true;\n      } else {\n        driver = await Web2Driver.remote(serverOpts, desiredCapabilities);\n      }\n    } catch (err) {\n      showError(err, null, 0);\n      return;\n    } finally {\n      dispatch({type: NEW_SESSION_DONE});\n      // Save the current server settings\n      await setSetting(SESSION_SERVER_PARAMS, session.server);\n    }\n\n    // The homepage arg in ChromeDriver is not working with Appium. iOS can have a default url, but\n    // we want to keep the process equal to prevent complexity so we launch a default url here to make\n    // sure we don't start with an empty page which will not show proper HTML in the inspector\n    const {browserName = ''} = desiredCapabilities;\n    let mode = APP_MODE.NATIVE;\n\n    if (browserName.trim() !== '') {\n      try {\n        mode = APP_MODE.WEB_HYBRID;\n        await driver.navigateTo('https://appium.io');\n      } catch (ign) {}\n    }\n\n\n    let mjpegScreenshotUrl = driver.capabilities[`appium:${MJPEG_CAP}`] ||\n      driver.capabilities[MJPEG_CAP] ||\n      null;\n\n    const mjpegScreenshotPort = driver.capabilities[`appium:${MJPEG_PORT_CAP}`] ||\n      driver.capabilities[MJPEG_PORT_CAP] ||\n      null;\n\n    // Build mjpegScreenshotUrl if mjpegServerPort in session capabilities\n    if (!mjpegScreenshotUrl && mjpegScreenshotPort) {\n      mjpegScreenshotUrl = `${https ? 'https' : 'http'}://${host}:${mjpegScreenshotPort}`;\n    }\n\n    // pass some state to the inspector that it needs to build recorder\n    // code boilerplate\n    const action = setSessionDetails({\n      driver,\n      sessionDetails: {\n        desiredCapabilities,\n        host,\n        port,\n        path,\n        username,\n        accessKey,\n        https,\n      },\n      mode,\n      mjpegScreenshotUrl\n    });\n    action(dispatch);\n    dispatch(push('/inspector'));\n  };\n}\n\n\n/**\n * Saves the caps and server details\n */\nexport function saveSession (server, serverType, caps, params) {\n  return async (dispatch) => {\n    let {name, uuid} = params;\n    dispatch({type: SAVE_SESSION_REQUESTED});\n    let savedSessions = await getSetting(SAVED_SESSIONS) || [];\n    if (!uuid) {\n\n      // If it's a new session, add it to the list\n      uuid = UUID();\n      let newSavedSession = {\n        date: Date.now(),\n        name,\n        uuid,\n        caps,\n        server,\n        serverType,\n      };\n      savedSessions.push(newSavedSession);\n    } else {\n\n      // If it's an existing session, overwrite it\n      for (let session of savedSessions) {\n        if (session.uuid === uuid) {\n          session.name = name;\n          session.caps = caps;\n          session.server = server;\n          session.serverType = serverType;\n        }\n      }\n    }\n    await setSetting(SAVED_SESSIONS, savedSessions);\n    const action = getSavedSessions();\n    await action(dispatch);\n    dispatch({type: SET_CAPS_AND_SERVER, server, serverType, caps, uuid, name});\n    dispatch({type: SAVE_SESSION_DONE});\n  };\n}\n\n/**\n * Get the sessions saved by the user\n */\nexport function getSavedSessions () {\n  return async (dispatch) => {\n    dispatch({type: GET_SAVED_SESSIONS_REQUESTED});\n    let savedSessions = await getSetting(SAVED_SESSIONS);\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions});\n  };\n}\n\n/**\n * Switch to a different tab\n */\nexport function switchTabs (key) {\n  return (dispatch) => {\n    dispatch({type: SWITCHED_TABS, key});\n  };\n}\n\n/**\n * Open a 'Save As' modal\n */\nexport function requestSaveAsModal () {\n  return (dispatch) => {\n    dispatch({type: SAVE_AS_MODAL_REQUESTED});\n  };\n}\n\n/**\n * Hide the 'Save As' modal\n */\nexport function hideSaveAsModal () {\n  return (dispatch) => {\n    dispatch({type: HIDE_SAVE_AS_MODAL_REQUESTED});\n  };\n}\n\n/**\n * Set the text to save capabilities as\n */\nexport function setSaveAsText (saveAsText) {\n  return (dispatch) => {\n    dispatch({type: SET_SAVE_AS_TEXT, saveAsText});\n  };\n}\n\n/**\n * Delete a saved session\n */\nexport function deleteSavedSession (uuid) {\n  return async (dispatch) => {\n    dispatch({type: DELETE_SAVED_SESSION_REQUESTED, uuid});\n    let savedSessions = await getSetting(SAVED_SESSIONS);\n    let newSessions = savedSessions.filter((session) => session.uuid !== uuid);\n    await setSetting(SAVED_SESSIONS, newSessions);\n    dispatch({type: DELETE_SAVED_SESSION_DONE});\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions: newSessions});\n  };\n}\n\n/**\n * Set the session id to attach to\n */\nexport function setAttachSessId (attachSessId) {\n  return (dispatch) => {\n    dispatch({type: SET_ATTACH_SESS_ID, attachSessId});\n  };\n}\n\n/**\n * Change the server type\n */\nexport function changeServerType (serverType) {\n  return async (dispatch, getState) => {\n    await setSetting(SESSION_SERVER_TYPE, serverType);\n    dispatch({type: CHANGE_SERVER_TYPE, serverType});\n    const action = getRunningSessions();\n    action(dispatch, getState);\n  };\n}\n\n/**\n * Set a server parameter (host, port, etc...)\n */\nexport function setServerParam (name, value, serverType) {\n  const debounceGetRunningSessions = debounce(getRunningSessions(), 5000);\n  return async (dispatch, getState) => {\n    serverType = serverType || getState().session.serverType;\n    await setSetting(SESSION_SERVER_TYPE, serverType);\n    dispatch({type: SET_SERVER_PARAM, serverType, name, value});\n    debounceGetRunningSessions(dispatch, getState);\n  };\n}\n\n/**\n * Set the local server hostname and port to whatever was saved in 'actions/StartServer.js' so that it\n * defaults to what the currently running appium server is\n */\nexport function setLocalServerParams () {\n  return async (dispatch, getState) => {\n    let serverArgs = await getSetting(SERVER_ARGS);\n    // Get saved server args from settings and set local server settings to it. If there are no saved args, set local\n    // host and port to undefined\n    if (serverArgs) {\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: serverArgs.port});\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: 'localhost'});\n    } else {\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: undefined});\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: undefined});\n      if (getState().session.serverType === 'local') {\n        const action = changeServerType('remote');\n        await action(dispatch, getState);\n      }\n    }\n  };\n}\n\n/**\n * Set the server parameters to whatever they were last saved as.\n * Params are saved whenever there's a new session\n */\nexport function setSavedServerParams () {\n  return async (dispatch, getState) => {\n    let server = await getSetting(SESSION_SERVER_PARAMS);\n    let serverType = await getSetting(SESSION_SERVER_TYPE);\n    let currentProviders = getState().session.visibleProviders;\n\n    if (server) {\n      // if we have a cloud provider as a saved server, but for some reason the\n      // cloud provider is no longer in the list, revert server type to remote\n      if (keys(CloudProviders).includes(serverType) &&\n          !currentProviders.includes(serverType)) {\n        serverType = ServerTypes.remote;\n      }\n      dispatch({type: SET_SERVER, server, serverType});\n    }\n  };\n}\n\nexport function setStateFromAppiumFile (newFilepath = null) {\n  return async (dispatch) => {\n    // no \"fs\" means we're not in an Electron renderer so do nothing\n    if (!fs) {\n      return;\n    }\n    try {\n      let filePath = newFilepath;\n      if (!newFilepath) {\n        const lastArg = process.argv[process.argv.length - 1];\n        if (!lastArg.startsWith('filename=')) {\n          return;\n        }\n        filePath = lastArg.split('=')[1];\n      }\n      if (sessionStorage.getItem(FILE_PATH_STORAGE_KEY) === filePath) {\n        // file was opened already, do nothing\n        return;\n      }\n      const appiumJson = JSON.parse(await util.promisify(fs.readFile)(filePath, 'utf8'));\n      sessionStorage.setItem(FILE_PATH_STORAGE_KEY, filePath);\n      dispatch({type: SET_STATE_FROM_SAVED, state: appiumJson, filePath});\n    } catch (e) {\n      notification.error({\n        message: `Cannot open file '${newFilepath}'.\\n ${e.message}\\n ${e.stack}`,\n      });\n    }\n  };\n}\n\nexport function saveFile (filepath) {\n  return async (dispatch, getState) => {\n    const state = getState().session;\n    const filePath = filepath || state.filePath;\n    if (filePath) {\n      const appiumFileInfo = getSaveableState(state);\n      await util.promisify(fs.writeFile)(filePath, JSON.stringify(appiumFileInfo, null, 2), 'utf8');\n      sessionStorage.setItem(FILE_PATH_STORAGE_KEY, filePath);\n    } else {\n      // no filepath provided, tell the main renderer to open the save file dialog and\n      // ask the user to save file to a provided path\n      ipcRenderer.send('save-file-as');\n    }\n  };\n}\n\nexport function getRunningSessions () {\n  return async (dispatch, getState) => {\n    const avoidServerTypes = [\n      'sauce'\n    ];\n    // Get currently running sessions for this server\n    const state = getState().session;\n    const {server, serverType} = state;\n    const serverInfo = server[serverType];\n\n    let {hostname, port, path, ssl, username, accessKey} = serverInfo;\n\n    // if we have a standard remote server, fill out connection info based on placeholder defaults\n    // in case the user hasn't adjusted those fields\n    if (serverType === ServerTypes.remote) {\n      hostname = hostname || DEFAULT_SERVER_HOST;\n      port = port || DEFAULT_SERVER_PORT;\n      path = path || DEFAULT_SERVER_PATH;\n    }\n\n    if (!hostname || !port || !path) {\n      // no need to get sessions if we don't have complete server info\n      return;\n    }\n\n    dispatch({type: GET_SESSIONS_REQUESTED});\n    if (avoidServerTypes.includes(serverType)) {\n      dispatch({type: GET_SESSIONS_DONE});\n      return;\n    }\n\n    try {\n      const adjPath = path.endsWith('/') ? path : `${path}/`;\n      const res = username && accessKey\n        ? await ky(`http${ssl ? 's' : ''}://${hostname}:${port}${adjPath}sessions`, {\n          headers: {\n            'Authorization': `Basic ${btoa(`${username}:${accessKey}`)}`,\n            'content-type': HEADERS_CONTENT\n          }\n        }).json()\n        : await ky(`http${ssl ? 's' : ''}://${hostname}:${port}${adjPath}sessions`, {\n          headers: {'content-type': HEADERS_CONTENT}\n        }).json();\n      dispatch({type: GET_SESSIONS_DONE, sessions: res.value});\n    } catch (err) {\n      console.warn(`Ignoring error in getting list of active sessions: ${err}`); // eslint-disable-line no-console\n      dispatch({type: GET_SESSIONS_DONE});\n    }\n  };\n}\n\nexport function startDesiredCapsNameEditor () {\n  return (dispatch) => {\n    dispatch({type: ENABLE_DESIRED_CAPS_NAME_EDITOR});\n  };\n}\n\nexport function abortDesiredCapsNameEditor () {\n  return (dispatch) => {\n    dispatch({type: ABORT_DESIRED_CAPS_NAME_EDITOR});\n  };\n}\n\nexport function saveDesiredCapsName () {\n  return (dispatch, getState) => {\n    const {server, serverType, caps, capsUUID, desiredCapsName} = getState().session;\n    dispatch({type: SAVE_DESIRED_CAPS_NAME, name: desiredCapsName});\n    saveSession(server, serverType, caps, {name: desiredCapsName, uuid: capsUUID})(dispatch);\n  };\n}\n\nexport function setDesiredCapsName (desiredCapsName) {\n  return (dispatch) => {\n    dispatch({type: SET_DESIRED_CAPS_NAME, desiredCapsName});\n  };\n}\n\nexport function startDesiredCapsEditor () {\n  return (dispatch) => {\n    dispatch({type: ENABLE_DESIRED_CAPS_EDITOR});\n  };\n}\n\nexport function abortDesiredCapsEditor () {\n  return (dispatch) => {\n    dispatch({type: ABORT_DESIRED_CAPS_EDITOR});\n  };\n}\n\nexport function saveRawDesiredCaps () {\n  return (dispatch, getState) => {\n    const state = getState().session;\n    const {rawDesiredCaps, caps: capsArray} = state;\n    try {\n      const newCaps = JSON.parse(rawDesiredCaps);\n\n      // Transform the current caps array to an object\n      let caps = {};\n      for (let {type, name, value} of capsArray) {\n        caps[name] = {type, value};\n      }\n\n      // Translate the caps JSON to array format\n      let newCapsArray = toPairs(newCaps).map(([name, value]) => ({\n        type: (() => {\n          let type = typeof value;\n\n          // If we already have this cap and it's file type, keep the type the same\n          if (caps[name] && caps[name].type === 'file' && type === 'string') {\n            return 'file';\n          } else if (type === 'string') {\n            return 'text';\n          } else {\n            return type;\n          }\n        })(),\n        name,\n        value,\n      }));\n      dispatch({type: SAVE_RAW_DESIRED_CAPS, caps: newCapsArray});\n    } catch (e) {\n      dispatch({type: SHOW_DESIRED_CAPS_JSON_ERROR, message: e.message});\n    }\n  };\n}\n\nexport function setRawDesiredCaps (rawDesiredCaps) {\n  return (dispatch, getState) => {\n    const state = getState().session;\n    let isValidCapsJson = true;\n    let invalidCapsJsonReason;\n    if (state.isValidatingCapsJson) {\n      try {\n        JSON.parse(rawDesiredCaps);\n      } catch (e) {\n        isValidCapsJson = false;\n        invalidCapsJsonReason = e.message;\n      }\n    }\n    dispatch({type: SET_RAW_DESIRED_CAPS, rawDesiredCaps, isValidCapsJson, invalidCapsJsonReason});\n  };\n}\n\nexport function addCloudProvider () {\n  return (dispatch) => {\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: true});\n  };\n}\n\nexport function stopAddCloudProvider () {\n  return (dispatch) => {\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: false});\n  };\n}\n\nexport function addVisibleProvider (provider) {\n  return async (dispatch, getState) => {\n    let currentProviders = getState().session.visibleProviders;\n    const providers = union(currentProviders, [provider]);\n    await setSetting(VISIBLE_PROVIDERS, providers);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\nexport function removeVisibleProvider (provider) {\n  return async (dispatch, getState) => {\n    let currentProviders = getState().session.visibleProviders;\n    const providers = without(currentProviders, provider);\n    await setSetting(VISIBLE_PROVIDERS, providers);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\nexport function setVisibleProviders () {\n  return async (dispatch) => {\n    const providers = await getSetting(VISIBLE_PROVIDERS);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\n/**\n * Add custom capabilities\n *\n * @param {object} caps\n */\nfunction addCustomCaps (caps) {\n  const {platformName = ''} = caps;\n  const androidCustomCaps = {};\n  // @TODO: remove when this is defaulted in the newest Appium 1.8.x release\n  androidCustomCaps[CAPS_ENSURE_WEBVIEW_HAVE_PAGES] = true;\n  // Make sure the screenshot is taken of the whole screen when the ChromeDriver is used\n  androidCustomCaps[CAPS_NATIVE_WEB_SCREENSHOT] = true;\n\n  const iosCustomCaps = {};\n  // Always add the includeSafariInWebviews for future HTML detection\n  // This will ensure that if you use AD to switch between App and browser\n  // that it can detect Safari as a webview\n  iosCustomCaps[CAPS_INCLUDE_SAFARI_IN_WEBVIEWS] = true;\n\n  return {\n    ...caps,\n    ...(platformName.toLowerCase() === 'android' ? androidCustomCaps : {}),\n    ...(platformName.toLowerCase() === 'ios' ? iosCustomCaps : {}),\n  };\n}\n\nexport function bindWindowClose () {\n  return (dispatch, getState) => {\n    window.addEventListener('beforeunload', async (evt) => {\n      let {driver} = getState().inspector;\n      if (driver) {\n        try {\n          const action = quitSession('Window closed');\n          await action(dispatch, getState);\n        } finally {\n          driver = null;\n        }\n      }\n\n      // to allow the window close to continue, the thing we must do is make sure the event no\n      // longer has any 'returnValue' property\n      delete evt.returnValue;\n    });\n  };\n}\n\nexport function setAddVendorPrefixes (addVendorPrefixes) {\n  return (dispatch) => {\n    dispatch({type: SET_ADD_VENDOR_PREFIXES, addVendorPrefixes});\n  };\n}\n\nexport function initFromQueryString () {\n  return async (dispatch, getState) => {\n    if (!isFirstRun) {\n      return;\n    }\n\n    isFirstRun = false;\n\n    const url = new URL(window.location.href);\n    const initialState = url.searchParams.get('state');\n    const autoStartSession = url.searchParams.get('autoStart');\n\n    if (initialState) {\n      try {\n        const state = JSON.parse(initialState);\n        dispatch({type: SET_STATE_FROM_URL, state});\n      } catch (e) {\n        showError(new Error('Could not parse initial state from URL'), null, 0);\n      }\n    }\n\n    if (autoStartSession === AUTO_START_URL_PARAM) {\n      const {attachSessId, caps} = getState().session;\n      if (attachSessId) {\n        return await newSession(null, attachSessId)(dispatch, getState);\n      }\n      await newSession(caps)(dispatch, getState);\n    }\n  };\n}\n","import React from 'react';\nimport formatJSON from 'format-json';\nimport SessionStyles from './Session.css';\nimport { Card, Button, Alert, Tooltip } from 'antd';\nimport { getCapsObject } from '../../actions/Session.js';\nimport { CloseOutlined, SaveOutlined, EditOutlined } from '@ant-design/icons';\nimport { ALERT } from '../AntdTypes';\n\nconst FormattedCaps = (props) => {\n  const { caps, title, desiredCapsName, isEditingDesiredCapsName,\n          isEditingDesiredCaps, startDesiredCapsEditor, abortDesiredCapsEditor,\n          saveRawDesiredCaps, setRawDesiredCaps, rawDesiredCaps,\n          isValidCapsJson, invalidCapsJsonReason, t } = props;\n\n  const setCapsTitle = () => {\n    const { setDesiredCapsName } = props;\n    if (!title) {\n      return 'JSON Representation';\n    } else if (!isEditingDesiredCapsName) {\n      return title;\n    } else {\n      return <input\n        onChange={(e) => setDesiredCapsName(e.target.value)}\n        value={desiredCapsName}\n        className={SessionStyles.capsEditorTitle}\n      />;\n    }\n  };\n\n  const setCapsTitleButtons = () => {\n    const { startDesiredCapsNameEditor, abortDesiredCapsNameEditor, saveDesiredCapsName } = props;\n    if (!title) {\n      return null;\n    } else if (!isEditingDesiredCapsName) {\n      return <Tooltip title={t('Edit')}>\n        <Button\n          size='small'\n          onClick={startDesiredCapsNameEditor}\n          icon={<EditOutlined/>}\n          className={SessionStyles.capsNameEditorButton}/>\n      </Tooltip>;\n    } else {\n      return <div><Tooltip title={t('Cancel')}>\n        <Button\n          size='small'\n          onClick={abortDesiredCapsNameEditor}\n          icon={<CloseOutlined/>}\n          className={SessionStyles.capsNameEditorButton} />\n      </Tooltip>\n      <Tooltip title={t('Save')}>\n        <Button\n          size='small'\n          onClick={saveDesiredCapsName}\n          icon={<SaveOutlined/>}\n          className={SessionStyles.capsNameEditorButton} />\n      </Tooltip></div>;\n    }\n  };\n\n  return caps && <Card\n    className={SessionStyles.formattedCaps}\n    title={setCapsTitle()}\n    extra={setCapsTitleButtons()}\n  >\n    <div className={SessionStyles.capsEditorControls}>\n      {isEditingDesiredCaps && <Tooltip title={t('Cancel')}>\n        <Button\n          onClick={abortDesiredCapsEditor}\n          icon={<CloseOutlined/>}\n          className={SessionStyles.capsEditorButton} />\n      </Tooltip> }\n      {isEditingDesiredCaps && <Tooltip title={t('Save')}>\n        <Button\n          onClick={saveRawDesiredCaps}\n          icon={<SaveOutlined/>}\n          className={SessionStyles.capsEditorButton} />\n      </Tooltip>}\n      {!isEditingDesiredCaps && <Tooltip title={t('Edit Raw JSON')} placement=\"topRight\" >\n        <Button\n          onClick={startDesiredCapsEditor}\n          icon={<EditOutlined/>} />\n      </Tooltip> }\n    </div>\n    {isEditingDesiredCaps && <div className={SessionStyles.capsEditor}>\n      <textarea onChange={(e) => setRawDesiredCaps(e.target.value)} value={rawDesiredCaps}\n        className={`${SessionStyles.capsEditorBody} ${isValidCapsJson ? SessionStyles.capsEditorBodyFull : SessionStyles.capsEditorBodyResized}`}\n      />\n      {!isValidCapsJson && <Alert message={invalidCapsJsonReason} type={ALERT.ERROR} />}\n    </div>}\n    {!isEditingDesiredCaps && <div className={SessionStyles.formattedCapsBody}>\n      <pre>{formatJSON.plain(getCapsObject(caps))}</pre>\n    </div>}\n  </Card>;\n};\n\nexport default FormattedCaps;\n","import React from 'react';\nimport { Switch, Input } from 'antd';\nimport SessionStyles from './Session.css';\nimport { remote, log } from '../../polyfills';\nimport { FileOutlined } from '@ant-design/icons';\nimport { INPUT } from '../AntdTypes';\nimport _ from 'lodash';\n\nconst getLocalFilePath = async () => {\n  try {\n    const {canceled, filePaths} = await remote.dialog.showOpenDialog({properties: ['openFile']});\n    if (!canceled && !_.isEmpty(filePaths)) {\n      return filePaths[0];\n    }\n  } catch (e) {\n    log.error(e);\n  }\n};\n\nconst CapabilityControl = ({ cap, onSetCapabilityParam, onPressEnter, isEditingDesiredCaps, id, t }) => {\n  switch (cap.type) {\n    case 'text':\n      return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n        onChange={(e) => onSetCapabilityParam(e.target.value)} onPressEnter={onPressEnter} className={SessionStyles.capsBoxFont} />;\n    case 'boolean':\n      return <Switch disabled={isEditingDesiredCaps} id={id} checkedChildren={'true'} unCheckedChildren={'false'}\n        placeholder={t('Value')} checked={cap.value} onChange={(value) => onSetCapabilityParam(value)} />;\n    case 'number':\n      return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n        onChange={(e) => !isNaN(parseInt(e.target.value, 10)) ? onSetCapabilityParam(parseInt(e.target.value, 10)) : onSetCapabilityParam(undefined)}\n        onPressEnter={onPressEnter} className={SessionStyles.capsBoxFont} />;\n    case 'object':\n    case 'json_object':\n      return <Input disabled={isEditingDesiredCaps} id={id} type={INPUT.TEXTAREA} rows={4} placeholder={t('Value')}\n        value={cap.value} onChange={(e) => onSetCapabilityParam(e.target.value)} className={SessionStyles.capsBoxFont} />;\n    case 'file':\n      return <div className={SessionStyles.fileControlWrapper}>\n        <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n          onChange={(e) => onSetCapabilityParam(e.target.value)} onPressEnter={onPressEnter} className={SessionStyles.capsBoxFont}\n          addonAfter={\n            <FileOutlined className={SessionStyles['filepath-button']}\n              onClick={async () => onSetCapabilityParam(await getLocalFilePath() || cap.value)} />\n          } />\n      </div>;\n    default:\n      throw `Invalid cap type: ${cap.type}`;\n  }\n};\n\nexport default CapabilityControl;\n","import React, { useEffect, useRef } from 'react';\nimport { Button, Checkbox, Input, Modal, Form, Row, Col, Select, Tooltip } from 'antd';\nimport FormattedCaps from './FormattedCaps';\nimport CapabilityControl from './CapabilityControl';\nimport SessionStyles from './Session.css';\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport { ROW } from '../AntdTypes';\n\nconst whitespaces = /^\\s|\\s$/;\n\nconst whitespaceMsg = (value) => {\n  const leadingSpace = /^\\s/.test(value);\n  const trailingSpace = /\\s$/.test(value);\n\n  if (leadingSpace && trailingSpace) {return 'Contains Leading & Trailing Whitespace';}\n  if (leadingSpace) {return 'Contains Leading Whitespace';}\n  if (trailingSpace) {return 'Contains Trailing Whitespace';}\n};\n\n// Callback when the type of a capability is changed\nconst handleSetType = (setCapabilityParam, caps, index, type) => {\n  setCapabilityParam(index, 'type', type);\n\n  // Translate the current value to the new type\n  let translatedValue = caps[index].value;\n  switch (type) {\n    case 'boolean':\n      if (translatedValue === 'true') {\n        translatedValue = true;\n      } else if (translatedValue === 'false') {\n        translatedValue = false;\n      } else {\n        translatedValue = !!translatedValue;\n      }\n      break;\n    case 'number':\n      translatedValue = parseInt(translatedValue, 10) || 0;\n      break;\n    case 'text':\n    case 'json_object':\n    case 'object':\n      translatedValue = translatedValue + '';\n      break;\n    case 'file':\n      translatedValue = '';\n      break;\n    default:\n      break;\n  }\n  setCapabilityParam(index, 'value', translatedValue);\n};\n\nconst CapabilityEditor = (props) => {\n  const { setCapabilityParam, caps, addCapability, removeCapability, saveSession, hideSaveAsModal,\n          saveAsText, showSaveAsModal, setSaveAsText, isEditingDesiredCaps, t,\n          setAddVendorPrefixes, addVendorPrefixes, server, serverType } = props;\n\n  const onSaveAsOk = () => saveSession(server, serverType, caps, {name: saveAsText});\n  const latestCapField = useRef();\n\n  // if we have more than one cap and the most recent cap name is empty, it means we've just\n  // added a new cap field, so focus that input element. But only do this once, so we don't annoy\n  // the user if they decide to unfocus and do something else.\n  useEffect(() => {\n    if (caps.length > 1 && !latestCapField.current.input.value && !latestCapField.current.__didFocus) {\n      latestCapField.current.focus();\n      latestCapField.current.__didFocus = true;\n    }\n  }, [caps.length, latestCapField]);\n\n  return (\n    <Row type={ROW.FLEX} align=\"top\" justify=\"start\" className={SessionStyles.capsFormRow}>\n      <Col order={1} span={12} className={SessionStyles.capsFormCol}>\n        <Form className={SessionStyles.newSessionForm}>\n          {caps.map((cap, index) => (\n            <Row gutter={8} key={index}>\n              <Col span={7}>\n                <Form.Item>\n                  <Tooltip title={whitespaceMsg(cap.name)} open={whitespaces.test(cap.name)}>\n                    <Input disabled={isEditingDesiredCaps} id={`desiredCapabilityName_${index}`} placeholder={t('Name')}\n                      value={cap.name} onChange={(e) => setCapabilityParam(index, 'name', e.target.value)}\n                      ref={index === caps.length - 1 ? latestCapField : ''}\n                      className={SessionStyles.capsBoxFont} />\n                  </Tooltip>\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item>\n                  <Select disabled={isEditingDesiredCaps} defaultValue={cap.type}\n                    onChange={(val) => handleSetType(setCapabilityParam, caps, index, val)}>\n                    <Select.Option value='text'>{t('text')}</Select.Option>\n                    <Select.Option value='boolean'>{t('boolean')}</Select.Option>\n                    <Select.Option value='number'>{t('number')}</Select.Option>\n                    <Select.Option value='object'>{t('JSON object')}</Select.Option>\n                    <Select.Option value='file'>{t('filepath')}</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={7}>\n                <Form.Item>\n                  <Tooltip title={whitespaceMsg(cap.value)} open={whitespaces.test(cap.value)}>\n                    <CapabilityControl {...props} cap={cap} id={`desiredCapabilityValue_${index}`}\n                      onSetCapabilityParam={(value) => setCapabilityParam(index, 'value', value)}\n                      onPressEnter={(index === caps.length - 1) ? addCapability : () => {}} />\n                  </Tooltip>\n                </Form.Item>\n              </Col>\n              <Col span={2}>\n                <div className={SessionStyles.btnDeleteCap}>\n                  <Form.Item>\n                    <Button {...{disabled: caps.length <= 1 || isEditingDesiredCaps}}\n                      icon={<DeleteOutlined/>}\n                      onClick={() => removeCapability(index)} />\n                  </Form.Item>\n                </div>\n              </Col>\n            </Row>\n          ))}\n          <Row>\n            <Col span={22}>\n              <Form.Item>\n                <Checkbox checked={addVendorPrefixes}\n                  onChange={(e) => setAddVendorPrefixes(e.target.checked)}>\n                  {t('autoAddPrefixes')}\n                </Checkbox>\n              </Form.Item>\n            </Col>\n            <Col span={2}>\n              <Form.Item>\n                <Button\n                  disabled={isEditingDesiredCaps} id='btnAddDesiredCapability'\n                  icon={<PlusOutlined/>}\n                  onClick={addCapability}\n                  className={SessionStyles['add-desired-capability-button']} />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Col>\n      <Col order={2} span={12} className={SessionStyles.capsFormattedCol}>\n        <FormattedCaps {...props} />\n        <Modal open={showSaveAsModal}\n          title={t('Save Capability Set As')}\n          okText='Save'\n          cancelText='Cancel'\n          onCancel={hideSaveAsModal}\n          onOk={onSaveAsOk}>\n          <Input onChange={(e) => setSaveAsText(e.target.value)} addonBefore={t('Name')}\n            value={saveAsText} onPressEnter={onSaveAsOk} />\n        </Modal>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CapabilityEditor;\n","import React from 'react';\nimport moment from 'moment';\nimport { Button, Row, Col, Table } from 'antd';\nimport FormattedCaps from './FormattedCaps';\nimport SessionStyles from './Session.css';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nconst DATE_COLUMN_WIDTH = '25%';\nconst ACTIONS_COLUMN_WIDTH = '106px';\n\nconst dataSource = (savedSessions) => {\n  if (!savedSessions) {\n    return [];\n  }\n  return savedSessions.map((session) => ({\n    key: session.uuid,\n    name: (session.name || '(Unnamed)'),\n    date: moment(session.date).format('YYYY-MM-DD')\n  }));\n};\n\nconst sessionFromUUID = (savedSessions, uuid) => {\n  for (let session of savedSessions) {\n    if (session.uuid === uuid) {\n      return session;\n    }\n  }\n  throw new Error(`Couldn't find session with uuid ${uuid}`);\n};\n\nconst SavedSessions = (props) => {\n  const { savedSessions, capsUUID, switchTabs } = props;\n\n  const handleCapsAndServer = (uuid) => {\n    const { setCapsAndServer, server, serverType,\n            isEditingDesiredCapsName, abortDesiredCapsNameEditor,\n            isEditingDesiredCaps, abortDesiredCapsEditor } = props;\n    const session = sessionFromUUID(savedSessions, uuid);\n\n    // Disable any editors before changing the selected caps\n    if (isEditingDesiredCapsName) {\n      abortDesiredCapsNameEditor();\n    }\n    if (isEditingDesiredCaps) {\n      abortDesiredCapsEditor();\n    }\n\n    // In case user has CAPS saved from older version of Inspector which\n    // doesn't contain server and serverType within the session object\n    setCapsAndServer(\n      session.server || server,\n      session.serverType || serverType,\n      session.caps,\n      session.uuid,\n      session.name\n    );\n  };\n\n  const handleDelete = (uuid) => {\n    const { deleteSavedSession } = props;\n    if (window.confirm('Are you sure?')) {\n      deleteSavedSession(uuid);\n    }\n  };\n\n  const columns = [{\n    title: 'Capability Set',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Created',\n    dataIndex: 'date',\n    key: 'date',\n    width: DATE_COLUMN_WIDTH\n  }, {\n    title: 'Actions',\n    key: 'action',\n    width: ACTIONS_COLUMN_WIDTH,\n    render: (_, record) => <div>\n      <Button\n        icon={<EditOutlined/>}\n        onClick={() => {handleCapsAndServer(record.key); switchTabs('new');}}\n        className={SessionStyles.editSession}\n      />\n      <Button\n        icon={<DeleteOutlined/>}\n        onClick={() => handleDelete(record.key)}/>\n    </div>\n  }];\n\n  return (\n    <Row className={SessionStyles.savedSessions}>\n      <Col span={12}>\n        <Table\n          pagination={false}\n          sticky={true}\n          dataSource={dataSource(savedSessions)}\n          columns={columns}\n          onRow={(row) => ({onClick: () => handleCapsAndServer(row.key)})}\n          rowClassName={(row) => (capsUUID === row.key ? SessionStyles.selected : '')} />\n      </Col>\n      <Col span={12} className={SessionStyles.capsFormattedCol}>\n        <FormattedCaps {...props}\n          title={capsUUID ? sessionFromUUID(savedSessions, capsUUID).name : null} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SavedSessions;\n","import React from 'react';\nimport { Form, Card, Select, Button, Row, Col } from 'antd';\nimport SessionStyles from './Session.css';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { ServerTypes } from '../../actions/Session';\n\nconst formatCaps = (caps) => {\n  let importantCaps = [caps.app, caps.platformName, caps.deviceName];\n  if (caps.automationName) {\n    importantCaps.push(caps.automationName);\n  }\n  return importantCaps.join(', ').trim();\n};\n\nconst formatCapsBrowserstack = (caps) => {\n  let importantCaps = formatCaps(caps).split(', ');\n  if (caps.sessionName) {\n    importantCaps.push(caps.sessionName);\n  }\n  return importantCaps.join(', ').trim();\n};\n\nconst formatCapsLambdaTest = (caps) => {\n  if (caps.hasOwnProperty.call(caps, 'capabilities')) {\n    caps = caps.capabilities;\n  }\n  const deviceName = caps.desired ? caps.desired.deviceName : caps.deviceName;\n  const importantCaps = [deviceName, caps.platformName, caps.platformVersion];\n  return importantCaps.join(', ').trim();\n};\n\nconst getSessionInfo = (session, serverType) => {\n  switch (serverType) {\n    case ServerTypes.browserstack:\n      return `${session.id} — ${formatCapsBrowserstack(session.capabilities)}`;\n    case ServerTypes.lambdatest:\n      return `${session.id} - ${formatCapsLambdaTest(session.capabilities)}`;\n    default:\n      return `${session.id} — ${formatCaps(session.capabilities)}`;\n  }\n};\n\nconst AttachToSession = ({ serverType, attachSessId, setAttachSessId, runningAppiumSessions, getRunningSessions, t }) => (\n  <Form>\n    <Form.Item>\n      <Card>\n        <p className={SessionStyles.localDesc}>\n          {t('connectToExistingSessionInstructions')}<br/>{t('selectSessionIDInDropdown')}\n        </p>\n      </Card>\n    </Form.Item>\n    <Form.Item>\n      <Row>\n        <Col span={23}>\n          <Select showSearch\n            mode='AutoComplete'\n            notFoundContent='None found'\n            placeholder={t('enterYourSessionId')}\n            value={attachSessId || undefined}\n            onChange={(value) => setAttachSessId(value)}>\n            {runningAppiumSessions.map((session) => <Select.Option key={session.id} value={session.id}>\n              <div>{getSessionInfo(session, serverType)}</div>\n            </Select.Option>)}\n          </Select>\n        </Col>\n        <Col span={1}>\n          <div className={SessionStyles.btnReload}>\n            <Button\n              onClick={getRunningSessions}\n              id='refreshButton'\n              icon={<ReloadOutlined/>} />\n          </div>\n        </Col>\n      </Row>\n    </Form.Item>\n  </Form>\n);\n\nexport default AttachToSession;\n","import React from 'react';\nimport { Form, Row, Col, Input, Checkbox } from 'antd';\nimport { DEFAULT_SERVER_PATH, DEFAULT_SERVER_HOST, DEFAULT_SERVER_PORT } from '../../actions/Session';\n\nconst ServerTabCustom = ({ server, setServerParam, t }) => (\n  <Form>\n    <Row gutter={8}>\n      <Col span={9}>\n        <Form.Item>\n          <Input id='customServerHost' placeholder={DEFAULT_SERVER_HOST} addonBefore={t('Remote Host')} value={server.remote.hostname}\n            onChange={(e) => setServerParam('hostname', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={4}>\n        <Form.Item>\n          <Input id='customServerPort' placeholder={DEFAULT_SERVER_PORT} addonBefore={t('Remote Port')} value={server.remote.port}\n            onChange={(e) => setServerParam('port', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={9}>\n        <Form.Item>\n          <Input id='customServerPath' placeholder={DEFAULT_SERVER_PATH} addonBefore={t('Remote Path')} value={server.remote.path}\n            onChange={(e) => setServerParam('path', e.target.value)} />\n        </Form.Item>\n      </Col>\n      <Col span={2}>\n        <Form.Item>\n          <Checkbox id='customServerSSL' checked={!!server.remote.ssl} value={server.remote.ssl} onChange={(e) => setServerParam('ssl', e.target.checked)}>{t('SSL')}</Checkbox>\n        </Form.Item>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default ServerTabCustom;\n","import React from 'react';\nimport { Collapse, Form, Row, Col, Checkbox, Input } from 'antd';\nimport styles from './Session.css';\n\nconst AdvancedServerParams = ({ server, setServerParam, serverType, t }) => (\n  <Row gutter={8}>\n    <Col className={styles.advancedSettingsContainerCol}>\n      <div className={styles.advancedSettingsContainer}>\n        <Collapse bordered={true}>\n          <Collapse.Panel header={t('Advanced Settings')}>\n            <Row>\n              {serverType !== 'lambdatest' &&\n              <Col span={7}>\n                <Form.Item>\n                  <Checkbox checked={!!server.advanced.allowUnauthorized} onChange={(e) => setServerParam('allowUnauthorized', e.target.checked, 'advanced')}>{t('allowUnauthorizedCerts')}</Checkbox>\n                </Form.Item>\n              </Col>}\n              <Col span={5} align='right'>\n                <Form.Item>\n                  <Checkbox checked={!!server.advanced.useProxy} onChange={(e) => setServerParam('useProxy', e.target.checked, 'advanced')}>{t('Use Proxy')}</Checkbox>\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item>\n                  <Input disabled={!server.advanced.useProxy} onChange={(e) => setServerParam('proxy', e.target.value, 'advanced')}\n                    placeholder={t('Proxy URL')} value={server.advanced.proxy} />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Collapse.Panel>\n        </Collapse>\n      </div>\n    </Col>\n  </Row>\n);\n\nexport default AdvancedServerParams;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Modal, Row, Col, Button } from 'antd';\nimport CloudProviders from './CloudProviders';\nimport SessionStyles from './Session.css';\nimport { BUTTON } from '../AntdTypes';\n\nconst CloudProviderSelector = (props) => {\n  const { visibleProviders = [], isAddingCloudProvider, stopAddCloudProvider, t } = props;\n\n  const footer = <Button key=\"back\" type={BUTTON.PRIMARY} onClick={stopAddCloudProvider}>{t('Done')}</Button>;\n  const providersGrid = _.chunk(_.keys(CloudProviders), 2); // Converts list of providers into list of pairs of providers\n\n  const toggleVisibleProvider = (providerName) => {\n    const { addVisibleProvider, removeVisibleProvider } = props;\n    if (visibleProviders.includes(providerName)) {\n      removeVisibleProvider(providerName);\n    } else {\n      addVisibleProvider(providerName);\n    }\n  };\n\n  return <Modal key=\"modal\"\n    className={SessionStyles.cloudProviderModal}\n    open={isAddingCloudProvider}\n    onCancel={stopAddCloudProvider}\n    footer={footer}\n    title={t('Select Cloud Providers')}>\n    {[\n      ..._.map(providersGrid, (row, key) => <Row gutter={16} key={key}>{\n        [\n          ..._(row).map((providerName) => {\n            const providerIsVisible = visibleProviders.includes(providerName);\n            const style = {};\n            if (providerIsVisible) {\n              style.borderColor = '#40a9ff';\n            }\n            const provider = CloudProviders[providerName];\n            return provider && <Col span={12} key={providerName}>\n              <Button role=\"checkbox\" style={style} onClick={() => toggleVisibleProvider(providerName)}><img src={provider.logo} /></Button>\n            </Col>;\n          })\n        ]\n      }</Row>)\n    ]}\n  </Modal>;\n};\n\nexport default CloudProviderSelector;\n","import { shell, ipcRenderer } from '../../polyfills';\nimport React, { useEffect } from 'react';\nimport _ from 'lodash';\nimport CapabilityEditor from './CapabilityEditor';\nimport SavedSessions from './SavedSessions';\nimport AttachToSession from './AttachToSession';\nimport ServerTabCustom from './ServerTabCustom';\nimport { Tabs, Button, Spin, Badge } from 'antd';\nimport AdvancedServerParams from './AdvancedServerParams';\nimport SessionStyles from './Session.css';\nimport CloudProviders from './CloudProviders';\nimport CloudProviderSelector from './CloudProviderSelector';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { BUTTON } from '../AntdTypes';\n\nconst ADD_CLOUD_PROVIDER = 'addCloudProvider';\nconst CAPS_DOCS_LINK = 'https://appium.io/docs/en/latest/guides/caps/';\n\nconst Session = (props) => {\n  const { tabKey, switchTabs, serverType, server, visibleProviders = [],\n          caps, capsUUID, capsName, isCapsDirty, isEditingDesiredCaps, requestSaveAsModal,\n          saveSession, newSession, savedSessions, newSessionLoading, attachSessId, t } = props;\n\n  const isAttaching = tabKey === 'attach';\n\n  const handleSelectServerTab = async (tab) => {\n    const { changeServerType, addCloudProvider } = props;\n    if (tab === ADD_CLOUD_PROVIDER) {\n      addCloudProvider();\n      return;\n    }\n    await changeServerType(tab);\n  };\n\n  useEffect(() => {\n    const { setLocalServerParams, getSavedSessions, setSavedServerParams, setStateFromAppiumFile,\n            setVisibleProviders, getRunningSessions, bindWindowClose, initFromQueryString, saveFile } = props;\n    (async () => {\n      try {\n        bindWindowClose();\n        switchTabs('new');\n        await getSavedSessions();\n        await setSavedServerParams();\n        await setLocalServerParams();\n        await setVisibleProviders();\n        getRunningSessions();\n        await initFromQueryString();\n        await setStateFromAppiumFile();\n        ipcRenderer.on('open-file', (_, filePath) => setStateFromAppiumFile(filePath));\n        ipcRenderer.on('save-file', (_, filePath) => saveFile(filePath));\n      } catch (e) {\n        console.error(e); // eslint-disable-line no-console\n      }\n    })();\n  }, []);\n\n  return [\n    <Spin spinning={!!newSessionLoading} key=\"main\">\n      <div className={SessionStyles.sessionContainer}>\n        <div id='serverTypeTabs' className={SessionStyles.serverTab}>\n          <Tabs activeKey={serverType} onChange={(tab) => handleSelectServerTab(tab)} className={SessionStyles.serverTabs} items={[\n            {label: t('Appium Server'), key: 'remote', children: <ServerTabCustom {...props} />},\n            ..._(visibleProviders).map((providerName) => {\n              const provider = CloudProviders[providerName];\n              if (!provider) {\n                return true;\n              }\n              return {label: <div>{provider.tabhead()}</div>, key: providerName, children: provider.tab(props)};\n            }),\n            {label: <span className='addCloudProviderTab'>{ t('Select Cloud Providers') }</span>, key: ADD_CLOUD_PROVIDER}\n          ]}/>\n          <AdvancedServerParams {...props} />\n        </div>\n\n        <Tabs activeKey={tabKey} onChange={switchTabs} className={SessionStyles.scrollingTabCont} items={[\n          {label: t('Desired Capabilities'),\n           key: 'new', className: SessionStyles.scrollingTab, children: <CapabilityEditor {...props} />},\n          {label: (<span>{t('Saved Capability Sets')} <Badge count={savedSessions.length} offset={[0, -3]}/></span>),\n           key: 'saved', className: SessionStyles.scrollingTab, disabled: savedSessions.length === 0, children: <SavedSessions {...props} />},\n          {label: t('Attach to Session'),\n           key: 'attach', className: SessionStyles.scrollingTab, children: <AttachToSession {...props} />}\n        ]}/>\n\n        <div className={SessionStyles.sessionFooter}>\n          <div className={SessionStyles.desiredCapsLink}>\n            <a href=\"#\" onClick={(e) => e.preventDefault() || shell.openExternal(CAPS_DOCS_LINK)}>\n              <LinkOutlined />&nbsp;\n              {t('desiredCapabilitiesDocumentation')}\n            </a>\n          </div>\n          {(!isAttaching && capsUUID) && <Button\n            onClick={() => saveSession(server, serverType, caps, {name: capsName, uuid: capsUUID})}\n            disabled={!isCapsDirty || isEditingDesiredCaps}>{t('Save')}\n          </Button>}\n          {!isAttaching && <Button\n            onClick={requestSaveAsModal} disabled={isEditingDesiredCaps}>{t('saveAs')}\n          </Button>}\n          {!isAttaching && <Button type={BUTTON.PRIMARY} id='btnStartSession'\n            onClick={() => newSession(caps)} className={SessionStyles['start-session-button']}>{t('startSession')}\n          </Button>}\n          {isAttaching && <Button type={BUTTON.PRIMARY} disabled={!attachSessId} id='attchedtosession'\n            onClick={() => newSession(null, attachSessId)}>{t('attachToSession')}\n          </Button>}\n        </div>\n\n      </div>\n    </Spin>,\n    <CloudProviderSelector {...props} key='CloudProviderSelector' />\n  ];\n};\n\nexport default Session;\n","import { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as SessionActions from '../actions/Session';\nimport Session from '../components/Session/Session';\n\nfunction mapStateToProps (state) {\n  return state.session;\n}\n\nexport default withTranslation(Session, connect(mapStateToProps, SessionActions));\n","import React from 'react';\nimport InspectorCSS from './Inspector.css';\n\n/**\n * Absolute positioned divs that overlay the app screenshot and highlight the bounding\n * boxes of the elements in the app\n */\nconst HighlighterRect = (props) => {\n  console.log(\"🚀 ~ file: HighlighterRect.js:9 ~ HighlighterRect ~ props:\", props)\n  const { selectedElement = {}, selectHoveredElement, unselectHoveredElement, hoveredElement = {},\n          selectElement, unselectElement, element, scaleRatio, xOffset, elLocation, elSize, dimensions } = props;\n  const { path: hoveredPath } = hoveredElement;\n  const { path: selectedPath } = selectedElement;\n  // console.log(\"props\", props);\n  let width, height, left, top, highlighterClasses, key;\n  highlighterClasses = [InspectorCSS['highlighter-box']];\n\n  if (element) {\n    ({width, height, left, top} = dimensions);\n\n    // Add class + special classes to hovered and selected elements\n    if (hoveredPath === element.path) {\n      highlighterClasses.push(InspectorCSS['hovered-element-box']);\n    }\n    if (selectedPath === element.path) {\n      highlighterClasses.push(InspectorCSS['inspected-element-box']);\n    }\n    key = element.path;\n  } else if (elLocation && elSize) {\n    width = elSize.width / scaleRatio;\n    height = elSize.height / scaleRatio;\n    top = elLocation.y / scaleRatio;\n    left = elLocation.x / scaleRatio + xOffset;\n    // Unique keys are assigned to elements by their x & y coordinates\n    key = `searchedForElement{x: ${elLocation.x}, y: ${elLocation.y}}`;\n    highlighterClasses.push(InspectorCSS['inspected-element-box']);\n  }\n\n  return <div className={highlighterClasses.join(' ').trim()}\n    onMouseOver={() => selectHoveredElement(key)}\n    onMouseOut={unselectHoveredElement}\n    onClick={() => key === selectedPath ? unselectElement() : selectElement(key)}\n    key={key}\n    style={{left: (left || 0), top: (top || 0), width: (width || 0), height: (height || 0)}}>\n    <div></div>\n  </div>;\n};\n\nexport default HighlighterRect;\n","import React from 'react';\nimport InspectorCSS from './Inspector.css';\nimport { RENDER_CENTROID_AS } from './shared';\n\nconst { CENTROID, OVERLAP, EXPAND } = RENDER_CENTROID_AS;\nconst CENTROID_STYLES = {\n  VISIBLE: 'visible',\n  HIDDEN: 'hidden',\n  CONTAINER: '50%',\n  NON_CONTAINER: '0%',\n};\n\n// Generate new coordinates along a circlular trajectory\n// for overlapping elements only\nconst getCentroidPos = (type, angle, coord) => {\n  if (type === OVERLAP) {\n    return `calc((${angle} * 2.6vh) + ${coord}px)`;\n  }\n  return coord;\n};\n\n/**\n * Shows all element centroids\n */\nconst HighlighterCentroid = (props) => {\n  const { selectedElementPath, hoveredElement = {}, element, elementProperties,\n          centroidType, hoveredCentroid, selectedCentroid } = props;\n  const { centerX, centerY, angleX, angleY, keyCode, path, container } = elementProperties;\n\n  const onMouseEnter = (path) => {\n    const { selectHoveredElement, selectHoveredCentroid } = props;\n    if (centroidType === EXPAND) {\n      selectHoveredCentroid(path);\n    } else {\n      selectHoveredElement(path);\n    }\n  };\n\n  const onMouseLeave = () => {\n    const { unselectHoveredElement, unselectHoveredCentroid } = props;\n    if (centroidType === EXPAND) {\n      unselectHoveredCentroid();\n    } else {\n      unselectHoveredElement();\n    }\n  };\n\n  const onClickCentroid = (path) => {\n    const { selectElement, unselectElement, selectCentroid, unselectCentroid } = props;\n    if (centroidType === EXPAND) {\n      if (path === selectedCentroid) {\n        unselectCentroid();\n      } else {\n        selectCentroid(path);\n      }\n    } else {\n      if (path === selectedElementPath) {\n        unselectElement();\n      } else {\n        selectElement(path);\n      }\n    }\n  };\n\n  const centroidClasses = [InspectorCSS['centroid-box']];\n  centroidClasses.push(InspectorCSS[centroidType]);\n\n  // Highlight centroids that represent elements\n  if (centroidType !== EXPAND) {\n    if (hoveredElement.path === path) {\n      centroidClasses.push(InspectorCSS['hovered-element-box']);\n    }\n    if (selectedElementPath === path) {\n      centroidClasses.push(InspectorCSS['inspected-element-box']);\n    }\n  }\n\n  // Highlight +/- centroids\n  if (centroidType !== CENTROID) {\n    if (hoveredCentroid === keyCode) {\n      centroidClasses.push(InspectorCSS['hovered-element-box']);\n    }\n    if (selectedCentroid === keyCode && !element) {\n      centroidClasses.push(InspectorCSS['inspected-element-box']);\n    }\n  }\n\n  const overlapDivStyle = {\n    visibility:\n      keyCode === selectedCentroid ?\n        CENTROID_STYLES.VISIBLE : CENTROID_STYLES.HIDDEN,\n  };\n\n  const centroidDivStyle = {\n    left: getCentroidPos(centroidType, angleX, centerX),\n    top: getCentroidPos(centroidType, angleY, centerY),\n    borderRadius:\n      element && !container ?\n        CENTROID_STYLES.NON_CONTAINER : CENTROID_STYLES.CONTAINER,\n    ...(centroidType === OVERLAP ? overlapDivStyle : {})\n  };\n\n  const placeHolder = centroidType === EXPAND ?\n    <div className={InspectorCSS['plus-minus']}>\n      {keyCode === selectedCentroid ? '-' : '+'}\n    </div>\n    :\n    <div></div>;\n\n  return <div\n    className={centroidClasses.join(' ').trim()}\n    onMouseOver={() => onMouseEnter(path)}\n    onMouseOut={() => onMouseLeave()}\n    onClick={() => onClickCentroid(path)}\n    key={path}\n    style={centroidDivStyle}>\n    {placeHolder}\n  </div>;\n};\n\nexport default HighlighterCentroid;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport HighlighterRect from './HighlighterRect';\nimport HighlighterCentroid from './HighlighterCentroid';\nimport { parseCoordinates, RENDER_CENTROID_AS } from './shared';\n\nconst { CENTROID, OVERLAP, EXPAND } = RENDER_CENTROID_AS;\n\n/**\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\n */\nconst HighlighterRects = (props) => {\n  console.log('🚀 ~ file: HighlighterRects.js:12 ~ HighlighterRects ~ props:', props);\n  const { source, containerEl, searchedForElementBounds, scaleRatio, showCentroids,\n          isLocatorTestModalVisible, isSiriCommandModalVisible } = props;\n\n  const highlighterRects = [];\n  const highlighterCentroids = [];\n  let highlighterXOffset = 0;\n  let screenshotEl = null;\n\n  const getElements = (source) => {\n    const elementsByOverlap = buildElementsWithProps(source, null, [], {});\n    let elements = [];\n\n    // Adjust overlapping elements\n    for (const key of Object.keys(elementsByOverlap)) {\n      if (elementsByOverlap[key].length > 1) {\n        const {centerX, centerY} = elementsByOverlap[key][0].properties;\n\n        // Create new element obj which will be a +/- centroid\n\n        const element = {\n          type: EXPAND,\n          element: null,\n          parent: null,\n          properties: {\n            left: null,\n            top: null,\n            width: null,\n            height: null,\n            centerX,\n            centerY,\n            angleX: null,\n            angleY: null,\n            path: key,\n            keyCode: key,\n            container: null,\n            accessible: null\n          }\n        };\n        elements = [...elements, element,\n          ...updateOverlapsAngles(elementsByOverlap[key], key)];\n      } else {\n        elements.push(elementsByOverlap[key][0]);\n      }\n    }\n\n    return elements;\n  };\n\n  // This func creates a new object for each element and determines its properties\n  // 'elements' is an array that stores all prev elements\n  // 'overlaps' is an object which organzies elements by their positions\n  const buildElementsWithProps = (source, prevElement, elements, overlaps) => {\n    if (!source) { return {}; }\n    const { x1, y1, x2, y2 } = parseCoordinates(source);\n    const xOffset = highlighterXOffset || 0;\n    const centerPoint = (v1, v2) => Math.round(v1 + ((v2 - v1) / 2)) / scaleRatio;\n    const obj = {\n      type: CENTROID,\n      element: source,\n      parent: prevElement,\n      properties: {\n        left: x1 / scaleRatio,\n        top: y1 / scaleRatio,\n        width: (x2 - x1) / scaleRatio,\n        height: (y2 - y1) / scaleRatio,\n        centerX: centerPoint(x1, x2) + xOffset,\n        centerY: centerPoint(y1, y2),\n        angleX: null,\n        angleY: null,\n        path: source.path,\n        keyCode: null,\n        container: false,\n        accessible: source.attributes ? source.attributes.accessible : null\n      }\n    };\n    const coordinates = `${obj.properties.centerX}.${obj.properties.centerY}`;\n    obj.properties.container = isElementContainer(obj, elements);\n\n    elements.push(obj);\n\n    if (source.path) {\n      if (overlaps[coordinates]) {\n        overlaps[coordinates].push(obj);\n      } else {\n        overlaps[coordinates] = [obj];\n      }\n    }\n\n    if (source.children) {\n      for (const childEl of source.children) {\n        buildElementsWithProps(childEl, source, elements, overlaps);\n      }\n    }\n\n    return overlaps;\n  };\n\n  const isElementContainer = (element1, elements) => {\n    for (const element2 of elements) {\n      if (element2.element !== element1.element\n        && isElementOverElement(element1.properties, element2.properties)\n        && !isAncestor(element1.parent, element2.element, elements)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const isElementOverElement = (element1, element2) =>\n    element1.left <= element2.left\n      && element1.width >= element2.width\n      && element1.top >= element2.top\n      && element1.height >= element2.height;\n\n  // Traverse through parent elements until we reach maybeAncestor\n  const isAncestor = (curElement, maybeAncestor, elements) => {\n    if (elements.length > 0) {\n      while (curElement !== null) {\n        if (curElement === maybeAncestor) { return true; }\n\n        for (const elem of elements) {\n          if (elem.element === curElement) { curElement = elem.parent; }\n        }\n      }\n    }\n    return false;\n  };\n\n  // Generate angles for circular positioning for overlaping elements\n  const updateOverlapsAngles = (elements, key) => {\n    const steps = elements.length;\n    for (let step = 0; step < steps; step++) {\n      const [el, elProps] = [elements[step], elements[step].properties];\n      el.type = OVERLAP;\n      elProps.keyCode = key;\n      elProps.angleX = Math.cos(2 * Math.PI * (step / steps));\n      elProps.angleY = Math.sin(2 * Math.PI * (step / steps));\n    }\n    return elements;\n  };\n\n  // Displays element rectangles only\n  const renderElements = (source) => {\n    for (const elem of source) {\n      highlighterRects.push(\n        <HighlighterRect {...props}\n          dimensions={elem.properties}\n          element={elem.element}\n          scaleRatio={scaleRatio}\n          key={elem.properties.path}\n          xOffset={highlighterXOffset} />\n      );\n    }\n  };\n\n  // Displays centroids only\n  const renderCentroids = (centroids) => {\n    for (const elem of centroids) {\n      highlighterCentroids.push(\n        <HighlighterCentroid {...props}\n          centroidType={elem.type}\n          elementProperties={elem.properties}\n          element={elem.element}\n          key={elem.properties.path} />\n      );\n    }\n  };\n\n  // Array of all element objects with properties to draw rectangles and/or centroids\n  const elements = getElements(source);\n\n  if (containerEl) {\n    screenshotEl = containerEl.querySelector('img');\n    highlighterXOffset = screenshotEl.getBoundingClientRect().left -\n    containerEl.getBoundingClientRect().left;\n  }\n\n  // If the user selected an element that they searched for, highlight that element\n  if (searchedForElementBounds && isLocatorTestModalVisible) {\n    const {location: elLocation, size} = searchedForElementBounds;\n    highlighterRects.push(\n      <HighlighterRect\n        elSize={size}\n        elLocation={elLocation}\n        scaleRatio={scaleRatio}\n        xOffset={highlighterXOffset} />\n    );\n  }\n\n  // Don't show highlighter rects when Search Elements modal is open\n  if (!isLocatorTestModalVisible && !isSiriCommandModalVisible) {\n    renderElements(elements);\n    if (showCentroids) {\n      renderCentroids(elements);\n    }\n  }\n\n  return (\n    <div>\n      {highlighterRects}\n      {highlighterCentroids}\n    </div>\n  );\n};\n\nexport default HighlighterRects;\n","/* eslint-disable no-console */\n/* eslint-disable quotes */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-unused-vars */\n\nimport React, { useRef, useEffect } from 'react';\nimport _ from 'lodash';\nimport { getLocators, SCREENSHOT_INTERACTION_MODE} from './shared';\nimport styles from './Inspector.css';\nimport { Button, Row, Col, Input, Table, Alert, Tooltip, Select, Spin } from 'antd';\nimport { clipboard, shell } from '../../polyfills';\nimport { LoadingOutlined, CopyOutlined, AimOutlined, SendOutlined, tapIcon, ClearOutlined, HourglassOutlined } from '@ant-design/icons';\nimport { ROW, ALERT } from '../AntdTypes';\n\n\nconst NATIVE_APP = 'NATIVE_APP';\nconst CLASS_CHAIN_DOCS_URL = 'https://github.com/facebookarchive/WebDriverAgent/wiki/Class-Chain-Queries-Construction-Rules';\nconst PREDICATE_DOCS_URL = 'https://github.com/facebookarchive/WebDriverAgent/wiki/Predicate-Queries-Construction-Rules';\nconst { SELECT } = SCREENSHOT_INTERACTION_MODE;\n\n\nconst selectedElementTableCell = (text, copyToClipBoard) => {\n  if (copyToClipBoard) {\n    return <div className={styles['selected-element-table-cells']}>\n      <Tooltip title='Copied!' trigger=\"click\">\n        <span className={styles['element-cell-copy']} onClick = {() => clipboard.writeText(text)}>\n          {text}\n        </span>\n      </Tooltip>\n    </div>;\n  } else {\n    return <div className={styles['selected-element-table-cells']}>{text}</div>;\n  }\n};\n\n/**\n * Shows details of the currently selected element and shows methods that can\n * be called on the elements (tap, sendKeys)\n */\nconst SelectedElement = (props) => {\n  console.log('props inside the selected Element!!', props);\n  console.log('props.hoveredElement$$$$$$$4!!', props.hoveredElement);\n  const { applyClientMethod, contexts, currentContext, getFindElementsTimes, findElementsExecutionTimes,\n          isFindingElementsTimes, selectedElement, selectedElementId, sourceXML,\n          elementInteractionsNotAvailable, selectedElementSearchInProgress, t, screenshotInteractionMode } = props; \n\n  console.log('selectedElementId inside the selected Element!!', selectedElementId);\n\n  const sendKeys = useRef();\n\n  const contextSelect = () => {\n    const { setContext } = props;\n    return (\n      <Tooltip title={t('contextSwitcher')}>\n        <Select value={currentContext} onChange={(value) => {\n          setContext(value);\n          applyClientMethod({methodName: 'switchContext', args: [value]});\n        }}\n        className={styles['context-selector']}>\n          {contexts.map(({id, title}) =>\n            <Select.Option key={id} value={id}>{title ? `${title} (${id})` : id}</Select.Option>\n          )}\n        </Select>\n      </Tooltip>\n    );\n  };\n\n  const { attributes, classChain, predicateString, xpath } = selectedElement;\n  const isDisabled = selectedElementSearchInProgress || isFindingElementsTimes;\n\n  // Get the columns for the attributes table\n  let attributeColumns = [{\n    title: t('Attribute'),\n    dataIndex: 'name',\n    key: 'name',\n    width: 100,\n    render: (text) => selectedElementTableCell(text, false),\n  }, {\n    title: t('Value'),\n    dataIndex: 'value',\n    key: 'value',\n    render: (text) => selectedElementTableCell(text, true),\n  }];\n\n  // Get the data for the attributes table\n  let attrArray = _.toPairs(attributes).filter(([key]) => key !== 'path');\n  let dataSource = attrArray.map(([key, value]) => ({\n    key,\n    value,\n    name: key,\n  }));\n  dataSource.unshift({key: 'elementId', value: selectedElementId, name: 'elementId'});\n  // console.log('dataSource in the dataSource', dataSource);\n\n  // Get the columns for the strategies table\n  let findColumns = [{\n    title: t('Find By'),\n    dataIndex: 'find',\n    key: 'find',\n    width: 100,\n    render: (text) => selectedElementTableCell(text, false),\n  }, {\n    title: t('Selector'),\n    dataIndex: 'selector',\n    key: 'selector',\n    render: (text) => selectedElementTableCell(text, true),\n  }];\n\n  if (findElementsExecutionTimes.length > 0) {\n    findColumns.push({\n      title: t('Time'),\n      dataIndex: 'time',\n      key: 'time',\n      align: 'right',\n      width: 100,\n      render: (text) => selectedElementTableCell(text, false),\n    });\n  }\n\n  // Get the data for the strategies table\n  let findDataSource = _.toPairs(getLocators(attributes, sourceXML)).map(([key, selector]) => ({\n    key,\n    selector,\n    find: key,\n  }));\n\n  // If XPath is the only provided data source, warn the user about it's brittleness\n  let showXpathWarning = false;\n  // if (findDataSource.length === 0) {\n  //   showXpathWarning = true;\n  // }\n\n  // Add class chain to the data source as well\n  if (classChain && currentContext === NATIVE_APP) {\n    const classChainText = <span>\n      -ios class chain\n      <strong>\n        <a onClick={(e) => e.preventDefault() || shell.openExternal(CLASS_CHAIN_DOCS_URL)}>&nbsp;(docs)</a>\n      </strong>\n    </span>;\n\n    findDataSource.push({\n      key: '-ios class chain',\n      find: classChainText,\n      selector: classChain,\n    });\n  }\n\n  // Add predicate string to the data source as well\n  if (predicateString && currentContext === NATIVE_APP) {\n    const predicateStringText = <span>\n      -ios predicate string\n      <strong>\n        <a onClick={(e) => e.preventDefault() || shell.openExternal(PREDICATE_DOCS_URL)}>&nbsp;(docs)</a>\n      </strong>\n    </span>;\n\n    findDataSource.push({\n      key: '-ios predicate string',\n      find: predicateStringText,\n      selector: predicateString,\n    });\n  }\n\n  // Add XPath to the data source as well\n  if (xpath) {\n    findDataSource.push({\n      key: 'xpath',\n      find: 'xpath',\n      selector: xpath,\n    });\n    // console.log('findDataSource in the Xpath condition####', findDataSource);\n    //add the datasource to the findDataSource\n    let sendData = findDataSource.concat(dataSource);\n    console.log(\"🚀 ~ file: SelectedElement.js:169 ~ SelectedElement ~ sendData:\", sendData);\n  }\n\n  // Replace table data with table data that has the times\n  if (findElementsExecutionTimes.length > 0) {\n    findDataSource = findElementsExecutionTimes;\n  }\n\n  let tapIcon = <AimOutlined/>;\n  if (!(elementInteractionsNotAvailable || selectedElementId) || selectedElementSearchInProgress) {\n    tapIcon = <LoadingOutlined/>;\n  }\n\n  // const handleTap = () => {\n  //   console.log('inside the handle tap !!!!!!!');\n  //   if (!isDisabled) {\n  //     applyClientMethod({ methodName: 'click', elementId: selectedElementId });\n  //   }\n  // };\n  // useEffect(() => {\n  //   if (!isDisabled && screenshotInteractionMode === SELECT) {\n  //     handleTap();\n  //   }\n  // }, [isDisabled, applyClientMethod, selectedElementId]);\n\n\n  return <div>\n    {/* {elementInteractionsNotAvailable &&\n      <Row type={ROW.FLEX} gutter={10} className={styles.selectedElemNotInteractableAlertRow}>\n        <Col>\n          <Alert type={ALERT.INFO} message={t('interactionsNotAvailable')} showIcon />\n        </Col>\n      </Row>\n    } */}\n    <Row justify=\"center\" type={ROW.FLEX} align=\"middle\" className={styles.elementActions}>\n      <Tooltip title={t('Tap')}>\n        <Button\n          disabled={isDisabled}\n          icon={tapIcon}\n          id='btnTapElement'\n          onClick={() => applyClientMethod({ methodName: 'click', elementId: selectedElementId })} />\n      </Tooltip>\n      <Button.Group className={styles.elementKeyInputActions}>\n        <Input className={styles.elementKeyInput}\n          disabled={isDisabled}\n          placeholder={t('Enter Keys to Send')}\n          allowClear={true}\n          onChange={(e) => sendKeys.current = e.target.value} />\n        <Tooltip title={t('Send Keys')}>\n          <Button\n            disabled={isDisabled}\n            id='btnSendKeysToElement'\n            icon={<SendOutlined/>}\n            onClick={() => applyClientMethod({methodName: 'sendKeys', elementId: selectedElementId, args: [sendKeys.current || '']})} />\n        </Tooltip>\n        <Tooltip title={t('Clear')}>\n          <Button\n            disabled={isDisabled}\n            id='btnClearElement'\n            icon={<ClearOutlined/>}\n            onClick={() => applyClientMethod({methodName: 'clear', elementId: selectedElementId})} />\n        </Tooltip>\n      </Button.Group>\n      {/* <Button.Group>\n        <Tooltip title={t('Copy Attributes to Clipboard')}>\n          <Button\n            disabled={isDisabled}\n            id='btnCopyAttributes'\n            icon={<CopyOutlined/>}\n            onClick={() => clipboard.writeText(JSON.stringify(dataSource))} />\n        </Tooltip>\n        <Tooltip title={t('Get Timing')}>\n          <Button\n            disabled={isDisabled}\n            id='btnGetTiming'\n            icon={<HourglassOutlined/>}\n            onClick={() => getFindElementsTimes(findDataSource)} />\n        </Tooltip>\n      </Button.Group> */}\n    </Row>\n    {/* {findDataSource.length > 0 &&\n      <Row>\n        <Spin spinning={isFindingElementsTimes}>\n          <Table\n            columns={findColumns}\n            dataSource={findDataSource}\n            size=\"small\"\n            tableLayout='fixed'\n            pagination={false} />\n        </Spin>\n      </Row>\n    } */}\n    <br />\n    {currentContext === NATIVE_APP && showXpathWarning &&\n      <div>\n        <Alert\n          message={t('usingXPathNotRecommended')}\n          type={ALERT.WARNING}\n          showIcon />\n        <br />\n      </div>\n    }\n    {currentContext === NATIVE_APP && contexts && contexts.length > 1 &&\n      <div>\n        <Alert\n          message={t('usingSwitchContextRecommended')}\n          type={ALERT.WARNING}\n          showIcon />\n        <br />\n      </div>\n    }\n    {currentContext !== NATIVE_APP &&\n      <div>\n        <Alert\n          message={t('usingWebviewContext')}\n          type={ALERT.WARNING}\n          showIcon />\n        <br />\n      </div>\n    }\n    {contexts && contexts.length > 1 &&\n      <div>\n        {contextSelect()}\n        <br /><br />\n      </div>\n    }\n    {/* {dataSource.length > 0 &&\n      <Row>\n        <Table\n          columns={attributeColumns}\n          dataSource={dataSource}\n          size=\"small\"\n          pagination={false} />\n      </Row>\n    } */}\n  </div>;\n};\n\nexport default SelectedElement;\n","/* eslint-disable no-undef */\n/* eslint-disable import/no-duplicates */\n/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable space-before-blocks */\n/* eslint-disable space-in-parens */\n/* eslint-disable no-console */\n/* eslint-disable quotes */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-unused-vars */\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport HighlighterRects from './HighlighterRects';\nimport { Card, Spin, Tooltip, Button } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport SelectedElement from './SelectedElement';\nimport B from 'bluebird';\nimport styles from './Inspector.css';\nimport { Row, Col, Input, Table, Alert, Select } from 'antd';\nimport { ROW, ALERT } from '../AntdTypes';\nimport { TagOutlined, AimOutlined, SendOutlined, ClearOutlined } from '@ant-design/icons';\nimport {\n  SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE, POINTER_TYPES,\n  DEFAULT_TAP, DEFAULT_SWIPE, DEFAULT_LONGPRESS, DEFAULT_DRAG_AND_DROP, DEFAULT_ZOOM\n} from './shared';\nimport { IoChevronBackOutline } from 'react-icons/io5';\nimport { BiSquare, BiCircle } from 'react-icons/bi';\nconst { POINTER_UP, POINTER_DOWN, PAUSE, POINTER_MOVE } = POINTER_TYPES;\nconst { TAP, SELECT, SLIDE, SWIPE, LONGPRESS, DRAG_AND_DROP, DOUBLE_TAP, SLIDE_SWIPE, ZOOMIN, SELECT_LONG, SELECT_DOUBLE, FILE_UPLOAD, SELECT_FILE, EXPECTED_VALUE, TAKE_SCREENSHOT, SCRATCH, ROTATE, OTP } = SCREENSHOT_INTERACTION_MODE;\nconst TYPES = { FILLED: 'filled', NEW_DASHED: 'newDashed', WHOLE: 'whole', DASHED: 'dashed', DRAG: 'drag' };\n\n\n\n/**\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\n */\nconst Screenshot = (props) => {\n  const { screenshot, selectedElement = {}, mjpegScreenshotUrl, methodCallInProgress, driver, selectScreenshotInteractionMode, screenshotInteractionMode, step_object, swipeStart, swipeEnd1, swipeStart1, swipeEnd, scaleRatio, selectedTick, selectedInteractionMode, applyClientMethod, t, hoveredElement, locatorTestElement } = props;\n  const [xLongPress, setXLongPress] = useState(null);\n  const [yLongPress, setYLongPress] = useState(null);\n  const [element, setElement] = useState({});\n  const [coordinates, setCoordinates] = useState([]);\n  const [scratch, setScratch] = useState(false);\n  const [isDisabled] = useState(true);\n\n\n  useEffect(() => {\n    if (hoveredElement && hoveredElement.attributes && hoveredElement.attributes.bounds) {\n      const coordinatesString = hoveredElement.attributes.bounds;\n      console.log(\"coordinatestring\", coordinatesString);\n      const coordinatesArray = coordinatesString.match(/\\d+/g);\n      if (coordinatesArray.length >= 4) {\n        const x1 = parseInt(coordinatesArray[0], 10);\n        const y1 = parseInt(coordinatesArray[1], 10);\n        const x2 = parseInt(coordinatesArray[2], 10);\n        const y2 = parseInt(coordinatesArray[3], 10);\n\n        const centerX = Math.round(x2);\n        const centerY = Math.round(y2);\n        setXLongPress(centerX);\n        setYLongPress(centerY);\n      }\n\n    }\n  }, [hoveredElement]);\n\n  if (hoveredElement) {\n    // console.log(\"hoveredElement.attributes.bounds:\", hoveredElement.attributes.bounds);\n  }\n\n\n  const containerEl = useRef();\n  const [x, setX] = useState();\n  const [y, setY] = useState();\n  const [isLongPress, setIsLongPress] = useState(false);\n\n  const [coords, setCoords] = useState({});\n\n  let [crop, setCrop] = useState({ x: 0, y: 0, scale: 1 });\n  let imageElement = containerEl.current;\n  let imageRef = useRef();\n  // eslint-disable-next-line no-console\n  // console.log('🚀 ~ file: Screenshot.js:41 ~ Screenshot ~ imageRef:', imageRef);\n  // // let imageElement = imageRef.querySelector('img');\n  // let image = imageRef && imageRef.getElementById('#screenshot');\n  // // eslint-disable-next-line no-console\n  // console.log('🚀 ~ file: Screenshot.js:45 ~ Screenshot ~ imageElement:', imageElement);\n  // if (screenshotInteractionMode === ZOOMIN) {\n  //   useGesture(\n  //   {\n  //     onDrag: ({ offset: [dx, dy] }) => {\n  //       setCrop((crop) => ({ ...crop, x: dx, y: dy }));\n  //     },\n  //     onPinch: ({ offset: [d] }) => {\n  //       setCrop((crop) => ({ ...crop, scale: 1 + d / 50 }));\n  //     },\n  //   },\n  //   {\n  //     domTarget: containerEl.current,\n  //     eventOptions: { passive: false },\n  //   }\n  //   );\n  // }\n\n  const handleScreenshotClick = async (e) => {\n    const { setSwipeStart, setSwipeEnd, tapTickCoordinates, setSwipeStart1, setSwipeEnd1 } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON } = DEFAULT_TAP;\n\n\n    if (screenshotInteractionMode === TAP) {\n      console.log('inside the sreenshot page!!!!!! tap');\n      applyClientMethod({\n        methodName: TAP,\n        args: [\n          {\n            [POINTER_NAME]: [\n              { type: POINTER_MOVE, duration: DURATION_1, x, y },\n              { type: POINTER_DOWN, button: BUTTON },\n              { type: PAUSE, duration: DURATION_2 },\n              { type: POINTER_UP, button: BUTTON }\n            ],\n          }\n        ],\n      });\n    } else if (screenshotInteractionMode === LONGPRESS) {\n      console.log(\"inside the condition of the longpress!!\");\n      setTimeout(() => {\n        selectScreenshotInteractionMode(SELECT_LONG);\n      }, 2000);\n    } else if (screenshotInteractionMode === SELECT_LONG) {\n      await useLongPress();\n    } else if (screenshotInteractionMode === DOUBLE_TAP) {\n      console.log(\"inside the double tap function!!!\");\n      setTimeout(() => {\n        selectScreenshotInteractionMode(SELECT_DOUBLE);\n      }, 1000);\n    } else if (screenshotInteractionMode === SELECT_DOUBLE) {\n      await useDoubleTap();\n    } else if (screenshotInteractionMode === DRAG_AND_DROP) {\n      console.log(\"inside the drage and drop condition value!!!!!!\");\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        if (isLongPress) {\n          // await B.delay(500);\n          // await applyClientMethod({ methodName: SWIPE, args: { /* ... */ } });\n          // await handleDoDragAndDrop({ x, y });\n        }\n        handleDoDragAndDrop({ x, y });\n      }\n    } else if (selectedTick) {\n      tapTickCoordinates(x, y);\n    } else if (screenshotInteractionMode === SWIPE) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500);\n        await handleDoSwipe({ x, y });\n      }\n    } else if (screenshotInteractionMode === ZOOMIN) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500);\n        setCoords({ x, y });\n        // setTimeout(() => {\n        //  handleDoZoom({x, y});\n        // }, 2000);\n      } else if (!swipeStart1) {\n        setSwipeStart1(x, y);\n      } else if (!swipeEnd1) {\n        setSwipeEnd1(x, y);\n        await B.delay(500);\n        await handleDoZoom({ x, y }, coords);\n      }\n    } else if (screenshotInteractionMode === SLIDE) {\n      setTimeout(() => {\n        selectScreenshotInteractionMode(SLIDE_SWIPE);\n      }, 1000);\n      if (props.selectedElement) {\n        setElement(props.selectedElement);\n      }\n    } else if (screenshotInteractionMode === SLIDE_SWIPE) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500);\n        await handleDoSwipeSlide({ x, y });\n      }\n    } else if (screenshotInteractionMode === FILE_UPLOAD) {\n      console.log(\"inside the file upload condition!!!!!!!!!\");\n      setTimeout(() => {\n        selectScreenshotInteractionMode(SELECT_FILE);\n      }, 1000);\n    } else if (screenshotInteractionMode === SELECT_FILE) {\n      console.log(\"inside the select file condition!!!!!!!!!\");\n      await useFileUpload();\n    } else if (screenshotInteractionMode === EXPECTED_VALUE) {\n      let expected_value = '';\n      let data = {};\n      if (props.selectedElement) {\n        expected_value = props.selectedElement.attributes.text;\n        data = {\n          expectedValue: expected_value,\n          xpath: props.selectedElement.xpath\n        };\n      }\n      await fetchExpectedValue(data);\n    } else if (screenshotInteractionMode === TAKE_SCREENSHOT) {\n      const image = await driver.client.takeScreenshot();\n      //   console.log(\"🚀 ~ file: Screenshot.js:203 ~ handleScreenshotClick ~ image:\", image);\n      //   let sendData = {\n      //     \"session_id\": driver.sessionId,\n      //     \"step-name\": \"take_screenshot\",\n      //   };\n      //   await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       \"Content-Type\": \"application/json\"\n      //     },\n      //     body: JSON.stringify(sendData),\n      //   })\n      //   .then((response) => {*\n      //     console.log(\"API response:\", response);\n      //   })\n      //   .catch((error) => {\n      //     console.error(\"API error:\", error);\n      //   });\n    } else if (screenshotInteractionMode === SCRATCH) {\n      console.log(\"🚀 ~ file: Screenshot.js:201 ~ handleScreenshotClick ~ e:\", e);\n      if (!swipeStart) {\n        setScratch(true);\n        setCoordinates([]);\n        await scratchCard(e);\n        setSwipeStart(x, y);\n      }\n    }\n  };\n\n\n  const handleLongPress = () => {\n    setIsLongPress(true);\n  };\n\n  const useFileUpload = () => {\n    console.log(\"inside the use file upload function!!!!!!\");\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON } = DEFAULT_TAP;\n    const { clearSwipeAction } = props;\n    applyClientMethod({\n      methodName: TAP,\n      args: [\n        {\n          [POINTER_NAME]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x, y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: PAUSE, duration: DURATION_2 },\n            { type: POINTER_UP, button: BUTTON }\n          ],\n        }\n      ],\n    });\n    clearSwipeAction();\n    selectScreenshotInteractionMode(FILE_UPLOAD);\n\n  };\n\n  const useLongPress = async () => {\n    const { LONGPRESS_POINTER_NAME, LONGPRESS_DURATION_1, LONGPRESS_DURATION_2, LONGPRESS_BUTTON } = DEFAULT_LONGPRESS;\n    let longdata = {\n      methodName: TAP,\n      args: {\n        [LONGPRESS_POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: LONGPRESS_DURATION_1, x, y },\n          { type: POINTER_DOWN, button: LONGPRESS_BUTTON },\n          { type: PAUSE, duration: LONGPRESS_DURATION_2 },\n          { type: POINTER_UP, button: LONGPRESS_BUTTON }\n        ],\n      }\n    };\n    await applyClientMethod(longdata);\n    selectScreenshotInteractionMode(LONGPRESS);\n  };\n\n  const useDoubleTap = () => {\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON } = DEFAULT_TAP;\n    applyClientMethod({\n      methodName: TAP,\n      args: [\n        {\n          [POINTER_NAME]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x, y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: PAUSE, duration: DURATION_2 },\n            { type: POINTER_UP, button: BUTTON }\n          ],\n        }\n      ],\n    });\n    const delay = 50;\n    setTimeout(() => {\n      applyClientMethod({\n        methodName: TAP,\n        args: [\n          {\n            [POINTER_NAME]: [\n              { type: POINTER_MOVE, duration: DURATION_1, x, y },\n              { type: POINTER_DOWN, button: BUTTON },\n              { type: PAUSE, duration: DURATION_2 },\n              { type: POINTER_UP, button: BUTTON },\n\n            ],\n          }\n        ],\n      });\n    }, delay);\n    selectScreenshotInteractionMode(DOUBLE_TAP);\n  };\n\n  const scratchCard = async (e) => {\n    console.log(\"🚀 ~ file: Screenshot.js:293 ~ scratchCard ~ e:\", e);\n    console.log('scratching');\n    if (scratch === true) {\n      await handleMouseMove(e);\n    }\n  };\n\n\n  const handleDoSwipe = async (swipeEndLocal) => {\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_SWIPE;\n    await applyClientMethod({\n      methodName: SWIPE,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n          { type: POINTER_UP, button: BUTTON }\n        ]\n      },\n    });\n    clearSwipeAction();\n    if (step_object) {\n      console.log(\"🚀 ~ file: Screenshot.js:97 ~ Screenshot ~ step_object:\", step_object);\n    }\n  };\n\n\n  const handleDoSwipeSlide = async (swipeEndLocal) => {\n    console.log(\"🚀 ~ file: Screenshot.js:332 ~ handleDoSwipeSlide ~ props:\", props);\n    let xpath = props.selectedElement.xpath;\n    console.log(\"🚀 ~ file: Screenshot.js:304 ~ handleDoSwipeSlide ~ xpath:\", xpath);\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_SWIPE;\n    let data = {\n      methodName: SWIPE,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n          { type: POINTER_UP, button: BUTTON }\n        ]\n      },\n    };\n    if (xpath) {\n      data.xpath = xpath;\n    }\n    await applyClientMethod(data);\n    selectScreenshotInteractionMode(SLIDE);\n    clearSwipeAction();\n  };\n\n  const handleDoDragAndDrop = async (swipeEndLocal) => {\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_DRAG_AND_DROP;\n    await applyClientMethod({\n      methodName: TAP,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, origin: ORIGIN, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: PAUSE, duration: DURATION_2 },\n          { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n          { type: POINTER_UP, button: BUTTON }\n        ]\n      },\n    });\n    clearSwipeAction();\n  };\n\n  const handleDoZoom = async (swipeEndLocal, swipeEndLocal1) => {\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME1, POINTER_NAME2, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_ZOOM;\n    console.log(`swipeStart.x : ${swipeStart.x}, swipeStart.y : : ${swipeStart.y} , swipeEndLocal1.x : ${swipeEndLocal1.x} , swipeEndLocal1.y : ${swipeEndLocal1.y} , swipeStart1.x : ${swipeStart1.x} , swipeStart1.y : ${swipeStart1.y}, swipeEndLocal.x : ${swipeEndLocal.x} , swipeEndLocal.y : ${swipeEndLocal.y}`);\n    if (swipeEndLocal && swipeEndLocal1) {\n      await applyClientMethod({\n        methodName: SWIPE,\n        args: {\n          [POINTER_NAME1]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart.x, y: swipeStart.y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal1.x, y: swipeEndLocal1.y },\n            { type: POINTER_UP, button: BUTTON }\n          ],\n          [POINTER_NAME2]: [\n            { type: POINTER_MOVE, duration: DURATION_1, x: swipeStart1.x, y: swipeStart1.y },\n            { type: POINTER_DOWN, button: BUTTON },\n            { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: swipeEndLocal.x, y: swipeEndLocal.y },\n            { type: POINTER_UP, button: BUTTON }\n          ]\n        },\n      });\n      clearSwipeAction();\n    }\n  };\n\n  const fetchExpectedValue = async (value) => {\n    const { POINTER_NAME, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_SWIPE;\n    let data = {\n      methodName: TAP,\n      args: {\n        [POINTER_NAME]: [\n          { type: POINTER_MOVE, duration: DURATION_1, origin: ORIGIN, x: swipeStart.x, y: swipeStart.y },\n          { type: POINTER_DOWN, button: BUTTON },\n          { type: PAUSE, duration: DURATION_2 }\n        ]\n      },\n      xpath: value.xpath,\n      expected_value: value.expected_value\n    };\n    await applyClientMethod(data);\n  };\n\n\n  const handleMouseMove = (e) => {\n    const { clearSwipeAction } = props;\n    const { POINTER_NAME1, POINTER_NAME2, DURATION_1, DURATION_2, BUTTON, ORIGIN } = DEFAULT_ZOOM;\n    if (screenshotInteractionMode !== SELECT) {\n      const offsetX = e.nativeEvent.offsetX;\n      const offsetY = e.nativeEvent.offsetY;\n      const newX = offsetX * scaleRatio;\n      const newY = offsetY * scaleRatio;\n      setX(Math.round(newX));\n      setY(Math.round(newY));\n\n      if (screenshotInteractionMode === SCRATCH) {\n        // console.log(\"🚀 ~ file: Screenshot.js:299 ~ scratchCard ~ coordinates.length:\", coordinates.length)\n        setCoordinates((prevCoordinates) => [\n          ...prevCoordinates,\n          { x: Math.round(newX), y: Math.round(newY) },\n        ]);\n\n        if (coordinates.length > 250) {\n          console.log(\"🚀 ~ file: Screenshot.js:440 ~ handleMouseMove ~ coordinates.length:\", coordinates);\n          // setTimeout(() => {\n          let data = {\n            methodName: SWIPE,\n            args: {\n              [POINTER_NAME1]: [\n                { type: POINTER_MOVE, duration: DURATION_1, x: coordinates[0].x, y: coordinates[0].y },\n                { type: POINTER_DOWN, button: BUTTON },\n                { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: coordinates[80].x, y: coordinates[80].y },\n                { type: POINTER_UP, button: BUTTON }\n              ],\n              [POINTER_NAME2]: [\n                { type: POINTER_MOVE, duration: DURATION_1, x: coordinates[80].x, y: coordinates[80].y },\n                { type: POINTER_DOWN, button: BUTTON },\n                { type: POINTER_MOVE, duration: DURATION_2, origin: ORIGIN, x: coordinates[160].x, y: coordinates[160].y },\n                { type: POINTER_UP, button: BUTTON }\n              ]\n            },\n          };\n          applyClientMethod(data);\n          // }, 500);\n          clearSwipeAction();\n          setCoordinates([]);\n          // selectScreenshotInteractionMode(SELECT);\n          setScratch(false);\n        }\n\n      }\n    }\n    console.log(\"🚀 ~ file: Screenshot.js:406 ~ handleMouseMove ~ e:\", e);\n  };\n\n\n\n  const handleMouseOut = () => {\n    // setCoordinates([])\n    setX(null);\n    setY(null);\n  };\n  const handleDragStart = (startPoint) => {\n    console.log('Drag start:', startPoint);\n\n  };\n\n  const handleDrop = (event) => {\n    // event.preventDefault();\n    const { offsetX, offsetY } = event.nativeEvent;\n    const dropX = offsetX * scaleRatio;\n    const dropY = offsetY * scaleRatio;\n    const roundedDropX = Math.round(dropX);\n    const roundedDropY = Math.round(dropY);\n    console.log('Drop position:', { x: roundedDropX, y: roundedDropY });\n    setX(roundedDropX);\n    setY(roundedDropY);\n    setCoordinates([]);\n    setScratch(false);\n    setTimeout(async () => {\n      await handleDoDragAndDrop({ x: roundedDropX, y: roundedDropY });\n    }, 1000);\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n\n  // retrieve and format gesture for svg drawings\n  const getGestureCoordinates = () => {\n    const { showGesture } = props;\n    const { FILLED, NEW_DASHED, WHOLE, DASHED } = TYPES;\n    const defaultTypes = { pointerDown: WHOLE, pointerUp: DASHED };\n\n    if (!showGesture) { return null; }\n    return showGesture.map((pointer) => {\n      let type = DASHED;\n      const temp = [];\n      for (const tick of pointer.ticks) {\n        if (tick.type === PAUSE) { continue; }\n        const len = temp.length;\n        type = tick.type !== POINTER_MOVE ? defaultTypes[tick.type] : type;\n        if (tick.type === POINTER_MOVE && tick.x !== undefined && tick.y !== undefined) {\n          temp.push({ id: tick.id, type, x: tick.x, y: tick.y, color: pointer.color });\n        }\n        if (len === 0) {\n          if (tick.type === POINTER_DOWN) {\n            temp.push({ id: tick.id, type: FILLED, x: 0, y: 0, color: pointer.color });\n          }\n        } else {\n          if (tick.type === POINTER_DOWN && temp[len - 1].type === DASHED) {\n            temp[len - 1].type = FILLED;\n          }\n          if (tick.type === POINTER_UP && temp[len - 1].type === WHOLE) {\n            temp[len - 1].type = NEW_DASHED;\n          }\n        }\n      }\n      return temp;\n    });\n  };\n\n  // If we're tapping or swiping, show the 'crosshair' cursor style\n  const screenshotStyle = {};\n  if ([TAP, SWIPE].includes(screenshotInteractionMode) || selectedTick) {\n    screenshotStyle.cursor = 'crosshair';\n  } else if ([DRAG_AND_DROP].includes(screenshotInteractionMode) || selectedTick) {\n    screenshotStyle.cursor = 'move';\n  } else {\n    screenshotStyle.cursor = 'pointer';\n  }\n  if ([ZOOMIN, SLIDE_SWIPE].includes(screenshotInteractionMode) || selectedTick) {\n    screenshotStyle.cursor = 'crosshair';\n  }\n\n\n  let swipeInstructions = null;\n  if (screenshotInteractionMode === SWIPE && (!swipeStart || !swipeEnd)) {\n    if (!swipeStart) {\n      swipeInstructions = t('Click swipe start point');\n    } else if (!swipeEnd) {\n      swipeInstructions = t('Click swipe end point');\n    }\n  }\n\n  const screenSrc = mjpegScreenshotUrl || `data:image/gif;base64,${screenshot}`;\n  const screenImg = <img src={screenSrc} id=\"screenshot\" className={styles.screenimage} />;\n  const points = getGestureCoordinates();\n  // const { screenshotError,\n  //     quitSession, showRecord,\n  //     visibleCommandMethod,\n  //     selectInteractionMode, setVisibleCommandResult,\n  //     showKeepAlivePrompt, keepSessionAlive, sourceXML, visibleCommandResult,\n  //     isAwaitingMjpegStream, toggleShowCentroids, showCentroids,\n  //     isGestureEditorVisible, toggleShowAttributes, isSourceRefreshOn,\n  //   } = this.props;\n  const { path } = selectedElement;\n\n\n  // const screenshotStyle1 = {\n  //   transform: `scale(${2})`, // Apply the zoom level to the transform style\n  // };\n  // Show the screenshot and highlighter rects.\n  // Show loading indicator if a method call is in progress, unless using MJPEG mode.\n  return (\n    <>\n    <Spin size='large' spinning={!!methodCallInProgress && !mjpegScreenshotUrl} style={{ display: \"flex!important\" }}>\n      <div id='selectedElementContainer'\n        className={`${InspectorStyles['interaction-tab-container']} ${InspectorStyles['element-detail-container']} action-col`}>\n        <Card\n          className={InspectorStyles['selected-element-card']}>\n          {/* {!path && <SelectedElement/>} */}\n          {!path && <Row justify=\"center\" type={ROW.FLEX} align=\"middle\" className={styles.elementActions}>\n            <Tooltip title={t('Tap')}>\n              <Button\n                disabled={isDisabled}\n                icon={<AimOutlined />}\n                id='btnTapElement'\n                onClick={() => handleTap} />\n            </Tooltip>\n            <Button.Group className={styles.elementKeyInputActions}>\n              <Input className={styles.elementKeyInput}\n                disabled={isDisabled}\n                placeholder={t('Enter Keys to Send')}\n                allowClear={true}\n                onChange={(e) => sendKeys.current = e.target.value} />\n              <Tooltip title={t('Send Keys')}>\n                <Button\n                  disabled={isDisabled}\n                  id='btnSendKeysToElement'\n                  icon={<SendOutlined />}\n                  onClick={() => applyClientMethod({ methodName: 'sendKeys', elementId: selectedElementId, args: [sendKeys.current || ''] })} />\n              </Tooltip>\n              <Tooltip title={t('Clear')}>\n                <Button\n                  disabled={isDisabled}\n                  id='btnClearElement'\n                  icon={<ClearOutlined />}\n                  onClick={() => applyClientMethod({ methodName: 'clear', elementId: selectedElementId })} />\n              </Tooltip>\n            </Button.Group>\n          </Row>}\n          {path && <SelectedElement {...props} />}\n          {/* {!path && <i>{t('selectElementInSource')}</i>} */}\n        </Card>\n      </div>\n      <div className={styles.innerScreenshotContainer}>\n        <div ref={containerEl}\n          style={screenshotStyle}\n          onMouseDown={handleScreenshotClick}\n          onMouseMove={handleMouseMove}\n          onMouseOut={handleMouseOut}\n          onDragOver={handleDragOver}\n          onDrop={handleDrop}\n          className={styles.screenshotBox}>\n          {screenshotInteractionMode !== SELECT && <div className={styles.coordinatesContainer}>\n            <p>{t('xCoordinate', { x })}</p>\n            <p>{t('yCoordinate', { y })}</p>\n          </div>}\n          {swipeInstructions && <Tooltip open={true} title={swipeInstructions} placement=\"topLeft\">{screenImg}</Tooltip>}\n          {!swipeInstructions && screenImg}\n          {screenshotInteractionMode === SELECT && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === OTP && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === SLIDE && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === DOUBLE_TAP && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === LONGPRESS && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === EXPECTED_VALUE && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n          }\n          {screenshotInteractionMode === FILE_UPLOAD && containerEl.current &&\n            <HighlighterRects {...props} containerEl={containerEl.current} />\n\n          }\n          {screenshotInteractionMode === SWIPE &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n            </svg>\n          }\n          {screenshotInteractionMode === SCRATCH && (\n            <svg className={styles.swipeSvg}>\n              {swipeStart && scratch && coordinates.map((coord, index) => (\n                <circle key={index} cx={coord.x / scaleRatio} cy={coord.y / scaleRatio} />\n              ))}\n            </svg>\n          )}\n\n\n          {screenshotInteractionMode === SLIDE_SWIPE &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n            </svg>\n          }\n\n          {screenshotInteractionMode === DRAG_AND_DROP &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n            </svg>\n          }\n\n          {screenshotInteractionMode === ZOOMIN &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n              {swipeStart1 && !swipeEnd1 && <circle\n                cx={swipeStart1.x / scaleRatio}\n                cy={swipeStart1.y / scaleRatio}\n              />}\n              {swipeStart1 && swipeEnd1 && <line\n                x1={swipeStart1.x / scaleRatio}\n                y1={swipeStart1.y / scaleRatio}\n                x2={swipeEnd1.x / scaleRatio}\n                y2={swipeEnd1.y / scaleRatio}\n              />}\n            </svg>\n          }\n          {screenshotInteractionMode === TAP &&\n            <div className={styles.tapDiv}></div>\n          }\n          {selectedInteractionMode === INTERACTION_MODE.GESTURES && points &&\n            <svg key='gestureSVG' className={styles.gestureSvg}>\n              {points.map((pointer) =>\n                pointer.map((tick, index) =>\n                  <React.Fragment key={tick.id}>\n                    {index > 0 && <line\n                      className={styles[tick.type]}\n                      key={`${tick.id}.line`}\n                      x1={pointer[index - 1].x / scaleRatio}\n                      y1={pointer[index - 1].y / scaleRatio}\n                      x2={tick.x / scaleRatio}\n                      y2={tick.y / scaleRatio}\n                      style={{ stroke: tick.color }} />\n                    }\n                    <circle\n                      className={styles[`circle-${tick.type}`]}\n                      key={`${tick.id}.circle`}\n                      cx={tick.x / scaleRatio}\n                      cy={tick.y / scaleRatio}\n                      style={tick.type === TYPES.FILLED ? { fill: tick.color } : { stroke: tick.color }} />\n                  </React.Fragment>\n                )\n              )}\n            </svg>\n          }\n        </div>\n        {driver && driver.client.isAndroid && <div className={styles['whole-btn']}>\n          <Tooltip title={t('Press Back Button')}>\n            <Button id='btnPressHomeButton' className={styles['phone-btn1']}\n              icon={<IoChevronBackOutline className={styles['custom-button-icon']} />}\n              onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [4] })} />\n          </Tooltip>\n          <Tooltip title={t('Press Home Button')}>\n            <Button id='btnPressHomeButton' className={styles['phone-btn2']}\n              icon={<BiCircle className={styles['custom-button-icon']} />}\n              onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [3] })} />\n          </Tooltip>\n          <Tooltip title={t('Press App Switch Button')}>\n            <Button id='btnPressHomeButton' className={styles['phone-btn3']}\n              icon={<BiSquare className={styles['custom-button-icon']} />}\n              onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [187] })} />\n          </Tooltip>\n        </div>}\n      </div>\n    </Spin>\n  </>\n  );\n};\n\n\n\nexport default Screenshot;\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst panelSlice = createSlice({\n    name : 'panel',\n    initialState : {\n        showPanel :true\n    },\n    reducers : {\n        setShowPanel : (state) =>{\n            state.showPanel = !state.showPanel\n        }\n    }\n})\n\nexport const {setShowPanel} = panelSlice.actions\nexport default panelSlice.reducer\n","/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Button, Tooltip, Space } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport { HiOutlineMicrophone, HiOutlineHome } from 'react-icons/hi';\nimport { BiSquare, BiCircle } from 'react-icons/bi';\nimport { IoChevronBackOutline } from 'react-icons/io5';\nimport { APP_MODE } from './shared';\nimport { BUTTON } from '../AntdTypes';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setShowPanel } from '../../slices/panelSlice';\nimport {\n  ReloadOutlined,\n  PlayCircleOutlined,\n  PauseCircleOutlined,\n  EyeOutlined,\n  PauseOutlined,\n  SearchOutlined,\n  CloseOutlined,\n  AppstoreOutlined,\n  GlobalOutlined\n} from '@ant-design/icons';\nimport logo from '../../../../assets/images/testinglogo.png';\nimport menuButton from '../../../../assets/images/hamburger.jpg';\nconst HeaderButtons = (props) => {\n  const { selectAppMode, appMode, mjpegScreenshotUrl, isSourceRefreshOn, toggleRefreshingState,\n          isRecording, startRecording, pauseRecording, showLocatorTestModal, showSiriCommandModal,\n          applyClientMethod, quitSession, driver, t, handlePanel } = props;\n\n\n\n  const headerLogo =\n    <div className={InspectorStyles.logoContainer}>\n      <div onClick={handlePanel}>\n        <img src={menuButton} alt=\"toggleButton\" style={{height: '45px'}}></img>\n      </div>\n      <div>\n        <img src={logo} alt=\"testingLogo\" style={{height: '45px'}}></img>\n      </div>\n    </div>;\n  const deviceControls = <Button.Group>\n    {driver && driver.client.isIOS && <>\n      <Tooltip title={t('Press Home Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<HiOutlineHome className={InspectorStyles['custom-button-icon']} />}\n          onClick={() =>\n            applyClientMethod({ methodName: 'executeScript', args: ['mobile:pressButton', [{ name: 'home' }]] })\n          } />\n      </Tooltip>\n      <Tooltip title={t('Execute Siri Command')}>\n        <Button id='siriCommand'\n          icon={<HiOutlineMicrophone className={InspectorStyles['custom-button-icon']} />}\n          onClick={showSiriCommandModal} />\n      </Tooltip>\n    </>}\n    {/* {driver && driver.client.isAndroid && <>\n      <Tooltip title={t('Press Back Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<IoChevronBackOutline className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [4]})} />\n      </Tooltip>\n      <Tooltip title={t('Press Home Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<BiCircle className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [3]})} />\n      </Tooltip>\n      <Tooltip title={t('Press App Switch Button')}>\n        <Button id='btnPressHomeButton'\n          icon={<BiSquare className={InspectorStyles['custom-button-icon']}/>}\n          onClick={() => applyClientMethod({ methodName: 'pressKeyCode', args: [187]})} />\n      </Tooltip>\n    </>} */}\n  </Button.Group>;\n\n  const appModeControls = <Button.Group value={appMode} style={{ display: 'flex', gap: '10px' }}>\n    {/* <Tooltip title={t('Native App Mode')}> */}\n    <Button className={InspectorStyles.actionButton} icon={<AppstoreOutlined />} onClick={() => { selectAppMode(APP_MODE.NATIVE); }}\n    // type={appMode === APP_MODE.NATIVE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n    >Native Mode</Button>\n    {/* </Tooltip> */}\n    {/* <Tooltip title={t('Web/Hybrid App Mode')}> */}\n    <Button className={InspectorStyles.actionButton} icon={<GlobalOutlined />} onClick={() => { selectAppMode(APP_MODE.WEB_HYBRID); }}\n    // type={appMode === APP_MODE.WEB_HYBRID ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n    >Hybrid Mode</Button>\n    {/* </Tooltip> */}\n  </Button.Group>;\n\n  const generalControls = <Button.Group style={{ display: 'flex', gap: '10px' }}>\n    {mjpegScreenshotUrl && !isSourceRefreshOn &&\n      <Tooltip title={t('Start Refreshing Source')}>\n        <Button className={InspectorStyles.actionButton} id='btnStartRefreshing' icon={<PlayCircleOutlined />} onClick={toggleRefreshingState} />\n      </Tooltip>\n    }\n    {mjpegScreenshotUrl && isSourceRefreshOn &&\n      <Tooltip title={t('Pause Refreshing Source')}>\n        <Button className={InspectorStyles.actionButton} id='btnPauseRefreshing' icon={<PauseCircleOutlined />} onClick={toggleRefreshingState}>Pause Recording</Button>\n      </Tooltip>\n    }\n    {/* <Tooltip title={t('refreshSource')}> */}\n    <Button className={InspectorStyles.actionButton} id='btnReload' icon={<ReloadOutlined />} onClick={() => applyClientMethod({ methodName: 'getPageSource' })}>Refresh</Button>\n    {/* </Tooltip> */}\n    {/* <Tooltip title={t('Search for element')}> */}\n    <Button className={InspectorStyles.actionButton} id='searchForElement' icon={<SearchOutlined />} onClick={showLocatorTestModal}>Search</Button>\n    {/* </Tooltip> */}\n    {!isRecording &&\n    // <Tooltip title={t('Start Recording')}>\n        <Button className={InspectorStyles.actionButton} id='btnStartRecording' icon={<EyeOutlined />} onClick={startRecording}>Start Recording</Button>\n      // </Tooltip>\n    }\n    {isRecording &&\n      // <Tooltip title={t('Pause Recording')}>\n      <Button className={InspectorStyles.actionButton} id='btnPause' icon={<PauseOutlined />} type={BUTTON.DANGER} onClick={pauseRecording}>Pause Recording</Button>\n      // </Tooltip>\n    }\n  </Button.Group>;\n\n\n  const sessionIdShow = (\n    <span style={{ display: 'flex', alignItems: 'center' }}>\n      <span style={{ marginRight: '10px', fontSize: '18px', fontFamily: 'cursive'}}>session id :</span>\n      <h4 style={{ color: 'red', margin: '0' }}>{driver.sessionId}</h4>\n    </span>\n  );\n  const quitSessionButton =\n    // <Tooltip title={t('Close')}>\n    <Button style={{ borderRadius: '50%' }} className={InspectorStyles.actionButton} id='btnClose' icon={<CloseOutlined />} onClick={() => quitSession()} />;\n  // </Tooltip>;\n\n  return <div className={InspectorStyles['inspector-toolbar']}>\n    <Space className={InspectorStyles.button_wrapper}>\n      <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n        {headerLogo}\n        {deviceControls}\n        {appModeControls}\n        {generalControls}\n      </div>\n      <div>\n        {sessionIdShow}\n      </div>\n      <div>\n        {quitSessionButton}\n      </div>\n    </Space>\n  </div>;\n};\n\nexport default HeaderButtons;\n","import React from 'react';\nimport { Alert, Input, Space, Radio, Row } from 'antd';\nimport { ALERT } from '../AntdTypes';\nimport InspectorStyles from './Inspector.css';\n\nconst STRAT_ID = ['id', 'Id'];\nconst STRAT_XPATH = ['xpath', 'XPath'];\nconst STRAT_NAME = ['name', 'Name'];\nconst STRAT_CLASS_NAME = ['class name', 'Class Name'];\nconst STRAT_ACCESSIBILITY_ID = ['accessibility id', 'Accessibility ID'];\nconst STRAT_PREDICATE = ['-ios predicate string', 'Predicate String'];\nconst STRAT_CLASS_CHAIN = ['-ios class chain', 'Class Chain'];\nconst STRAT_UIAUTOMATOR = ['-android uiautomator', 'UIAutomator'];\nconst STRAT_DATAMATCHER = ['-android datamatcher', 'DataMatcher'];\nconst STRAT_VIEWTAG = ['-android viewtag', 'View Tag'];\n\nconst locatorStrategies = (driver) => {\n  const automationName = driver.client.capabilities.automationName;\n  let strategies = [STRAT_ID, STRAT_XPATH, STRAT_NAME, STRAT_CLASS_NAME, STRAT_ACCESSIBILITY_ID];\n  if (!automationName) { return strategies; }\n  switch (automationName.toLowerCase()) {\n    case 'xcuitest':\n    case 'mac2':\n      strategies.push(STRAT_PREDICATE, STRAT_CLASS_CHAIN);\n      break;\n    case 'espresso':\n      strategies.push(STRAT_DATAMATCHER, STRAT_VIEWTAG);\n      break;\n    case 'uiautomator2':\n      strategies.push(STRAT_UIAUTOMATOR);\n      break;\n  }\n  return strategies;\n};\n\nconst showMissingAutomationNameInfo = (driver, t) => {\n  if (!driver.client.capabilities.automationName) {\n    return <Alert message={t('missingAutomationNameForStrategies')} type={ALERT.INFO} showIcon/>;\n  }\n};\n\nconst ElementLocator = (props) => {\n  const { setLocatorTestValue, locatorTestValue, setLocatorTestStrategy, locatorTestStrategy, driver, t } = props;\n\n  return (\n    <Space className={InspectorStyles.spaceContainer} direction='vertical' size='small'>\n      {t('locatorStrategy')}\n      <Row justify=\"center\">\n        <Radio.Group buttonStyle=\"solid\"\n          onChange={(e) => setLocatorTestStrategy(e.target.value)}\n          defaultValue={locatorTestStrategy}\n        >\n          <Row justify=\"center\">\n            {locatorStrategies(driver).map(([strategyValue, strategyName]) => (\n              <Radio.Button\n                className={InspectorStyles.locatorStrategyBtn}\n                value={strategyValue}\n                key={strategyValue}\n              >\n                {strategyName}\n              </Radio.Button>\n            ))}\n          </Row>\n        </Radio.Group>\n      </Row>\n      {showMissingAutomationNameInfo(driver, t)}\n      {t('selector')}\n      <Input.TextArea\n        className={InspectorStyles.locatorSelectorTextArea}\n        onChange={(e) => setLocatorTestValue(e.target.value)}\n        value={locatorTestValue}\n        allowClear={true}\n        rows={3} />\n    </Space>\n  );\n};\n\nexport default ElementLocator;\n","import React from 'react';\nimport { Modal, Button } from 'antd';\nimport LocatedElements from './LocatedElements';\nimport ElementLocator from './ElementLocator';\n\nconst LocatorTestModal = (props) => {\n  const { isLocatorTestModalVisible, isSearchingForElements, clearSearchResults, locatedElements, t } = props;\n\n  const onCancel = () => {\n    const { hideLocatorTestModal } = props;\n    hideLocatorTestModal();\n    clearSearchResults();\n  };\n\n  const onSubmit = () => {\n    const { locatorTestStrategy, locatorTestValue, searchForElement } = props;\n    if (locatedElements) {\n      onCancel();\n    } else {\n      searchForElement(locatorTestStrategy, locatorTestValue);\n    }\n  };\n\n  // Footer displays all the buttons at the bottom of the Modal\n  return <Modal open={isLocatorTestModalVisible}\n    title={t('Search for element')}\n    onCancel={onCancel}\n    footer=\n      {<>\n        {locatedElements &&\n        <Button onClick={(e) => e.preventDefault() || clearSearchResults()}>\n          {t('Back')}\n        </Button>}\n        <Button loading={isSearchingForElements} onClick={onSubmit} type=\"primary\">\n          {locatedElements ? t('Done') : t('Search')}\n        </Button>\n      </>}>\n    {!locatedElements && <ElementLocator {...props} />}\n    {locatedElements && <LocatedElements {...props} />}\n  </Modal>;\n};\n\nexport default LocatorTestModal;\n","import React from 'react';\nimport { Modal, Button, Input, Row } from 'antd';\n\nconst SiriCommandModal = (props) => {\n  const { siriCommandValue, setSiriCommandValue, isSiriCommandModalVisible, t } = props;\n\n  const onSubmit = () => {\n    const { applyClientMethod } = props;\n    applyClientMethod({ methodName: 'executeScript', args: ['mobile:siriCommand', [{text: siriCommandValue}]]});\n    onCancel();\n  };\n\n  const onCancel = () => {\n    const { hideSiriCommandModal } = props;\n    hideSiriCommandModal();\n  };\n\n  // Footer displays all the buttons at the bottom of the Modal\n  return <Modal open={isSiriCommandModalVisible}\n    title={t('Execute Siri Command')}\n    onCancel={onCancel}\n    footer={<Button onClick={onSubmit} type=\"primary\">{t('Execute Command')}</Button>}>\n    <Row>\n      {t('Command')}\n      <Input.TextArea onChange={(e) => setSiriCommandValue(e.target.value)} value={siriCommandValue} />\n    </Row>\n  </Modal>;\n};\n\nexport default SiriCommandModal;\n","import React from 'react';\nimport { Tree, Spin } from 'antd';\nimport LocatorTestModal from './LocatorTestModal';\nimport InspectorStyles from './Inspector.css';\nimport SiriCommandModal from './SiriCommandModal';\n\nconst IMPORTANT_ATTRS = [\n  'name',\n  'content-desc',\n  'resource-id',\n  'AXDescription',\n  'AXIdentifier',\n];\n\n/**\n * Shows the 'source' of the app as a Tree\n */\nconst Source = (props) => {\n  const { source, sourceError, setExpandedPaths, expandedPaths, selectedElement = {}, showSourceAttrs,\n          methodCallInProgress, mjpegScreenshotUrl, isSourceRefreshOn, t } = props;\n\n  const getFormattedTag = (el, showAllAttrs) => {\n    const { tagName, attributes } = el;\n    let attrs = [];\n\n    for (let attr of Object.keys(attributes)) {\n      if (IMPORTANT_ATTRS.includes(attr) || showAllAttrs) {\n        attrs.push(<span key={attr}>&nbsp;\n          <i\n            className={InspectorStyles.sourceAttrName}\n          >{attr}</i>=<span\n            className={InspectorStyles.sourceAttrValue}\n          >&quot;{attributes[attr]}&quot;</span>\n        </span>);\n      }\n    }\n    return <span>\n      &lt;<b className={InspectorStyles.sourceTag}>{tagName}</b>{attrs}&gt;\n    </span>;\n  };\n\n  /**\n   * Binds to antd Tree onSelect. If an item is being unselected, path is undefined\n   * otherwise 'path' refers to the element's path.\n   */\n  const handleSelectElement = (path) => {\n    const { selectElement, unselectElement } = props;\n\n    if (!path) {\n      unselectElement();\n    } else {\n      selectElement(path);\n    }\n  };\n\n  // Recursives through the source and renders a TreeNode for an element\n  const recursive = (elemObj) => {\n    if (!((elemObj || {}).children || []).length) { return null; }\n\n    return elemObj.children.map((el) => ({\n      title: getFormattedTag(el, showSourceAttrs),\n      key: el.path,\n      children: recursive(el),\n    }));\n  };\n\n  const treeData = source && recursive(source);\n\n  return <div id='sourceContainer' className={InspectorStyles['tree-container']} tabIndex=\"0\">\n    {!source && !sourceError && <i>{t('Gathering initial app source…')}</i>}\n    {sourceError && t('couldNotObtainSource', {errorMsg: JSON.stringify(sourceError)})}\n    {/* Show loading indicator in MJPEG mode if a method call is in progress and source refresh is on */}\n    <Spin size='large' spinning={!!methodCallInProgress && mjpegScreenshotUrl && isSourceRefreshOn}>\n      {/* Must switch to a new antd Tree component when there's changes to treeData  */}\n      {treeData ?\n        <Tree\n          defaultExpandAll={true}\n          onExpand={setExpandedPaths}\n          expandedKeys={expandedPaths}\n          onSelect={(selectedPaths) => handleSelectElement(selectedPaths[0])}\n          selectedKeys={[selectedElement.path]}\n          treeData={treeData} />\n        :\n        <Tree\n          treeData={[]} />\n      }\n    </Spin>\n    <LocatorTestModal {...props} />\n    <SiriCommandModal {...props} />\n  </div>;\n};\n\nexport default Source;\n","import { clipboard } from '../../polyfills';\nimport React from 'react';\nimport { Card, Select, Tooltip, Button } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport frameworks from '../../lib/client-frameworks';\nimport { highlight } from 'highlight.js';\nimport { ExportOutlined, CopyOutlined, DeleteOutlined, CloseOutlined, CodeOutlined } from '@ant-design/icons';\nimport { BUTTON } from '../AntdTypes';\n\nconst RecordedActions = (props) => {\n  const { showBoilerplate, recordedActions, actionFramework, t } = props;\n\n  const code = (raw = true) => {\n    const { host, port, path, https, desiredCapabilities } = props.sessionDetails;\n\n    let framework = new frameworks[actionFramework](host, port, path, https, desiredCapabilities);\n    framework.actions = recordedActions;\n    const rawCode = framework.getCodeString(showBoilerplate);\n    if (raw) {\n      return rawCode;\n    }\n    return highlight(framework.language, rawCode, true).value;\n  };\n\n  const actionBar = () => {\n    const { setActionFramework, toggleShowBoilerplate, clearRecording, closeRecorder, isRecording } = props;\n\n    return <div>\n      {!!recordedActions.length &&\n        <Select defaultValue={actionFramework} onChange={setActionFramework}\n          className={InspectorStyles['framework-dropdown']} size=\"small\">\n          {Object.keys(frameworks).map((f) =>\n            <Select.Option value={f} key={f}>{frameworks[f].readableName}</Select.Option>\n          )}\n        </Select>\n      }\n      {(!!recordedActions.length || !isRecording) &&\n        <Button.Group size=\"small\">\n          {!!recordedActions.length &&\n          <Tooltip title={t('Show/Hide Boilerplate Code')}>\n            <Button\n              onClick={toggleShowBoilerplate}\n              icon={<ExportOutlined/>}\n              type={showBoilerplate ? BUTTON.PRIMARY : BUTTON.DEFAULT} />\n          </Tooltip>\n          }\n          {!!recordedActions.length &&\n          <Tooltip title={t('Copy code to clipboard')}>\n            <Button\n              icon={<CopyOutlined/>}\n              onClick={() => clipboard.writeText(code())} />\n          </Tooltip>\n          }\n          {!!recordedActions.length &&\n          <Tooltip title={t('Clear Actions')}>\n            <Button\n              icon={<DeleteOutlined/>}\n              onClick={clearRecording} />\n          </Tooltip>\n          }\n          {!isRecording &&\n          <Tooltip title={t('Close Recorder')}>\n            <Button\n              icon={<CloseOutlined/>}\n              onClick={closeRecorder} />\n          </Tooltip>\n          }\n        </Button.Group>\n      }\n    </div>;\n  };\n\n  const highlightedCode = code(false);\n\n  return (\n    <Card title={<span><CodeOutlined /> {t('Recorder')}</span>}\n      className={InspectorStyles['recorded-actions']}\n      extra={actionBar()}>\n      {!recordedActions.length &&\n        <div className={InspectorStyles['no-recorded-actions']}>\n          {t('Perform some actions to see code show up here')}\n        </div>\n      }\n      {!!recordedActions.length &&\n        <div className={InspectorStyles['recorded-code']}\n          dangerouslySetInnerHTML={{__html: highlightedCode}} />\n      }\n    </Card>\n  );\n};\n\nexport default RecordedActions;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Row, Col, Button, Select, Modal, Input, Switch, notification, } from 'antd';\nimport { COMMAND_DEFINITIONS, COMMAND_ARG_TYPES } from './shared';\nimport InspectorStyles from './Inspector.css';\nimport { INPUT } from '../AntdTypes';\n\nconst Commands = (props) => {\n  const { selectCommandGroup, selectCommandSubGroup, selectedCommandGroup, selectedCommandSubGroup,\n          pendingCommand, cancelPendingCommand, setCommandArg, applyClientMethod, t } = props;\n\n  const startPerformingCommand = (commandName, command) => {\n    const { startEnteringCommandArgs } = props;\n    if (_.isEmpty(command.args)) {\n      applyClientMethod({methodName: command.methodName, args: [], skipRefresh: !command.refresh, ignoreResult: false});\n    } else {\n      startEnteringCommandArgs(commandName, command);\n    }\n  };\n\n  const executeCommand = () => {\n    let { args, command } = pendingCommand;\n\n    // Special case for 'rotateDevice'\n    if (command.methodName === 'rotateDevice') {\n      args = {x: args[0], y: args[1], duration: args[2], radius: args[3], rotation: args[4], touchCount: args[5]};\n    }\n\n    // Special case for 'setGeoLocation'\n    if (command.methodName === 'setGeoLocation') {\n      args = {latitude: args[0], longitude: args[1], altitude: args[2]};\n    }\n\n    // Special case for 'execute'\n    if (command.methodName === 'executeScript') {\n      if (!_.isEmpty(args[1])) {\n        try {\n          args[1] = JSON.parse(args[1]);\n        } catch (e) {\n          notification.error({\n            message: t('invalidJson', {json: args[1]}),\n            duration: 5,\n          });\n        }\n      }\n    }\n\n    // Special case for 'updateSettings'\n    if (command.methodName === 'updateSettings') {\n      if (_.isString(args[0])) {\n        try {\n          args[0] = JSON.parse(args[0]);\n        } catch (e) {\n          notification.error({\n            message: t('invalidJson', {json: args[0]}),\n            duration: 5,\n          });\n        }\n      }\n    }\n\n    applyClientMethod({methodName: command.methodName, args, skipRefresh: !command.refresh, ignoreResult: false});\n    cancelPendingCommand();\n  };\n\n  return <div className={InspectorStyles['commands-container']}>\n    <Row gutter={16} className={InspectorStyles['arg-row']}>\n      <Col span={24}>\n        <Select onChange={(commandGroupName) => selectCommandGroup(commandGroupName)} placeholder={t('Select Command Group')}>\n          { _.keys(COMMAND_DEFINITIONS).map((commandGroup) => <Select.Option key={commandGroup}>{t(commandGroup)}</Select.Option>) }\n        </Select>\n      </Col>\n    </Row>\n    {selectedCommandGroup && <Row>\n      <Col span={24}>\n        <Select onChange={(commandGroupName) => selectCommandSubGroup(commandGroupName)} placeholder={t('Select Sub Group')}>\n          { _.keys(COMMAND_DEFINITIONS[selectedCommandGroup]).map((commandGroup) => <Select.Option key={commandGroup}>{t(commandGroup)}</Select.Option>) }\n        </Select>\n      </Col>\n    </Row>}\n    <Row>\n      {selectedCommandSubGroup && _.toPairs(COMMAND_DEFINITIONS[selectedCommandGroup][selectedCommandSubGroup]).map(([commandName, command], index) => <Col key={index} span={8}>\n        <div className={InspectorStyles['btn-container']}>\n          <Button onClick={() => startPerformingCommand(commandName, command)}>{t(commandName)}</Button>\n        </div>\n      </Col>)}\n    </Row>\n    {!!pendingCommand && <Modal\n      title={t(pendingCommand.commandName)}\n      okText={t('Execute Command')}\n      cancelText={t('Cancel')}\n      open={!!pendingCommand}\n      onOk={() => executeCommand()}\n      onCancel={() => cancelPendingCommand()}>\n      {\n        !_.isEmpty(pendingCommand.command.args) && _.map(pendingCommand.command.args, ([argName, argType], index) => <Row key={index} gutter={16}>\n          <Col span={24} className={InspectorStyles['arg-container']}>\n            {\n              argType === COMMAND_ARG_TYPES.NUMBER && <Input\n                type={INPUT.NUMBER}\n                value={pendingCommand.args[index]}\n                addonBefore={t(argName)}\n                onChange={(e) => setCommandArg(index, _.toNumber(e.target.value))}\n              />\n            }\n            {argType === COMMAND_ARG_TYPES.BOOLEAN && <div>{t(argName)} <Switch checked={pendingCommand.args[index]} onChange={(v) => setCommandArg(index, v)} /></div>}\n            {argType === COMMAND_ARG_TYPES.STRING && <Input addonBefore={t(argName)} onChange={(e) => setCommandArg(index, e.target.value)}/>}\n          </Col>\n        </Row>)\n      }\n    </Modal>}\n  </div>;\n};\n\nexport default Commands;\n","import React, { useEffect, useRef } from 'react';\nimport { Table, Button, Space, Tooltip } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport { EditOutlined, DeleteOutlined, PlusOutlined, PlayCircleOutlined } from '@ant-design/icons';\nimport { SCREENSHOT_INTERACTION_MODE, POINTER_TYPES, percentageToPixels } from './shared';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nconst SAVED_ACTIONS_OBJ = {NAME: 'Name', DESCRIPTION: 'Description', CREATED: 'Created', ACTIONS: 'Actions'};\n\nconst SavedGestures = (props) => {\n  const { savedGestures, showGestureEditor, removeGestureDisplay, t } = props;\n\n  const drawnGestureRef = useRef(null);\n\n  const onRowClick = (rowKey) => {\n    const gesture = getGestureByID(rowKey);\n    if (gesture.id === drawnGestureRef.current) {\n      removeGestureDisplay();\n      drawnGestureRef.current = null;\n    } else {\n      onDraw(gesture);\n      drawnGestureRef.current = gesture.id;\n    }\n  };\n\n  const loadSavedGesture = (gesture) => {\n    const { setLoadedGesture } = props;\n    removeGestureDisplay();\n    setLoadedGesture(gesture);\n    showGestureEditor();\n  };\n\n  const handleDelete = (id) => {\n    const { deleteSavedGesture } = props;\n    if (window.confirm('Are you sure?')) {\n      deleteSavedGesture(id);\n    }\n  };\n\n  const getGestureByID = (id) => {\n    for (const gesture of savedGestures) {\n      if (gesture.id === id) {\n        return gesture;\n      }\n    }\n    throw new Error(`Couldn't find session with id ${id}`);\n  };\n\n  const onDraw = (gesture) => {\n    const { displayGesture } = props;\n    const pointers = convertCoordinates(gesture.actions);\n    displayGesture(pointers);\n  };\n\n  const onPlay = (gesture) => {\n    const { applyClientMethod } = props;\n    const pointers = convertCoordinates(gesture.actions);\n    const actions = formatGesture(pointers);\n    applyClientMethod({methodName: SCREENSHOT_INTERACTION_MODE.GESTURE, args: [actions]});\n  };\n\n  const formatGesture = (pointers) => {\n    const actions = {};\n    for (const pointer of pointers) {\n      actions[pointer.name] = pointer.ticks.map((tick) => _.omit(tick, 'id'));\n    }\n    return actions;\n  };\n\n  const convertCoordinates = (pointers) => {\n    const { windowSize } = props;\n    const newPointers = JSON.parse(JSON.stringify(pointers));\n    for (const pointer of newPointers) {\n      for (const tick of pointer.ticks) {\n        if (tick.type === POINTER_TYPES.POINTER_MOVE) {\n          tick.x = percentageToPixels(tick.x, windowSize.width);\n          tick.y = percentageToPixels(tick.y, windowSize.height);\n        }\n      }\n    }\n    return newPointers;\n  };\n\n  const dataSource = () => {\n    if (!savedGestures) { return []; }\n    return savedGestures.map((gesture) => ({\n      key: gesture.id,\n      Name: (gesture.name || '(Unnamed)'),\n      Created: moment(gesture.date).format('YYYY-MM-DD'),\n      Description: gesture.description || 'No Description',\n    }));\n  };\n\n  const columns = (Object.keys(SAVED_ACTIONS_OBJ)).map((key) => {\n    if (SAVED_ACTIONS_OBJ[key] === SAVED_ACTIONS_OBJ.ACTIONS) {\n      return {title: SAVED_ACTIONS_OBJ[key], key: SAVED_ACTIONS_OBJ[key], render: (_, record) => {\n        const gesture = getGestureByID(record.key);\n        return (\n          <Button.Group>\n            <Tooltip title={t('Play')}>\n              <Button key='play' type='primary' icon={<PlayCircleOutlined />} onClick={() => onPlay(gesture)}/>\n            </Tooltip>\n            <Button icon={<EditOutlined/>} onClick={() => loadSavedGesture(gesture)}/>\n            <Button icon={<DeleteOutlined/>} onClick={() => handleDelete(gesture.id)}/>\n          </Button.Group>\n        );\n      }};\n    } else {\n      return {title: SAVED_ACTIONS_OBJ[key], dataIndex: SAVED_ACTIONS_OBJ[key], key: SAVED_ACTIONS_OBJ[key]};\n    }\n  });\n\n  useEffect(() => {\n    const { getSavedGestures } = props;\n    getSavedGestures();\n    return () => drawnGestureRef.current = null;\n  }, []);\n\n  return (\n    <Space className={InspectorStyles.spaceContainer} direction='vertical' size='middle'>\n      {t('gesturesDescription')}\n      <Table\n        onRow={(row) => ({onClick: () => onRowClick(row.key)})}\n        pagination={false}\n        dataSource={dataSource()}\n        columns={columns}\n        footer={() => <Button\n          onClick={showGestureEditor}\n          icon={<PlusOutlined/>}\n        />}\n      />\n    </Space>\n  );\n};\n\nexport default SavedGestures;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { Tabs, Input, Button, Card, Select, Row, Col, notification,\n         PageHeader, Space, Steps, Divider, Tooltip, Popover } from 'antd';\nimport { QuestionCircleOutlined, PlayCircleOutlined, PlusCircleOutlined,\n         CloseOutlined, AimOutlined, RightCircleOutlined,\n         DownCircleOutlined, UpCircleOutlined, PauseCircleOutlined } from '@ant-design/icons';\nimport { SCREENSHOT_INTERACTION_MODE, POINTER_TYPES,\n         percentageToPixels, pixelsToPercentage } from './shared';\nimport InspectorCSS from './Inspector.css';\n\nconst { POINTER_UP, POINTER_DOWN, PAUSE, POINTER_MOVE } = POINTER_TYPES;\n\nconst DEFAULT_DURATION_TIME = 2500;\nconst COLORS = ['#FF3333', '#FF8F00', '#B65FF4', '#6CFF00', '#00FFDC'];\nconst BUTTONS = {LEFT: 0, RIGHT: 1};\nconst ACTION_TYPES = {ADD: 'add', REMOVE: 'remove'};\nconst MSG_TYPES = {ERROR: 'error', SUCCESS: 'success'};\nconst COORD_TYPE = {PERCENTAGES: 'percentages', PIXELS: 'pixels'};\nconst TICK_PROPS = {POINTER_TYPE: 'pointerType', DURATION: 'duration', BUTTON: 'button', X: 'x', Y: 'y'};\nconst CURSOR = {POINTER: 'pointer', TEXT: 'text'};\nconst STATUS = {WAIT: 'wait', FINISH: 'finish', COLOR: '#FFFFFF', FILLER: 'filler'};\nconst DISPLAY = {[POINTER_UP]: 'Pointer Up', [POINTER_DOWN]: 'Pointer Down',\n                 [PAUSE]: 'Pause', [POINTER_MOVE]: 'Move'};\n\nconst DEFAULT_POINTERS = () => [{\n  name: 'pointer1',\n  ticks: [{id: '1.1'}],\n  color: COLORS[0],\n  id: '1',\n}];\n\n/**\n * Shows the gesture editor interface\n */\nconst GestureEditor = (props) => {\n  const { loadedGesture, saveGesture, tickCoordinates, selectedTick, selectTick, unselectTick, windowSize, t } = props;\n\n  const [pointers, setPointers] = useState(loadedGesture ? loadedGesture.actions : DEFAULT_POINTERS());\n  const [name, setName] = useState(loadedGesture ? loadedGesture.name : t('Untitled Gesture'));\n  const [description, setDescription] = useState(loadedGesture ? loadedGesture.description : t('Add Description'));\n  const [coordType, setCoordType] = useState(COORD_TYPE.PERCENTAGES);\n  const [activePointerId, setActivePointerId] = useState('1');\n\n  // Draw gesture whenever pointers change\n  useEffect(() => {\n    const { displayGesture } = props;\n    const convertedPointers = getConvertedPointers(COORD_TYPE.PIXELS);\n    displayGesture(convertedPointers);\n  }, [pointers]);\n\n  // Retrieve coordinates when user taps screenshot\n  useEffect(() => {\n    if (tickCoordinates) {\n      updateCoordinates(selectedTick, tickCoordinates.x, tickCoordinates.y);\n    }\n  }, [selectedTick, tickCoordinates]);\n\n  const onSave = () => {\n    const { id, date } = loadedGesture;\n    if (duplicatePointerNames(pointers)) { return null; }\n    const gesture = {name, description, id, date, actions: getConvertedPointers(COORD_TYPE.PERCENTAGES)};\n    saveGesture(gesture);\n    displayNotificationMsg(MSG_TYPES.SUCCESS, t('Gesture saved'));\n  };\n\n  const onSaveAs = () => {\n    if (duplicatePointerNames(pointers)) { return null; }\n    const gesture = {name, description, actions: getConvertedPointers(COORD_TYPE.PERCENTAGES)};\n    saveGesture(gesture);\n    displayNotificationMsg(MSG_TYPES.SUCCESS, t('Gesture saved as', {gestureName: name}));\n    onBack();\n  };\n\n  const onPlay = () => {\n    const { applyClientMethod } = props;\n    if (duplicatePointerNames(pointers)) { return null; }\n    const formattedPointers = getW3CPointers();\n    applyClientMethod({methodName: SCREENSHOT_INTERACTION_MODE.GESTURE, args: [formattedPointers]});\n  };\n\n  const onBack = () => {\n    const { hideGestureEditor, removeLoadedGesture, removeGestureDisplay } = props;\n    unselectTick();\n    removeGestureDisplay();\n    removeLoadedGesture();\n    hideGestureEditor();\n  };\n\n  // Check if pointer names are duplicates before saving/playing\n  const duplicatePointerNames = (localPointers) => {\n    const duplicates = {};\n    for (const pointer of localPointers) {\n      if (duplicates[pointer.name]) {\n        displayNotificationMsg(MSG_TYPES.ERROR, t('Duplicate pointer names are not allowed'));\n        return true;\n      } else {\n        duplicates[pointer.name] = pointer;\n      }\n    }\n    return false;\n  };\n\n  const displayNotificationMsg = (type, msg) => {\n    notification[type]({\n      message: msg,\n      duration: 5,\n    });\n  };\n\n  // Change gesture datastructure to fit Webdriver spec\n  const getW3CPointers = () => {\n    const newPointers = {};\n    const currentPointers = getConvertedPointers(COORD_TYPE.PIXELS);\n    for (const pointer of currentPointers) {\n      newPointers[pointer.name] = pointer.ticks.map((tick) => _.omit(tick, 'id'));\n    }\n    return newPointers;\n  };\n\n  // This converts all the coordinates in the gesture to px/%\n  const getConvertedPointers = (type) => {\n    const { width, height } = windowSize;\n    if (type === coordType) { return pointers; }\n    const newPointers = _.cloneDeep(pointers);\n    for (const pointer of newPointers) {\n      for (const tick of pointer.ticks) {\n        if (tick.type === POINTER_TYPES.POINTER_MOVE) {\n          if (type === COORD_TYPE.PIXELS) {\n            tick.x = percentageToPixels(tick.x, width);\n            tick.y = percentageToPixels(tick.y, height);\n          } else {\n            tick.x = pixelsToPercentage(tick.x, width);\n            tick.y = pixelsToPercentage(tick.y, height);\n          }\n        }\n      }\n    }\n    return newPointers;\n  };\n\n  const getDefaultMoveDuration = (ticks, tickId, x2, y2, coordFromTap) => {\n    const { width, height } = windowSize;\n    const ticksExceptCurrent = ticks.filter((tick) => tick.id !== tickId);\n    const prevPointerMoves = [];\n    for (const tick of ticksExceptCurrent) {\n      if (tick.type === POINTER_MOVE && tick.x !== undefined && tick.y !== undefined) {\n        prevPointerMoves.push({x: tick.x, y: tick.y});\n      }\n    }\n    const len = prevPointerMoves.length;\n    if (len === 0) {\n      return 0;\n    }\n    const obj = {x1: prevPointerMoves[len - 1].x, y1: prevPointerMoves[len - 1].y, x2, y2};\n    if (coordType === COORD_TYPE.PERCENTAGES) {\n      obj.x1 = percentageToPixels(obj.x1, width);\n      obj.y1 = percentageToPixels(obj.y1, height);\n      // No need to convert coordinates from tap since they are in px\n      if (!coordFromTap) {\n        obj.x2 = percentageToPixels(obj.x2, width);\n        obj.y2 = percentageToPixels(obj.y2, height);\n      }\n    }\n    const calcLength = (v1, v2) => Math.sqrt((v1 ** 2) + (v2 ** 2));\n    const calcDiff = (v1, v2) => Math.abs(v2) - Math.abs(v1);\n    const xDiff = calcDiff(obj.x1, obj.x2);\n    const yDiff = calcDiff(obj.y1, obj.y2);\n    const maxScreenLength = calcLength(width, height);\n    const lineLength = calcLength(xDiff, yDiff);\n    const lineLengthPct = lineLength / maxScreenLength;\n    return Math.round(lineLengthPct * DEFAULT_DURATION_TIME);\n  };\n\n  // Update tapped coordinates within local state\n  const updateCoordinates = (tickKey, updateX, updateY) => {\n    if (!updateX || !updateY) { return null; }\n    const { width, height } = windowSize;\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((pointer) => pointer.id === tickKey[0]);\n    const currentTick = currentPointer.ticks.find((tick) => tick.id === tickKey);\n    const x = parseFloat(updateX, 10);\n    const y = parseFloat(updateY, 10);\n    if (coordType === COORD_TYPE.PERCENTAGES) {\n      currentTick.x = pixelsToPercentage(x, width);\n      currentTick.y = pixelsToPercentage(y, height);\n    } else {\n      currentTick.x = x;\n      currentTick.y = y;\n    }\n\n    if (currentTick.duration === undefined) {\n      currentTick.duration = getDefaultMoveDuration(currentPointer.ticks, currentTick.id, x, y, true);\n    }\n    setPointers(copiedPointers);\n  };\n\n  const addPointer = () => {\n    const key = pointers.length + 1;\n    const pointerId = String(key);\n    const copiedPointers = _.cloneDeep(pointers);\n    copiedPointers.push({\n      name: `pointer${key}`,\n      ticks: [{id: `${key}.1`}],\n      id: pointerId,\n      color: COLORS[key - 1]\n    });\n    setPointers(copiedPointers);\n    setActivePointerId(pointerId);\n  };\n\n  const deletePointer = (targetKey) => {\n    // 'newActivePointerId' variable keeps track of the previous pointer before deleting the current one\n    // its default is the first pointer\n    let newActivePointerId = '1';\n    const pointersExceptCurrent = pointers.filter((pointer) => pointer.id !== targetKey);\n    const newPointers = pointersExceptCurrent.map((pointer, index) => {\n      const id = String(index + 1);\n      if (id !== pointer.id) {\n        pointer.id = id;\n        pointer.color = COLORS[index];\n        pointer.ticks = pointer.ticks.map((tick) => {\n          tick.id = `${id}.${tick.id[2]}`;\n          return tick;\n        });\n      } else {\n        newActivePointerId = pointer.id;\n      }\n      return pointer;\n    });\n    unselectTick();\n    setPointers(newPointers);\n    setActivePointerId(newActivePointerId);\n  };\n\n  const addTick = (pointerKey) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((pointer) => pointer.id === pointerKey);\n    const id = `${pointerKey}.${(currentPointer.ticks).length + 1}`;\n    currentPointer.ticks.push({id});\n    setPointers(copiedPointers);\n  };\n\n  const deleteTick = (pointerKey, tickKey) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((pointer) => pointer.id === pointerKey);\n    const ticksToKeep = currentPointer.ticks.filter((tick) => tick.id !== tickKey);\n    const newTicks = ticksToKeep.map((tick, index) => {\n      const id = String(index + 1);\n      if (tick.id !== id) {\n        tick.id = `${tick.id[0]}.${id}`;\n      }\n      return tick;\n    });\n    currentPointer.ticks = newTicks;\n    unselectTick();\n    setPointers(copiedPointers);\n  };\n\n  // Updates the current tick within local state\n  const updateTick = (tick, msg, value) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const currentPointer = copiedPointers.find((p) => p.id === tick.id[0]);\n    const targetTickIdx = currentPointer.ticks.findIndex((t) => t.id === tick.id);\n    // currentTick can be assigned a new tick object if made changes to pointer types\n    let currentTick = currentPointer.ticks[targetTickIdx];\n\n    // We create an entire new tick for changes in pointer types to ensure previous properties are removed\n    if (msg === TICK_PROPS.POINTER_TYPE) {\n      if (value === POINTER_MOVE) {\n        selectTick(tick.id);\n      }\n      currentTick = {id: tick.id, type: value,\n                     ...([POINTER_DOWN, POINTER_UP].includes(value) && {button: BUTTONS.LEFT}),\n                     ...(value === PAUSE && {duration: 0})};\n    } else {\n      // We just modify the existing tick values\n      currentTick[msg] = parseFloat(value, 10);\n\n      // set default duration for if not set already\n      if (currentTick.x !== undefined && currentTick.y !== undefined && currentTick.duration === undefined) {\n        currentTick.duration = getDefaultMoveDuration(currentPointer.ticks, tick.id, currentTick.x, currentTick.y, false);\n      }\n    }\n\n    currentPointer.ticks[targetTickIdx] = currentTick;\n    setPointers(copiedPointers);\n  };\n\n  // Reformats the gesture only for the timeline by populating the 'filler' ticks for each pointer\n  // to match same length to keep timeline lengths consistent and accurate\n  const updateGestureForTimeline = () => {\n    const copiedPointers = _.cloneDeep(pointers);\n    const allTickLengths = copiedPointers.map((pointer) => pointer.ticks.length);\n    const maxTickLength = Math.max(...allTickLengths);\n    return copiedPointers.map((pointer) => {\n      const currentLength = pointer.ticks.length;\n      if (currentLength > 0) {\n        pointer.ticks[currentLength - 1].customStep = STATUS.WAIT;\n        if (currentLength < maxTickLength) {\n          const fillers = Array.from({length: maxTickLength - currentLength},\n            () => ({type: STATUS.FILLER, color: STATUS.COLOR}));\n          pointer.ticks.push(...fillers);\n        }\n      }\n      return pointer;\n    });\n  };\n\n  const updatePointerName = (pointerName, pointerIndex) => {\n    const copiedPointers = _.cloneDeep(pointers);\n    copiedPointers[pointerIndex].name = pointerName;\n    setPointers(copiedPointers);\n  };\n\n  const headerTitle =\n    <Tooltip title={t('Edit')}>\n      <Input\n        defaultValue={name}\n        className={InspectorCSS['gesture-header-title']}\n        onChange={(e) => setName(e.target.value)}\n        size='small' />\n    </Tooltip>;\n\n  const headerButtons = <>\n    <Button.Group>\n      <Button\n        className={InspectorCSS['gesture-header-coord-btn']}\n        type={coordType === COORD_TYPE.PERCENTAGES ? 'primary' : 'default'}\n        onClick={() => { setPointers(getConvertedPointers(COORD_TYPE.PERCENTAGES)); setCoordType(COORD_TYPE.PERCENTAGES); }}\n        size='small'>%</Button>\n      <Button\n        className={InspectorCSS['gesture-header-coord-btn']}\n        type={coordType === COORD_TYPE.PIXELS ? 'primary' : 'default'}\n        onClick={() => { setPointers(getConvertedPointers(COORD_TYPE.PIXELS)); setCoordType(COORD_TYPE.PIXELS); }}\n        size='small'>px</Button>\n    </Button.Group>\n    <Tooltip title={t('Play')}>\n      <Button type='primary' icon={<PlayCircleOutlined/>} onClick={() => onPlay()} />\n    </Tooltip>\n    <Button onClick={() => onSaveAs()}>{t('saveAs')}</Button>\n    <Button onClick={() => onSave()} disabled={!loadedGesture}>{t('Save')}</Button>\n  </>;\n\n  const headerDescription =\n    <Tooltip title={t('Edit')}>\n      <Input\n        defaultValue={description}\n        className={InspectorCSS['gesture-header-description']}\n        onChange={(e) => setDescription(e.target.value)}\n        size='small' />\n    </Tooltip>;\n\n  const regularTimelineIcon = (pointer, tick) => {\n    const { type, duration, button, x, y } = tick;\n    const iconStyle = {color: pointer.color};\n    return (\n      <Popover placement='bottom'\n        title={<center>{t(DISPLAY[type])}</center>}\n        content={\n          <div className={InspectorCSS['timeline-tick-title']}>\n            {duration !== undefined && <p>{t('Duration')}: {duration}ms</p>}\n            {button !== undefined && <p>{t('Button')}: {button === BUTTONS.LEFT ? t('Left') : t('Right')}</p>}\n            {x !== undefined && <p>X: {x}{coordType === COORD_TYPE.PIXELS ? 'px' : '%'}</p>}\n            {y !== undefined && <p>Y: {y}{coordType === COORD_TYPE.PIXELS ? 'px' : '%'}</p>}\n            {type === undefined && <p>{t('Action Type Not Defined')}</p>}\n          </div>\n        }>\n        {type === POINTER_MOVE && <RightCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === POINTER_DOWN && <DownCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === POINTER_UP && <UpCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === PAUSE && <PauseCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n        {type === undefined && <QuestionCircleOutlined className={InspectorCSS['gesture-header-icon']} style={iconStyle}/>}\n      </Popover>\n    );\n  };\n\n  const timeline = updateGestureForTimeline().map((pointer) =>\n    <center key={pointer.id}>\n      <Steps className={InspectorCSS['gesture-header-timeline']}\n        style={{'--timelineColor': pointer.color}}\n        items={pointer.ticks.map((tick) => {\n          if (tick.type !== STATUS.FILLER) {\n            return {key: 'timeline-steps', status: tick.customStep || STATUS.FINISH, icon: regularTimelineIcon(pointer, tick)};\n          } else {\n            return {key: 'transparent-steps', status: STATUS.WAIT, icon:\n              <RightCircleOutlined className={InspectorCSS['gesture-header-icon']} style={{color: tick.color}}/>\n            };\n          }\n        })} />\n    </center>);\n\n  const tickButton = (tick) =>\n    <center>\n      <Button.Group className={InspectorCSS['tick-button-group']}>\n        <Button\n          type={tick.button === BUTTONS.LEFT ? 'primary' : 'default'}\n          className={InspectorCSS['tick-button-input']}\n          onClick={() => updateTick(tick, TICK_PROPS.BUTTON, BUTTONS.LEFT)}>\n          {t('Left')}\n        </Button>\n        <Button\n          type={tick.button === BUTTONS.RIGHT ? 'primary' : 'default'}\n          className={InspectorCSS['tick-button-input']}\n          onClick={() => updateTick(tick, TICK_PROPS.BUTTON, BUTTONS.RIGHT)}>\n          {t('Right')}\n        </Button>\n      </Button.Group>\n    </center>;\n\n  const tickDuration = (tick) =>\n    <center>\n      <Input\n        className={InspectorCSS['tick-input-box']}\n        value={!isNaN(tick.duration) ? tick.duration : null}\n        placeholder={t('Duration')}\n        defaultValue={tick.duration}\n        onChange={(e) => updateTick(tick, TICK_PROPS.DURATION, e.target.value)}\n        addonAfter='ms' />\n    </center>;\n\n  const tickCoords = (tick) =>\n    <center>\n      <div className={InspectorCSS['tick-input-box']}>\n        <Input\n          className={InspectorCSS['tick-coord-box']}\n          value={!isNaN(tick.x) ? tick.x : ''}\n          placeholder='X'\n          defaultValue={tick.x}\n          onChange={(e) => updateTick(tick, TICK_PROPS.X, e.target.value)} />\n        <Input\n          className={InspectorCSS['tick-coord-box']}\n          value={!isNaN(tick.y) ? tick.y : ''}\n          placeholder='Y'\n          defaultValue={tick.y}\n          onChange={(e) => updateTick(tick, TICK_PROPS.Y, e.target.value)} />\n      </div>\n    </center>;\n\n  const tickType = (tick) =>\n    <center>\n      <Select\n        className={InspectorCSS['tick-pointer-input']}\n        placeholder={t('Action Type')}\n        value={tick.type}\n        defaultValue={tick.type}\n        size='middle'\n        dropdownMatchSelectWidth={false}\n        onChange={(e) => updateTick(tick, TICK_PROPS.POINTER_TYPE, e)}>\n        <Select.Option className={InspectorCSS['option-inpt']} value={POINTER_MOVE}>\n          {t(DISPLAY.pointerMove)}\n        </Select.Option>\n        <Select.Option className={InspectorCSS['option-inpt']} value={POINTER_DOWN}>\n          {t(DISPLAY.pointerDown)}\n        </Select.Option>\n        <Select.Option className={InspectorCSS['option-inpt']} value={POINTER_UP}>\n          {t(DISPLAY.pointerUp)}\n        </Select.Option>\n        <Select.Option className={InspectorCSS['option-inpt']} value={PAUSE}>\n          {t(DISPLAY.pause)}\n        </Select.Option>\n      </Select>\n    </center>;\n\n  const tapCoordinatesBtn = (tickId) =>\n    <Tooltip title={selectedTick === tickId ? t('Click to Set Coordinates') : t('Set Coordinates Via Field')}>\n      <Button\n        size='small'\n        type={selectedTick === tickId ? 'primary' : 'text'}\n        icon={<AimOutlined/>}\n        onClick={() => selectedTick === tickId ? unselectTick() : selectTick(tickId)} />\n    </Tooltip>;\n\n  const tickCard = (tick) =>\n    <Card\n      hoverable={true}\n      className={InspectorCSS['tick-card']}\n      extra={\n        <>\n          {tick.type === POINTER_MOVE && tapCoordinatesBtn(tick.id)}\n          <Button size='small' type='text' icon={<CloseOutlined/>}\n            onClick={() => deleteTick(tick.id[0], tick.id)} />\n        </>\n      }>\n      <Space className={InspectorCSS.spaceContainer} direction='vertical' size='middle'>\n        {tickType(tick)}\n        {(tick.type === POINTER_MOVE || tick.type === PAUSE) && tickDuration(tick)}\n        {(tick.type === POINTER_DOWN || tick.type === POINTER_UP) && tickButton(tick)}\n        {tick.type === POINTER_MOVE && tickCoords(tick)}\n      </Space>\n    </Card>;\n\n  const pointerTicksGrid = (pointer) =>\n    <Row gutter={[24, 24]}>\n      {pointer.ticks.map((tick) =>\n        <Col xs={12} sm={12} md={12} lg={8} xl={6} xxl={4} key={tick.id}>\n          {tickCard(tick)}\n        </Col>\n      )}\n      <Col xs={12} sm={12} md={12} lg={8} xl={6} xxl={4}>\n        <Card className={InspectorCSS['tick-plus-card']} bordered={false}>\n          <center>\n            <Button className={InspectorCSS['tick-plus-btn']} icon={<PlusCircleOutlined/>}\n              onClick={() => addTick(pointer.id)} />\n          </center>\n        </Card>\n      </Col>\n    </Row>;\n\n  const pointerTabs = pointers.map((pointer, index) =>\n    ({\n      label: <Tooltip title={t('Edit')}>\n        <Input\n          className={InspectorCSS['pointer-title']}\n          style={{ cursor: activePointerId === pointer.id ? CURSOR.TEXT : CURSOR.POINTER, textDecorationColor: pointer.color}}\n          value={pointer.name}\n          defaultValue={pointer.name}\n          bordered={false}\n          maxLength={10}\n          onChange={(e) => updatePointerName(e.target.value, index)} />\n      </Tooltip>,\n      key: pointer.id,\n      children: pointerTicksGrid(pointer)\n    })\n  );\n\n  return (\n    <>\n      <PageHeader\n        className={InspectorCSS['gesture-header']}\n        onBack={() => onBack()}\n        title={headerTitle}\n        extra={headerButtons}\n        footer={\n          <>\n            {headerDescription}\n            <Divider/>\n            {timeline}\n          </>\n        } />\n      <Tabs\n        type='editable-card'\n        onChange={(pointerId) => setActivePointerId(pointerId)}\n        activeKey={activePointerId}\n        onEdit={(targetKey, action) => action === ACTION_TYPES.ADD ? addPointer() : deletePointer(targetKey)}\n        hideAdd={pointers.length === 5}\n        centered={true}\n        tabBarGutter={10}\n        items={pointerTabs} />\n    </>\n  );\n};\n\nexport default GestureEditor;\n","import React from 'react';\nimport { Card, Tooltip, Button, Select } from 'antd';\nimport { CopyOutlined, CodeOutlined } from '@ant-design/icons';\nimport InspectorStyles from './Inspector.css';\nimport frameworks from '../../lib/client-frameworks';\nimport { highlight } from 'highlight.js';\nimport { clipboard } from '../../polyfills';\n\nconst SessionCodeBox = ({ actionFramework, setActionFramework, sessionDetails, t }) => {\n\n  const code = () => {\n    const { host, port, path, https, desiredCapabilities } = sessionDetails;\n    const framework = new frameworks[actionFramework](host, port, path, https, desiredCapabilities);\n    const rawCode = framework.getCodeString(true);\n\n    return highlight(framework.language, rawCode, true).value;\n  };\n\n  const actionBar = () => <div>\n    <Select defaultValue={actionFramework} onChange={setActionFramework}\n      className={InspectorStyles['framework-dropdown']} size='small'>\n      {Object.keys(frameworks).map((f) =>\n        <Select.Option value={f} key={f}>{frameworks[f].readableName}</Select.Option>\n      )}\n    </Select>\n    <Tooltip title={t('Copy Code to Clipboard')}>\n      <Button\n        icon={<CopyOutlined/>}\n        onClick={() => clipboard.writeText(code())}\n        type='text' />\n    </Tooltip>\n  </div>;\n\n  return (\n    <Card title={<span><CodeOutlined /> {t('Start this Kind of Session with Code')}</span>}\n      className={InspectorStyles['recorded-actions']}\n      extra={actionBar()}>\n      <div className={InspectorStyles['recorded-code']} dangerouslySetInnerHTML={{__html: code()}} />\n    </Card>\n  );\n};\n\nexport default SessionCodeBox;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Table, Row, Col } from 'antd';\nimport SessionCodeBox from './SessionCodeBox';\nimport InspectorStyles from './Inspector.css';\nimport formatJSON from 'format-json';\n\nconst SESSION_OBJ = {\n  session_id: 'Session ID', session_url: 'Session URL',\n  server_details: 'Server Details', session_length: 'Session Length',\n  session_details: 'Session Details', active_appId: 'Currently Active App ID'\n};\n\nconst OUTER_TABLE_KEY = 'sessionInfo';\nconst SESSION_TABLE_KEY = 'sessionDetails';\nconst SERVER_TABLE_KEY = 'serverDetails';\n\nconst SCROLL_DISTANCE_Y = 104;\nconst COLUMN_WIDTH = 200;\nlet SESSION_DETAILS;\n\nconst SessionInfo = (props) => {\n  const { driver } = props;\n\n  const sessionArray = Object.keys(SESSION_OBJ).map((key) =>\n    [key, String(SESSION_OBJ[key])]\n  );\n\n  const generateSessionTime = () => {\n    const { sessionStartTime } = props;\n    const currentTime = Date.now();\n    const timeDiff = currentTime - sessionStartTime;\n\n    const hours = timeDiff / 3600000;\n    const minutes = (hours - Math.floor(hours)) * 60;\n    const seconds = (minutes - Math.floor(minutes)) * 60;\n\n    const showTime = (time) => String(Math.floor(time)).padStart(2, '0');\n\n    return `${showTime(hours)}:${showTime(minutes)}:${showTime(seconds)}`;\n  };\n\n  const interval = useRef();\n  const [time, setTime] = useState(generateSessionTime());\n\n  const getTable = (tableValues, keyName, outerTable) => {\n    const keyValue = `${keyName}_value`;\n    const dataSource = tableValues.map(([name, value]) =>\n      ({key: name, [keyName]: outerTable ? value : name, [keyValue]: value })\n    );\n\n    const columns = [{\n      dataIndex: keyName,\n      key: keyName,\n      ...(outerTable && { width: COLUMN_WIDTH })\n    }, {\n      dataIndex: keyValue,\n      key: keyValue,\n      render: outerTable ?\n        (text) => generateSessionInfo(text)\n        :\n        (text) => typeof text === 'object' ?\n          <pre>{formatJSON.plain(text)}</pre>\n          :\n          String(text)\n    }];\n\n    return outerTable ?\n      <div className={InspectorStyles['session-info-table']}>\n        <Row>\n          <Col span={24}>\n            <Table\n              columns={columns}\n              dataSource={dataSource}\n              pagination={false}\n              showHeader={false}\n              bordered={true}\n              size=\"small\" />\n          </Col>\n        </Row>\n        <div className={InspectorStyles['session-code-box']}>\n          <Row>\n            <SessionCodeBox {...props} />\n          </Row>\n        </div>\n      </div>\n      :\n      <Table\n        className={InspectorStyles['session-inner-table']}\n        columns={columns}\n        dataSource={dataSource}\n        pagination={false}\n        showHeader={false}\n        size=\"small\"\n        scroll={{ y: SCROLL_DISTANCE_Y }} />;\n  };\n\n  const generateSessionInfo = (name) => {\n    const { sessionDetails, appId, status } = props;\n    const { host, path, port } = sessionDetails;\n    const { sessionId, connectedUrl } = driver || '';\n\n    const serverDetailsArray = [['host', host], ['path', path], ['port', port]];\n    const sessionArray = SESSION_DETAILS != null ?\n      Object.keys(SESSION_DETAILS).map((key) =>\n        [key, (SESSION_DETAILS[key])]\n      )\n      :\n      [];\n    const serverStatusArray = status != null ?\n      Object.keys(status).map((key) =>\n        [key, String(status[key])]\n      )\n      :\n      [];\n\n    // TODO: Fetch URL from Cloud Providers\n    const sessionUrl = sessionId && connectedUrl ?\n      `${connectedUrl}session/${sessionId}`\n      :\n      'Error Fetching Session Url';\n\n    switch (name) {\n      case 'Session ID': return sessionId;\n      case 'Session URL': return sessionUrl;\n      case 'Server Details': return getTable([...serverDetailsArray, ...serverStatusArray],\n        SERVER_TABLE_KEY, false);\n      case 'Session Length': return time;\n      case 'Session Details': return getTable(sessionArray, SESSION_TABLE_KEY, false);\n      case 'Currently Active App ID': return appId;\n      default: return name;\n    }\n  };\n\n  useEffect(() => {\n    const { getActiveAppId, getServerStatus, applyClientMethod } = props;\n    const { isIOS, isAndroid } = driver.client;\n\n    getActiveAppId(isIOS, isAndroid);\n    getServerStatus();\n\n    (async () => SESSION_DETAILS = await applyClientMethod({methodName: 'getSession'}))();\n    interval.current = setInterval(() => {\n      setTime(generateSessionTime());\n    }, 1000);\n\n    return () => clearInterval(interval.current);\n  }, []);\n\n  return getTable(sessionArray, OUTER_TABLE_KEY, true);\n};\n\nexport default SessionInfo;\n","/* eslint-disable require-await */\n/* eslint-disable quotes */\n/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable dot-notation */\n/* eslint-disable indent */\n/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { debounce, drop } from 'lodash';\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE } from './shared';\nimport { Card, Button, Spin, Tooltip, Modal, Tabs, Space, Input, Switch, Menu, Select } from 'antd';\nimport Screenshot from './Screenshot';\nimport HeaderButtons from './HeaderButtons';\nimport SelectedElement from './SelectedElement';\nimport Source from './Source';\nimport InspectorStyles from './Inspector.css';\nimport RecordedActions from './RecordedActions';\nimport Commands from './Commands';\nimport SavedGestures from './SavedGestures';\nimport GestureEditor from './GestureEditor';\nimport SessionInfo from './SessionInfo';\nimport menuButton from '../../../../assets/images/hamburger.jpg';\nimport { clipboard } from '../../polyfills';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  SelectOutlined,\n  ScanOutlined,\n  SwapRightOutlined,\n  EditOutlined,\n  HeatMapOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  BarsOutlined,\n  AppstoreOutlined,\n  MailOutlined,\n  SettingOutlined,\n  CopyOutlined,\n  DownloadOutlined,\n  FileTextOutlined,\n  LikeOutlined,\n  RotateRightOutlined,\n  NotificationOutlined,\n  AimOutlined,\n  SwitcherOutlined,\n  TagOutlined,\n  SlidersOutlined,\n  InfoCircleOutlined,\n  ThunderboltOutlined,\n  HighlightOutlined,\n  CodeOutlined,\n  ShrinkOutlined,\n  DollarOutlined,\n  DragOutlined,\n  InfoOutlined,\n  UpCircleOutlined,\n  FileAddOutlined,\n  FundProjectionScreenOutlined,\n  CaretDownOutlined,\n  FieldTimeOutlined,\n  PaperClipOutlined,\n  LockOutlined,\n  UnlockOutlined,\n  ShakeOutlined,\n  AppstoreAddOutlined,\n  DatabaseOutlined,\n} from '@ant-design/icons';\nimport { BUTTON } from '../AntdTypes';\n\nconst { SELECT, SWIPE, TAP, LONGPRESS, DRAG_AND_DROP, DOUBLE_TAP, ZOOMIN, SLIDE, FILE_UPLOAD, EXPECTED_VALUE, ROTATE, TAKE_SCREENSHOT, SCRATCH, HIDE_KEYBOARD, GET_DEVICE_TIME, GET_CLIPBOARD, LOCK, UNLOCK, SHAKE, OTP } = SCREENSHOT_INTERACTION_MODE;\n\nconst ButtonGroup = Button.Group;\n\nconst MIN_WIDTH = 870;\nconst MIN_HEIGHT = 610;\nconst MAX_SCREENSHOT_WIDTH = 500;\nconst { Option } = Select;\n\nconst MJPEG_STREAM_CHECK_INTERVAL = 1000;\n\nfunction downloadXML(sourceXML) {\n  let element = document.createElement('a');\n  element.setAttribute('href', 'data:application/xml;charset=utf-8,' + encodeURIComponent(sourceXML));\n  element.setAttribute('download', 'source.xml');\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport default class Inspector extends Component {\n\n  constructor() {\n    super();\n    this.didInitialResize = false;\n    this.state = {\n      scaleRatio: 1,\n      activeIndex: 0,\n      activeCategory: 1,\n      nestedDropIndex: 0,\n      showPane: false,\n      currentSelection: \"Select Elements\",\n      step_array: [],\n      total_array: [],\n      isLongPress: false,\n      action: '',\n      mode_orientation: 'PORTRAIT',\n    };\n    this.screenAndSourceEl = null;\n    this.lastScreenshot = null;\n    this.screenshotEl = null;\n    this.updateSourceTreeWidth = debounce(this.updateSourceTreeWidth.bind(this), 50);\n    this.updateScaleRatio = debounce(this.updateScaleRatio.bind(this), 500);\n    this.mjpegStreamCheckInterval = null;\n  }\n  /**\n   * Calculates the ratio that the image is being scaled by\n   */\n  updateScaleRatio() {\n    const screenshotImg = this.screenshotEl.querySelector('img');\n\n    // now update scale ratio\n    this.setState({\n      scaleRatio: (this.props.windowSize.width / screenshotImg.offsetWidth)\n    });\n  }\n\n  updateSourceTreeWidth() {\n    // the idea here is to keep track of the screenshot image width. if it has\n    // too much space to the right or bottom, adjust the max-width of the\n    // screenshot container so the source tree flex adjusts to always fill the\n    // remaining space. This keeps everything looking tight.\n    if (!this.screenAndSourceEl) {\n      return;\n    }\n\n    const screenshotBox = this.screenAndSourceEl.querySelector('#screenshotContainer');\n    const img = this.screenAndSourceEl.querySelector('#screenshotContainer img#screenshot');\n\n    if (!img) {\n      return;\n    }\n    const imgRect = img.getBoundingClientRect();\n    const screenshotRect = screenshotBox.getBoundingClientRect();\n    screenshotBox.style.flexBasis = `${imgRect.width}px`;\n    if (imgRect.height < screenshotRect.height) {\n      // get what the img width would be if it fills screenshot box height\n      const attemptedWidth = (screenshotRect.height / imgRect.height) * imgRect.width;\n      screenshotBox.style.maxWidth = attemptedWidth > MAX_SCREENSHOT_WIDTH ?\n        `${MAX_SCREENSHOT_WIDTH}px` :\n        `${attemptedWidth}px`;\n    } else if (imgRect.width < screenshotRect.width) {\n      screenshotBox.style.maxWidth = `${imgRect.width}px`;\n    }\n\n    this.updateScaleRatio();\n  }\n\n  componentDidMount() {\n    const curHeight = window.innerHeight;\n    const curWidth = window.innerWidth;\n    const needsResize = (curHeight < MIN_HEIGHT) || (curWidth < MIN_WIDTH);\n    if (!this.didInitialResize && needsResize) {\n      const newWidth = curWidth < MIN_WIDTH ? MIN_WIDTH : curWidth;\n      const newHeight = curHeight < MIN_HEIGHT ? MIN_HEIGHT : curHeight;\n      // resize width to something sensible for using the inspector on first run\n      window.resizeTo(newWidth, newHeight);\n    }\n    this.didInitialResize = true;\n    // setInterval(() => {\n    //   this.props.applyClientMethod({methodName: 'getPageSource', ignoreResult: true});\n    // }, 8000);\n    console.log('props in the inspector', this.props);\n    this.props.applyClientMethod({ methodName: 'getPageSource', ignoreResult: true });\n    this.props.getSavedActionFramework();\n    this.props.runKeepAliveLoop();\n    window.addEventListener('resize', this.updateSourceTreeWidth);\n    this.props.setSessionTime(Date.now());\n\n    if (this.props.mjpegScreenshotUrl) {\n      this.mjpegStreamCheckInterval = setInterval(this.checkMjpegStream.bind(this),\n        MJPEG_STREAM_CHECK_INTERVAL);\n    }\n  }\n\n  async checkMjpegStream() {\n    const { mjpegScreenshotUrl, isAwaitingMjpegStream, setAwaitingMjpegStream } = this.props;\n    const img = new Image();\n    img.src = mjpegScreenshotUrl;\n    let imgReady = false;\n    try {\n      await img.decode();\n      imgReady = true;\n    } catch (ign) { }\n    if (imgReady && isAwaitingMjpegStream) {\n      setAwaitingMjpegStream(false);\n      this.updateSourceTreeWidth();\n    } else if (!imgReady && !isAwaitingMjpegStream) {\n      setAwaitingMjpegStream(true);\n    }\n  }\n\n  componentDidUpdate() {\n    const { screenshot } = this.props;\n    // only update when the screenshot changed, not for any other kind of\n    // update\n    if (screenshot !== this.lastScreenshot) {\n      this.updateSourceTreeWidth();\n      this.lastScreenshot = screenshot;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.mjpegStreamCheckInterval) {\n      clearInterval(this.mjpegStreamCheckInterval);\n      this.mjpegStreamCheckInterval = null;\n    }\n  }\n\n  handlePanel() {\n    this.setState({ showPane: !this.state.showPane });\n    console.log(\"showPanel\", this.state.showPane);\n  }\n  screenshotInteractionChange(mode, option) {\n    const { selectScreenshotInteractionMode, clearSwipeAction } = this.props;\n    clearSwipeAction(); // When the action changes, reset the swipe action\n    selectScreenshotInteractionMode(mode);\n    this.setState({ currentSelection: option });\n  }\n\n  async handleActions(action, step) {\n    const { driver } = this.props;\n    console.log(\"🚀 ~ file: Inspector.js:223 ~ handleActions ~ action:\", action);\n    let postdata = {\n      'session_id': driver.sessionId,\n      'step-name': step,\n      action\n    };\n    this.setState({ nestedDropIndex: 0 });\n    this.setActiveIndex(0);\n    console.log('🚀 ~ file: Inspector.js:219 ~ Inspector ~ handleActions ~ postdata:', postdata);\n\n    await fetch('https://apprecord.testing24x7.ai/appAction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(postdata),\n    })\n      .then((response) => {\n        console.log('API response:', response);\n        postdata.response = response;\n      })\n      .catch((error) => {\n        console.error('API error:', error);\n      });\n\n\n    let data1 = {\n      \"session_id\": driver.sessionId,\n      'step-name': 'steps'\n    };\n    await fetch(\"https://apprecord.testing24x7.ai/appAction\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data1),\n    })\n      .then((res) =>\n        // Convert the response to JSON\n        res.json()\n      )\n      .then((res) => {\n        console.log(\"Response data:\", res);\n        this.setState({ total_array: res.steps });\n      })\n      .catch((error) => {\n        console.log(\"🚀 ~ file: Inspector.js:901 ~ return ~ error:\", error);\n      });\n  }\n\n  setActiveIndex(val) {\n    this.setState({ activeIndex: val });\n  }\n  async hideKeyboard() {\n    const { driver, screenshotInteractionMode } = this.props;\n    driver.client.hideKeyboard();\n    console.log('hide keyboard^^^^^^^^^^^^^^^^');\n    this.props.applyClientMethod({ methodName: 'getPageSource', ignoreResult: true });\n\n    let postdata = {\n      'session_id': driver.sessionId,\n      'step-name': 'hideKeyboard',\n    };\n    console.log('🚀 ~ file: Inspector.js:219 ~ Inspector ~ hideKeyboard ~ postdata:', postdata);\n\n    await fetch('https://apprecord.testing24x7.ai/appAction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(postdata),\n    })\n      .then((response) => {\n        console.log('API response:', response);\n        postdata.response = response;\n      })\n      .catch((error) => {\n        console.error('API error:', error);\n      });\n  }\n  async getDeviceTime() {\n    const { driver } = this.props;\n    const time = await driver.client.getDeviceTime();\n    console.log('get device timeeeeeeeeeeeeeeeeee', time);\n    const deviceTime = moment.utc(time).utcOffset('+05:30');\n    const formattedTime = deviceTime.format('YYYY-MM-DD HH:mm:ss');\n    let postdata = {\n      'session_id': driver.sessionId,\n      'step-name': 'getDeviceTime',\n    };\n    console.log('🚀 ~ file: Inspector.js:219 ~ Inspector ~ getDeviceTime ~ postdata:', postdata);\n\n    await fetch('https://apprecord.testing24x7.ai/appAction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(postdata),\n    })\n      .then((response) => {\n        console.log('API response:', response);\n        postdata.response = response;\n      })\n      .catch((error) => {\n        console.error('API error:', error);\n      });\n    alert(formattedTime);\n  }\n  // async getDeviceclipBoard() {\n  //   const { driver } = this.props;\n  //   const clipboard = await driver.getClipboard();\n  //   console.log('🚀 ~ file: Inspector.js:228 ~ Inspector ~ getDeviceclipBoard ~ clipboard:', clipboard);\n  //   alert(clipboard);\n  // }\n  async isLocked() {\n    const { driver } = this.props;\n    const islocked = await driver.client.pressKeyCode(26);\n    console.log(\"🚀 ~ file: Inspector.js:286 ~ isLocked ~ islocked:\", islocked);\n    let postdata = {\n      'session_id': driver.sessionId,\n      'step-name': 'lock',\n    };\n    console.log('🚀 ~ file: Inspector.js:219 ~ Inspector ~ lock ~ postdata:', postdata);\n    this.callParticularSteps(postdata);\n    // await fetch('https://apprecord.testing24x7.ai/appAction', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify(postdata),\n    // })\n    //   .then((response) => {\n    //     console.log('API response:', response);\n    //     postdata.response = response;\n    //   })\n    //   .catch((error) => {\n    //     console.error('API error:', error);\n    //   });\n    this.fetchAllSteps();\n    await this.props.applyClientMethod({ methodName: 'getPageSource' });\n  }\n  async shakeBooty() {\n    console.log('this is shake shake ittt');\n    const { driver } = this.props;\n    const isShake = await driver.client.shake();\n    console.log(\"🚀 ~ file: Inspector.js:295 ~ shakeBooty ~ isShake:\", isShake);\n  }\n\n  async callParticularSteps(data) {\n    await fetch('https://apprecord.testing24x7.ai/appAction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        console.log('API response:', response);\n      })\n      .catch((error) => {\n        console.error('API error:', error);\n      });\n  }\n\n  async fetchAllSteps() {\n    const { driver } = this.props;\n    let data1 = {\n      'session_id': driver.sessionId,\n      'step-name': 'steps'\n    };\n    console.log(\"🚀 ~ file: Inspector.js:378 ~ fetchAllSteps ~ data1:\", data1);\n    await fetch('https://apprecord.testing24x7.ai/appAction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data1),\n    })\n      .then((res) =>\n        // Convert the response to JSON\n        res.json()\n      )\n      .then((res) => {\n        console.log('Response data:', res);\n        this.setState({ total_array: res.steps });\n      })\n      .catch((error) => {\n        console.log('🚀 ~ file: Inspector.js:901 ~ return ~ error:', error);\n      });\n  }\n\n  render() {\n    const { screenshot, screenshotError, selectedElement = {},\n      quitSession, showRecord,\n      screenshotInteractionMode, visibleCommandMethod,\n      selectedInteractionMode, selectInteractionMode, setVisibleCommandResult,\n      showKeepAlivePrompt, keepSessionAlive, sourceXML, t, visibleCommandResult,\n      mjpegScreenshotUrl, isAwaitingMjpegStream, toggleShowCentroids, showCentroids,\n      isGestureEditorVisible, toggleShowAttributes, isSourceRefreshOn, applyClientMethod\n    } = this.props;\n    const { path } = selectedElement;\n    const { driver } = this.props;\n    const { flow_steps } = this.props;\n    const options = [\n      'Return', 'Space', 'BackSpace', 'Enter',\n      'Back', 'Search', 'Call', 'Endcall'\n    ];\n\n    if (flow_steps) {\n      console.log('🚀 ~ file: Inspector.js:210 ~ Inspector ~ render ~ flow_steps:', flow_steps);\n      this.state.total_array = flow_steps.steps;\n    }\n    console.log('driver for iddddddd', driver);\n    const showScreenshot = ((screenshot && !screenshotError) ||\n      (mjpegScreenshotUrl && (!isSourceRefreshOn || !isAwaitingMjpegStream)));\n\n    let screenShotControls =\n      <div className={InspectorStyles['screenshot-controls']}>\n\n        <Tooltip title={t(showCentroids ? 'Hide Element Handles' : 'Show Element Handles')} placement=\"topRight\">\n          <Switch\n            checkedChildren={<CheckCircleOutlined />}\n            unCheckedChildren={<CloseCircleOutlined />}\n            defaultChecked={false}\n            onChange={() => toggleShowCentroids()}\n            disabled={isGestureEditorVisible}\n            style={{ width: '40px' }}\n          />\n        </Tooltip>\n        {/* <Button icon={<BarsOutlined />} onClick={() => this.handlePanel(this.state.showPanel)}></Button> */}\n\n        {showScreenshot &&\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"fit-content\" }}>\n            <Button icon={<SelectOutlined />} onClick={() => { this.screenshotInteractionChange(SELECT, 'Select Elements'); }}\n              type={screenshotInteractionMode === SELECT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Select Elements</span></Button>\n            <div onMouseOver={() => this.state.showPane ? this.setState({ activeCategory: 1 }) : this.setActiveIndex(1)}\n              onMouseOut={() => this.setState({ activeIndex: 0 })}\n              onClick={() => this.setState({ activeCategory: 1 })}\n              style={{ textAlign: 'center', padding: '5px', position: 'relative', cursor: 'pointer' }}\n              className={this.state.activeCategory === 1 ? InspectorStyles['activeCategory'] : \"\"}>\n              <LikeOutlined style={{ fontSize: '20px' }} />\n              <div>Gestures</div>\n              {this.state.activeIndex === 1 &&\n                <div style={{ display: 'flex', flexDirection: 'column', position: 'absolute', zIndex: '999', left: '100%', top: '10%' }}>\n                  <Button icon={<SwapRightOutlined />} onClick={() => { this.screenshotInteractionChange(SWIPE, 'Swipe by coordinates'); }}\n                    type={screenshotInteractionMode === SWIPE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Swipe By Coordinates</span></Button>\n                  <Button icon={<ScanOutlined />} onClick={() => { this.screenshotInteractionChange(TAP, 'Tap by coordinates'); }}\n                    type={screenshotInteractionMode === TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Tap By Coordinates</span></Button>\n                  <Button icon={<InfoOutlined />} onClick={() => { this.screenshotInteractionChange(LONGPRESS, 'Longpress'); }}\n                    type={screenshotInteractionMode === LONGPRESS ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>LongPress</span></Button>\n                  <Button icon={<DragOutlined />} onClick={() => { this.screenshotInteractionChange(DRAG_AND_DROP, 'Drag & Drop'); }}\n                    type={screenshotInteractionMode === DRAG_AND_DROP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Drag & Drop</span></Button>\n                  <Button icon={<UpCircleOutlined />} onClick={() => { this.screenshotInteractionChange(DOUBLE_TAP, 'Double tap'); }}\n                    type={screenshotInteractionMode === DOUBLE_TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    className={InspectorStyles['user_actions']}\n                  ><span>Double Tap</span></Button>\n                  <Button icon={<ShrinkOutlined />} onClick={() => { this.screenshotInteractionChange(ZOOMIN, 'Zoom'); }}\n                    type={screenshotInteractionMode === ZOOMIN ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Zoom</span></Button>\n                  <Button icon={<SlidersOutlined />} onClick={() => { this.screenshotInteractionChange(SLIDE, 'Slider'); }}\n                    type={screenshotInteractionMode === SLIDE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Slider</span></Button>\n                  {/* <Button icon={<LockOutlined />} onClick={() => { this.screenshotInteractionChange(LOCK, 'Lock'); this.isLocked(); }}\n                    type={screenshotInteractionMode === LOCK ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Lock</span></Button> */}\n                  <Button icon={<DollarOutlined />} onClick={() => { this.screenshotInteractionChange(SCRATCH, 'Scratch'); }}\n                    type={screenshotInteractionMode === SCRATCH ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Scratch</span></Button>\n                  <Button icon={<ShakeOutlined />} onClick={() => { this.screenshotInteractionChange(SHAKE, 'shake'); this.shakeBooty(); }}\n                    type={screenshotInteractionMode === SHAKE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Shake</span></Button>\n                  {/* <Button icon={<UnlockOutlined />} onClick={() => { this.screenshotInteractionChange(UNLOCK, 'Unlock'); this.isUnlocked();}}\n              type={screenshotInteractionMode === UNLOCK ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Unlock</span></Button> */}\n                </div>}\n            </div>\n            {/* <div onMouseOver={() => this.setActiveIndex(2)} onMouseOut={() => this.setActiveIndex(0)}\n          style={{ textAlign: 'center', padding: '5px', position: 'relative', cursor: 'pointer' }}>\n          <EditOutlined style={{ fontSize: '20px' }} />\n          <div>Actions</div>\n          {this.state.activeIndex === 2 && <div style={{ display: 'flex', flexDirection: 'column', position: 'absolute', zIndex: '999', left: '100%', top: '10%' }}>\n            <Button icon={<DollarOutlined />} onClick={() => { this.screenshotInteractionChange(EXPECTED_VALUE, 'Expected Value'); }}\n              type={screenshotInteractionMode === EXPECTED_VALUE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Expected value</span></Button>\n            <Button icon={<FundProjectionScreenOutlined />} onClick={() => { this.screenshotInteractionChange(TAKE_SCREENSHOT, 'Take screenshot'); }}\n              type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Take Screenshot</span></Button>\n            <Button icon={<CaretDownOutlined />} onClick={async () => {\n              this.screenshotInteractionChange(HIDE_KEYBOARD, 'Hide keyword');\n              this.hideKeyboard();\n              let data1 = {\n                'session_id': driver.sessionId,\n                'step-name': 'steps'\n              };\n\n              await fetch('https://apprecord.testing24x7.ai/appAction', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data1),\n              })\n                .then((res) =>\n                  // Convert the response to JSON\n                  res.json()\n                )\n                .then((res) => {\n                  console.log('Response data:', res);\n                  this.setState({ total_array: res.steps.steps });\n                })\n                .catch((error) => {\n                  console.log('🚀 ~ file: Inspector.js:901 ~ return ~ error:', error);\n                });\n              await applyClientMethod({ methodName: 'getPageSource' });\n\n            }}\n              type={screenshotInteractionMode === HIDE_KEYBOARD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Hide Keyboard</span></Button>\n            <Button icon={<FieldTimeOutlined />} onClick={async () => {\n              this.screenshotInteractionChange(GET_DEVICE_TIME, 'Get Device Time');\n              this.getDeviceTime();\n              let data1 = {\n                'session_id': driver.sessionId,\n                'step-name': 'steps'\n              };\n\n              await fetch('https://apprecord.testing24x7.ai/appAction', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data1),\n              })\n                .then((res) =>\n                  // Convert the response to JSON\n                  res.json()\n                )\n                .then((res) => {\n                  console.log('Response data:', res);\n                  this.setState({ total_array: res.steps.steps });\n                })\n                .catch((error) => {\n                  console.log('🚀 ~ file: Inspector.js:901 ~ return ~ error:', error);\n                });\n              await applyClientMethod({ methodName: 'getPageSource' });\n            }}\n              type={screenshotInteractionMode === GET_DEVICE_TIME ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Get Device Time</span></Button>\n            <Button icon={<PaperClipOutlined />} onClick={async () => {\n              this.screenshotInteractionChange(GET_CLIPBOARD, 'Get clipboard');\n              await applyClientMethod({ methodName: 'getPageSource' });\n            }}\n              type={screenshotInteractionMode === GET_CLIPBOARD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Get clipboard</span></Button>\n            <Button icon={<RotateRightOutlined />} onClick={async () => { await driver.client.setOrientation('LANDSCAPE'); }}\n              type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Rotate</span></Button>\n            <Button icon={<NotificationOutlined />}\n              onClick={async () => {\n                await driver.client.openNotifications();\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'notification',\n                };\n                await fetch('https://apprecord.testing24x7.ai/appAction', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify(data),\n                })\n                  .then((response) => {\n                    console.log('API response:', response);\n                  })\n                  .catch((error) => {\n                    console.error('API error:', error);\n                  });\n\n                let data1 = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'steps'\n                };\n                console.log('🚀 ~ file: Inspector.js:440 ~ Inspector ~ onClick={async ~ driver.sessionId:', driver.sessionId);\n                await fetch('https://apprecord.testing24x7.ai/appAction', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify(data1),\n                })\n                  .then((res) =>\n                    // Convert the response to JSON\n                    res.json()\n                  )\n                  .then((res) => {\n                    console.log('Response data:', res);\n                    this.setState({ total_array: res.steps.steps });\n                  })\n                  .catch((error) => {\n                    console.log('🚀 ~ file: Inspector.js:901 ~ return ~ error:', error);\n                  });\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Open Notifications</span></Button>\n            {!this.state.isInput ? (<Button icon={<SwitcherOutlined />} onClick={() => this.setState({ isInput: true })}\n              type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Switch App</span></Button>) : (\n              <div>\n                <Input\n                  placeholder=\"enter bundle id\"\n                  onChange={(event) => this.setState({ inputBundleId: event.target.value })}\n                />\n                <Button\n                  onClick={async () => {\n                    await driver.client.activateApp(this.state.inputBundleId);\n\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'switch_app',\n                      'bundle_id': this.state.inputBundleId\n                    };\n                    await fetch('https://apprecord.testing24x7.ai/appAction', {\n                      method: 'POST',\n                      headers: {\n                        'Content-Type': 'application/json',\n                      },\n                      body: JSON.stringify(data),\n                    })\n                      .then((response) => {\n                        console.log('API response:', response);\n                      })\n                      .catch((error) => {\n                        console.error('API error:', error);\n                      });\n\n                    let data1 = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'steps'\n                    };\n                    await fetch('https://apprecord.testing24x7.ai/appAction', {\n                      method: 'POST',\n                      headers: {\n                        'Content-Type': 'application/json',\n                      },\n                      body: JSON.stringify(data1),\n                    })\n                      .then((res) =>\n                        // Convert the response to JSON\n                        res.json()\n                      )\n                      .then((res) => {\n                        console.log('Response data:', res);\n                        this.setState({ total_array: res.steps.steps });\n                      })\n                      .catch((error) => {\n                        console.log('🚀 ~ file: Inspector.js:901 ~ return ~ error:', error);\n                      });\n\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                    this.setState({ isInput: false, inputBundleId: '' });\n                  }}\n                  style={{ backgroundColor: 'blue' }}\n                >\n                  Activate App\n                </Button>\n                <Button icon={<AimOutlined />} onClick={async () => { await driver.client.resetApp(); }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                > <span>Reset App</span></Button>\n              </div>\n            )}\n          </div>}\n        </div> */}\n            <div onMouseOver={() => this.state.showPane ? this.setState({ activeCategory: 3 }) : this.setActiveIndex(3)}\n              onMouseOut={() => this.setState({ activeIndex: 0 })}\n              onClick={() => this.setState({ activeCategory: 3 })}\n              style={{ textAlign: 'center', padding: '5px', position: 'relative', cursor: 'pointer' }}\n              className={this.state.activeCategory === 3 ? InspectorStyles['activeCategory'] : \"\"}>\n              <HeatMapOutlined style={{ fontSize: '20px' }} />\n              <div>Device Actions</div>\n              {this.state.activeIndex === 3 &&\n                <div style={{ display: 'flex', flexDirection: 'column', position: 'absolute', zIndex: '999', left: '100%', top: '10%' }}>\n                  <Button icon={<FundProjectionScreenOutlined />}\n                    type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    onClick={() => this.state.nestedDropIndex !== 1 ? this.setState({ nestedDropIndex: 1 }) : this.setState({ nestedDropIndex: 0})}\n                    // disabled={isGestureEditorVisible}\n                    className={InspectorStyles['user_actions']}\n                  >long press key</Button>\n                  {this.state.nestedDropIndex === 1 &&\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n\n                        {options.map((option, index) => (\n                          <Button key={index}\n                            onClick={async () => await this.handleActions(option, 'long_press_key')}>\n                            {option}\n                          </Button>\n                        ))}\n\n                    </div>\n                  }\n\n                  <Button icon={<FundProjectionScreenOutlined />}\n                    type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    onClick={() => this.state.nestedDropIndex !== 2 ? this.setState({ nestedDropIndex: 2 }) : this.setState({nestedDropIndex: 0})}\n                    // disabled={isGestureEditorVisible}\n                    className={InspectorStyles['user_actions']}\n                  >press key</Button>\n                  {this.state.nestedDropIndex === 2 &&\n                    <div style={{ display: 'flex', flexDirection: 'column'}}>\n                        {options.map((option, index) => (\n                          <Button style={{ width: '100%' }} key={index}\n                            onClick={async () => await this.handleActions(option, 'press_key')}>\n                            {option}\n                          </Button>\n                        ))}\n\n                    </div>\n                  }\n\n                  <Button className={InspectorStyles['user_actions']} icon={<FileAddOutlined />} onClick={async () => {\n                    if (screenshotInteractionMode === FILE_UPLOAD) {\n                      this.screenshotInteractionChange(null, null);\n                      let data = {\n                        'session_id': driver.sessionId,\n                        'step-name': 'select_file',\n                        'status': 'done',\n                      };\n                      this.callParticularSteps(data);\n                    } else {\n                      this.screenshotInteractionChange(FILE_UPLOAD, 'File Upload');\n                    }\n                  }}\n                    type={screenshotInteractionMode === FILE_UPLOAD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible}><span>File Upload</span></Button>\n                  <Button icon={<FundProjectionScreenOutlined />} onClick={() => { this.screenshotInteractionChange(TAKE_SCREENSHOT, 'Take screenshot'); }}\n                    type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Take Screenshot</span></Button>\n                  <Button icon={<CaretDownOutlined />} onClick={async () => {\n                    this.screenshotInteractionChange(HIDE_KEYBOARD, 'Hide keyword');\n                    this.hideKeyboard();\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                    type={screenshotInteractionMode === HIDE_KEYBOARD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Hide Keyboard</span></Button>\n                  <Button icon={<FieldTimeOutlined />} onClick={async () => {\n                    this.screenshotInteractionChange(GET_DEVICE_TIME, 'Get Device Time');\n                    this.getDeviceTime();\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                    type={screenshotInteractionMode === GET_DEVICE_TIME ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Get Device Time</span></Button>\n                  <Button icon={<PaperClipOutlined />} onClick={async () => {\n                    this.screenshotInteractionChange(GET_CLIPBOARD, 'Get clipboard');\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                    type={screenshotInteractionMode === GET_CLIPBOARD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Get clipboard</span></Button>\n                  {this.state.mode_orientation === 'PORTRAIT' ? (<Button icon={<RotateRightOutlined />} onClick={async () => {\n                    await driver.client.setOrientation('LANDSCAPE');\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'rotate',\n                      'action': 'landscape'\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await driver.client.getOrientation().then((res) => {\n                      console.log(\"🚀 ~ file: Inspector.js:363 ~ driver.client.getOrientation ~ res:\", res);\n                      this.setState({ mode_orientation: res });\n                    });\n                  }}\n                    type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Rotate/Landscape</span></Button>) :\n                    (\n                      <Button icon={<RotateRightOutlined />} onClick={async () => {\n                        await driver.client.setOrientation('PORTRAIT');\n                        let data = {\n                          'session_id': driver.sessionId,\n                          'step-name': 'rotate',\n                          'action': 'portrait'\n                        };\n                        this.callParticularSteps(data);\n                        this.fetchAllSteps();\n                        driver.client.getOrientation().then((res) => {\n                          console.log(\"🚀 ~ file: Inspector.js:363 ~ driver.client.getOrientation ~ res:\", res);\n                          this.setState({ mode_orientation: res });\n                        });\n                        await applyClientMethod({ methodName: 'getPageSource' });\n                      }}\n                        type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                        disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                      ><span>Rotate/Potrait</span></Button>\n                    )}\n                  <Button icon={<NotificationOutlined />}\n                    onClick={async () => {\n                      await driver.client.openNotifications();\n                      let data = {\n                        'session_id': driver.sessionId,\n                        'step-name': 'notification',\n                      };\n                      this.callParticularSteps(data);\n                      this.fetchAllSteps();\n                      await applyClientMethod({ methodName: 'getPageSource' });\n                    }}\n                    type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                    disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                  ><span>Open Notifications</span></Button>\n                </div>}\n            </div>\n\n            <div onMouseOver={() => this.state.showPane ? this.setState({ activeCategory: 4 }) : this.setActiveIndex(4)} onMouseOut={() => this.setActiveIndex(0)}\n              onClick={() => this.setState({ activeCategory: 4 })}\n              style={{ textAlign: 'center', padding: '5px', position: 'relative', cursor: 'pointer' }}\n              className={this.state.activeCategory === 4 ? InspectorStyles['activeCategory'] : \"\"}>\n              <EditOutlined style={{ fontSize: '20px' }} />\n              <div>Assertions</div>\n              {this.state.activeIndex === 4 && <div style={{ display: 'flex', flexDirection: 'column', position: 'absolute', zIndex: '999', left: '100%', top: '10%' }}>\n                <Button icon={<CheckCircleOutlined />} onClick={() => { this.screenshotInteractionChange(EXPECTED_VALUE, 'Expected Value'); }}\n                  type={screenshotInteractionMode === EXPECTED_VALUE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n                  <span>Expected value</span></Button>\n                <Button icon={<CheckCircleOutlined />}\n                  onClick={async () => {\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'text_equal',\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n                  <span>text equals</span></Button>\n                <Button icon={<CheckCircleOutlined />}\n                  onClick={async () => {\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'text_contains',\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n                  <span>text contains</span></Button>\n                <Button icon={<CheckCircleOutlined />}\n                  onClick={async () => {\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'attribute_equals',\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n                  <span>attribute equals</span></Button>\n                <Button icon={<CheckCircleOutlined />}\n                  onClick={async () => {\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'attribute_contains',\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n                  <span>attribute contains</span></Button>\n                <Button icon={<CheckCircleOutlined />}\n                  onClick={async () => {\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'is_element_displayed',\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n                  <span>Is Element Displayed</span></Button>\n                <Button icon={<CheckCircleOutlined />}\n                  onClick={async () => {\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'is_element_selected',\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n                  <span>Is Element Selected</span></Button>\n                <Button icon={<CheckCircleOutlined />}\n                  onClick={async () => {\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'is_element_enabled',\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n                  <span>Is Element Enabled</span></Button>\n                <Button icon={<CheckCircleOutlined />}\n                  onClick={async () => {\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'is_element_disabled',\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                  }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n                  <span>Is Element Disabled</span></Button>\n              </div>}\n            </div>\n            <div onMouseOver={() => this.state.showPane ? this.setState({ activeCategory: 5 }) : this.setActiveIndex(5)} onMouseOut={() => this.setActiveIndex(0)}\n              onClick={() => this.setState({ activeCategory: 5 })}\n              style={{ textAlign: 'center', padding: '5px', position: 'relative', cursor: 'pointer' }}\n              className={this.state.activeCategory === 5 ? InspectorStyles['activeCategory'] : \"\"}>\n              <AppstoreAddOutlined style={{ fontSize: '20px' }} />\n              <div>App management</div>\n              {this.state.activeIndex === 5 && <div style={{ display: 'flex', flexDirection: 'column', position: 'absolute', zIndex: '999', left: '100%', top: '10%' }}>\n                {!this.state.isInput ? (<Button icon={<SwitcherOutlined />} onClick={() => this.setState({ isInput: true })}\n                  type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                ><span>Switch App</span></Button>) : (\n                  <div>\n                    <Input\n                      placeholder=\"enter bundle id\"\n                      onChange={(event) => this.setState({ inputBundleId: event.target.value })}\n                    />\n                    <Button\n                      onClick={async () => {\n                        await driver.client.activateApp(this.state.inputBundleId);\n                        let data = {\n                          'session_id': driver.sessionId,\n                          'step-name': 'switch_app',\n                          'bundle_id': this.state.inputBundleId\n                        };\n                        this.callParticularSteps(data);\n                        this.fetchAllSteps();\n                        await applyClientMethod({ methodName: 'getPageSource' });\n                        this.setState({ isInput: false, inputBundleId: '' });\n                      }}\n                      style={{ backgroundColor: 'blue' }}\n                    >\n                      Activate App\n                    </Button>\n                  </div>\n                )}\n                <Button icon={<AimOutlined />} onClick={async () => { await driver.client.resetApp(); }}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                > <span>Reset App</span></Button>\n              </div>}\n            </div>\n\n          </div>}\n\n\n        {/* <ButtonGroup value={screenshotInteractionMode} style={{ display: 'flex', flexDirection: 'column', position:\"absolute\", top:\"150px\", zIndex:\"99\" }}>\n\n        <Button onMouseOver={()=>this.setActiveIndex(1)} onMouseOut={()=>this.setActiveIndex(0)} icon={<SelectOutlined />} onClick={() => { this.screenshotInteractionChange(SELECT); }}\n          type={screenshotInteractionMode === SELECT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===1 && <span>Select Elements</span>}</Button>\n\n\n        <Button onMouseOver={()=>this.setActiveIndex(2)} onMouseOut={()=>this.setActiveIndex(0)} icon={<SwapRightOutlined />} onClick={() => { this.screenshotInteractionChange(SWIPE); }}\n          type={screenshotInteractionMode === SWIPE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===2 && <span>Swipe By Coordinates</span>}</Button>\n\n\n        <Button onMouseOver={()=>this.setActiveIndex(3)} onMouseOut={()=>this.setActiveIndex(0)} icon={<ScanOutlined />} onClick={() => { this.screenshotInteractionChange(TAP); }}\n          type={screenshotInteractionMode === TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===3 && <span>Tap By Coordinates</span>}</Button>\n\n\n        <Button onMouseOver={()=>this.setActiveIndex(4)} onMouseOut={()=>this.setActiveIndex(0)} icon={<InfoOutlined />} onClick={() => { this.screenshotInteractionChange(LONGPRESS); }}\n          type={screenshotInteractionMode === LONGPRESS ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===4 && <span>LongPress</span>}</Button>\n\n\n        <Button onMouseOver={()=>this.setActiveIndex(5)} onMouseOut={()=>this.setActiveIndex(0)} icon={<DragOutlined />} onClick={() => { this.screenshotInteractionChange(DRAG_AND_DROP); }}\n          type={screenshotInteractionMode === DRAG_AND_DROP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n          disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n        >{this.state.activeIndex===5 && <span>Drag & Drop</span>}</Button>\n\n          <Button onMouseOver={()=>this.setActiveIndex(6)} onMouseOut={()=>this.setActiveIndex(0)} icon={<UpCircleOutlined />} onClick={() => { this.screenshotInteractionChange(DOUBLE_TAP); }}\n            type={screenshotInteractionMode === DOUBLE_TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===6 && <span>Double Tap</span>}</Button>\n\n          <Button onMouseOver={()=>this.setActiveIndex(7)} onMouseOut={()=>this.setActiveIndex(0)} icon={<ShrinkOutlined />} onClick={() => { this.screenshotInteractionChange(ZOOMIN); }}\n            type={screenshotInteractionMode === ZOOMIN ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===7 && <span>Zoom</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(8)} onMouseOut={()=>this.setActiveIndex(0)} icon={<SlidersOutlined />} onClick={() => { this.screenshotInteractionChange(SLIDE); }}\n            type={screenshotInteractionMode === SLIDE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===8 && <span>Slider</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(9)} onMouseOut={()=>this.setActiveIndex(0)} className={InspectorStyles['user_actions']} icon={<FileAddOutlined />} onClick={async () => {\n            if (screenshotInteractionMode === FILE_UPLOAD) {\n              this.screenshotInteractionChange(null);\n              let data = {\n                'session_id': driver.sessionId,\n                'step-name': 'select_file',\n                'status': 'done',\n              };\n              await fetch('https://apprecord.testing24x7.ai/appAction', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n              })\n                .then((response) => {\n                  console.log('API response:', response);\n                })\n                .catch((error) => {\n                  console.error('API error:', error);\n                });\n            } else {\n              this.screenshotInteractionChange(FILE_UPLOAD);\n            }\n          }}\n            type={screenshotInteractionMode === FILE_UPLOAD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible}>{this.state.activeIndex===9 && <span>File Upload</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(10)} onMouseOut={()=>this.setActiveIndex(0)} icon={<DollarOutlined />} onClick={() => { this.screenshotInteractionChange(EXPECTED_VALUE); }}\n            type={screenshotInteractionMode === EXPECTED_VALUE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===10 && <span>Expected value</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(11)} onMouseOut={()=>this.setActiveIndex(0)} icon={<FundProjectionScreenOutlined />} onClick={() => { this.screenshotInteractionChange(TAKE_SCREENSHOT); }}\n            type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===11 && <span>Take Screenshot</span>}</Button>\n          <Button onMouseOver={()=>this.setActiveIndex(12)} onMouseOut={()=>this.setActiveIndex(0)} icon={<DollarOutlined />} onClick={() => { this.screenshotInteractionChange(SCRATCH); }}\n            type={screenshotInteractionMode === SCRATCH ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n            disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n          >{this.state.activeIndex===12 && <span>Scratch</span>}</Button>\n      </ButtonGroup> */}\n      </div>;\n\n    let sideMenu =\n      <>\n        {this.state.activeCategory === 1 && this.state.showPane &&\n          <div style={{ display: 'flex', flexDirection: 'column', marginTop: \"40px\", maxWidth: \"180px\", minWidth: \"180px\" }}>\n            <Button icon={<SwapRightOutlined />} onClick={() => { this.screenshotInteractionChange(SWIPE, 'Swipe by coordinates'); }}\n              type={screenshotInteractionMode === SWIPE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Swipe By Coordinates</span></Button>\n            <Button icon={<ScanOutlined />} onClick={() => { this.screenshotInteractionChange(TAP, 'Tap by coordinates'); }}\n              type={screenshotInteractionMode === TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Tap By Coordinates</span></Button>\n            <Button icon={<InfoOutlined />} onClick={() => { this.screenshotInteractionChange(LONGPRESS, 'Longpress'); }}\n              type={screenshotInteractionMode === LONGPRESS ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>LongPress</span></Button>\n            <Button icon={<DragOutlined />} onClick={() => { this.screenshotInteractionChange(DRAG_AND_DROP, 'Drag & Drop'); }}\n              type={screenshotInteractionMode === DRAG_AND_DROP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Drag & Drop</span></Button>\n            <Button icon={<UpCircleOutlined />} onClick={() => { this.screenshotInteractionChange(DOUBLE_TAP, 'Double tap'); }}\n              type={screenshotInteractionMode === DOUBLE_TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              className={InspectorStyles['user_actions']}\n            ><span>Double Tap</span></Button>\n            <Button icon={<ShrinkOutlined />} onClick={() => { this.screenshotInteractionChange(ZOOMIN, 'Zoom'); }}\n              type={screenshotInteractionMode === ZOOMIN ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Zoom</span></Button>\n            <Button icon={<SlidersOutlined />} onClick={() => { this.screenshotInteractionChange(SLIDE, 'Slider'); }}\n              type={screenshotInteractionMode === SLIDE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Slider</span></Button>\n            {/* <Button icon={<LockOutlined />} onClick={() => { this.screenshotInteractionChange(LOCK, 'Lock'); this.isLocked(); }}\n              type={screenshotInteractionMode === LOCK ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Lock</span></Button> */}\n            <Button icon={<DollarOutlined />} onClick={() => { this.screenshotInteractionChange(SCRATCH, 'Scratch'); }}\n              type={screenshotInteractionMode === SCRATCH ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Scratch</span></Button>\n            <Button icon={<ShakeOutlined />} onClick={() => { this.screenshotInteractionChange(SHAKE, 'shake'); this.shakeBooty(); }}\n              type={screenshotInteractionMode === SHAKE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Shake</span></Button>\n            {/* <Button icon={<UnlockOutlined />} onClick={() => { this.screenshotInteractionChange(UNLOCK, 'Unlock'); this.isUnlocked();}}\n  type={screenshotInteractionMode === UNLOCK ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n><span>Unlock</span></Button> */}\n          </div>}\n        {\n          this.state.activeCategory === 3 && this.state.showPane &&\n          <div style={{ display: 'flex', flexDirection: 'column', marginTop: \"40px\", maxWidth: \"180px\", minWidth: \"180px\" }}>\n            <Button icon={<FundProjectionScreenOutlined />}\n              type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              onClick={() => this.state.nestedDropIndex !== 1 ? this.setState({ nestedDropIndex: 1 }) : this.setState({ nestedDropIndex: 0 })}\n              // disabled={isGestureEditorVisible}\n              className={InspectorStyles['user_actions']}\n            ><span> long press key</span></Button>\n            {this.state.nestedDropIndex === 1 && this.state.showPane &&\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <div>\n                  {options.map((option, index) => (\n                    <Button style={{ width: '100%' }} key={index}\n                      onClick={async () => await this.handleActions(option, 'long_press_key')}>\n                      {option}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            }\n\n            <Button icon={<FundProjectionScreenOutlined />}\n              type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              onClick={() => this.state.nestedDropIndex !== 2 ? this.setState({ nestedDropIndex: 2 }) : this.setState({ nestedDropIndex: 0})}\n              // disabled={isGestureEditorVisible}\n              className={InspectorStyles['user_actions']}\n            ><span>press key</span></Button>\n            {this.state.nestedDropIndex === 2 && this.state.showPane &&\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <div style={{ width: '100%' }}>\n                  {options.map((option, index) => (\n                    <Button style={{ width: '100%' }} key={index}\n                      onClick={async () => await this.handleActions(option, 'press_key')}>\n                      {option}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            }\n\n            <Button className={InspectorStyles['user_actions']} icon={<FileAddOutlined />} onClick={async () => {\n              if (screenshotInteractionMode === FILE_UPLOAD) {\n                this.screenshotInteractionChange(null, null);\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'select_file',\n                  'status': 'done',\n                };\n                this.callParticularSteps(data);\n              } else {\n                this.screenshotInteractionChange(FILE_UPLOAD, 'File Upload');\n              }\n            }}\n              type={screenshotInteractionMode === FILE_UPLOAD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible}><span>File Upload</span></Button>\n            <Button icon={<FundProjectionScreenOutlined />} onClick={() => { this.screenshotInteractionChange(TAKE_SCREENSHOT, 'Take screenshot'); }}\n              type={screenshotInteractionMode === TAKE_SCREENSHOT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Take Screenshot</span></Button>\n            <Button icon={<CaretDownOutlined />} onClick={async () => {\n              this.screenshotInteractionChange(HIDE_KEYBOARD, 'Hide keyword');\n              this.hideKeyboard();\n              this.fetchAllSteps();\n              await applyClientMethod({ methodName: 'getPageSource' });\n            }}\n              type={screenshotInteractionMode === HIDE_KEYBOARD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Hide Keyboard</span></Button>\n            <Button icon={<FieldTimeOutlined />} onClick={async () => {\n              this.screenshotInteractionChange(GET_DEVICE_TIME, 'Get Device Time');\n              this.getDeviceTime();\n              this.fetchAllSteps();\n              await applyClientMethod({ methodName: 'getPageSource' });\n            }}\n              type={screenshotInteractionMode === GET_DEVICE_TIME ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Get Device Time</span></Button>\n            <Button icon={<PaperClipOutlined />} onClick={async () => {\n              this.screenshotInteractionChange(GET_CLIPBOARD, 'Get clipboard');\n              await applyClientMethod({ methodName: 'getPageSource' });\n            }}\n              type={screenshotInteractionMode === GET_CLIPBOARD ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Get clipboard</span></Button>\n            {this.state.mode_orientation === 'PORTRAIT' ? (<Button icon={<RotateRightOutlined />} onClick={async () => {\n              await driver.client.setOrientation('LANDSCAPE');\n              await applyClientMethod({ methodName: 'getPageSource' });\n              let data = {\n                'session_id': driver.sessionId,\n                'step-name': 'rotate',\n                'action': 'landscape'\n              };\n              this.callParticularSteps(data);\n              this.fetchAllSteps();\n              await driver.client.getOrientation().then((res) => {\n                console.log(\"🚀 ~ file: Inspector.js:363 ~ driver.client.getOrientation ~ res:\", res);\n                this.setState({ mode_orientation: res });\n              });\n            }}\n              type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Rotate/Landscape</span></Button>) :\n              (\n                <Button icon={<RotateRightOutlined />} onClick={async () => {\n                  await driver.client.setOrientation('PORTRAIT');\n                  let data = {\n                    'session_id': driver.sessionId,\n                    'step-name': 'rotate',\n                    'action': 'portrait'\n                  };\n                  this.callParticularSteps(data);\n                  this.fetchAllSteps();\n                  driver.client.getOrientation().then((res) => {\n                    console.log(\"🚀 ~ file: Inspector.js:363 ~ driver.client.getOrientation ~ res:\", res);\n                    this.setState({ mode_orientation: res });\n                  });\n                  await applyClientMethod({ methodName: 'getPageSource' });\n                }}\n                  type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n                  disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n                ><span>Rotate/Potrait</span></Button>\n              )}\n            <Button icon={<NotificationOutlined />}\n              onClick={async () => {\n                await driver.client.openNotifications();\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'notification',\n                };\n                this.callParticularSteps(data);\n                this.fetchAllSteps();\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Open Notifications</span></Button>\n          </div>\n        }\n        {\n          this.state.activeCategory === 4 && this.state.showPane &&\n          <div style={{ display: 'flex', flexDirection: 'column', marginTop: \"40px\", maxWidth: \"180px\", minWidth: \"180px\" }}>\n            <Button icon={<CheckCircleOutlined />} onClick={() => { this.screenshotInteractionChange(EXPECTED_VALUE, 'Expected Value'); }}\n              type={screenshotInteractionMode === EXPECTED_VALUE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n              <span>Expected value</span></Button>\n            <Button icon={<CheckCircleOutlined />}\n              onClick={async () => {\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'text_equal',\n                };\n                this.callParticularSteps(data);\n                this.fetchAllSteps();\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n              <span>text equals</span></Button>\n            <Button icon={<CheckCircleOutlined />}\n              onClick={async () => {\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'text_contains',\n                };\n                this.callParticularSteps(data);\n                this.fetchAllSteps();\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n              <span>text contains</span></Button>\n            <Button icon={<CheckCircleOutlined />}\n              onClick={async () => {\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'attribute_equals',\n                };\n                this.callParticularSteps(data);\n                this.fetchAllSteps();\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n              <span>attribute equals</span></Button>\n            <Button icon={<CheckCircleOutlined />}\n              onClick={async () => {\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'attribute_contains',\n                };\n                this.callParticularSteps(data);\n                this.fetchAllSteps();\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n              <span>attribute contains</span></Button>\n            <Button icon={<CheckCircleOutlined />}\n              onClick={async () => {\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'is_element_displayed',\n                };\n                this.callParticularSteps(data);\n                this.fetchAllSteps();\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n              <span>Is Element Displayed</span></Button>\n            <Button icon={<CheckCircleOutlined />}\n              onClick={async () => {\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'is_element_selected',\n                };\n                this.callParticularSteps(data);\n                this.fetchAllSteps();\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n              <span>Is Element Selected</span></Button>\n            <Button icon={<CheckCircleOutlined />}\n              onClick={async () => {\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'is_element_enabled',\n                };\n                this.callParticularSteps(data);\n                this.fetchAllSteps();\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n              <span>Is Element Enabled</span></Button>\n            <Button icon={<CheckCircleOutlined />}\n              onClick={async () => {\n                let data = {\n                  'session_id': driver.sessionId,\n                  'step-name': 'is_element_disabled',\n                };\n                this.callParticularSteps(data);\n                this.fetchAllSteps();\n                await applyClientMethod({ methodName: 'getPageSource' });\n              }}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}>\n              <span>Is Element Disabled</span></Button>\n          </div>\n        }\n        {\n          this.state.activeCategory === 5 && this.state.showPane &&\n          <div style={{ display: 'flex', flexDirection: 'column', marginTop: \"40px\", maxWidth: \"180px\", minWidth: \"180px\" }}>\n            {!this.state.isInput ? (<Button icon={<SwitcherOutlined />} onClick={() => this.setState({ isInput: true })}\n              type={screenshotInteractionMode === ROTATE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            ><span>Switch App</span></Button>) : (\n              <div>\n                <Input\n                  placeholder=\"enter bundle id\"\n                  onChange={(event) => this.setState({ inputBundleId: event.target.value })}\n                />\n                <Button\n                  onClick={async () => {\n                    await driver.client.activateApp(this.state.inputBundleId);\n                    let data = {\n                      'session_id': driver.sessionId,\n                      'step-name': 'switch_app',\n                      'bundle_id': this.state.inputBundleId\n                    };\n                    this.callParticularSteps(data);\n                    this.fetchAllSteps();\n                    await applyClientMethod({ methodName: 'getPageSource' });\n                    this.setState({ isInput: false, inputBundleId: '' });\n                  }}\n                  style={{ backgroundColor: 'blue' }}\n                >\n                  Activate App\n                </Button>\n              </div>\n            )}\n            <Button icon={<AimOutlined />} onClick={async () => { await driver.client.resetApp(); }}\n              disabled={isGestureEditorVisible} className={InspectorStyles['user_actions']}\n            > <span>Reset App</span></Button>\n          </div>\n        }\n      </>;\n\n    let main = <div className={InspectorStyles['inspector-main']} ref={(el) => { this.screenAndSourceEl = el; }}>\n      <div id='screenshotContainer' className={InspectorStyles['screenshot-container']} ref={(el) => { this.screenshotEl = el; }}>\n        {screenShotControls}\n        {showScreenshot && sideMenu}\n        {showScreenshot &&\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            {this.state.currentSelection !== null && <div style={{ textAlign: 'center', color: \"white\", fontWeight: \"bold\", background: 'rgb(24, 119, 242)', width: '89%', borderRadius: '5px', padding: \"10px\", marginLeft: \"18px\" }}>Current Selection : {this.state.currentSelection}</div>}\n            <Screenshot {...this.props} scaleRatio={this.state.scaleRatio} />\n          </div>}\n        {screenshotError && t('couldNotObtainScreenshot', { screenshotError })}\n        {!showScreenshot &&\n          <Spin size=\"large\" spinning={true}>\n            <div className={InspectorStyles.screenshotBox} />\n          </Spin>\n        }\n      </div>\n      <div id='sourceTreeContainer' className={InspectorStyles['interaction-tab-container']} >\n        {showRecord &&\n          <RecordedActions {...this.props} />\n        }\n        <Tabs activeKey={selectedInteractionMode}\n          size=\"small\"\n          onChange={(tab) => selectInteractionMode(tab)}\n          items={[{\n            label: t('Source'), key: INTERACTION_MODE.SOURCE, children:\n              <div className='action-row'>\n                {/* <div className='action-col'>\n                <Card title={<span><FileTextOutlined /> {t('App Source')} </span>}\n                  extra={\n                    <span>\n                      <Tooltip title={t('Toggle Attributes')}>\n                        <Button type='text' id='btnToggleAttrs' icon={<CodeOutlined/>} onClick={toggleShowAttributes} />\n                      </Tooltip>\n                      <Tooltip title={t('Copy XML Source to Clipboard')}>\n                        <Button type='text' id='btnSourceXML' icon={<CopyOutlined/>} onClick={() => clipboard.writeText(sourceXML)} />\n                      </Tooltip>\n                      <Tooltip title={t('Download Source as .XML File')}>\n                        <Button type='text' id='btnDownloadSourceXML' icon={<DownloadOutlined/>} onClick={() => downloadXML(sourceXML)}/>\n                      </Tooltip>\n                    </span>\n                  }>\n                  <Source {...this.props} />\n                </Card>\n              </div> */}\n                <div style={{ fontWeight: 'bold' }}>\n                  FLOW TABLE:\n                </div>\n                <div style={{ width: '100%' }}>\n                  <table>\n                    <tr>\n                      <th>S No.</th>\n                      <th>Step</th>\n                      <th>Step Name</th>\n                      <th>Search By</th>\n                      <th>Search By Value</th>\n                    </tr>\n                    {this.state.total_array.length > 0 && this.state.total_array.map((item, key) => (\n                      <tr key={key}>\n                        <td>{key + 1}</td>\n                        <td>{item['step']}</td>\n                        <td>{item['step_name']}</td>\n                        <td>{item['search_by']}</td>\n                        <td style={{ maxWidth: '200px', wordWrap: 'break-word' }}>{item['search_by_value']}</td>\n                        {/* {item.response.status === 200 ?\n                     <td><span style={{color:'green'}}>Success</span></td> :\n                    <td><span style={{color:'red'}}>Failed</span></td>\n                    } */}\n                      </tr>\n                    ))}\n                  </table>\n                </div>\n                {/* <div id='selectedElementContainer'\n                  className={`${InspectorStyles['interaction-tab-container']} ${InspectorStyles['element-detail-container']} action-col`}>\n                  <Card title={<span><TagOutlined /> {t('selectedElement')}</span>}\n                    className={InspectorStyles['selected-element-card']}>\n                    {path && <SelectedElement {...this.props} />}\n                    {!path && <i>{t('selectElementInSource')}</i>}\n                  </Card>\n                </div> */}\n              </div>\n          }, {\n            label: t('Commands'), key: INTERACTION_MODE.COMMANDS, children:\n              <Card\n                title={<span><ThunderboltOutlined /> {t('Execute Commands')}</span>}\n                className={InspectorStyles['interaction-tab-card']}>\n                <Commands {...this.props} />\n              </Card>\n          }, {\n            label: t('Gestures'), key: INTERACTION_MODE.GESTURES, children:\n              isGestureEditorVisible ?\n                <Card\n                  title={<span><HighlightOutlined /> {t('Gesture Builder')}</span>}\n                  className={InspectorStyles['interaction-tab-card']}>\n                  <GestureEditor {...this.props} />\n                </Card>\n                :\n                <Card\n                  title={<span><HighlightOutlined /> {t('Saved Gestures')}</span>}\n                  className={InspectorStyles['interaction-tab-card']}>\n                  <SavedGestures {...this.props} />\n                </Card>\n          }, {\n            label: t('Session Information'), key: INTERACTION_MODE.SESSION_INFO, children:\n              <Card\n                title={<span><InfoCircleOutlined /> {t('Session Information')}</span>}\n                className={InspectorStyles['interaction-tab-card']}>\n                <SessionInfo {...this.props} />\n              </Card>\n          }]}\n        />\n      </div>\n    </div>;\n\n    return (<div className={InspectorStyles['inspector-container']}>\n      <HeaderButtons {...this.props} handlePanel={() => {\n        this.setState({ showPane: !this.state.showPane });\n        // this.state.activeIndex !== 1 ? this.setActiveIndex(1) : this.setActiveIndex(0);\n        console.log(\"showPane\", this.state.showPane);\n      }} />\n      {main}\n      <Modal\n        title={t('Session Inactive')}\n        open={showKeepAlivePrompt}\n        onOk={() => keepSessionAlive()}\n        onCancel={() => quitSession()}\n        okText={t('Keep Session Running')}\n        cancelText={t('Quit Session')}\n      >\n        <p>{t('Your session is about to expire')}</p>\n      </Modal>\n      <Modal\n        title={t('methodCallResult', { methodName: visibleCommandMethod })}\n        open={!!visibleCommandResult}\n        onOk={() => setVisibleCommandResult(null)}\n        onCancel={() => setVisibleCommandResult(null)}\n      >\n        <pre><code>{visibleCommandResult}</code></pre>\n      </Modal>\n    </div>);\n  }\n}\n","import { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as InspectorActions from '../actions/Inspector';\nimport InspectorPage from '../components/Inspector/Inspector';\n\nfunction mapStateToProps (state) {\n  return state.inspector;\n}\n\nexport default withTranslation(InspectorPage, connect(mapStateToProps, InspectorActions));\n","import React from 'react';\nimport styles from './Spinner.css';\n\nconst Spinner = () => (\n  <div className={styles.container}>\n    <div className={styles.loader}/>\n  </div>\n);\n\nexport default Spinner;\n","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport App from './containers/App';\nimport SessionPage from './containers/SessionPage';\nimport InspectorPage from './containers/InspectorPage';\nimport Spinner from './components/Spinner/Spinner';\nimport { ipcRenderer } from './polyfills';\nimport i18n from '../configs/i18next.config.renderer';\n\nipcRenderer.on('appium-language-changed', (event, message) => {\n  if (i18n.language !== message.language) {\n    i18n.changeLanguage(message.language);\n  }\n});\n\nexport default () => (\n  <Suspense fallback={<Spinner />}>\n    <App>\n      <Switch>\n        <Route exact path=\"/\">\n          <SessionPage />\n        </Route>\n        <Route path=\"/session\">\n          <SessionPage />\n        </Route>\n        <Route path=\"/inspector\">\n          <InspectorPage />\n        </Route>\n      </Switch>\n    </App>\n  </Suspense>\n);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport Routes from '../routes';\n\nexport default class Root extends Component {\n  render () {\n    const { store, history } = this.props;\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Routes />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import React from 'react';\nimport { Alert, Button, Tooltip } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport styles from './ErrorMessage.css';\nimport { ALERT } from '../AntdTypes';\nimport { withTranslation } from '../../util';\nimport { shell } from '../../polyfills';\n\nconst CREATE_ISSUE_URL = 'https://github.com/appium/appium-inspector/issues/new/choose';\n\nconst ErrorMessage = ({ error, copyTrace, t }) => (\n  <div className={styles.errorMessage}>\n    <Alert\n      message={<>{t('Unexpected Error:')} <code children={error.message} /></>}\n      type={ALERT.ERROR}\n      showIcon\n      description={\n        <>\n          {t('Please report this issue at:')}&nbsp;\n          <a onClick={(e) => e.preventDefault() || shell.openExternal(CREATE_ISSUE_URL)} children={CREATE_ISSUE_URL} />\n          <br />\n          {t('Full error trace:')}\n          <Tooltip title={t('Copy Error Trace')}>\n            <Button size='small'\n              className={styles.copyTraceBtn}\n              onClick={copyTrace(error.stack)}\n              icon={<CopyOutlined/>} />\n          </Tooltip>\n          <pre children={error.stack} />\n        </>\n      }\n    />\n  </div>\n);\n\nexport default withTranslation(ErrorMessage);\n","import React from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { clipboard } from '../../polyfills';\n\nconst copyTrace = (trace) => {\n  clipboard.writeText(trace);\n};\n\nexport default class ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError (error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  render () {\n    const { error } = this.state;\n    if (error) {\n      return <ErrorMessage error={error} copyTrace={copyTrace}/>;\n    }\n    return this.props.children;\n  }\n}\n","export const SET_UPDATE_STATE = 'SET_UPDATE_STATE';\n\nexport function setUpdateState (updateState) {\n  return (dispatch) => {\n    dispatch({type: SET_UPDATE_STATE, updateState});\n  };\n}\n","import * as inspectorActions from './Inspector';\nimport * as sessionActions from './Session';\nimport * as updaterActions from './Updater';\n\nexport default {\n  ...inspectorActions,\n  ...sessionActions,\n  ...updaterActions,\n};\n","import _, {omit} from 'lodash';\nimport formatJSON from 'format-json';\n\nimport { NEW_SESSION_REQUESTED, NEW_SESSION_LOADING, NEW_SESSION_DONE,\n         SAVE_SESSION_REQUESTED, SAVE_SESSION_DONE,\n         GET_SAVED_SESSIONS_REQUESTED, GET_SAVED_SESSIONS_DONE,\n         SET_CAPABILITY_PARAM, ADD_CAPABILITY, REMOVE_CAPABILITY, SET_CAPS_AND_SERVER,\n         SWITCHED_TABS, SAVE_AS_MODAL_REQUESTED, HIDE_SAVE_AS_MODAL_REQUESTED, SET_SAVE_AS_TEXT,\n         DELETE_SAVED_SESSION_REQUESTED, DELETE_SAVED_SESSION_DONE,\n         CHANGE_SERVER_TYPE, SET_SERVER_PARAM, SET_SERVER, SET_ATTACH_SESS_ID,\n         GET_SESSIONS_REQUESTED, GET_SESSIONS_DONE,\n         ENABLE_DESIRED_CAPS_NAME_EDITOR, ABORT_DESIRED_CAPS_NAME_EDITOR, SAVE_DESIRED_CAPS_NAME, SET_DESIRED_CAPS_NAME,\n         ENABLE_DESIRED_CAPS_EDITOR, ABORT_DESIRED_CAPS_EDITOR, SAVE_RAW_DESIRED_CAPS, SET_RAW_DESIRED_CAPS, SHOW_DESIRED_CAPS_JSON_ERROR,\n         IS_ADDING_CLOUD_PROVIDER, SET_PROVIDERS, SET_ADD_VENDOR_PREFIXES, SET_STATE_FROM_URL, SET_STATE_FROM_SAVED,\n         ServerTypes } from '../actions/Session';\nimport { notification } from 'antd';\n\nconst visibleProviders = []; // Pull this from \"electron-settings\"\nconst server = {\n  local: {},\n  remote: {},\n  advanced: {},\n};\n\nfor (const serverName of _.keys(ServerTypes)) {\n  server[serverName] = {};\n}\n\n// Make sure there's always at least one cap\nconst INITIAL_STATE = {\n  savedSessions: [],\n  tabKey: 'new',\n  serverType: ServerTypes.remote,\n  visibleProviders,\n  server: {\n    local: {},\n    remote: {},\n    sauce: {\n      dataCenter: 'us-west-1',\n    },\n    headspin: {},\n    browserstack: {},\n    lambdatest: {},\n    advanced: {},\n    bitbar: {},\n    kobiton: {},\n    perfecto: {},\n    pcloudy: {},\n    testingbot: {},\n    experitest: {},\n    roboticmobi: {},\n    remotetestkit: {},\n  },\n  attachSessId: null,\n\n  // Make sure there's always at least one cap\n  caps: [{\n    type: 'text',\n  }],\n\n  isCapsDirty: true,\n  gettingSessions: false,\n  runningAppiumSessions: [],\n  isEditingDesiredCapsName: false,\n  isEditingDesiredCaps: false,\n  isValidCapsJson: true,\n  isValidatingCapsJson: false,\n  isAddingCloudProvider: false,\n  addVendorPrefixes: true,\n};\n\nlet nextState;\n\n// returns false if the attachSessId is not present in the runningSessions list\nconst isAttachSessIdValid = (runningSessions, attachSessId) => {\n  if (!attachSessId || !runningSessions) {\n    return false;\n  }\n  for (const session of runningSessions) {\n    if (session.id === attachSessId) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default function session (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case NEW_SESSION_REQUESTED:\n      return {\n        ...state,\n        newSessionRequested: true,\n      };\n\n    case NEW_SESSION_LOADING:\n      nextState = {\n        ...state,\n        newSessionLoading: true,\n      };\n      return omit(nextState, 'newSessionRequested');\n\n    case NEW_SESSION_DONE:\n      return omit(state, 'newSessionLoading');\n\n\n    case ADD_CAPABILITY:\n      return {\n        ...state,\n        caps: [\n          ...state.caps,\n          {type: 'text'},\n        ],\n      };\n\n    case REMOVE_CAPABILITY:\n      return {\n        ...state,\n        caps: state.caps.filter((cap, index) => index !== action.index),\n        isCapsDirty: true,\n      };\n\n    case SET_CAPABILITY_PARAM:\n      return {\n        ...state,\n        isCapsDirty: true,\n        caps: state.caps.map((cap, index) => index !== action.index ? cap : {\n          ...cap,\n          [action.name]: action.value\n        }),\n      };\n\n    case SET_CAPS_AND_SERVER:\n      nextState = {\n        ...state,\n        server: action.server,\n        serverType: action.serverType,\n        caps: action.caps,\n        capsUUID: action.uuid,\n        capsName: action.name,\n      };\n      return omit(nextState, 'isCapsDirty');\n\n    case SAVE_SESSION_REQUESTED:\n      nextState = {\n        ...state,\n        saveSessionRequested: true,\n      };\n      return omit(nextState, 'showSaveAsModal');\n\n    case SAVE_SESSION_DONE:\n      return omit(state, ['saveSessionRequested', 'saveAsText']);\n\n    case GET_SAVED_SESSIONS_REQUESTED:\n      return {\n        ...state,\n        getSavedSessionsRequested: true,\n      };\n\n    case GET_SAVED_SESSIONS_DONE:\n      nextState = {\n        ...state,\n        savedSessions: action.savedSessions || [],\n      };\n      return omit(nextState, 'getSavedSessionsRequested');\n\n    case DELETE_SAVED_SESSION_REQUESTED:\n      return {\n        ...state,\n        deletingSession: true,\n      };\n\n    case DELETE_SAVED_SESSION_DONE:\n      return {\n        ...state,\n        deletingSession: false,\n        capsUUID: null,\n        capsName: null,\n      };\n\n    case SWITCHED_TABS:\n      return {\n        ...state,\n        tabKey: action.key,\n      };\n\n    case SAVE_AS_MODAL_REQUESTED:\n      return {\n        ...state,\n        'showSaveAsModal': true,\n      };\n\n    case HIDE_SAVE_AS_MODAL_REQUESTED:\n      return omit(state, ['saveAsText', 'showSaveAsModal']);\n\n    case SET_SAVE_AS_TEXT:\n      return {\n        ...state,\n        saveAsText: action.saveAsText,\n      };\n\n    case CHANGE_SERVER_TYPE:\n      return {\n        ...state,\n        serverType: action.serverType,\n      };\n\n    case SET_SERVER_PARAM:\n      return {\n        ...state,\n        server: {\n          ...state.server,\n          [action.serverType]: {\n            ...state.server[action.serverType],\n            [action.name]: action.value,\n          }\n        },\n      };\n\n    case SET_SERVER:\n      return {\n        ...state,\n        server: {\n          ...(function extendCurrentServerStateWithNewServerState (currentServerState, newServerState) {\n            // Copy current server state and extend it with new server state\n            const nextServerState = _.cloneDeep(currentServerState || {});\n\n            // Extend each server (sauce, remote, kobiton, etc...)\n            for (let serverName of _.keys(nextServerState)) {\n              nextServerState[serverName] = {\n                ...(nextServerState[serverName] || {}),\n                ...(newServerState[serverName] || {}),\n              };\n            }\n            return nextServerState;\n          })(state.server, action.server),\n        },\n        serverType: action.serverType || ServerTypes.local,\n      };\n\n    case SET_ATTACH_SESS_ID:\n      return {\n        ...state,\n        attachSessId: action.attachSessId\n      };\n\n    case GET_SESSIONS_REQUESTED:\n      return {\n        ...state,\n        gettingSessions: true,\n      };\n\n    case GET_SESSIONS_DONE: {\n      const attachSessId = isAttachSessIdValid(action.sessions, state.attachSessId) ? state.attachSessId : null;\n      return {\n        ...state,\n        gettingSessions: false,\n        attachSessId: (action.sessions && action.sessions.length > 0 && !attachSessId) ? action.sessions[0].id : attachSessId,\n        runningAppiumSessions: action.sessions || [],\n      };\n    }\n\n    case ENABLE_DESIRED_CAPS_NAME_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCapsName: true,\n        desiredCapsName: state.capsName,\n      };\n\n    case ABORT_DESIRED_CAPS_NAME_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCapsName: false,\n        desiredCapsName: null,\n      };\n\n    case SAVE_DESIRED_CAPS_NAME:\n      return {\n        ...state,\n        isEditingDesiredCapsName: false,\n        capsName: action.name,\n      };\n\n    case SET_DESIRED_CAPS_NAME:\n      return {\n        ...state,\n        desiredCapsName: action.desiredCapsName,\n      };\n\n    case ENABLE_DESIRED_CAPS_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCaps: true,\n        rawDesiredCaps: formatJSON.plain(\n          // Translate the caps definition to a proper capabilities JS Object\n          _.reduce(\n            state.caps,\n            (result, obj) => ({\n              ...result,\n              [obj.name]: obj.value,\n            }),\n            {}\n          )\n        ),\n        isValidCapsJson: true,\n        isValidatingCapsJson: false, // Don't start validating JSON until the user has attempted to save the JSON\n      };\n\n    case ABORT_DESIRED_CAPS_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCaps: false,\n        rawDesiredCaps: null,\n      };\n\n    case SAVE_RAW_DESIRED_CAPS:\n      return {\n        ...state,\n        isEditingDesiredCaps: false,\n        caps: action.caps,\n        isCapsDirty: true,\n      };\n\n    case SHOW_DESIRED_CAPS_JSON_ERROR:\n      return {\n        ...state,\n        invalidCapsJsonReason: action.message,\n        isValidCapsJson: false,\n        isValidatingCapsJson: true,\n      };\n\n    case SET_RAW_DESIRED_CAPS:\n      return {\n        ...state,\n        rawDesiredCaps: action.rawDesiredCaps,\n        isValidCapsJson: action.isValidCapsJson,\n        invalidCapsJsonReason: action.invalidCapsJsonReason,\n      };\n\n    case IS_ADDING_CLOUD_PROVIDER:\n      return {\n        ...state,\n        isAddingCloudProvider: action.isAddingProvider,\n      };\n\n    case SET_PROVIDERS:\n      return {\n        ...state,\n        visibleProviders: action.providers || []\n      };\n\n    case SET_ADD_VENDOR_PREFIXES:\n      return {\n        ...state,\n        addVendorPrefixes: action.addVendorPrefixes,\n      };\n\n    case SET_STATE_FROM_URL:\n      return {\n        ...state,\n        server: {\n          ...state.server,\n          ...(action.state.server || {})\n        },\n        ...omit(action.state, ['server']),\n      };\n\n    case SET_STATE_FROM_SAVED:\n      if (!Object.keys(ServerTypes).includes(action.state.serverType)) {\n        notification.error({\n          message: `Failed to load session: ${action.state.serverType} is not a valid server type`,\n        });\n        return state;\n      }\n      if (![...state.visibleProviders, ServerTypes.local, ServerTypes.remote].includes(action.state.serverType)) {\n        state.visibleProviders.push(action.state.serverType);\n      }\n      return {\n        ...state,\n        ...action.state,\n        filePath: action.filePath,\n      };\n\n    default:\n      return {...state};\n  }\n}\n","import { omit } from 'lodash';\nimport { SET_SOURCE_AND_SCREENSHOT, QUIT_SESSION_REQUESTED, QUIT_SESSION_DONE,\n         SESSION_DONE, SELECT_ELEMENT, UNSELECT_ELEMENT, SELECT_HOVERED_ELEMENT, SET_SELECTED_ELEMENT_ID, SET_INTERACTIONS_NOT_AVAILABLE,\n         UNSELECT_HOVERED_ELEMENT, METHOD_CALL_REQUESTED, METHOD_CALL_DONE,\n         SET_EXPANDED_PATHS, START_RECORDING, PAUSE_RECORDING, CLEAR_RECORDING,STEPS_ARRAY,ELEMENT_KEYS,\n         SET_ACTION_FRAMEWORK, RECORD_ACTION, CLOSE_RECORDER, SET_SHOW_BOILERPLATE, SET_SESSION_DETAILS,\n         SHOW_LOCATOR_TEST_MODAL, HIDE_LOCATOR_TEST_MODAL, SHOW_SIRI_COMMAND_MODAL, HIDE_SIRI_COMMAND_MODAL, SET_LOCATOR_TEST_STRATEGY, SET_LOCATOR_TEST_VALUE,\n         SEARCHING_FOR_ELEMENTS, SEARCHING_FOR_ELEMENTS_COMPLETED, SET_LOCATOR_TEST_ELEMENT, CLEAR_SEARCH_RESULTS,\n         FINDING_ELEMENT_IN_SOURCE, FINDING_ELEMENT_IN_SOURCE_COMPLETED, ADD_ASSIGNED_VAR_CACHE, CLEAR_ASSIGNED_VAR_CACHE, SET_SCREENSHOT_INTERACTION_MODE,\n         SET_SWIPE_START, SET_SWIPE_START1, SET_SWIPE_END, SET_SWIPE_END1, CLEAR_SWIPE_ACTION, SET_SEARCHED_FOR_ELEMENT_BOUNDS, CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS,\n         PROMPT_KEEP_ALIVE, HIDE_PROMPT_KEEP_ALIVE, GET_FIND_ELEMENTS_TIMES, GET_FIND_ELEMENTS_TIMES_COMPLETED,\n         SELECT_COMMAND_GROUP, SELECT_COMMAND_SUB_GROUP, SET_APP_MODE,\n         SELECT_INTERACTION_MODE, ENTERING_COMMAND_ARGS, SET_COMMAND_ARG, CANCEL_PENDING_COMMAND, SET_CONTEXT,\n         SET_KEEP_ALIVE_INTERVAL, SET_USER_WAIT_TIMEOUT, SET_LAST_ACTIVE_MOMENT, SET_VISIBLE_COMMAND_RESULT,\n         SET_AWAITING_MJPEG_STREAM, SET_APP_ID, SET_SERVER_STATUS, SET_SESSION_TIME, SHOW_GESTURE_EDITOR, HIDE_GESTURE_EDITOR,\n         GET_SAVED_GESTURES_REQUESTED, GET_SAVED_GESTURES_DONE, SET_LOADED_GESTURE, REMOVE_LOADED_GESTURE, SHOW_GESTURE_ACTION, HIDE_GESTURE_ACTION,\n         SELECT_TICK_ELEMENT, UNSELECT_TICK_ELEMENT, SET_GESTURE_TAP_COORDS_MODE, CLEAR_TAP_COORDINATES, DELETE_SAVED_GESTURES_REQUESTED, DELETE_SAVED_GESTURES_DONE,\n         SELECT_HOVERED_CENTROID, UNSELECT_HOVERED_CENTROID, SELECT_CENTROID, UNSELECT_CENTROID,\n         SET_SHOW_CENTROIDS, TOGGLE_SHOW_ATTRIBUTES, TOGGLE_REFRESHING_STATE, SET_SIRI_COMMAND_VALUE\n} from '../actions/Inspector';\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE, APP_MODE } from '../components/Inspector/shared';\n\nconst DEFAULT_FRAMEWORK = 'java';\nconst NATIVE_APP = 'NATIVE_APP';\n\nconst INITIAL_STATE = {\n  savedGestures: [],\n  driver: null,\n  keepAliveInterval: null,\n  showKeepAlivePrompt: false,\n  userWaitTimeout: null,\n  lastActiveMoment: null,\n  expandedPaths: ['0'],\n  isRecording: false,\n  isSourceRefreshOn: true,\n  showRecord: false,\n  showBoilerplate: false,\n  recordedActions: [],\n  actionFramework: DEFAULT_FRAMEWORK,\n  sessionDetails: {},\n  isGestureEditorVisible: false,\n  isLocatorTestModalVisible: false,\n  isSiriCommandModalVisible: false,\n  siriCommandValue: '',\n  showCentroids: false,\n  locatorTestStrategy: 'id',\n  locatorTestValue: '',\n  isSearchingForElements: false,\n  assignedVarCache: {},\n  screenshotInteractionMode: SCREENSHOT_INTERACTION_MODE.SELECT,\n  searchedForElementBounds: null,\n  selectedCommandGroup: null,\n  selectedCommandSubGroup: null,\n  selectedInteractionMode: INTERACTION_MODE.SOURCE,\n  appMode: APP_MODE.NATIVE,\n  mjpegScreenshotUrl: null,\n  pendingCommand: null,\n  findElementsExecutionTimes: [],\n  isFindingElementsTimes: false,\n  isFindingLocatedElementInSource: false,\n  visibleCommandResult: null,\n  visibleCommandMethod: null,\n  isAwaitingMjpegStream: true,\n  showSourceAttrs: false,\n};\n\nlet nextState;\n\n/**\n * Look up an element in the source with the provided path\n */\nfunction findElementByPath (path, source) {\n  let selectedElement = source;\n  for (let index of path.split('.')) {\n    selectedElement = selectedElement.children[index];\n  }\n  return {...selectedElement};\n}\n\nexport default function inspector (state = INITIAL_STATE, action) {\n  console.log(\"🚀 ~ file: Inspector.js:81 ~ inspector ~ action:\", action)\n  switch (action.type) {\n    case SET_SOURCE_AND_SCREENSHOT:\n      return {\n        ...state,\n        contexts: action.contexts,\n        contextsError: action.contextsError,\n        currentContext: action.currentContext || NATIVE_APP,\n        currentContextError: action.currentContextError,\n        source: action.source,\n        sourceXML: action.sourceXML,\n        sourceError: action.sourceError,\n        screenshot: action.screenshot,\n        screenshotError: action.screenshotError,\n        windowSize: action.windowSize,\n        windowSizeError: action.windowSizeError,\n        findElementsExecutionTimes: [],\n      };\n\n    case QUIT_SESSION_REQUESTED:\n      return {\n        ...state,\n        methodCallInProgress: true,\n        isQuittingSession: true,\n      };\n\n    case QUIT_SESSION_DONE:\n      return {\n        ...INITIAL_STATE\n      };\n\n    case SESSION_DONE:\n      return {\n        ...state,\n        isSessionDone: true,\n        methodCallInProgress: false,\n      };\n\n    case SELECT_ELEMENT:\n      return {\n        ...state,\n        selectedElement: findElementByPath(action.path, state.source),\n        selectedElementPath: action.path,\n        selectedElementSearchInProgress: true,\n        elementInteractionsNotAvailable: false,\n        findElementsExecutionTimes: [],\n      };\n\n    case UNSELECT_ELEMENT:\n      return {\n        ...state,\n        selectedElement: undefined,\n        selectedElementPath: null,\n        selectedElementId: null,\n        selectedElementVariableName: null,\n        selectedElementVariableType: null,\n        selectedElementSearchInProgress: false,\n      };\n\n    case SELECT_CENTROID:\n      return {\n        ...state,\n        selectedCentroid: action.path,\n      };\n\n    case UNSELECT_CENTROID:\n      return omit(state, 'selectedCentroid');\n\n    case SET_SELECTED_ELEMENT_ID:\n      return {\n        ...state,\n        selectedElementId: action.elementId,\n        selectedElementVariableName: action.variableName,\n        selectedElementVariableType: action.variableType,\n        selectedElementSearchInProgress: false,\n        findElementsExecutionTimes: [],\n      };\n\n    case SET_INTERACTIONS_NOT_AVAILABLE:\n      return {\n        ...state,\n        elementInteractionsNotAvailable: true,\n        selectedElementSearchInProgress: false,\n      };\n\n    case SELECT_HOVERED_ELEMENT:\n      return {\n        ...state,\n        hoveredElement: findElementByPath(action.path, state.source),\n      };\n\n    case UNSELECT_HOVERED_ELEMENT:\n      return omit(state, 'hoveredElement');\n\n    case SELECT_HOVERED_CENTROID:\n      return {\n        ...state,\n        hoveredCentroid: action.path,\n      };\n\n    case UNSELECT_HOVERED_CENTROID:\n      return omit(state, 'hoveredCentroid');\n\n    case METHOD_CALL_REQUESTED:\n      return {\n        ...state,\n        methodCallInProgress: true,\n      };\n\n    case METHOD_CALL_DONE:\n      return {\n        ...state,\n        methodCallInProgress: false,\n      };\n\n    case SET_EXPANDED_PATHS:\n      return {\n        ...state,\n        expandedPaths: action.paths,\n        findElementsExecutionTimes: [],\n      };\n\n    case START_RECORDING:\n      return {\n        ...state,\n        isRecording: true,\n        showRecord: true\n      };\n\n    case PAUSE_RECORDING:\n      return {\n        ...state,\n        isRecording: false,\n        showRecord: state.recordedActions.length > 0\n      };\n\n    case CLEAR_RECORDING:\n      return {\n        ...state,\n        recordedActions: []\n      };\n\n    case SET_ACTION_FRAMEWORK:\n      return {\n        ...state,\n        actionFramework: action.framework || DEFAULT_FRAMEWORK\n      };\n\n    case RECORD_ACTION:\n      return {\n        ...state,\n        recordedActions: [\n          ...state.recordedActions,\n          {action: action.action, params: action.params}\n        ]\n      };\n\n    case STEPS_ARRAY:\n        return {\n          ...state,\n          flow_steps:action.res\n      };\n    \n      case ELEMENT_KEYS:\n        return {\n          ...state,\n          element:action.elements\n      };\n\n    case ADD_ASSIGNED_VAR_CACHE:\n      return {\n        ...state,\n        assignedVarCache: {\n          ...state.assignedVarCache,\n          [action.varName]: true,\n        }\n      };\n\n    case CLEAR_ASSIGNED_VAR_CACHE:\n      return {\n        ...state,\n        assignedVarCache: [],\n      };\n\n    case CLOSE_RECORDER:\n      return {\n        ...state,\n        showRecord: false\n      };\n\n    case SET_SHOW_BOILERPLATE:\n      return {...state, showBoilerplate: action.show};\n\n    case SET_SESSION_DETAILS:\n      return {\n        ...state,\n        sessionDetails: action.sessionDetails,\n        driver: action.driver,\n        appMode: action.mode,\n        mjpegScreenshotUrl: action.mjpegScreenshotUrl\n      };\n\n    case SHOW_LOCATOR_TEST_MODAL:\n      return {\n        ...state,\n        isLocatorTestModalVisible: true,\n      };\n\n    case HIDE_LOCATOR_TEST_MODAL:\n      return {\n        ...state,\n        isLocatorTestModalVisible: false,\n      };\n\n    case SHOW_SIRI_COMMAND_MODAL:\n      return {\n        ...state,\n        isSiriCommandModalVisible: true,\n      };\n\n    case HIDE_SIRI_COMMAND_MODAL:\n      return {\n        ...state,\n        isSiriCommandModalVisible: false,\n      };\n\n    case SET_SIRI_COMMAND_VALUE:\n      return {\n        ...state,\n        siriCommandValue: action.siriCommandValue\n      };\n\n    case SET_LOCATOR_TEST_STRATEGY:\n      return {\n        ...state,\n        locatorTestStrategy: action.locatorTestStrategy\n      };\n\n    case SET_LOCATOR_TEST_VALUE:\n      return {\n        ...state,\n        locatorTestValue: action.locatorTestValue\n      };\n\n    case SEARCHING_FOR_ELEMENTS:\n      return {\n        ...state,\n        locatedElements: null,\n        locatedElementsExecutionTime: null,\n        locatorTestElement: null,\n        isSearchingForElements: true,\n      };\n\n    case SEARCHING_FOR_ELEMENTS_COMPLETED:\n      return {\n        ...state,\n        locatedElements: action.elements,\n        locatedElementsExecutionTime: action.executionTime,\n        isSearchingForElements: false,\n      };\n\n    case GET_FIND_ELEMENTS_TIMES:\n      return {\n        ...state,\n        isFindingElementsTimes: true,\n      };\n\n    case GET_FIND_ELEMENTS_TIMES_COMPLETED:\n      return {\n        ...state,\n        findElementsExecutionTimes: action.findElementsExecutionTimes,\n        isFindingElementsTimes: false,\n      };\n\n    case SET_LOCATOR_TEST_ELEMENT:\n      return {\n        ...state,\n        locatorTestElement: action.elementId,\n      };\n\n    case FINDING_ELEMENT_IN_SOURCE:\n      return {\n        ...state,\n        isFindingLocatedElementInSource: true,\n      };\n\n    case FINDING_ELEMENT_IN_SOURCE_COMPLETED:\n      return {\n        ...state,\n        isFindingLocatedElementInSource: false,\n      };\n\n    case CLEAR_SEARCH_RESULTS:\n      return {\n        ...state,\n        locatedElements: null,\n        isFindingLocatedElementInSource: false,\n      };\n\n    case SET_SCREENSHOT_INTERACTION_MODE:\n      return {\n        ...state,\n        screenshotInteractionMode: action.screenshotInteractionMode,\n      };\n\n    case SET_SWIPE_START:\n      return {\n        ...state,\n        swipeStart: {\n          x: action.swipeStartX,\n          y: action.swipeStartY,\n        },\n      };\n\n    case SET_SWIPE_END:\n      return {\n        ...state,\n        swipeEnd: {\n          x: action.swipeEndX,\n          y: action.swipeEndY,\n        },\n      };\n\n    case SET_SWIPE_START1:\n      return {\n        ...state,\n        swipeStart1: {\n          x: action.swipeStartX,\n          y: action.swipeStartY,\n        },\n      };\n\n    case SET_SWIPE_END1:\n      return {\n        ...state,\n        swipeEnd1: {\n          x: action.swipeEndX,\n          y: action.swipeEndY,\n        },\n      };\n\n\n\n    case CLEAR_SWIPE_ACTION:\n      return {\n        ...state,\n        swipeStart: null,\n        swipeEnd: null,\n        swipeStart1: null,\n        swipeEnd1: null\n      };\n\n    case SET_SEARCHED_FOR_ELEMENT_BOUNDS:\n      return {\n        ...state,\n        searchedForElementBounds: {\n          location: action.location,\n          size: action.size,\n        }\n      };\n\n    case CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS:\n      return {\n        ...state,\n        searchedForElementBounds: null,\n      };\n\n    case PROMPT_KEEP_ALIVE:\n      return {\n        ...state,\n        showKeepAlivePrompt: true,\n      };\n\n    case HIDE_PROMPT_KEEP_ALIVE:\n      return {\n        ...state,\n        showKeepAlivePrompt: false,\n      };\n\n    case SELECT_COMMAND_GROUP:\n      return {\n        ...state,\n        selectedCommandGroup: action.group\n      };\n\n    case SELECT_COMMAND_SUB_GROUP:\n      return {\n        ...state,\n        selectedCommandSubGroup: action.group,\n      };\n\n    case SELECT_INTERACTION_MODE:\n      return {\n        ...state,\n        selectedInteractionMode: action.interaction,\n      };\n\n    case SET_APP_MODE:\n      return {\n        ...state,\n        appMode: action.mode,\n      };\n\n    case SET_SHOW_CENTROIDS:\n      return {\n        ...state,\n        showCentroids: action.show,\n      };\n\n    case ENTERING_COMMAND_ARGS:\n      return {\n        ...state,\n        pendingCommand: {\n          commandName: action.commandName,\n          command: action.command,\n          args: [],\n        }\n      };\n\n    case SET_COMMAND_ARG:\n      return {\n        ...state,\n        pendingCommand: {\n          ...state.pendingCommand,\n          args: Object.assign([], state.pendingCommand.args, {[action.index]: action.value}), // Replace 'value' at 'index'\n        },\n      };\n\n    case CANCEL_PENDING_COMMAND:\n      return {\n        ...state,\n        pendingCommand: null,\n      };\n\n    case SET_CONTEXT:\n      return {\n        ...state,\n        currentContext: action.context\n      };\n\n    case SET_KEEP_ALIVE_INTERVAL:\n      return {\n        ...state,\n        keepAliveInterval: action.keepAliveInterval,\n      };\n\n    case SET_USER_WAIT_TIMEOUT:\n      return {\n        ...state,\n        userWaitTimeout: null,\n      };\n\n    case SET_LAST_ACTIVE_MOMENT:\n      return {\n        ...state,\n        lastActiveMoment: action.lastActiveMoment,\n      };\n\n    case SET_VISIBLE_COMMAND_RESULT:\n      return {\n        ...state,\n        visibleCommandResult: action.result,\n        visibleCommandMethod: action.methodName,\n      };\n\n    case SET_SESSION_TIME:\n      return {\n        ...state,\n        sessionStartTime: action.sessionStartTime,\n      };\n\n    case SET_APP_ID:\n      return {\n        ...state,\n        appId: action.appId,\n      };\n\n    case SET_SERVER_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n\n    case SET_AWAITING_MJPEG_STREAM:\n      return {...state, isAwaitingMjpegStream: action.isAwaiting};\n\n    case SHOW_GESTURE_EDITOR:\n      return {\n        ...state,\n        isGestureEditorVisible: true,\n      };\n\n    case HIDE_GESTURE_EDITOR:\n      return {\n        ...state,\n        isGestureEditorVisible: false,\n      };\n\n    case GET_SAVED_GESTURES_REQUESTED:\n      return {\n        ...state,\n        getSavedGesturesRequested: true,\n      };\n\n    case GET_SAVED_GESTURES_DONE:\n      nextState = {\n        ...state,\n        savedGestures: action.savedGestures || [],\n      };\n      return omit(nextState, 'getSavedGesturesRequested');\n\n    case DELETE_SAVED_GESTURES_REQUESTED:\n      return {\n        ...state,\n        deleteGesture: action.deleteGesture,\n      };\n\n    case DELETE_SAVED_GESTURES_DONE:\n      return omit(state, 'deleteGesture');\n\n    case SET_LOADED_GESTURE:\n      return {\n        ...state,\n        loadedGesture: action.loadedGesture,\n      };\n\n    case REMOVE_LOADED_GESTURE:\n      return omit(state, 'loadedGesture');\n\n    case SHOW_GESTURE_ACTION:\n      return {\n        ...state,\n        showGesture: action.showGesture,\n      };\n\n    case HIDE_GESTURE_ACTION:\n      return omit(state, 'showGesture');\n\n    case SELECT_TICK_ELEMENT:\n      return {\n        ...state,\n        selectedTick: action.selectedTick,\n      };\n\n    case UNSELECT_TICK_ELEMENT:\n      return omit(state, 'selectedTick');\n\n    case SET_GESTURE_TAP_COORDS_MODE:\n      return {\n        ...state,\n        tickCoordinates: {\n          x: action.x,\n          y: action.y,\n        },\n      };\n\n    case CLEAR_TAP_COORDINATES:\n      return omit(state, 'tickCoordinates');\n\n    case TOGGLE_SHOW_ATTRIBUTES:\n      return {...state, showSourceAttrs: !state.showSourceAttrs};\n\n    case TOGGLE_REFRESHING_STATE:\n      return {...state, isSourceRefreshOn: !state.isSourceRefreshOn};\n\n    default:\n      return {...state};\n  }\n}\n","import { SET_UPDATE_STATE } from '../actions/Updater';\n\nconst INITIAL_STATE = {};\n\nexport default function session (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_UPDATE_STATE:\n      return {...action.updateState};\n    default:\n      return {...state};\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport session from './Session';\nimport inspector from './Inspector';\nimport updater from './Updater';\n\n// create our root reducer\nexport default function createRootReducer (routerReducer) {\n  return combineReducers({\n    router: routerReducer,\n    session,\n    inspector,\n    updater,\n  });\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createHashHistory } from 'history';\nimport { createReduxHistoryContext, push } from 'redux-first-history';\nimport actions from './actions';\nimport createRootReducer from './reducers';\n\nconst { createReduxHistory, routerMiddleware, routerReducer } = createReduxHistoryContext({\n  history: createHashHistory()\n});\n\nconst rootReducer = createRootReducer(routerReducer);\nconsole.log(\"rootReducer\", rootReducer);\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => {\n    const middleware = getDefaultMiddleware({\n      serializableCheck: false\n    });\n\n    // Additional development tools\n    if (process.env.NODE_ENV === 'development') {\n      // Logging Middleware\n      const { createLogger } = require('redux-logger');\n      const logger = createLogger({\n        level: 'info',\n        collapsed: true\n      });\n      middleware.push(logger);\n    }\n\n    // Router Middleware\n    middleware.push(routerMiddleware);\n\n    return middleware;\n  },\n  devTools: process.env.NODE_ENV !== 'development' ? false : {\n    actionCreators: {...actions, push}\n  }\n});\n\nexport const history = createReduxHistory(store);\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Root from './containers/Root';\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\nimport { store, history } from './store';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <ErrorBoundary>\n    <Root store={store} history={history} />\n  </ErrorBoundary>\n);\n\nif (module.hot) {\n  module.hot.accept('./containers/Root', () => {\n    const NextRoot = require('./containers/Root').default;\n    root.render(\n      <AppContainer>\n        <NextRoot store={store} history={history} />\n      </AppContainer>\n    );\n  });\n}\n"]}