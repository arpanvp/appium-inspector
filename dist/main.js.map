{"version":3,"sources":["main/debug.js","main/helpers.js","../env/.env-dev.js","env.js","renderer/polyfills/browser.js","renderer/polyfills/electron.js","renderer/polyfills/index.js","shared/settings.js","configs/app.config.js","configs/i18next.config.js","main/auto-updater/config.js","main/auto-updater/update-checker.js","main/auto-updater/index.js","main/menus.js","main/windows.js","main.js"],"names":["installExtensions","installer","require","REACT_DEVELOPER_TOOLS","REDUX_DEVTOOLS","opts","forceDownload","process","env","UPGRADE_EXTENSIONS","loadExtensionOptions","allowFileAccess","default","e","console","warn","APPIUM_SESSION_FILE_VERSION","getAppiumSessionFilePath","argv","isPackaged","isDev","platform","getSaveableState","reduxState","version","caps","server","serverType","visibleProviders","APPIUM_SESSION_EXTENSION","exports","_default","_ENV_","browser","clipboard","writeText","text","navigator","shell","openExternal","url","window","open","remote","getCurrentWindow","getSize","innerWidth","innerHeight","ipcRenderer","on","evt","fs","util","BrowserSettings","has","key","get","set","val","localStorage","setItem","JSON","stringify","parse","getItem","getSync","log","settings","i18NextBackend","i18NextBackendOptions","backends","backendOptions","loadPath","_path","_interopRequireDefault","_electron","_electronLog","_electronSettings","_i18nextFsBackend","_fs","_util","obj","__esModule","path","join","__dirname","addPath","jsonIndent","buildForBrowser","BUILD_BROWSER","test","userAgent","_polyfills","SAVED_SESSIONS","SET_SAVED_GESTURES","SERVER_ARGS","SESSION_SERVER_PARAMS","SESSION_SERVER_TYPE","SAVED_FRAMEWORK","DEFAULT_SETTINGS","getSetting","setting","setSetting","value","_settings","config","languages","fallbackLng","namespace","getI18NextOptions","backend","interpolation","escapeValue","lng","whitelist","_i18next","_app","i18nextOptions","i18n","isInitialized","use","init","baseFeedUrl","getFeedUrl","toLowerCase","_requestPromise","_config","_semver","checkUpdate","currentVersion","res","request","j","semver","lt","name","ign","setUpAutoUpdater","autoUpdater","app","moment","dialog","B","setFeedURL","getVersion","checkNewUpdates","fromMenu","RUNNING_IN_SPECTRON","update","notes","pub_date","pubDate","format","t","detail","replace","NO_AUTO_UPDATE","showMessageBox","type","buttons","message","response","checkForUpdates","emit","delay","event","releaseNotes","releaseName","quitAndInstall","_moment","_bluebird","_lodash","_env","_updateChecker","NODE_ENV","runningLocally","RUNNING_LOCALLY","_","noop","_autoUpdater","_windows","_helpers","menuTemplates","mac","other","languageMenu","map","languageCode","label","checked","language","click","changeLanguage","getShowAppInfoClickAction","title","appVersion","electronVersion","versions","electron","nodejsVersion","node","macMenuAppium","submenu","accelerator","selector","quit","macMenuEdit","macMenuView","mainWindow","webContents","reload","toggleDevTools","push","setFullScreen","isFullScreen","macMenuWindow","macMenuHelp","openFileCallback","canceled","filePaths","showOpenDialog","properties","filters","extensions","filePath","send","saveAsCallback","showSaveDialog","macMenuFile","launchNewSessionWindow","otherMenuFile","shouldShowFileMenu","fileSavingOperations","fileSubmenu","close","splice","otherMenuView","otherMenuHelp","rebuildMenus","template","menu","Menu","buildFromTemplate","setApplicationMenu","setMenu","_menus","_main","buildSplashWindow","BrowserWindow","width","height","minWidth","minHeight","frame","buildSessionWindow","show","titleBarStyle","webPreferences","nodeIntegration","contextIsolation","enableRemoteModule","additionalArguments","openFilePath","ipcMain","setupMainWindow","splashUrl","mainUrl","splashWindow","loadURL","destroy","focus","openDevTools","props","x","y","inspectElement","popup","getAllWebContents","forEach","wc","win","_debug"],"mappings":"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","file":"main.js","sourceRoot":"../app","sourcesContent":["export async function installExtensions () {\n  const installer = require('electron-devtools-installer');\n  const { REACT_DEVELOPER_TOOLS, REDUX_DEVTOOLS } = installer;\n  const opts = {\n    forceDownload: !!process.env.UPGRADE_EXTENSIONS,\n    loadExtensionOptions: {\n      allowFileAccess: true\n    }\n  };\n  try {\n    await installer.default([REACT_DEVELOPER_TOOLS, REDUX_DEVTOOLS], opts);\n  } catch (e) {\n    console.warn(`Error installing extension: ${e}`); // eslint-disable-line no-console\n  }\n}\n","const APPIUM_SESSION_FILE_VERSION = '1.0';\n\nexport function getAppiumSessionFilePath (argv, isPackaged, isDev) {\n  if (isDev) {\n    // do not use file launcher in dev mode because argv is different\n    // then it is in production\n    return false;\n  }\n  if (process.platform === 'darwin' && !isDev) {\n    // packaged macOS apps do not receive args from process.argv, they\n    // receive the filepath argument from the `electron.app.on('open-file', cb)` event\n    return false;\n  }\n  const argvIndex = isPackaged ? 1 : 2;\n  return argv[argvIndex];\n}\n\n// get the slice of the redux state that's needed for the .appiumsession files\nexport function getSaveableState (reduxState) {\n  return {\n    version: APPIUM_SESSION_FILE_VERSION,\n    caps: reduxState.caps,\n    server: reduxState.server,\n    serverType: reduxState.serverType,\n    visibleProviders: reduxState.visibleProviders,\n  };\n}\n\nexport const APPIUM_SESSION_EXTENSION = 'appiumsession';\n","export default {\n\n};","let env = {};\n\nif (typeof (_ENV_) === 'undefined') {\n  env = require('../env/.env-dev');\n} else {\n  env = _ENV_; // eslint-disable-line no-undef\n}\n\nexport default env;","const browser = {\n  clipboard: {\n    writeText: (text) => navigator.clipboard.writeText(text)\n  },\n  shell: {\n    openExternal: (url) => window.open(url, '')\n  },\n  remote: {\n    getCurrentWindow: () => ({\n      getSize: () => [window.innerWidth, window.innerHeight]\n    })\n  },\n  ipcRenderer: {\n    on: (evt) => {\n      console.warn(`Cannot listen for IPC event ${evt} in browser context`); // eslint-disable-line no-console\n    }\n  },\n  fs: null,\n  util: null,\n};\n\nclass BrowserSettings {\n  has (key) {\n    return this.get(key) !== null;\n  }\n\n  set (key, val) {\n    return localStorage.setItem(key, JSON.stringify(val));\n  }\n\n  get (key) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  getSync (key) {\n    return this.get(key);\n  }\n}\n\nconst log = console;\nconst settings = new BrowserSettings();\nconst {clipboard, shell, remote, ipcRenderer} = browser;\nconst i18NextBackend = require('i18next-chained-backend').default;\nconst i18NextBackendOptions = {\n  backends: [\n    require('i18next-localstorage-backend').default,\n    require('i18next-http-backend').default,\n  ], backendOptions: [{\n  }, {\n    loadPath: './locales/{{lng}}/{{ns}}.json'\n  }]\n};\n\nexport {\n  log,\n  settings,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  i18NextBackend,\n  i18NextBackendOptions,\n};\n","import path from 'path';\nimport { clipboard, shell, remote, ipcRenderer } from 'electron';\nimport log from 'electron-log';\nimport settings from 'electron-settings';\nimport i18NextBackend from 'i18next-fs-backend';\nimport fs from 'fs';\nimport util from 'util';\nconst i18NextBackendOptions = {\n  loadPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n  addPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n  jsonIndent: 2,\n};\n\nexport {\n  log,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  settings,\n  i18NextBackend,\n  i18NextBackendOptions,\n  fs,\n  util,\n};\n","let log, settings, clipboard, shell, remote, ipcRenderer,\n    i18NextBackend, i18NextBackendOptions, fs, util;\n\nfunction buildForBrowser () {\n  if (process.env.BUILD_BROWSER) {\n    return true;\n  }\n\n  if (typeof navigator !== 'undefined' && !/electron/i.test(navigator.userAgent)) {\n    return true;\n  }\n\n  return false;\n}\n\nif (buildForBrowser()) {\n  ({log, settings, clipboard, shell, remote,\n    ipcRenderer, i18NextBackend,\n    i18NextBackendOptions, fs, util} = require('./browser'));\n} else {\n  ({log, settings, clipboard, shell, remote,\n    ipcRenderer, i18NextBackend,\n    i18NextBackendOptions, fs, util} = require('./electron'));\n}\n\nexport {\n  log,\n  clipboard,\n  shell,\n  remote,\n  ipcRenderer,\n  settings,\n  i18NextBackend,\n  i18NextBackendOptions,\n  fs,\n  util,\n};\n","import { settings } from '../renderer/polyfills';\n\nexport const SAVED_SESSIONS = 'SAVED_SESSIONS';\nexport const SET_SAVED_GESTURES = 'SET_SAVED_GESTURES';\nexport const SERVER_ARGS = 'SERVER_ARGS';\nexport const SESSION_SERVER_PARAMS = 'SESSION_SERVER_PARAMS';\nexport const SESSION_SERVER_TYPE = 'SESSION_SERVER_TYPE';\nexport const SAVED_FRAMEWORK = 'SAVED_FRAMEWORK';\n\nconst DEFAULT_SETTINGS = {\n  [SAVED_SESSIONS]: [],\n  [SET_SAVED_GESTURES]: [],\n  [SERVER_ARGS]: null,\n  [SESSION_SERVER_PARAMS]: null,\n  [SESSION_SERVER_TYPE]: null,\n  [SAVED_FRAMEWORK]: 'java',\n};\n\nexport async function getSetting (setting) {\n  if (await settings.has(setting)) {\n    return await settings.get(setting);\n  }\n  return DEFAULT_SETTINGS[setting];\n}\n\nexport async function setSetting (setting, value) {\n  await settings.set(setting, value);\n}\n\nexport default settings;\n","import settings from '../shared/settings';\n\nconst config = {\n  platform: process.platform,\n  languages: [\n    'de', 'en', 'es-ES', 'fa', 'hi', 'it', 'ja', 'ko', 'kn',\n    'ml-IN', 'pa-IN', 'pl', 'pt-BR', 'pt-PT', 'ru', 'te', 'uk', 'zh-CN'\n  ],\n  fallbackLng: 'en',\n  namespace: 'translation',\n};\n\nfunction getI18NextOptions (backend) {\n  return {\n    backend,\n    // debug: true,\n    // saveMissing: true,\n    interpolation: {\n      escapeValue: false\n    },\n    lng: settings && settings.getSync('PREFERRED_LANGUAGE') || 'en',\n    fallbackLng: config.fallbackLng,\n    whitelist: config.languages\n  };\n}\n\n\nexport default config;\nexport { getI18NextOptions };\n","import i18n from 'i18next';\nimport { getI18NextOptions } from './app.config';\nimport { i18NextBackend, i18NextBackendOptions } from '../renderer/polyfills';\n\nconst i18nextOptions = getI18NextOptions(i18NextBackendOptions);\n\nif (!i18n.isInitialized) {\n  i18n\n    .use(i18NextBackend)\n    .init(i18nextOptions);\n}\n\nexport default i18n;\n","const baseFeedUrl = `https://appium-inspector-hazel.vercel.app`;\n\nexport function getFeedUrl (version) {\n  let platform = process.platform;\n  if (platform.toLowerCase() === 'linux') {\n    platform = 'AppImage';\n  }\n  return `${baseFeedUrl}/update/${platform}/${version}`;\n}\n","import request from 'request-promise';\nimport { getFeedUrl } from './config';\nimport semver from 'semver';\n\nexport async function checkUpdate (currentVersion) {\n  try {\n    // The response is like (macOS):\n    // {  \"name\":\"v1.15.0-1\",\n    //    \"notes\":\"* Bump up Appium to v1.15.0\",\n    //    \"pub_date\":\"2019-10-04T04:40:37Z\",\n    //    \"url\":\"https://github.com/appium/appium-desktop/releases/download/v1.15.0-1/Appium-1.15.0-1-mac.zip\"}\n    const res = await request.get(getFeedUrl(currentVersion));\n    if (res) {\n      const j = JSON.parse(res);\n      if (semver.lt(currentVersion, j.name)) {\n        return j;\n      }\n    }\n  } catch (ign) { }\n\n  return false;\n}\n\nexport function setUpAutoUpdater ({\n  autoUpdater,\n  app,\n  moment,\n  i18n,\n  env,\n  dialog,\n  B\n}) {\n  autoUpdater.setFeedURL(getFeedUrl(app.getVersion()));\n\n  /**\n   * Check for new updates\n   */\n  const checkNewUpdates = async function (fromMenu) {\n    // autoupdate.checkForUpdates always downloads updates immediately\n    // This method (getUpdate) let's us take a peek to see if there is an update\n    // available before calling .checkForUpdates\n    if (process.env.RUNNING_IN_SPECTRON) {\n      return;\n    }\n    const update = await checkUpdate(app.getVersion());\n    if (update) {\n      let {name, notes, pub_date: pubDate} = update;\n      pubDate = moment(pubDate).format(i18n.t('datetimeFormat'));\n\n      let detail = i18n.t('updateDetails', {pubDate, notes: notes.replace('*', '\\n*')});\n      if (env.NO_AUTO_UPDATE) {\n        detail += `\\n\\nhttps://www.github.com/appium/appium-inspector/releases/latest`;\n      }\n\n\n      // Ask user if they wish to install now or later\n      if (!process.env.RUNNING_IN_SPECTRON) {\n        dialog.showMessageBox({\n          type: 'info',\n          buttons: env.NO_AUTO_UPDATE\n            ? [i18n.t('OK')]\n            : [i18n.t('Install Now'), i18n.t('Install Later')],\n          message: i18n.t('appiumIsAvailable', {name}),\n          detail,\n        }, (response) => {\n          if (response === 0) {\n            // If they say yes, get the updates now\n            if (!env.NO_AUTO_UPDATE) {\n              autoUpdater.checkForUpdates();\n            }\n          }\n        });\n      }\n    } else {\n      if (fromMenu) {\n        autoUpdater.emit('update-not-available');\n      } else {\n        // If no updates found check for updates every hour\n        await B.delay(60 * 60 * 1000);\n        checkNewUpdates();\n      }\n    }\n  };\n\n  // Inform user when the download is starting and that they'll be notified again when it is complete\n  autoUpdater.on('update-available', () => {\n    dialog.showMessageBox({\n      type: 'info',\n      buttons: [i18n.t('OK')],\n      message: i18n.t('Update Download Started'),\n      detail: i18n.t('updateIsBeingDownloaded'),\n    });\n  });\n\n  // Handle the unusual case where we checked the updates endpoint, found an update\n  // but then after calling 'checkForUpdates', nothing was there\n  autoUpdater.on('update-not-available', () => {\n    dialog.showMessageBox({\n      type: 'info',\n      buttons: [i18n.t('OK')],\n      message: i18n.t('No update available'),\n      detail: i18n.t('Appium Inspector is up-to-date'),\n    });\n  });\n\n  // When it's done, ask if user want to restart now or later\n  autoUpdater.on('update-downloaded', (event, releaseNotes, releaseName) => {\n    dialog.showMessageBox({\n      type: 'info',\n      buttons: [i18n.t('Restart Now'), i18n.t('Later')],\n      message: i18n.t('Update Downloaded'),\n      detail: i18n.t('updateIsDownloaded', {releaseName}),\n    }, (response) => {\n      // If they say yes, restart now\n      if (response === 0) {\n        autoUpdater.quitAndInstall();\n      }\n    });\n  });\n\n  // Handle error case\n  autoUpdater.on('error', (message) => {\n    dialog.showMessageBox({\n      type: 'error',\n      message: i18n.t('Could not download update'),\n      detail: i18n.t('updateDownloadFailed', {message}),\n    });\n  });\n\n  return checkNewUpdates;\n}\n","/**\n * Auto Updater\n *\n * Similar to https://electronjs.org/docs/api/auto-updater#events\n * See https://electronjs.org/docs/tutorial/updates for documentation\n */\nimport { app, autoUpdater, dialog } from 'electron';\nimport moment from 'moment';\nimport B from 'bluebird';\nimport _ from 'lodash';\nimport env from '../../env';\nimport i18n from '../../configs/i18next.config';\nimport { setUpAutoUpdater } from './update-checker';\n\nconst isDev = process.env.NODE_ENV === 'development';\nconst runningLocally = isDev || process.env.RUNNING_LOCALLY;\n\nlet checkNewUpdates = _.noop;\n\nif (!runningLocally && !process.env.RUNNING_IN_SPECTRON) {\n  // put autoupdater in try block so that it doesn't break if autoupdater doesn't work\n  try {\n    checkNewUpdates = setUpAutoUpdater({\n      autoUpdater,\n      app,\n      moment,\n      i18n,\n      env,\n      dialog,\n      B\n    });\n  } catch (e) {}\n}\n\nexport { checkNewUpdates };\n","import { app, shell, dialog, Menu } from 'electron';\nimport { checkNewUpdates } from './auto-updater';\nimport { launchNewSessionWindow } from './windows';\nimport config from '../configs/app.config';\nimport i18n from '../configs/i18next.config';\nimport { APPIUM_SESSION_EXTENSION } from './helpers';\n\nlet menuTemplates = {mac: {}, other: {}};\n\nfunction languageMenu () {\n  return config.languages.map((languageCode) => ({\n    label: i18n.t(languageCode),\n    type: 'radio',\n    checked: i18n.language === languageCode,\n    click: () => i18n.changeLanguage(languageCode)\n  }));\n}\n\nfunction getShowAppInfoClickAction () {\n  return () => {\n    dialog.showMessageBox({\n      title: i18n.t('appiumInspector'),\n      message: i18n.t('showAppInfo', {\n        appVersion: app.getVersion(),\n        electronVersion: process.versions.electron,\n        nodejsVersion: process.versions.node\n      }),\n    });\n  };\n}\n\nfunction macMenuAppium () {\n  return {\n    label: 'Appium',\n    submenu: [{\n      label: i18n.t('About Appium'),\n      click: getShowAppInfoClickAction()\n    }, {\n      label: i18n.t('Check for updates'),\n      click () {\n        checkNewUpdates(true);\n      }\n    }, {\n      type: 'separator'\n    }, {\n      label: i18n.t('Hide Appium'),\n      accelerator: 'Command+H',\n      selector: 'hide:'\n    }, {\n      label: i18n.t('Hide Others'),\n      accelerator: 'Command+Shift+H',\n      selector: 'hideOtherApplications:'\n    }, {\n      label: i18n.t('Show All'),\n      selector: 'unhideAllApplications:'\n    }, {\n      type: 'separator'\n    }, {\n      label: i18n.t('Quit'),\n      accelerator: 'Command+Q',\n      click () {\n        app.quit();\n      }\n    }]\n  };\n}\n\nfunction macMenuEdit () {\n  return {\n    label: i18n.t('Edit'),\n    submenu: [{\n      label: i18n.t('Undo'),\n      accelerator: 'Command+Z',\n      selector: 'undo:'\n    }, {\n      label: i18n.t('Redo'),\n      accelerator: 'Shift+Command+Z',\n      selector: 'redo:'\n    }, {\n      type: 'separator'\n    }, {\n      label: i18n.t('Cut'),\n      accelerator: 'Command+X',\n      selector: 'cut:'\n    }, {\n      label: i18n.t('Copy'),\n      accelerator: 'Command+C',\n      selector: 'copy:'\n    }, {\n      label: i18n.t('Paste'),\n      accelerator: 'Command+V',\n      selector: 'paste:'\n    }, {\n      label: i18n.t('Select All'),\n      accelerator: 'Command+A',\n      selector: 'selectAll:'\n    }]\n  };\n}\n\nfunction macMenuView ({mainWindow}) {\n  const submenu = (process.env.NODE_ENV === 'development') ? [{\n    label: i18n.t('Reload'),\n    accelerator: 'Command+R',\n    click () {\n      mainWindow.webContents.reload();\n    }\n  }, {\n    label: i18n.t('Toggle Developer Tools'),\n    accelerator: 'Alt+Command+I',\n    click () {\n      mainWindow.toggleDevTools();\n    }\n  }] : [];\n\n  submenu.push({\n    label: i18n.t('Toggle Full Screen'),\n    accelerator: 'Ctrl+Command+F',\n    click () {\n      mainWindow.setFullScreen(!mainWindow.isFullScreen());\n    }\n  });\n\n  submenu.push({\n    label: i18n.t('Languages'),\n    submenu: languageMenu(),\n  });\n\n  return {\n    label: i18n.t('View'),\n    submenu,\n  };\n}\n\nfunction macMenuWindow () {\n  return {\n    label: i18n.t('Window'),\n    submenu: [{\n      label: i18n.t('Minimize'),\n      accelerator: 'Command+M',\n      selector: 'performMiniaturize:'\n    }, {\n      label: i18n.t('Close'),\n      accelerator: 'Command+W',\n      selector: 'performClose:'\n    }, {\n      type: 'separator'\n    }, {\n      label: i18n.t('Bring All to Front'),\n      selector: 'arrangeInFront:'\n    }]\n  };\n}\n\nfunction macMenuHelp () {\n  return {\n    label: i18n.t('Help'),\n    submenu: [{\n      label: i18n.t('Inspector Documentation'),\n      click () {\n        shell.openExternal('https://github.com/appium/appium-inspector');\n      }\n    }, {\n      label: i18n.t('Appium Documentation'),\n      click () {\n        shell.openExternal('https://appium.io');\n      }\n    }, {\n      label: i18n.t('Search Issues'),\n      click () {\n        shell.openExternal('https://github.com/appium/appium-inspector/issues');\n      }\n    }, {\n      label: i18n.t('Add Or Improve Translations'),\n      click () {\n        shell.openExternal('https://crowdin.com/project/appium-desktop');\n      }\n    }]\n  };\n}\n\nmenuTemplates.mac = ({mainWindow, shouldShowFileMenu}) => [\n  macMenuAppium(),\n  ...(shouldShowFileMenu ? [macMenuFile({mainWindow})] : []),\n  macMenuEdit(),\n  macMenuView({mainWindow}),\n  macMenuWindow(),\n  macMenuHelp(),\n];\n\nasync function openFileCallback (mainWindow) {\n  const { canceled, filePaths } = await dialog.showOpenDialog({\n    properties: ['openFile'],\n    filters: [\n      {name: 'Appium Session Files', extensions: [APPIUM_SESSION_EXTENSION]}\n    ],\n  });\n  if (!canceled) {\n    const filePath = filePaths[0];\n    mainWindow.webContents.send('open-file', filePath);\n  }\n}\n\nasync function saveAsCallback (mainWindow) {\n  const { canceled, filePath } = await dialog.showSaveDialog({\n    title: i18n.t('saveAs'),\n    filters: [{ name: 'Appium', extensions: [APPIUM_SESSION_EXTENSION] }],\n  });\n  if (!canceled) {\n    mainWindow.webContents.send('save-file', filePath);\n  }\n}\n\nfunction macMenuFile ({mainWindow}) {\n  return {\n    label: i18n.t('File'),\n    submenu: [{\n      label: i18n.t('New Session Window…'),\n      accelerator: 'Command+N',\n      click: launchNewSessionWindow,\n    }, {\n      label: i18n.t('Open'),\n      accelerator: 'Command+O',\n      click: () => openFileCallback(mainWindow),\n    }, {\n      label: i18n.t('Save'),\n      accelerator: 'Command+S',\n      click: () => mainWindow.webContents.send('save-file'),\n    }, {\n      label: i18n.t('saveAs'),\n      accelerator: 'Command+Shift+S',\n      click: () => saveAsCallback(mainWindow),\n    }]\n  };\n}\n\nfunction otherMenuFile ({mainWindow, shouldShowFileMenu}) {\n  const fileSavingOperations = [{\n    label: i18n.t('New Session Window…'),\n    accelerator: 'Ctrl+N',\n    click: launchNewSessionWindow,\n  }, {\n    label: i18n.t('Open'),\n    accelerator: 'Ctrl+O',\n    click: () => openFileCallback(mainWindow),\n  }, {\n    label: i18n.t('Save'),\n    accelerator: 'Ctrl+S',\n    click: () => mainWindow.webContents.send('save-file'),\n  }, {\n    label: i18n.t('saveAs'),\n    accelerator: 'Ctrl+Shift+S',\n    click: () => saveAsCallback(mainWindow),\n  }];\n\n  let fileSubmenu = [\n    ...(shouldShowFileMenu ? fileSavingOperations : []),\n    {\n      label: '&' + i18n.t('About Appium'),\n      click: getShowAppInfoClickAction(),\n    }, {\n      type: 'separator'\n    }, {\n      label: '&' + i18n.t('Close'),\n      accelerator: 'Ctrl+W',\n      click () {\n        mainWindow.close();\n      }\n    }\n  ];\n\n  // If it's Windows, add a 'Check for Updates' menu option\n  if (process.platform === 'win32') {\n    fileSubmenu.splice(1, 0, {\n      label: '&' + i18n.t('Check for updates'),\n      click () {\n        checkNewUpdates(true);\n      }\n    });\n  }\n\n\n  return {\n    label: '&' + i18n.t('File'),\n    submenu: fileSubmenu,\n  };\n}\n\nfunction otherMenuView ({mainWindow}) {\n  const submenu = [];\n  submenu.push({\n    label: i18n.t('Toggle &Full Screen'),\n    accelerator: 'F11',\n    click () {\n      mainWindow.setFullScreen(!mainWindow.isFullScreen());\n    }\n  });\n\n  submenu.push({\n    label: i18n.t('Languages'),\n    submenu: languageMenu(),\n  });\n\n  if (process.env.NODE_ENV === 'development') {\n    submenu.push({\n      label: '&' + i18n.t('Reload'),\n      accelerator: 'Ctrl+R',\n      click () {\n        mainWindow.webContents.reload();\n      }\n    });\n    submenu.push({\n      label: i18n.t('Toggle &Developer Tools'),\n      accelerator: 'Alt+Ctrl+I',\n      click () {\n        mainWindow.toggleDevTools();\n      }\n    });\n  }\n\n  return {\n    label: '&' + i18n.t('View'),\n    submenu,\n  };\n}\n\nfunction otherMenuHelp () {\n  // just the same as mac menus for now since we don't have any hotkeys for this menu\n  return macMenuHelp();\n}\n\nmenuTemplates.other = ({mainWindow, shouldShowFileMenu}) => [\n  otherMenuFile({mainWindow, shouldShowFileMenu}),\n  otherMenuView({mainWindow}),\n  otherMenuHelp()\n];\n\nexport function rebuildMenus (mainWindow, shouldShowFileMenu) {\n  if (!mainWindow) {\n    return;\n  }\n\n  if (config.platform === 'darwin') {\n    const template = menuTemplates.mac({mainWindow, shouldShowFileMenu});\n    const menu = Menu.buildFromTemplate(template);\n    Menu.setApplicationMenu(menu);\n  } else {\n    const template = menuTemplates.other({mainWindow, shouldShowFileMenu});\n    const menu = Menu.buildFromTemplate(template);\n    mainWindow.setMenu(menu);\n  }\n}\n","import { BrowserWindow, dialog, ipcMain, Menu, webContents } from 'electron';\nimport { APPIUM_SESSION_EXTENSION } from './helpers';\nimport { rebuildMenus } from './menus';\nimport { openFilePath } from '../main';\nimport i18n from '../configs/i18next.config';\nimport settings from '../shared/settings';\n\nlet mainWindow = null;\n\nfunction buildSplashWindow () {\n  return new BrowserWindow({\n    width: 300,\n    height: 300,\n    minWidth: 300,\n    minHeight: 300,\n    frame: false,\n  });\n}\n\nfunction buildSessionWindow () {\n  const window = new BrowserWindow({\n    show: false,\n    width: 1100,\n    height: 710,\n    minWidth: 890,\n    minHeight: 710,\n    titleBarStyle: 'hiddenInset',\n    webPreferences: {\n      nodeIntegration: true,\n      contextIsolation: false,\n      enableRemoteModule: true,\n      additionalArguments: openFilePath ? [`filename=${openFilePath}`] : [],\n    },\n  });\n\n  ipcMain.on('save-file-as', async () => {\n    const { canceled, filePath } = await dialog.showSaveDialog(mainWindow, {\n      title: 'Save Appium File',\n      filters: [\n        {name: 'Appium Session Files', extensions: [APPIUM_SESSION_EXTENSION]},\n      ]\n    });\n    if (!canceled) {\n      mainWindow.webContents.send('save-file', filePath);\n    }\n  });\n\n  return window;\n}\n\nexport function setupMainWindow ({splashUrl, mainUrl, isDev, shouldShowFileMenu = false}) {\n  const splashWindow = buildSplashWindow();\n  mainWindow = buildSessionWindow();\n\n  splashWindow.loadURL(splashUrl);\n  splashWindow.show();\n\n  mainWindow.loadURL(mainUrl);\n\n  mainWindow.webContents.on('did-finish-load', () => {\n    splashWindow.destroy();\n    mainWindow.show();\n    mainWindow.focus();\n\n    if (isDev) {\n      mainWindow.openDevTools();\n    }\n\n  });\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n\n  mainWindow.webContents.on('context-menu', (e, props) => {\n    const {x, y} = props;\n\n    Menu.buildFromTemplate([{\n      label: i18n.t('Inspect element'),\n      click () {\n        mainWindow.inspectElement(x, y);\n      }\n    }]).popup(mainWindow);\n  });\n\n  i18n.on('languageChanged', async (languageCode) => {\n    rebuildMenus(null, shouldShowFileMenu);\n    await settings.set('PREFERRED_LANGUAGE', languageCode);\n    webContents.getAllWebContents().forEach((wc) => {\n      wc.send('appium-language-changed', {\n        language: languageCode,\n      });\n    });\n  });\n\n  rebuildMenus(mainWindow, shouldShowFileMenu);\n}\n\nexport function launchNewSessionWindow () {\n  const url = `file://${__dirname}/index.html`;\n  const win = buildSessionWindow();\n  win.loadURL(url);\n  win.show();\n}\n","import { app } from 'electron';\nimport { installExtensions } from './main/debug';\nimport { setupMainWindow } from './main/windows';\nimport { getAppiumSessionFilePath } from './main/helpers';\n\nconst isDev = process.env.NODE_ENV === 'development';\n\nexport let openFilePath = getAppiumSessionFilePath(process.argv, app.isPackaged, isDev);\n\napp.on('open-file', (event, filePath) => {\n  openFilePath = filePath;\n});\n\napp.on('window-all-closed', () => {\n  app.quit();\n});\n\napp.on('ready', async () => {\n  if (isDev) {\n    require('electron-debug')();\n    await installExtensions();\n  }\n\n  setupMainWindow({\n    mainUrl: `file://${__dirname}/index.html`,\n    splashUrl: `file://${__dirname}/splash.html`,\n    isDev,\n    shouldShowFileMenu: true,\n  });\n});\n"]}